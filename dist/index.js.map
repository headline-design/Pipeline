{"version":3,"sources":["node_modules/@randlabs/myalgo-connect/lib/utils/errors.js","node_modules/@randlabs/myalgo-connect/lib/popup/popup.js","node_modules/base64-js/index.js","node_modules/ieee754/index.js","node_modules/isarray/index.js","node_modules/node-libs-browser/node_modules/buffer/index.js","node_modules/@randlabs/myalgo-connect/lib/utils/utils.js","node_modules/@randlabs/communication-bridge/lib/messenger.js","node_modules/@randlabs/communication-bridge/index.js","node_modules/@randlabs/myalgo-connect/lib/messaging/Messaging.js","node_modules/@randlabs/myalgo-connect/lib/main.js","node_modules/@randlabs/myalgo-connect/index.js","../../src/index.ts","node_modules/process/browser.js","node_modules/detect-browser/es/index.js","../../src/browser.ts","../../src/json.ts","../../src/local.ts","../../src/mobile.ts","../../src/registry.ts","../../src/constants.ts","node_modules/@walletconnect/utils/node_modules/bn.js/lib/bn.js","node_modules/is-typedarray/index.js","node_modules/typedarray-to-buffer/index.js","../../src/encoding.ts","node_modules/js-sha3/src/sha3.js","../../src/error.ts","node_modules/@walletconnect/environment/node_modules/tslib/tslib.es6.js","../../src/crypto.ts","../../src/env.ts","../../src/format.ts","../../src/routing.ts","../../src/misc.ts","../../src/provider.ts","../../src/types.ts","../../src/url.ts","../../src/validators.ts","../../src/ethereum.ts","../../src/payload.ts","node_modules/strict-uri-encode/index.js","node_modules/decode-uri-component/index.js","node_modules/split-on-first/index.js","node_modules/query-string/index.js","../../src/session.ts","../../src/network.ts","node_modules/ws/browser.js","../../src/errors.ts","../../src/events.ts","../../src/storage.ts","../../../src/browser/index.ts","../../../src/constants/length.ts","../../../src/constants/default.ts","../../../src/constants/encoding.ts","../../../src/constants/error.ts","../../../src/constants/operations.ts","../../../src/constants/index.ts","../../../src/lib/browser.ts","../../../src/browser/aes.ts","../../../src/helpers/env.ts","../../../src/helpers/pkcs7.ts","../../../src/helpers/validators.ts","../../../src/helpers/index.ts","../../../src/browser/hmac.ts","../../../src/browser/sha2.ts","node_modules/qrcode/lib/can-promise.js","node_modules/qrcode/node_modules/isarray/index.js","node_modules/qrcode/lib/utils/typedarray-buffer.js","node_modules/qrcode/lib/core/utils.js","node_modules/qrcode/lib/core/error-correction-level.js","node_modules/qrcode/lib/core/bit-buffer.js","node_modules/qrcode/lib/core/bit-matrix.js","node_modules/qrcode/lib/core/alignment-pattern.js","node_modules/qrcode/lib/core/finder-pattern.js","node_modules/qrcode/lib/core/mask-pattern.js","node_modules/qrcode/lib/core/error-correction-code.js","node_modules/qrcode/lib/core/galois-field.js","node_modules/qrcode/lib/core/polynomial.js","node_modules/qrcode/lib/core/reed-solomon-encoder.js","node_modules/qrcode/lib/core/version-check.js","node_modules/qrcode/lib/core/regex.js","node_modules/qrcode/lib/core/mode.js","node_modules/qrcode/lib/core/version.js","node_modules/qrcode/lib/core/format-info.js","node_modules/qrcode/lib/core/numeric-data.js","node_modules/qrcode/lib/core/alphanumeric-data.js","node_modules/qrcode/lib/core/byte-data.js","node_modules/qrcode/lib/core/kanji-data.js","node_modules/dijkstrajs/dijkstra.js","node_modules/qrcode/lib/core/segments.js","node_modules/qrcode/lib/core/qrcode.js","node_modules/qrcode/lib/renderer/utils.js","node_modules/qrcode/lib/renderer/canvas.js","node_modules/qrcode/lib/renderer/svg-tag.js","node_modules/qrcode/lib/browser.js","node_modules/toggle-selection/index.js","node_modules/copy-to-clipboard/index.js","../src/create-context.js","../src/constants.js","../src/options.js","../src/create-element.js","../src/component.js","../src/render.js","../src/util.js","../src/diff/children.js","../src/diff/props.js","../src/diff/index.js","../src/clone-element.js","../src/diff/catch-error.js","../src/index.js","../src/PureComponent.js","../src/memo.js","../src/forwardRef.js","../src/Children.js","../src/suspense.js","../src/suspense-list.js","../src/portals.js","../src/events.js","../../src/node.ts","../../src/browser/assets/style.ts","../../src/browser/assets/logo.ts","../../src/browser/constants/index.ts","../../src/browser/components/Header.tsx","../../src/browser/components/ConnectButton.tsx","../../src/browser/assets/caret.ts","../../src/browser/components/WalletButton.tsx","../../src/browser/components/WalletIcon.tsx","../../src/browser/components/LinkDisplay.tsx","../../src/browser/components/Notification.tsx","../../src/browser/components/QRCodeDisplay.tsx","../../src/browser/registry.ts","../../src/browser/components/Modal.tsx","../../src/browser/languages/de.ts","../../src/browser/languages/en.ts","../../src/browser/languages/es.ts","../../src/browser/languages/fr.ts","../../src/browser/languages/ko.ts","../../src/browser/languages/pt.ts","../../src/browser/languages/zh.ts","../../src/browser/languages/fa.ts","../../src/browser/languages/index.ts","../../src/browser/index.tsx","../../src/transform.ts","node_modules/tslib/tslib.es6.js","../../src/blockchain.ts","../../src/multi.ts","../../src/router.ts","../../src/validator.ts","node_modules/tweetnacl/nacl-fast.js","node_modules/js-sha512/src/sha512.js","../../../src/nacl/naclWrappers.ts","node_modules/hi-base32/src/base32.js","node_modules/bignumber.js/bignumber.js","node_modules/json-bigint/lib/stringify.js","node_modules/json-bigint/lib/parse.js","node_modules/json-bigint/index.js","../../../src/types/intDecoding.ts","../../../src/utils/utils.ts","../../../src/encoding/uint64.ts","../../../src/encoding/address.ts","webpack://MessagePack/src/decodeAsync.ts","webpack://MessagePack/webpack/universalModuleDefinition","webpack://MessagePack/webpack/bootstrap","webpack://MessagePack/src/utils/utf8.ts","webpack://MessagePack/src/ExtData.ts","webpack://MessagePack/src/utils/int.ts","webpack://MessagePack/src/timestamp.ts","webpack://MessagePack/src/ExtensionCodec.ts","webpack://MessagePack/src/utils/typedArrays.ts","webpack://MessagePack/src/Encoder.ts","webpack://MessagePack/src/encode.ts","webpack://MessagePack/src/utils/prettyByte.ts","webpack://MessagePack/src/CachedKeyDecoder.ts","webpack://MessagePack/src/Decoder.ts","webpack://MessagePack/src/decode.ts","webpack://MessagePack/src/utils/stream.ts","../../../src/encoding/encoding.ts","../../src/boxStorage.ts","../../../../src/types/transactions/base.ts","../../src/transaction.ts","../../src/bid.ts","../../src/convert.ts","node_modules/cross-fetch/dist/browser-ponyfill.js","../../../src/client/urlTokenBaseHTTPClient.ts","../../../src/client/client.ts","../../../../src/client/v2/serviceClient.ts","../../../../src/client/v2/basemodel.ts","../../../../../../src/client/v2/algod/models/types.ts","../../../../src/client/v2/jsonrequest.ts","../../../../../src/client/v2/algod/accountInformation.ts","../../../../../src/client/v2/algod/accountAssetInformation.ts","../../../../../src/client/v2/algod/accountApplicationInformation.ts","../../../../../src/client/v2/algod/block.ts","../../../../../src/client/v2/algod/compile.ts","../../../../../src/client/v2/algod/dryrun.ts","../../../../../src/client/v2/algod/genesis.ts","../../../../../src/client/v2/algod/getAssetByID.ts","../../../../../src/client/v2/algod/getApplicationByID.ts","../../../../../src/client/v2/algod/getBlockHash.ts","../../../../../src/client/v2/algod/getApplicationBoxByName.ts","../../../../../src/client/v2/algod/getApplicationBoxes.ts","../../../../../src/client/v2/algod/healthCheck.ts","../../../../../src/client/v2/algod/pendingTransactionInformation.ts","../../../../../src/client/v2/algod/pendingTransactions.ts","../../../../../src/client/v2/algod/pendingTransactionsByAddress.ts","../../../../../src/client/v2/algod/getTransactionProof.ts","../../../../../src/client/v2/algod/sendRawTransaction.ts","../../../../../src/client/v2/algod/status.ts","../../../../../src/client/v2/algod/statusAfterBlock.ts","../../../../../src/client/v2/algod/suggestedParams.ts","../../../../../src/client/v2/algod/supply.ts","../../../../../src/client/v2/algod/versions.ts","../../../../../src/client/v2/algod/lightBlockHeaderProof.ts","../../../../../src/client/v2/algod/stateproof.ts","../../../../../src/client/v2/algod/setSyncRound.ts","../../../../../src/client/v2/algod/getSyncRound.ts","../../../../../src/client/v2/algod/setBlockOffsetTimestamp.ts","../../../../../src/client/v2/algod/getBlockOffsetTimestamp.ts","../../../../../src/client/v2/algod/disassemble.ts","../../../../../src/client/v2/algod/simulateTransaction.ts","../../../../../src/client/v2/algod/ready.ts","../../../../../src/client/v2/algod/unsetSyncRound.ts","../../../../../src/client/v2/algod/algod.ts","../../../src/client/kmd.ts","../../../../../src/client/v2/indexer/makeHealthCheck.ts","../../../../../src/client/v2/indexer/lookupAssetBalances.ts","../../../../../src/client/v2/indexer/lookupAccountTransactions.ts","../../../../../src/client/v2/indexer/lookupAssetTransactions.ts","../../../../../src/client/v2/indexer/lookupBlock.ts","../../../../../src/client/v2/indexer/lookupTransactionByID.ts","../../../../../src/client/v2/indexer/lookupAccountByID.ts","../../../../../src/client/v2/indexer/lookupAccountAssets.ts","../../../../../src/client/v2/indexer/lookupAccountCreatedAssets.ts","../../../../../src/client/v2/indexer/lookupAccountAppLocalStates.ts","../../../../../src/client/v2/indexer/lookupAccountCreatedApplications.ts","../../../../../src/client/v2/indexer/lookupAssetByID.ts","../../../../../src/client/v2/indexer/lookupApplications.ts","../../../../../src/client/v2/indexer/lookupApplicationLogs.ts","../../../../../../src/client/v2/indexer/models/types.ts","../../../../../src/client/v2/indexer/lookupApplicationBoxByIDandName.ts","../../../../../src/client/v2/indexer/searchAccounts.ts","../../../../../src/client/v2/indexer/searchForTransactions.ts","../../../../../src/client/v2/indexer/searchForAssets.ts","../../../../../src/client/v2/indexer/searchForApplications.ts","../../../../../src/client/v2/indexer/searchForApplicationBoxes.ts","../../../../../src/client/v2/indexer/indexer.ts","../../src/wait.ts","../../../src/encoding/bigint.ts","../../src/account.ts","../../../../src/mnemonic/wordlists/english.ts","../../../src/mnemonic/mnemonic.ts","../../src/group.ts","../../src/multisig.ts","../../src/logicsig.ts","node_modules/vlq/src/index.js","../../../src/logic/sourcemap.ts","../../../../src/types/transactions/index.ts","../../src/dryrun.ts","../../src/makeTxn.ts","../../src/signer.ts","../../../src/abi/abi_type.ts","../../../src/abi/transaction.ts","../../../src/abi/reference.ts","../../../src/abi/method.ts","../../../src/abi/contract.ts","../../../src/abi/interface.ts","../../../src/abi/index.ts","../../src/composer.ts","../../../src/types/index.ts","../../src/main.ts","createAsaTxn.js","teal_utils.js","utils.js","node_modules/regenerator-runtime/runtime.js","escrow.js","node_modules/bowser/es5.js","webpack://QRCodeStyling/webpack/universalModuleDefinition","webpack://QRCodeStyling/node_modules/qrcode-generator/qrcode.js","webpack://QRCodeStyling/src/tools/merge.ts","webpack://QRCodeStyling/src/tools/downloadURI.ts","webpack://QRCodeStyling/src/tools/toDataUrl.ts","webpack://QRCodeStyling/src/constants/errorCorrectionPercents.ts","webpack://QRCodeStyling/src/figures/dot/QRDot.ts","webpack://QRCodeStyling/src/constants/dotTypes.ts","webpack://QRCodeStyling/src/figures/cornerSquare/QRCornerSquare.ts","webpack://QRCodeStyling/src/constants/cornerSquareTypes.ts","webpack://QRCodeStyling/src/figures/cornerDot/QRCornerDot.ts","webpack://QRCodeStyling/src/constants/cornerDotTypes.ts","webpack://QRCodeStyling/src/constants/shapeTypes.ts","webpack://QRCodeStyling/src/core/QRSVG.ts","webpack://QRCodeStyling/src/tools/calculateImageSize.ts","webpack://QRCodeStyling/src/constants/gradientTypes.ts","webpack://QRCodeStyling/src/constants/drawTypes.ts","webpack://QRCodeStyling/src/constants/qrTypes.ts","webpack://QRCodeStyling/src/core/QROptions.ts","webpack://QRCodeStyling/src/constants/errorCorrectionLevels.ts","webpack://QRCodeStyling/src/tools/sanitizeOptions.ts","webpack://QRCodeStyling/src/index.ts","webpack://QRCodeStyling/src/core/QRCodeStyling.ts","webpack://QRCodeStyling/src/tools/getMode.ts","webpack://QRCodeStyling/src/constants/modes.ts","webpack://QRCodeStyling/webpack/bootstrap","webpack://QRCodeStyling/webpack/startup","webpack://QRCodeStyling/webpack/runtime/compat get default export","webpack://QRCodeStyling/webpack/runtime/define property getters","webpack://QRCodeStyling/webpack/runtime/hasOwnProperty shorthand","node_modules/@evanhahn/lottie-web-light/index.js","node_modules/@perawallet/connect/dist/App-4a2b7e5c.js","node_modules/@perawallet/connect/dist/index-42ef4f76.js","node_modules/@perawallet/connect/dist/index.js","encode64.js","index.js"],"names":["cachedSetTimeout","cachedClearTimeout","process","module","exports","defaultSetTimout","Error","defaultClearTimeout","runTimeout","fun","setTimeout","e","call","runClearTimeout","marker","clearTimeout","currentQueue","queue","draining","queueIndex","cleanUpNextTick","length","concat","drainQueue","timeout","len","run","Item","array","noop","nextTick","args","Array","arguments","i","push","prototype","apply","title","env","argv","version","versions","on","addListener","once","off","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","listeners","name","binding","cwd","chdir","dir","umask","__spreadArrays","s","il","r","k","a","j","jl","BrowserInfo","os","type","NodeInfo","platform","SearchBotDeviceInfo","bot","BotInfo","ReactNativeInfo","SEARCHBOX_UA_REGEX","SEARCHBOT_OS_REGEX","REQUIRED_VERSION_PARTS","userAgentRules","operatingSystemRules","detect","userAgent","parseUserAgent","document","navigator","product","getNodeVersion","matchUserAgent","ua","reduce","matched","_a","browser","regex","uaMatch","exec","browserName","data","matchedRule","match","versionParts","split","slice","createVersionParts","join","detectOS","searchBotMatch","ii","count","output","extendStatics","d","b","Object","setPrototypeOf","__proto__","p","hasOwnProperty","__extends","__","constructor","create","__assign","assign","t","n","__rest","indexOf","getOwnPropertySymbols","propertyIsEnumerable","__decorate","decorators","target","key","desc","c","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","__param","paramIndex","decorator","__metadata","metadataKey","metadataValue","metadata","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","value","step","next","rejected","result","done","then","__generator","body","f","y","g","_","label","sent","trys","ops","verb","Symbol","iterator","v","op","TypeError","pop","__createBinding","o","m","k2","undefined","__exportStar","__values","__read","ar","error","__spread","__await","__asyncGenerator","asyncIterator","q","resume","fulfill","settle","shift","__asyncDelegator","__asyncValues","__makeTemplateObject","cooked","raw","__importStar","mod","__esModule","default","__importDefault","__classPrivateFieldGet","receiver","privateMap","has","get","__classPrivateFieldSet","set","str","encodeURIComponent","replace","x","charCodeAt","toString","toUpperCase","token","singleMatcher","RegExp","multiMatcher","decodeComponents","components","decodeURIComponent","err","left","right","decode","input","tokens","customDecodeURIComponent","replaceMap","entries","keys","encodedURI","string","separator","separatorIndex","strictUriEncode","require","decodeComponent","splitOnFirst","isNullOrUndefined","encoderForArrayFormat","options","arrayFormat","index","skipNull","skipEmptyString","encode","arrayFormatSeparator","parserForArrayFormat","accumulator","newValue","map","item","validateArrayFormatSeparator","strict","keysSorter","isArray","sort","Number","removeHash","hashStart","getHash","url","hash","extract","queryStart","parseValue","parseNumbers","isNaN","trim","parseBooleans","toLowerCase","parse","formatter","ret","param","includes","Boolean","stringify","object","shouldFilter","objectCopy","filter","parseUrl","query","parseFragmentIdentifier","fragmentIdentifier","stringifyUrl","queryFromUrl","parsedQueryFromUrl","queryString","typedArraySupport","arr","Uint8Array","foo","Buffer","TYPED_ARRAY_SUPPORT","K_MAX_LENGTH","arg","offset","allocUnsafe","from","checked","RangeError","isnan","val","createBuffer","that","buf","size","fromString","byteLength","actual","write","fromArrayLike","fromArrayBuffer","byteOffset","fromObject","obj","isBuffer","copy","ArrayBuffer","buffer","utf8ToBytes","units","codePoint","Infinity","leadSurrogate","bytes","isView","blitBuffer","src","dst","utf8Write","species","configurable","enumerable","writable","isFinite","remaining","start","end","newBuf","subarray","sliceLen","targetStart","fill","code","list","pos","_isBuffer","alloc","toSJISFunction","CODEWORDS_COUNT","getSymbolSize","getSymbolTotalCodewords","getBCHDigit","digit","setToSJISFunction","isKanjiModeEnabled","toSJIS","kanji","L","M","Q","H","bit","isValid","level","defaultValue","BitBuffer","bufIndex","Math","floor","put","num","putBit","getLengthInBits","BufferUtil","BitMatrix","reservedBit","row","col","reserved","xor","isReserved","getRowColCoords","posCount","intervals","ceil","positions","reverse","getPositions","coords","posLength","FINDER_PATTERN_SIZE","Patterns","PATTERN000","PATTERN001","PATTERN010","PATTERN011","PATTERN100","PATTERN101","PATTERN110","PATTERN111","PenaltyScores","N1","N2","N3","N4","getMaskAt","maskPattern","mask","parseInt","getPenaltyN1","points","sameCountCol","sameCountRow","lastCol","lastRow","getPenaltyN2","last","getPenaltyN3","bitsCol","bitsRow","getPenaltyN4","darkCount","modulesCount","abs","applyMask","pattern","getBestMask","setupFormatFunc","numPatterns","bestPattern","lowerPenalty","penalty","ECLevel","EC_BLOCKS_TABLE","EC_CODEWORDS_TABLE","getBlocksCount","errorCorrectionLevel","getTotalCodewordsCount","EXP_TABLE","LOG_TABLE","log","exp","mul","GF","p1","p2","coeff","divident","divisor","generateECPolynomial","degree","poly","Polynomial","ReedSolomonEncoder","genPoly","initialize","pad","paddedData","remainder","buff","numeric","alphanumeric","byte","KANJI","BYTE_KANJI","BYTE","NUMERIC","ALPHANUMERIC","TEST_KANJI","TEST_NUMERIC","TEST_ALPHANUMERIC","testKanji","test","testNumeric","testAlphanumeric","VersionCheck","Regex","id","ccBits","MIXED","getCharCountIndicator","mode","getBestModeForData","dataStr","Utils","ECCode","Mode","G18","G18_BCH","getBestVersionForDataLength","currentVersion","getCapacity","getReservedBitsCount","getTotalBitsFromDataArray","segments","totalBits","forEach","reservedBits","getBitsLength","getBestVersionForMixedData","dataTotalCodewordsBits","usableBits","getBestVersionForData","seg","ecl","getLength","getEncodedBits","G15","G15_MASK","G15_BCH","NumericData","bitBuffer","group","substr","remainingNum","ALPHA_NUM_CHARS","AlphanumericData","ByteData","l","KanjiData","dijkstra","getStringByteLength","unescape","getSegments","getSegmentsFromString","byteSegs","kanjiSegs","numSegs","alphaNumSegs","s1","s2","getSegmentBitsLength","mergeSegments","segs","acc","curr","prevSeg","buildNodes","nodes","buildGraph","table","graph","prevNodeIds","nodeGroup","currentNodeIds","node","lastCount","prevNodeId","buildSingleSegment","modesHint","bestMode","fromArray","path","find_path","optimizedSegs","rawSplit","AlignmentPattern","FinderPattern","MaskPattern","Version","FormatInfo","Segments","setupFinderPattern","matrix","setupTimingPattern","setupAlignmentPattern","setupVersionInfo","bits","setupFormatInfo","setupData","inc","bitIndex","byteIndex","dark","createData","remainingByte","createCodewords","totalCodewords","dataTotalCodewords","ecTotalBlocks","blocksInGroup1","totalCodewordsInGroup1","dataCodewordsInGroup1","dataCodewordsInGroup2","ecCount","rs","dcData","ecData","maxDataSize","dataSize","max","createSymbol","estimatedVersion","rawSegments","bestVersion","dataBits","moduleCount","modules","bind","toSJISFunc","hex2rgba","hex","hexCode","hexValue","getOptions","color","margin","width","scale","light","rendererOpts","getScale","qrSize","opts","getImageWidth","qrToImageData","imgData","qr","symbolSize","scaledMargin","palette","posDst","pxColor","clearCanvas","ctx","canvas","clearRect","height","style","getCanvasElement","createElement","render","qrData","canvasEl","getContext","image","createImageData","putImageData","renderToDataURL","toDataURL","quality","getColorAttrib","attrib","alpha","toFixed","svgCmd","cmd","qrToPath","moveBy","newRow","lineLength","cb","qrcodesize","bg","viewBox","svgTag","canPromise","QRCode","CanvasRenderer","SvgRenderer","renderCanvas","renderFunc","text","argsNum","isLastArgCb","toCanvas","isValidElement","rerenderQueue","rerenderCount","defer","prevDebounce","IS_HYDRATE","EMPTY_OBJ","EMPTY_ARR","IS_NON_DIMENSIONAL","props","removeNode","parentNode","removeChild","children","normalizedProps","defaultProps","createVNode","ref","original","vnode","_children","_parent","_depth","_dom","_nextDom","_component","_original","createRef","Fragment","Component","context","getDomSibling","childIndex","sibling","updateParentDomPointers","child","base","enqueueRender","_dirty","debounceRendering","_vnode","some","component","commitQueue","oldVNode","newDom","oldDom","parentDom","_parentDom","diff","_globalContext","ownerSVGElement","commitRoot","diffChildren","newParentVNode","oldParentVNode","globalContext","isSvg","excessDomChildren","isHydrating","sibDom","firstChildDom","refs","oldChildren","oldChildrenLength","toChildArray","childVNode","nextDom","outer","appendChild","nextSibling","insertBefore","unmount","applyRef","callback","flattened","diffProps","dom","newProps","oldProps","hydrate","setProperty","setStyle","oldValue","useCapture","nameLower","cssText","addEventListener","eventProxy","_listeners","removeEventListener","removeAttributeNS","setAttributeNS","removeAttribute","setAttribute","event","newVNode","tmp","isNew","oldState","snapshot","clearProcessingException","provider","componentContext","newType","_diff","contextType","_id","_defaultValue","_processingException","_pendingError","doRender","sub","state","_renderCallbacks","_nextState","getDerivedStateFromProps","componentWillMount","componentDidMount","componentWillReceiveProps","_force","shouldComponentUpdate","componentWillUpdate","componentDidUpdate","_render","getChildContext","getSnapshotBeforeUpdate","diffElementNodes","diffed","_catchError","root","_commit","oldHtml","newHtml","nodeType","localName","createTextNode","createElementNS","is","childNodes","dangerouslySetInnerHTML","attributes","__html","innerHTML","current","parentVNode","skipRemove","componentWillUnmount","this","replaceNode","_root","cloneElement","createContext","Consumer","Provider","subs","_this","_props","old","splice","_contextRef","hasCaught","getDerivedStateFromError","setState","componentDidCatch","update","forceUpdate","currentIndex","currentComponent","prevRaf","currentHook","afterPaintEffects","oldBeforeRender","oldAfterDiff","oldCommit","oldBeforeUnmount","getHookState","_hook","hooks","__hooks","_list","_pendingEffects","useState","initialState","useReducer","invokeOrReturn","reducer","init","hookState","_value","action","nextValue","useEffect","_skipEffects","argsChanged","_args","useLayoutEffect","useRef","initialValue","useMemo","useImperativeHandle","createHandle","factory","_factory","useCallback","useContext","_context","useDebugValue","useErrorBoundary","errState","flushAfterPaintEffects","invokeCleanup","invokeEffect","hook","_cleanup","oldArgs","newArgs","requestAnimationFrame","raf","cancelAnimationFrame","window","lazy","shallowDiffers","PureComponent","isPureReactComponent","memo","comparer","shouldUpdate","nextProps","updateRef","Memoed","isReactComponent","displayName","_forwarded","oldDiffHook","forwardRef","fn","Forwarded","clone","mapFn","Children","only","toArray","oldCatchError","detachedClone","Suspense","_pendingSuspensionCount","_suspenders","_detachOnNextRender","suspended","_suspended","loader","prom","Lazy","SuspenseList","_next","_map","_childDidSuspend","promise","suspendingComponent","resolved","onResolved","onSuspensionComplete","_suspendedComponentWillUnmount","fallback","delete","revealOrder","delegated","unsuspend","wrappedUnsuspend","Map","ContextProvider","Portal","container","wrap","_container","_temp","_unmount","_wrap","_hasMounted","createPortal","CAMEL_PROPS","REACT_ELEMENT_TYPE","for","parent","firstChild","preactRender","preactHydrate","oldEventHook","setSafeDescriptor","proto","persist","stoppedPropagating","defaultPrevented","origStopPropagation","stopPropagation","origPreventDefault","preventDefault","isPropagationStopped","isDefaultPrevented","nativeEvent","classNameDescriptor","class","oldVNodeHook","$$typeof","className","shouldSanitize","attrs","multiple","selected","ondoubleclick","ondblclick","onbeforeinput","onchange","normalized","oninput","_patchedLifecycles","createFactory","element","preactCloneElement","unmountComponentAtNode","findDOMNode","unstable_batchedUpdates","open","uri","console","const","WALLETCONNECT_STYLE_SHEET","WALLETCONNECT_LOGO_SVG_URL","WALLETCONNECT_HEADER_TEXT","ANIMATION_DURATION","DEFAULT_BUTTON_COLOR","WALLETCONNECT_WRAPPER_ID","WALLETCONNECT_STYLE_ID","WALLETCONNECT_MODAL_ID","WALLETCONNECT_CLOSE_BUTTON_ID","WALLETCONNECT_CTA_TEXT_ID","WALLETCONNECT_CONNECT_BUTTON_ID","Header","React","onClick","onClose","ConnectButton","href","rel","backgroundColor","CARET_SVG_URL","WalletButton","logo","background","backgroundSize","WalletIcon","fontSize","innerWidth","GRID_MIN_COUNT","LINKS_PER_PAGE","LinkDisplay","android","isAndroid","setInput","setFilter","page","setPage","links","link","errorMessage","grid","pages","range","pageLinks","hasPaging","filterTimeout","connect_mobile_wallet","choose_preferred_wallet","placeholder","onChange","connect","saveMobileLinkInfo","entry","shortName","formatIOSMobile","handleClickIOS","no_wallets_found","loading","pageNumber","fontWeight","Notification","show","message","formatQRCodeImage","let","dataString","QRCodeDisplay","notification","setNotification","svg","setSvg","scan_qrcode_with_wallet","copied_to_clipboard","setInterval","copy_to_clipboard","officialAlgorandWallet","homepage","chains","image_id","image_url","sm","md","lg","app","ios","mac","windows","linux","mobile","native","universal","desktop","colors","primary","secondary","registry","Modal","isMobile","whitelist","qrcodeModalOptions","mobileLinks","desktopLinks","setLoading","fetched","setFetched","displayQRCode","setDisplayQRCode","displayProps","singleLinkHref","setSingleLinkHref","hasSingleLink","setHasSingleLink","setLinks","setErrorMessage","getLinksIfNeeded","_links","getMobileLinkRegistry","formatMobileRegistry","no_supported_wallets","something_went_wrong","initLinks","rightSelected","connect_with","qrcode","de","en","es","fr","ko","pt","zh","fa","languages","injectStyleSheet","doc","getDocumentOrThrow","prev","getElementById","head","innerText","renderWrapper","wrapper","triggerCloseAnimation","modal","getWrappedCallback","getText","lang","getNavigatorOrThrow","language","Languages","ReactDOM","close","ALGORAND_QUERY_PARAM_NAME","transformUri","addAlgorandMarkerToUri","urlObject","URL","searchParams","isNode","vanillaOptions","nodeLib","browserLib","String","__spreadArray","to","pack","__setModuleDefault","kind","__classPrivateFieldIn","stream","define","amd","installedModules","__webpack_require__","moduleId","getter","toStringTag","ns","property","TEXT_ENCODING_AVAILABLE","TextEncoder","TextDecoder","utf8Count","strLength","extra","sharedTextEncoder","TEXT_ENCODER_THRESHOLD","utf8EncodeTE","encodeInto","outputOffset","utf8DecodeJs","inputOffset","byte1","byte2","byte3","unit","fromCharCode","sharedTextDecoder","TEXT_DECODER_THRESHOLD","setInt64","view","high","low","setUint32","getInt64","getInt32","getUint32","exceeds_min_safe_int","MIN_SAFE_INTEGER","exceeds_max_safe_int","MAX_SAFE_INTEGER","BigInt","EXT_TIMESTAMP","encodeTimeSpecToTimestamp","sec","nsec","rv","DataView","secHigh","secLow","encodeDateToTimeSpec","date","msec","getTime","nsecInSec","encodeTimestampExtension","Date","decodeTimestampToTimeSpec","nsec30AndSecHigh2","decodeTimestampExtension","timeSpec","timestampExtension","builtInEncoders","builtInDecoders","encoders","decoders","register","tryToEncode","encoder","ExtData","decoder","defaultCodec","ExtensionCodec","ensureUint8Array","extensionCodec","maxDepth","initialBufferSize","sortKeys","forceFloat32","ignoreUndefined","forceIntegerToFloat","getUint8Array","reinitializeState","doEncode","depth","encodeNil","encodeBoolean","encodeNumber","encodeString","encodebigint","encodeObject","ensureBufferSizeToWrite","sizeToWrite","requiredSize","resizeBuffer","newSize","newBuffer","newBytes","newView","writeU8","isSafeInteger","writeU16","writeU32","writeU64","writeI8","writeI16","writeI32","writeI64","writeF32","writeF64","writeBig64","writeStringHeader","ext","encodeExtension","encodeArray","encodeBinary","encodeMap","writeU8a","countWithoutUndefined","setUint8","values","setInt8","setUint16","setInt16","setInt32","setFloat32","setFloat64","defaultEncodeOptions","prettyByte","padStart","maxKeyLength","maxLengthPerKey","hit","miss","caches","canBeCached","records","recordsLength","FIND_CHUNK","record","recordBytes","store","random","cachedValue","slicedCopyOfBytes","EMPTY_VIEW","EMPTY_BYTES","DataViewIndexOutOfBoundsError","getInt8","MORE_DATA","sharedCachedKeyDecoder","maxStrLength","maxBinLength","maxArrayLength","maxMapLength","maxExtLength","keyDecoder","totalPos","headByte","stack","setBuffer","bufferView","appendBuffer","hasRemaining","remainingData","newData","concated","createNoExtraBytesError","posToShow","doDecodeSingleSync","doDecodeSync","decodeAsync","decoded","decodeArrayStream","decodeMultiAsync","decodeStream","isArrayHeaderRequired","arrayItemsLeft","readArraySize","complete","DECODE","readHeadByte","pushMapState","pushArrayState","decodeUtf8String","readF32","readF64","readU8","readU16","readU32","readU64","readI8","readI16","readI32","readI64","lookU8","lookU16","lookU32","decodeBinary","decodeExtension","position","keyType","readCount","headerOffset","stateIsMapKey","stringBytes","headOffset","extType","getUint8","getUint16","getInt16","getFloat32","getFloat64","defaultDecodeOptions","ensureAsyncIterabe","streamLike","reader","getReader","read","assertNonNull","releaseLock","char_to_integer","integer_to_char","integer","has_continuation_bit","should_negate","encode_integer","clamped","char","createAsaTxn","params","addr","creator","note","totalIssuance","amount","decimals","defaultFrozen","manager","clawback","reserve","freeze","assetName","unitName","assetURL","assetMetadataHash","algosdk","makeAssetCreateTxnWithSuggestedParams","sleep","milliseconds","getAppIndex","txn","net","dataObj","EnableDeveloperAPI","indexer","fetch","json","transaction","u8array","letter","readGlobalState","appData","appJSON","application","getAsaIndex","configClient","main","api","paramServer","transServer","algod","fetchObject","method","headers","genesisID","genesisHash","devGenId","devGenHash","firstRound","lastRound","tranServer","configIndexer","indexerURL","sendTxns","txns","alerts","requestHeaders","response","txId","alert","catch","transactionID","configAlgosdk","Algodv2","Escrow","mnemonicString","account","mnemonicToSecretKey","address","secret","sk","newAccount","generateAccount","mnemonic","secretKeyToMnemonic","mytxnb","signedGroup","signed","signTransaction","blob","Pipeline","send","txid","self","typeNumber","_typeNumber","_errorCorrectionLevel","QRErrorCorrectionLevel","_modules","_moduleCount","_dataCache","_dataList","makeImpl","setupPositionProbePattern","setupPositionAdjustPattern","setupTypeInfo","setupTypeNumber","mapData","QRUtil","getPatternPosition","getBCHTypeNumber","getBCHTypeInfo","maskFunc","getMaskFunction","dataList","rsBlocks","QRRSBlock","getRSBlocks","qrBitBuffer","getMode","totalDataCount","dataCount","maxDcCount","maxEcCount","dcdata","ecdata","dcCount","totalCount","getBuffer","rsPoly","getErrorCorrectPolynomial","modPoly","qrPolynomial","modIndex","getAt","totalCodeCount","addData","qrNumber","qrAlphaNum","qr8BitByte","qrKanji","isDark","getModuleCount","make","minLostPoint","lostPoint","getLostPoint","createTableTag","cellSize","qrHtml","createSvgTag","alt","mr","rect","qrSvg","scalable","escapeXml","createDataURL","min","createImgTag","img","escaped","charAt","createASCII","r1","r2","blocks","blocksLastLineNoMargin","ascii","substring","white","black","line","renderTo2dContext","fillStyle","fillRect","stringToBytes","stringToBytesFuncs","createStringToBytes","unicodeData","numChars","unicodeMap","bin","base64DecodeInputStream","b0","b1","unknownChar","PATTERN_POSITION_TABLE","errorCorrectLength","multiply","QRMath","gexp","sameCount","_num","glog","ratio","RS_BLOCK_TABLE","qrRSBlock","rsBlock","_buffer","_length","_data","strToNum","chatToNum","getCode","_bytes","byteArrayOutputStream","writeByte","_str","_pos","_buflen","getPixel","gif","_width","_height","pixel","out","writeString","writeShort","raster","getLZWRaster","writeBytes","lzwMinCodeSize","clearCode","endCode","bitLength","lzwTable","add","_out","_bitLength","_bitBuffer","byteOut","bitOut","dataIndex","contains","flush","toByteArray","_size","setPixel","base64","_base64","writeEncoded","padlen","utf8","charcode","isObject","mergeDeep","sources","source","targetValue","sourceValue","downloadURI","download","click","xhr","XMLHttpRequest","onload","FileReader","onloadend","readAsDataURL","responseType","_svg","_type","draw","getNeighbor","drawFunction","_drawDot","_drawClassy","_drawClassyRounded","_drawRounded","_drawExtraRounded","_drawSquare","_rotateFigure","rotation","cx","cy","_element","PI","_basicDot","_basicSquare","_basicSideRounded","_basicCornerRounded","_basicCornerExtraRounded","_basicCornersRounded","leftNeighbor","rightNeighbor","topNeighbor","bottomNeighbor","neighborsCount","dotSize","_basicExtraRounded","squareMask","dotMask","_defs","_options","getElement","drawQR","minSize","realQRSize","shape","shapeTypes","sqrt","drawImageSize","hideXDots","hideYDots","_qr","loadImage","_image","imageOptions","qrOptions","coverLevel","imageSize","errorCorrectionPercents","maxHiddenDots","originalHeight","originalWidth","maxHiddenAxisDots","hideDots","round","drawBackground","drawDots","hideBackgroundDots","drawCorners","drawImage","gradientOptions","backgroundOptions","gradient","_createColor","additionalRotation","_backgroundClipPath","xBeginning","yBeginning","dot","dotsOptions","_dotsClipPath","xOffset","yOffset","additionalDots","fakeCount","xFakeBeginning","yFakeBeginning","center","cornersSquareSize","cornersDotSize","column","cornersSquareClipPath","cornersDotClipPath","cornersSquareOptions","_cornersSquareClipPath","_cornersDotClipPath","cornersSquare","cornersDotOptions","cornersDot","Image","crossOrigin","dx","dy","dw","dh","imageUrl","positiveRotation","x0","y0","x1","y1","tan","colorStops","stop","qrTypes","drawTypes","sanitizeGradient","newGradient","colorStop","sanitizeOptions","newOptions","_clearContainer","_setupSvg","qrSVG","_svgDrawingPromise","_extension","_setupCanvas","_canvas","_canvasDrawingPromise","xml","XMLSerializer","serializeToString","image64","btoa","_getElement","extension","QRCodeStyling","append","applyExtension","deleteExtension","getRawData","serializer","Blob","toBlob","downloadOptions","warn","__webpack_module_cache__","__webpack_modules__","definition","prop","encodeUint64","dec","binString","convertToBinary","piece","number","binary","url2","data2","data3","JSON","myBalance","wallet","pipeConnector","accounts","item1","PeraWallet","newAccounts","connector","payload","WalletConnect","bridge","qrcodeModal","QRCodeModal","chainId","connected","createSession","AlgoSigner","ledger","signedTxn","toByte","txnsb","signers","groupToSign","pipelineErrors","sign","txnsToSign","txnb","packed","encodeUnsignedTransaction","encodedTxn","requestParams","request","formatJsonRpcRequest","sendCustomRequest","tx","binarySignedTxs","signTxn","appId","appArgs","assets","applications","boxes","converted","makeApplicationNoOpTxn","amt","myNote","encodedNote","strLen","genesisId","flatFee","fee","assetIndex","makeAssetTransferTxnWithSuggestedParams","makePaymentTxnWithSuggestedParams","_sendingAddress","_wallet","client","makeTransfer","txID","asaObject","assetID","teal","programBytes","compile","do","compileResponse","teal2","bytesInts","onComplete","algodClient","clientb","compiled","compileProgram","compiledClear","getTransactionParams","lbytes","gbytes","lints","gints","makeApplicationCreateTxnFromObject","suggestedParams","numLocalByteSlices","numGlobalByteSlices","numLocalInts","numGlobalInts","approvalProgram","clearProgram","makeApplicationOptInTxnFromObject","appIndex","makeAppCall","makeApplicationDeleteTxnFromObject","reciever","assignGroupID","sendRawTransaction","appid","MyAlgo","PeraWalletConnect","pipeline","pipeEscrow"],"mappings":"AiEAA,IAAA,EAAA,GAAA,SAEA,OAAA,QAAA,MAAA,SAAA,SAAA,GACA,MAAA,kBAAA,EAAA,KjCDA,AiCCA,MjCDsB,GAAtB,QAAA,QAAA;AJWC,ACKA,A7BlBD,I4BaC,ACKA,EDLA,ACKA,A7BlBD,EAAA,CACA,K6BiBC,EDLA,GAbD,MCAA,E7BCA,C4BDgB,IAEd,ECFc,IACd,CDCO,KCAe,CDAf,E5BAT,K4BAS,EAAA,EAAQ,QCAN,A7BAX,E4BA2B,MAAA,ECCF,KDDE,EAAA,EAAQ,C5BCnC,U4BD+C,ACCpC,GDEX,K5BFA,G6BC0B,CDCV,IACd,MAAM,EAAgB,GCFpB,CDIF,OAAO,C5BJT,C4BIuB,ACJT,QDImB,ACAjC,EDA+C,I5BJ/C,G6BIgB,IACd,EDEF,SAAgB,A5BJhB,C6BGuB,GDErB,CCFS,C7BHX,M4BKW,CCDqB,G7BJhC,C6BIW,EDCuB,ACDf,G7BHnB,C4BKC,OAAA,ICDoC,A7BJrC,EAAA,E6BIW,A7BJX,E6BImB,C7BHnB,I4BIC,E5BJD,E6BG4B,C7BF5B,G4BGC,CCGD,C7BNA,KAAA,EACA,C6BKgB,GDHf,CAAA,ACIC,A7BNF,KAAA,E4BEC,ACIS,C7BFV,G4BFC,ECI6B,E7BF9B,E6BGC,EDLA,I5BED,C6BGC,A7BFD,OAAA,EACA,M6BCC,KDLA,GCKA,A7BDD,K4BJC,QCKA,CAAA,ODLA,ACKA,IAAA,IDLA,ICKA,UAAA,ODLA,CCKA,CDlBD,MCkBC,EDfA,MCeA,UDfA,EAED,OCaC,CDTA,CCTD,QAMC,ODGA,EAED,KCLC,EAED,CDKC,OCCA,OAAA,EAED,QAEC,CDLA,SCKA;;A5BlBD,MAAA,kBAAA,GAAA,QAAA,mBAoBA,EAAA,CACA,MAAA,IACA,OAAA,KAcA,SAAA,EAAA,EAAA,EAAA,GAEA,IAAA,KAAA,EAAA,GAAA,MAAA,EAAA,OAAA,EAAA,IAAA,EAAA,EAAA,KAAA,EAAA,GAAA,EAEA,IACA,OAAA,WACA,EAAA,KAAA,OAAA,OAAA,WAAA,GAAA,GAAA,OAAA,QAEA,OAAA,OAAA,QACA,EAAA,KAAA,OAAA,OAAA,OAAA,MAAA,GAAA,KAIA,IACA,OAAA,Y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AAA,EACA,EAAA,KAAA,EACA,EAAA,KAAA,EACA,EAAA,KAAA,EACA,EAAA,GAAA,GAAA,EAAA,IAAA,IACA,EAAA,GAAA,GAAA,EAAA,IAAA,IACA,EAAA,IAAA,EACA,EAAA,IAAA,EACA,EAAA,KAAA,EACA,EAAA,KAAA,EACA,EAAA,KAAA,EACA,EAAA,KAAA,EACA,EAAA,KAAA,EACA,EAAA,KAAA,EACA,EAAA,KAAA,EACA,EAAA,KAAA,EACA,EAAA,GAAA,GAAA,EAAA,IAAA,IACA,EAAA,GAAA,GAAA,EAAA,IAAA,IACA,EAAA,IAAA,EACA,EAAA,IAAA,EACA,EAAA,KAAA,EACA,EAAA,KAAA,EACA,EAAA,KAAA,EACA,EAAA,KAAA,EACA,EAAA,KAAA,EACA,EAAA,KAAA,EACA,EAAA,KAAA,EACA,EAAA,KAAA,EACA,EAAA,GAAA,GAAA,EAAA,IAAA,IACA,EAAA,GAAA,GAAA,EAAA,IAAA,IACA,EAAA,IAAA,EACA,EAAA,IAAA,EACA,EAAA,KAAA,EACA,EAAA,KAAA,EACA,EAAA,KAAA,EACA,EAAA,KAAA,EACA,EAAA,KAAA,EACA,EAAA,KAAA,EACA,EAAA,KAAA,EACA,EAAA,KAAA,EAEA,EAAA,EAAA,GACA,EAAA,EAAA,GACA,EAAA,EAAA,KAAA,EAAA,EAAA,MAAA,GACA,EAAA,EAAA,KAAA,EAAA,EAAA,MAAA,GACA,EAAA,EAAA,KAAA,EAAA,EAAA,MAAA,GACA,EAAA,EAAA,KAAA,EAAA,EAAA,MAAA,GACA,GAAA,EAAA,KAAA,EAAA,EAAA,MAAA,GACA,GAAA,EAAA,KAAA,EAAA,EAAA,MAAA,GACA,EAAA,EAAA,KAAA,GAAA,EAAA,MAAA,GACA,EAAA,EAAA,KAAA,GAAA,EAAA,MAAA,GACA,EAAA,EAAA,IAAA,EAAA,EAAA,KAAA,GACA,EAAA,EAAA,IAAA,EAAA,EAAA,KAAA,GACA,EAAA,EAAA,KAAA,GAAA,EAAA,MAAA,GACA,EAAA,EAAA,KAAA,GAAA,EAAA,MAAA,GACA,EAAA,EAAA,KAAA,GAAA,EAAA,MAAA,GACA,EAAA,EAAA,KAAA,GAAA,EAAA,MAAA,GACA,EAAA,EAAA,KAAA,GAAA,EAAA,MAAA,GACA,EAAA,EAAA,KAAA,GAAA,EAAA,MAAA,GACA,GAAA,EAAA,KAAA,EAAA,EAAA,MAAA,GACA,GAAA,EAAA,KAAA,EAAA,EAAA,MAAA,GACA,GAAA,EAAA,IAAA,GAAA,EAAA,KAAA,EACA,GAAA,EAAA,IAAA,GAAA,EAAA,KAAA,EACA,EAAA,EAAA,KAAA,EAAA,EAAA,MAAA,GACA,EAAA,EAAA,KAAA,EAAA,EAAA,MAAA,GACA,EAAA,EAAA,KAAA,GAAA,EAAA,MAAA,GACA,EAAA,EAAA,KAAA,GAAA,EAAA,MAAA,GACA,EAAA,EAAA,KAAA,GAAA,EAAA,MAAA,GACA,EAAA,EAAA,KAAA,GAAA,EAAA,MAAA,GACA,EAAA,EAAA,KAAA,GAAA,EAAA,MAAA,EACA,EAAA,EAAA,KAAA,GAAA,EAAA,MAAA,EACA,EAAA,EAAA,IAAA,GAAA,EAAA,KAAA,EACA,EAAA,EAAA,IAAA,GAAA,EAAA,KAAA,EACA,GAAA,EAAA,KAAA,GAAA,EAAA,MAAA,EACA,GAAA,EAAA,KAAA,GAAA,EAAA,MAAA,EACA,EAAA,EAAA,KAAA,GAAA,EAAA,MAAA,EACA,EAAA,EAAA,KAAA,GAAA,EAAA,MAAA,EACA,EAAA,EAAA,KAAA,GAAA,EAAA,MAAA,GACA,EAAA,EAAA,KAAA,GAAA,EAAA,MAAA,GACA,EAAA,EAAA,KAAA,GAAA,EAAA,MAAA,EACA,GAAA,EAAA,KAAA,GAAA,EAAA,MAAA,EACA,EAAA,EAAA,IAAA,GAAA,EAAA,KAAA,EACA,EAAA,EAAA,IAAA,GAAA,EAAA,KAAA,EACA,EAAA,EAAA,KAAA,GAAA,EAAA,MAAA,GACA,EAAA,EAAA,KAAA,GAAA,EAAA,MAAA,GACA,GAAA,EAAA,KAAA,EAAA,EAAA,MAAA,GACA,GAAA,EAAA,KAAA,EAAA,EAAA,MAAA,GACA,EAAA,EAAA,KAAA,EAAA,EAAA,MAAA,GACA,EAAA,EAAA,KAAA,EAAA,EAAA,MAAA,GACA,EAAA,EAAA,KAAA,GAAA,EAAA,MAAA,GACA,EAAA,EAAA,KAAA,GAAA,EAAA,MAAA,GAEA,EAAA,GAAA,GAAA,EAAA,EACA,EAAA,GAAA,GAAA,EAAA,EACA,EAAA,IAAA,GAAA,EAAA,EACA,EAAA,IAAA,GAAA,EAAA,EACA,EAAA,IAAA,GAAA,EAAA,EACA,EAAA,IAAA,GAAA,EAAA,EACA,EAAA,IAAA,GAAA,EAAA,EACA,EAAA,IAAA,GAAA,EAAA,EACA,EAAA,IAAA,IAAA,GAAA,GACA,EAAA,IAAA,IAAA,GAAA,GACA,EAAA,GAAA,GAAA,EAAA,EACA,EAAA,GAAA,GAAA,EAAA,EACA,EAAA,IAAA,GAAA,EAAA,EACA,EAAA,IAAA,GAAA,EAAA,EACA,EAAA,IAAA,GAAA,EAAA,EACA,EAAA,IAAA,GAAA,EAAA,EACA,EAAA,IAAA,GAAA,EAAA,EACA,EAAA,IAAA,GAAA,EAAA,EACA,EAAA,IAAA,IAAA,GAAA,GACA,EAAA,IAAA,IAAA,GAAA,GACA,EAAA,GAAA,GAAA,EAAA,EACA,EAAA,GAAA,GAAA,EAAA,EACA,EAAA,IAAA,GAAA,EAAA,EACA,EAAA,IAAA,GAAA,EAAA,EACA,EAAA,IAAA,GAAA,EAAA,EACA,EAAA,IAAA,GAAA,EAAA,EACA,EAAA,IAAA,GAAA,EAAA,EACA,EAAA,IAAA,GAAA,EAAA,GACA,EAAA,IAAA,IAAA,GAAA,GACA,EAAA,IAAA,IAAA,GAAA,GACA,EAAA,GAAA,GAAA,EAAA,EACA,EAAA,GAAA,GAAA,EAAA,EACA,EAAA,IAAA,GAAA,EAAA,EACA,EAAA,IAAA,GAAA,EAAA,EACA,EAAA,IAAA,GAAA,EAAA,EACA,EAAA,IAAA,GAAA,EAAA,EACA,EAAA,IAAA,GAAA,EAAA,EACA,EAAA,IAAA,GAAA,GAAA,EACA,EAAA,IAAA,IAAA,GAAA,GACA,EAAA,IAAA,IAAA,GAAA,GACA,EAAA,GAAA,GAAA,EAAA,EACA,EAAA,GAAA,GAAA,EAAA,EACA,EAAA,IAAA,GAAA,EAAA,EACA,EAAA,IAAA,GAAA,EAAA,EACA,EAAA,IAAA,GAAA,EAAA,EACA,EAAA,IAAA,GAAA,EAAA,EACA,EAAA,IAAA,GAAA,EAAA,EACA,EAAA,IAAA,IAAA,EAAA,EACA,EAAA,I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IAAA,IACA,EAAA,IACA,EAAA,IAAA,IACA,EAAA,IACA,GAAA,IAAA,IACA,EAAA,IACA,GAAA,IAAA,GASA,IADA,GADA,IADA,GADA,IADA,GADA,IADA,EAAA,EAAA,EAAA,IACA,EAAA,IAAA,IACA,EAAA,IACA,EAAA,IAAA,IACA,EAAA,IACA,GAAA,IAAA,IACA,EAAA,IACA,GAAA,IAAA,GASA,IADA,GADA,IADA,GADA,IADA,GADA,IADA,EAAA,EAAA,EAAA,IACA,EAAA,IAAA,IACA,EAAA,IACA,EAAA,IAAA,IACA,EAAA,IACA,GAAA,IAAA,IACA,EAAA,IACA,GAAA,IAAA,GASA,IADA,GADA,IADA,GADA,IADA,GADA,IADA,EAAA,EAAA,EAAA,IACA,EAAA,IAAA,IACA,EAAA,IACA,EAAA,IAAA,IACA,EAAA,IACA,GAAA,IAAA,IACA,EAAA,IACA,GAAA,IAAA,GASA,IADA,GADA,IADA,GADA,IADA,GADA,IADA,EAAA,EAAA,EAAA,IACA,EAAA,IAAA,IACA,EAAA,IACA,EAAA,IAAA,IACA,EAAA,IACA,GAAA,IAAA,IACA,EAAA,IACA,GAAA,IAAA,GASA,IADA,GADA,IADA,GADA,IADA,GADA,IADA,EAAA,EAAA,EAAA,IACA,EAAA,IAAA,IACA,EAAA,IACA,EAAA,IAAA,IACA,EAAA,IACA,GAAA,IAAA,IACA,EAAA,IACA,GAAA,IAAA,GASA,IADA,GADA,IADA,GADA,IADA,GADA,IADA,EAAA,EAAA,EAAA,IACA,EAAA,IAAA,IACA,EAAA,IACA,EAAA,IAAA,IACA,EAAA,IACA,GAAA,IAAA,IACA,EAAA,IACA,GAAA,IAAA,GAEA,EAAA,EAAA,EAAA,EACA,EAAA,EAAA,EAAA,EACA,EAAA,EAAA,EAAA,EACA,EAAA,EAAA,EAAA,EACA,EAAA,EAAA,EAAA,EACA,EAAA,EAAA,EAAA,EACA,EAAA,EAAA,EAAA,EACA,EAAA,EAAA,EAAA,EACA,EAAA,EAAA,EAAA,EACA,EAAA,EAAA,EAAA,EACA,EAAA,EAAA,EAAA,EACA,EAAA,EAAA,EAAA,EACA,EAAA,EAAA,EAAA,EACA,EAAA,EAAA,EAAA,EACA,EAAA,EAAA,EAAA,EACA,EAAA,EAAA,EAAA,EAEA,EAAA,GAAA,IAAA,EAAA,IACA,EAAA,GAAA,IAAA,EAAA,IACA,EAAA,GAAA,IAAA,GAAA,IACA,EAAA,GAAA,IAAA,GAAA,IAEA,EAAA,GAAA,IAAA,EAAA,IACA,EAAA,GAAA,IAAA,EAAA,IACA,EAAA,GAAA,IAAA,GAAA,IACA,EAAA,GAAA,IAAA,GAAA,IAEA,EAAA,GAAA,IAAA,EAAA,IACA,EAAA,GAAA,IAAA,EAAA,IACA,EAAA,IAAA,IAAA,GAAA,IACA,EAAA,IAAA,IAAA,GAAA,IAEA,EAAA,IAAA,IAAA,EAAA,IACA,EAAA,IAAA,IAAA,EAAA,IACA,EAAA,IAAA,IAAA,GAAA,IACA,EAAA,IAAA,IAAA,GAAA,IAEA,EAAA,IAAA,IAAA,EAAA,IACA,EAAA,IAAA,IAAA,EAAA,IACA,EAAA,IAAA,IAAA,GAAA,IACA,EAAA,IAAA,IAAA,GAAA,IAEA,EAAA,IAAA,IAAA,EAAA,IACA,EAAA,IAAA,IAAA,EAAA,IACA,EAAA,IAAA,IAAA,GAAA,IACA,EAAA,IAAA,IAAA,GAAA,IAEA,EAAA,IAAA,IAAA,EAAA,IACA,EAAA,IAAA,IAAA,EAAA,IACA,EAAA,IAAA,IAAA,GAAA,IACA,EAAA,IAAA,IAAA,GAAA,IAEA,EAAA,IAAA,IAAA,EAAA,IACA,EAAA,IAAA,IAAA,EAAA,IACA,EAAA,IAAA,IAAA,GAAA,IACA,EAAA,IAAA,IAAA,GAAA,IAEA,EAAA,IAAA,IAAA,EAAA,IACA,EAAA,IAAA,IAAA,EAAA,IACA,EAAA,IAAA,IAAA,GAAA,IACA,EAAA,IAAA,IAAA,GAAA,IAEA,EAAA,IAAA,IAAA,EAAA,IACA,EAAA,IAAA,IAAA,EAAA,IACA,EAAA,IAAA,IAAA,GAAA,IACA,EAAA,IAAA,IAAA,GAAA,IAEA,EAAA,IAAA,IAAA,EAAA,IACA,EAAA,IAAA,IAAA,EAAA,IACA,EAAA,IAAA,IAAA,GAAA,IACA,EAAA,IAAA,IAAA,GAAA,IAEA,EAAA,IAAA,IAAA,EAAA,IACA,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ACA,EAAA,IAAA,IACA,EAAA,IACA,GAAA,IAAA,IACA,EAAA,IACA,GAAA,IAAA,GASA,IADA,GADA,IADA,GADA,IADA,GADA,IADA,EAAA,EAAA,EAAA,IACA,EAAA,IAAA,IACA,EAAA,IACA,EAAA,IAAA,IACA,EAAA,IACA,GAAA,IAAA,IACA,EAAA,IACA,GAAA,IAAA,GASA,IADA,GADA,IADA,GADA,IADA,GADA,IADA,EAAA,EAAA,EAAA,IACA,EAAA,IAAA,IACA,EAAA,IACA,EAAA,IAAA,IACA,EAAA,IACA,GAAA,IAAA,IACA,EAAA,IACA,GAAA,IAAA,GASA,IADA,GADA,IADA,GADA,IADA,GADA,IADA,EAAA,EAAA,EAAA,IACA,EAAA,IAAA,IACA,EAAA,IACA,EAAA,IAAA,IACA,EAAA,IACA,GAAA,IAAA,IACA,EAAA,IACA,GAAA,IAAA,GASA,IADA,GADA,IADA,GADA,IADA,GADA,IADA,EAAA,EAAA,EAAA,IACA,EAAA,IAAA,IACA,EAAA,IACA,EAAA,IAAA,IACA,EAAA,IACA,GAAA,IAAA,IACA,EAAA,IACA,GAAA,IAAA,GAGA,EAAA,GAAA,IAAA,EAAA,IACA,EAAA,GAAA,IAAA,EAAA,IACA,EAAA,GAAA,IAAA,GAAA,IACA,EAAA,GAAA,IAAA,GAAA,IAEA,EAAA,GAAA,IAAA,EAAA,IACA,EAAA,GAAA,IAAA,EAAA,IACA,EAAA,GAAA,IAAA,GAAA,IACA,EAAA,GAAA,IAAA,GAAA,IAEA,EAAA,GAAA,IAAA,EAAA,IACA,EAAA,GAAA,IAAA,EAAA,IACA,EAAA,IAAA,IAAA,GAAA,IACA,EAAA,IAAA,IAAA,GAAA,IAEA,EAAA,IAAA,IAAA,EAAA,IACA,EAAA,IAAA,IAAA,EAAA,IACA,EAAA,IAAA,IAAA,GAAA,IACA,EAAA,IAAA,IAAA,GAAA,IAEA,EAAA,IAAA,IAAA,EAAA,IACA,EAAA,IAAA,IAAA,EAAA,IACA,EAAA,IAAA,IAAA,GAAA,IACA,EAAA,IAAA,IAAA,GAAA,IAEA,EAAA,IAAA,IAAA,EAAA,IACA,EAAA,IAAA,IAAA,EAAA,IACA,E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GAAA,EAAA,EACA,GAAA,EAAA,EACA,GAAA,EAAA,EACA,GAAA,EAAA,EACA,GAAA,EAAA,EACA,GAAA,EAAA,EACA,GAAA,EAAA,EACA,GAAA,EAAA,EACA,GAAA,EAAA,EAEA,IADA,EAAA,EAAA,IACA,EACA,GAAA,EAAA,EACA,GAAA,EAAA,EACA,GAAA,EAAA,EACA,GAAA,EAAA,EACA,GAAA,EAAA,EACA,GAAA,EAAA,EACA,GAAA,EAAA,EACA,GAAA,EAAA,EACA,GAAA,EAAA,EACA,GAAA,EAAA,EACA,GAAA,EAAA,EACA,GAAA,EAAA,EACA,GAAA,EAAA,EACA,GAAA,EAAA,EACA,GAAA,EAAA,EAEA,IADA,EAAA,EAAA,IACA,EACA,GAAA,EAAA,EACA,GAAA,EAAA,EACA,GAAA,EAAA,EACA,GAAA,EAAA,EACA,GAAA,EAAA,EACA,GAAA,EAAA,EACA,GAAA,EAAA,EACA,GAAA,EAAA,EACA,GAAA,EAAA,EACA,GAAA,EAAA,EACA,GAAA,EAAA,EACA,GAAA,EAAA,EACA,GAAA,EAAA,EACA,GAAA,EAAA,EACA,GAAA,EAAA,EAEA,IADA,EAAA,EAAA,IACA,EACA,GAAA,EAAA,EACA,GAAA,EAAA,EACA,GAAA,EAAA,EACA,GAAA,EAAA,EACA,GAAA,EAAA,EACA,GAAA,EAAA,EACA,GAAA,EAAA,EACA,GAAA,EAAA,EACA,GAAA,EAAA,EACA,GAAA,EAAA,EACA,GAAA,EAAA,EACA,GAAA,EAAA,EACA,GAAA,EAAA,EACA,GAAA,EAAA,EACA,GAAA,EAAA,EAEA,IADA,EAAA,EAAA,IACA,EACA,GAAA,EAAA,EACA,GAAA,EAAA,EACA,GAAA,EAAA,EACA,GAAA,EAAA,EACA,GAAA,EAAA,EACA,GAAA,EAAA,EACA,GAAA,EAAA,EACA,GAAA,EAAA,EACA,GAAA,EAAA,EACA,GAAA,EAAA,EACA,GAAA,EAAA,EACA,GAAA,EAAA,EACA,GAAA,EAAA,EACA,GAAA,EAAA,EACA,GAAA,EAAA,EAEA,IADA,EAAA,EAAA,IACA,EACA,GAAA,EAAA,EACA,GAAA,EAAA,EACA,GAAA,EAAA,EACA,GAAA,EAAA,EACA,GAAA,EAAA,EACA,GAAA,EAAA,EACA,GAAA,EAAA,EACA,GAAA,EAAA,EACA,GAAA,EAAA,EACA,GAAA,EAAA,EACA,GAAA,EAAA,EACA,GAAA,EAAA,EACA,GAAA,EAAA,EACA,GAAA,EAAA,EACA,GAAA,EAAA,EAEA,IADA,EAAA,EAAA,IACA,EACA,GAAA,EAAA,EACA,GAAA,EAAA,EACA,GAAA,EAAA,EACA,GAAA,EAAA,EACA,GAAA,EAAA,EACA,GAAA,EAAA,EACA,GAAA,EAAA,EACA,GAAA,EAAA,EACA,GAAA,EAAA,EACA,GAAA,EAAA,EACA,GAAA,EAAA,EACA,GAAA,EAAA,EACA,GAAA,EAAA,EACA,GAAA,EAAA,EACA,GAAA,EAAA,EAEA,IADA,EAAA,EAAA,IACA,EACA,GAAA,EAAA,EACA,GAAA,EAAA,EACA,GAAA,EAAA,EACA,GAAA,EAAA,EACA,GAAA,EAAA,EACA,GAAA,EAAA,EACA,GAAA,EAAA,EACA,GAAA,EAAA,EACA,GAAA,EAAA,EACA,GAAA,EAAA,EACA,GAAA,EAAA,EACA,GAAA,EAAA,EACA,GAAA,EAAA,EACA,GAAA,EAAA,EACA,GAAA,EAAA,EAEA,IADA,EAAA,EAAA,IACA,EACA,GAAA,EAAA,EACA,GAAA,EAAA,EACA,GAAA,EAAA,EACA,GAAA,EAAA,EACA,GAAA,EAAA,EACA,GAAA,EAAA,EACA,GAAA,EAAA,EACA,GAAA,EAAA,EACA,GAAA,EAAA,EACA,GAAA,EAAA,EACA,GAAA,EAAA,EACA,GAAA,EAAA,EACA,GAAA,EAAA,EACA,GAAA,EAAA,EACA,GAAA,EAAA,EAEA,IADA,EAAA,EAAA,IACA,EACA,GAAA,EAAA,EACA,GAAA,EAAA,EACA,GAAA,EAAA,EACA,GAAA,EAAA,EACA,GAAA,EAAA,EACA,GAAA,EAAA,EACA,GAAA,EAAA,EACA,GAAA,EAAA,EACA,GAAA,EAAA,EACA,GAAA,EAAA,EACA,GAAA,EAAA,EACA,GAAA,EAAA,EACA,GAAA,EAAA,EACA,GAAA,EAAA,EACA,GAAA,EAAA,EAEA,IADA,EAAA,EAAA,KACA,EACA,GAAA,EAAA,EACA,GAAA,EAAA,EACA,GAAA,EAAA,EACA,GAAA,EAAA,EACA,GAAA,EAAA,EACA,GAAA,EAAA,EACA,GAAA,EAAA,EACA,GAAA,EAAA,EACA,GAAA,EAAA,EACA,GAAA,EAAA,EACA,GAAA,EAAA,EACA,GAAA,EAAA,EACA,GAAA,EAAA,EACA,GAAA,EAAA,EACA,GAAA,EAAA,EAEA,IADA,EAAA,EAAA,KACA,EACA,GAAA,EAAA,EACA,GAAA,EAAA,EACA,GAAA,EAAA,EACA,GAAA,EAAA,EACA,GAAA,EAAA,EACA,GAAA,EAAA,EACA,GAAA,EAAA,EACA,GAAA,EAAA,EACA,GAAA,EAAA,EACA,GAAA,EAAA,EACA,GAAA,EAAA,EACA,GAAA,EAAA,EACA,GAAA,EAAA,EACA,GAAA,EAAA,EACA,GAAA,EAAA,EAEA,IADA,EAAA,EAAA,KACA,EACA,GAAA,EAAA,EACA,GAAA,EAAA,EACA,GAAA,EAAA,EACA,GAAA,EAAA,EACA,GAAA,EAAA,EACA,GAAA,EAAA,EACA,GAAA,EAAA,EACA,GAAA,EAAA,EACA,GAAA,EAAA,EACA,GAAA,EAAA,EACA,GAAA,EAAA,EACA,GAAA,EAAA,EACA,GAAA,EAAA,EACA,GAAA,EAAA,EACA,GAAA,EAAA,EAEA,IADA,EAAA,EAAA,KACA,EACA,GAAA,EAAA,EACA,GAAA,EAAA,EACA,GAAA,EAAA,EACA,GAAA,EAAA,EACA,GAAA,EAAA,EACA,GAAA,EAAA,EACA,GAAA,EAAA,EACA,GAAA,EAAA,EACA,GAAA,EAAA,EACA,GAAA,EAAA,EACA,GAAA,EAAA,EACA,GAAA,EAAA,EACA,GAAA,EAAA,EACA,GAAA,EAAA,EACA,GAAA,EAAA,EAEA,IADA,EAAA,EAAA,KACA,EACA,GAAA,EAAA,EACA,GAAA,EAAA,EACA,GAAA,EAAA,EACA,GAAA,EAAA,EACA,GAAA,EAAA,EACA,GAAA,EAAA,EACA,GAAA,EAAA,EACA,GAAA,EAAA,EACA,GAAA,EAAA,EACA,GAAA,EAAA,EACA,GAAA,EAAA,EACA,GAAA,EAAA,EACA,GAAA,EAAA,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,GAAA,GAAA,IACA,EAAA,GAAA,GAAA,IAAA,EAAA,GAAA,GAAA,IACA,EAAA,GAAA,GAAA,IAAA,EAAA,GAAA,EAAA,IACA,EAAA,GAAA,EAAA,IAAA,EAAA,GAAA,GACA,EAAA,GAAA,GAAA,IAAA,EAAA,GAAA,GAAA,IACA,EAAA,GAAA,GAAA,IAAA,EAAA,GAAA,GAAA,IACA,EAAA,GAAA,GAAA,IAAA,EAAA,GAAA,EAAA,IACA,EAAA,GAAA,EAAA,IAAA,EAAA,GAAA,GACA,EAAA,GAAA,GAAA,IAAA,EAAA,GAAA,GAAA,IACA,EAAA,GAAA,GAAA,IAAA,EAAA,GAAA,GAAA,IACA,EAAA,GAAA,GAAA,IAAA,EAAA,GAAA,EAAA,IACA,EAAA,GAAA,EAAA,IAAA,EAAA,GAAA,GACA,EAAA,GAAA,GAAA,IAAA,EAAA,GAAA,GAAA,IACA,EAAA,GAAA,GAAA,IAAA,EAAA,GAAA,GAAA,IACA,EAAA,GAAA,GAAA,IAAA,EAAA,GAAA,EAAA,IACA,EAAA,GAAA,EAAA,IAAA,EAAA,GAAA,GACA,EAAA,GAAA,GAAA,IAAA,EAAA,GAAA,GAAA,IACA,EAAA,GAAA,GAAA,IAAA,EAAA,GAAA,GAAA,IACA,EAAA,GAAA,GAAA,IAAA,EAAA,GAAA,EAAA,IACA,EAAA,GAAA,EAAA,IAAA,EAAA,GAAA,GACA,EAAA,GAAA,GAAA,IAAA,EAAA,GAAA,GAAA,IACA,EAAA,GAAA,GAAA,IAAA,EAAA,GAAA,GAAA,IACA,EAAA,GAAA,GAAA,IAAA,EAAA,GAAA,EAAA,IACA,EAAA,GAAA,EAAA,IAAA,EAAA,GAAA,GACA,EAAA,GAAA,GAAA,IAAA,EAAA,GAAA,GAAA,IACA,EAAA,GAAA,GAAA,IAAA,EAAA,GAAA,GAAA,IACA,EAAA,GAAA,GAAA,IAAA,EAAA,GAAA,EAAA,IACA,EAAA,GAAA,EAAA,IAAA,EAAA,GAAA,GA2CA,OA1CA,GAAA,MACA,GAAA,EAAA,GAAA,GAAA,IAAA,EAAA,GAAA,GAAA,IACA,EAAA,GAAA,GAAA,IAAA,EAAA,GAAA,GAAA,IACA,EAAA,GAAA,GAAA,IAAA,EAAA,GAAA,EAAA,IACA,EAAA,GAAA,EAAA,IAAA,EAAA,GAAA,IAEA,GAAA,MACA,GAAA,EAAA,GAAA,GAAA,IAAA,EAAA,GAAA,GAAA,IACA,EAAA,GAAA,GAAA,IAAA,EAAA,GAAA,GAAA,IACA,EAAA,GAAA,GAAA,IAAA,EAAA,GAAA,EAAA,IACA,EAAA,GAAA,EAAA,IAAA,EAAA,GAAA,GACA,EAAA,GAAA,GAAA,IAAA,EAAA,GAAA,GAAA,IACA,EAAA,GAAA,GAAA,IAAA,EAAA,GAAA,GAAA,IACA,EAAA,GAAA,GAAA,IAAA,EAAA,GAAA,EAAA,IACA,EAAA,GAAA,EAAA,IAAA,EAAA,GAAA,GACA,EAAA,GAAA,GAAA,IAAA,EAAA,GAAA,GAAA,IACA,EAAA,GAAA,GAAA,IAAA,EAAA,GAAA,GAAA,IACA,EAAA,GAAA,GAAA,IAAA,EAAA,GAAA,EAAA,IACA,EAAA,GAAA,EAAA,IAAA,EAAA,GAAA,GACA,EAAA,GAAA,GAAA,IAAA,EAAA,GAAA,GAAA,IACA,EAAA,GAAA,GAAA,IAAA,EAAA,GAAA,GAAA,IACA,EAAA,GAAA,GAAA,IAAA,EAAA,GAAA,EAAA,IACA,EAAA,GAAA,EAAA,IAAA,EAAA,GAAA,IAEA,KAAA,IACA,GAAA,EAAA,GAAA,GAAA,IAAA,EAAA,GAAA,GAAA,IACA,EAAA,GAAA,GAAA,IAAA,EAAA,GAAA,GAAA,IACA,EAAA,GAAA,GAAA,IAAA,EAAA,GAAA,EAAA,IACA,EAAA,GAAA,EAAA,IAAA,EAAA,GAAA,GACA,EAAA,GAAA,GAAA,IAAA,EAAA,GAAA,GAAA,IACA,EAAA,GAAA,GAAA,IAAA,EAAA,GAAA,GAAA,IACA,EAAA,GAAA,GAAA,IAAA,EAAA,GAAA,EAAA,IACA,EAAA,GAAA,EAAA,IAAA,EAAA,GAAA,GACA,EAAA,GAAA,GAAA,IAAA,EAAA,GAAA,GAAA,IACA,EAAA,GAAA,GAAA,IAAA,EAAA,GAAA,GAAA,IACA,EAAA,GAAA,GAAA,IAAA,EAAA,GAAA,EAAA,IACA,EAAA,GAAA,EAAA,IAAA,EAAA,GAAA,GACA,EAAA,GAAA,GAAA,IAAA,EAAA,GAAA,GAAA,IACA,EAAA,GA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,CAAA,QAAA,GAAA,IAAA,EAAA,EAAA,GAAA,GAAA,GAAA,EAAA,IAAA,GAAA,OAAA,EAAA,IAAA,GAAA,IAAA,EAAA,GAAA,EAAA,OAAA,gBAAA,OAAA,yBAAA,IAAA,IAAA,KAAA,EAAA,GAAA,YAAA,GAAA,OAAA,UAAA,eAAA,KAAA,EAAA,GAAA,CAAA,IAAA,EAAA,EAAA,OAAA,yBAAA,EAAA,GAAA,KAAA,IAAA,EAAA,KAAA,EAAA,KAAA,OAAA,eAAA,EAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,OAAA,EAAA,QAAA,EAAA,GAAA,EAAA,IAAA,EAAA,GAAA,EAMhC,SAAU,IACtB,IAAM,EAAO,EAAK,UAElB,MAAO,CAAE,KADS,EAAQ,cAAc,EAAK,WACnB,GAAI,EAAK;;ACy/Df,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,aAAA,EAngEtB,IAAM,EAAU,CACd,UACA,UACA,OACA,QACA,QACA,SACA,SACA,WACA,SACA,QACA,SACA,WACA,UACA,SACA,UACA,OACA,WACA,UACA,SACA,MACA,SACA,QACA,UACA,SACA,QACA,MACA,SACA,UACA,SACA,QACA,QACA,UACA,SACA,UACA,SACA,SACA,SACA,QACA,MACA,QACA,QACA,QACA,MACA,MACA,UACA,QACA,QACA,QACA,UACA,QACA,QACA,MACA,QACA,QACA,SACA,QACA,QACA,UACA,OACA,QACA,SACA,UACA,UACA,QACA,SACA,SACA,UACA,SACA,UACA,QACA,QACA,QACA,SACA,QACA,WACA,SACA,UACA,SACA,UACA,UACA,UACA,MACA,QACA,UACA,SACA,QACA,UACA,QACA,OACA,SACA,OACA,QACA,QACA,MACA,QACA,QACA,OACA,SACA,UACA,SACA,SACA,QACA,MACA,WACA,SACA,UACA,MACA,SACA,UACA,QACA,SACA,SACA,SACA,UACA,OACA,SACA,SACA,WACA,UACA,UACA,QACA,SACA,OACA,SACA,OACA,SACA,UACA,UACA,QACA,QACA,QACA,OACA,UACA,QACA,UACA,OACA,OACA,WACA,QACA,QACA,MACA,UACA,UACA,OACA,SACA,SACA,SACA,MACA,SACA,UACA,SACA,OACA,QACA,SACA,SACA,QACA,OACA,SACA,UACA,SACA,OACA,SACA,QACA,SACA,SACA,UACA,QACA,OACA,QACA,UACA,OACA,SACA,SACA,UACA,SACA,UACA,MACA,OACA,OACA,UACA,OACA,QACA,SACA,QACA,QACA,QACA,UACA,QACA,QACA,QACA,QACA,QACA,UACA,SACA,OACA,OACA,QACA,QACA,OACA,OACA,OACA,OACA,OACA,QACA,OACA,QACA,SACA,SACA,SACA,OACA,SACA,SACA,MACA,MACA,UACA,QACA,QACA,QACA,QACA,QACA,SACA,QACA,SACA,QACA,SACA,QACA,QACA,WACA,SACA,SACA,QACA,UACA,QACA,QACA,SACA,QACA,SACA,UACA,QACA,OACA,OACA,SACA,SACA,SACA,SACA,SACA,QACA,MACA,WACA,OACA,SACA,QACA,OACA,UACA,QACA,QACA,SACA,OACA,OACA,OACA,OACA,SACA,OACA,MACA,QACA,SACA,QACA,SACA,QACA,SACA,SACA,UACA,UACA,UACA,MACA,SACA,OACA,QACA,SACA,QACA,OACA,OACA,OACA,SACA,SACA,SACA,MACA,UACA,QACA,WACA,SACA,SACA,QACA,UACA,OACA,UACA,SACA,SACA,SACA,UACA,SACA,UACA,QACA,QACA,WACA,SACA,QACA,UACA,SACA,QACA,OACA,QACA,QACA,SACA,OACA,SACA,QACA,UACA,QACA,QACA,UACA,SACA,SACA,UACA,UACA,QACA,QACA,QACA,WACA,SACA,UACA,OACA,QACA,QACA,OACA,UACA,OACA,OACA,QACA,QACA,SACA,QACA,SACA,QACA,QACA,SACA,OACA,QACA,OACA,QACA,QACA,QACA,QACA,OACA,QACA,UACA,SACA,QACA,QACA,UACA,OACA,SACA,OACA,OACA,UACA,QACA,SACA,UACA,OACA,UACA,QACA,SACA,UACA,UACA,UACA,UACA,WACA,UACA,WACA,UACA,WACA,OACA,OACA,SACA,OACA,QACA,OACA,OACA,UACA,OACA,SACA,QACA,UACA,SACA,SACA,SACA,QACA,SACA,QACA,SACA,QACA,OACA,QACA,QACA,SACA,QACA,QACA,QACA,SACA,QACA,OACA,UACA,QACA,QACA,SACA,OACA,QACA,SACA,QACA,UACA,QACA,SACA,UACA,SACA,QACA,MACA,UACA,OACA,UACA,MACA,WACA,UACA,UACA,UACA,QACA,UACA,SACA,OACA,QACA,MACA,SACA,OACA,QACA,SACA,SACA,OACA,WACA,OACA,MACA,OACA,SACA,SACA,SACA,WACA,SACA,UACA,WACA,WACA,OACA,UACA,SACA,OACA,SACA,QACA,UACA,SACA,SACA,SACA,UACA,OACA,SACA,SACA,UACA,QACA,SACA,SACA,WACA,SACA,SACA,OACA,UACA,UACA,SACA,SACA,UACA,SACA,SACA,UACA,OACA,UACA,QACA,OACA,SACA,OACA,SACA,UACA,UACA,UACA,SACA,WACA,SACA,OACA,WACA,WACA,UACA,OACA,UACA,WACA,UACA,WACA,SACA,SACA,UACA,QACA,SACA,WACA,MACA,OACA,UACA,SACA,SACA,SACA,QACA,OACA,OACA,SACA,OACA,QACA,SACA,QACA,UACA,OACA,QACA,QACA,QACA,QACA,QACA,OACA,QACA,OACA,OACA,MACA,OACA,OACA,OACA,SACA,OACA,QACA,OACA,QACA,UACA,QACA,QACA,QACA,OACA,QACA,SACA,OACA,OACA,OACA,UACA,UACA,OACA,OACA,UACA,SACA,MACA,QACA,SACA,QACA,QACA,WACA,UACA,UACA,WACA,WACA,QACA,OACA,SACA,SACA,UACA,SACA,UACA,SACA,UACA,QACA,SACA,QACA,MACA,UACA,UACA,QACA,SACA,UACA,SACA,SACA,UACA,QACA,SACA,SACA,SACA,SACA,SACA,QACA,SACA,QACA,WACA,UACA,QACA,QACA,MACA,QACA,QACA,UACA,QACA,QACA,SACA,QACA,UACA,SACA,UACA,SACA,WACA,OACA,QACA,SACA,QACA,UACA,SACA,WACA,SACA,UACA,SACA,UACA,WACA,UACA,UACA,QACA,QACA,OACA,SACA,SACA,SACA,SACA,UACA,SACA,UACA,SACA,QACA,MACA,UACA,SACA,OACA,UACA,OACA,QACA,QACA,OACA,QACA,OACA,SACA,SACA,MACA,QACA,UACA,OACA,UACA,MACA,QACA,SACA,UACA,QACA,WACA,UACA,WACA,UACA,MACA,OACA,OACA,SACA,QACA,WACA,QACA,QACA,MACA,QACA,UACA,QACA,SACA,OACA,OACA,SACA,QACA,OACA,OACA,SACA,SACA,OACA,OACA,QACA,SACA,OACA,MACA,UACA,MACA,OACA,QACA,QACA,OACA,SACA,OACA,SACA,OACA,QACA,QACA,QACA,SACA,QACA,QACA,MACA,OACA,QACA,MACA,OACA,OACA,SACA,OACA,OACA,QACA,SACA,SACA,OACA,UACA,QACA,UACA,SACA,SACA,QACA,MACA,UACA,QACA,WACA,QACA,SACA,SACA,OACA,QACA,QACA,QACA,SACA,QACA,OACA,MACA,QACA,UACA,OACA,SACA,SACA,OACA,SACA,UACA,OACA,MACA,SACA,UACA,SACA,SACA,UACA,MACA,OACA,OACA,SACA,QACA,OACA,UACA,SACA,QACA,SACA,UACA,UACA,QACA,QACA,OACA,SACA,SACA,UACA,OACA,OACA,OACA,SACA,QACA,QACA,QACA,UACA,QACA,QACA,QACA,QACA,OACA,OACA,OACA,UACA,OACA,OACA,QACA,UACA,SACA,SACA,SACA,OACA,OACA,QACA,QACA,QACA,QACA,QACA,UACA,QACA,QACA,OACA,QACA,OACA,UACA,QACA,OACA,QACA,QACA,QACA,QACA,QACA,SACA,MACA,MACA,QACA,OACA,OACA,SACA,UACA,OACA,QACA,SACA,OACA,QACA,UACA,MACA,OACA,OACA,SACA,OACA,SACA,QACA,QACA,WACA,SACA,QACA,SACA,OACA,MACA,OACA,SACA,OACA,OACA,OACA,MACA,OACA,UACA,QACA,SACA,OACA,OACA,UACA,SACA,OACA,QACA,OACA,OACA,OACA,SACA,QACA,WACA,OACA,QACA,OACA,QACA,MACA,OACA,QACA,SACA,QACA,UACA,SACA,OACA,SACA,QACA,OACA,UACA,SACA,MACA,OACA,OACA,WACA,OACA,SACA,MACA,UACA,UACA,QACA,UACA,UACA,SACA,SACA,SACA,UACA,UACA,OACA,UACA,SACA,WACA,QACA,WACA,SACA,WACA,SACA,UACA,SACA,SACA,UACA,UACA,SACA,SACA,SACA,QACA,WACA,QACA,UACA,SACA,SACA,SACA,UACA,UACA,SACA,WACA,OACA,SACA,SACA,UACA,OACA,SACA,UACA,QACA,OACA,QACA,SACA,SACA,MACA,OACA,UACA,QACA,QACA,QACA,MACA,OACA,OACA,UACA,MACA,QACA,QACA,OACA,SACA,SACA,OACA,OACA,WACA,OACA,OACA,UACA,MACA,OACA,MACA,SACA,OACA,UACA,OACA,MACA,UACA,OACA,SACA,OACA,OACA,QACA,QACA,OACA,MACA,QACA,QACA,SACA,OACA,OACA,OACA,WACA,SACA,QACA,QACA,QACA,QACA,UACA,OACA,MACA,OACA,UACA,QACA,OACA,SACA,OACA,QACA,QACA,UACA,OACA,MACA,QACA,SACA,UACA,QACA,OACA,SACA,OACA,UACA,SACA,SACA,QACA,OACA,UACA,UACA,UACA,OACA,OACA,QACA,OACA,OACA,QACA,OACA,OACA,SACA,OACA,SACA,OACA,SACA,OACA,OACA,UACA,QACA,OACA,QACA,SACA,OACA,OACA,UACA,OACA,SACA,OACA,QACA,QACA,UACA,SACA,QACA,QACA,SACA,SACA,UACA,MACA,QACA,SACA,OACA,OACA,OACA,QACA,OACA,SACA,MACA,SACA,UACA,QACA,UACA,SACA,QACA,SACA,QACA,SACA,SACA,SACA,WACA,OACA,OACA,SACA,QACA,WACA,OACA,SACA,SACA,UACA,OACA,SACA,OACA,UACA,OACA,WACA,QACA,QACA,SACA,OACA,SACA,SACA,UACA,OACA,QACA,QACA,QACA,QACA,OACA,UACA,QACA,SACA,SACA,WACA,OACA,UACA,QACA,OACA,UACA,QACA,SACA,UACA,SACA,SACA,OACA,UACA,MACA,QACA,UACA,SACA,QACA,SACA,MACA,SACA,UACA,SACA,UACA,QACA,OACA,QACA,OACA,UACA,WACA,SACA,SACA,QACA,WACA,QACA,OACA,QACA,OACA,SACA,OACA,WACA,SACA,SACA,WACA,QACA,OACA,SACA,SACA,UACA,OACA,QACA,OACA,SACA,SACA,QACA,SACA,SACA,OACA,OACA,OACA,WACA,UACA,UACA,SACA,QACA,OACA,MACA,UACA,UACA,QACA,OACA,OACA,OACA,QACA,QACA,QACA,UACA,SACA,SACA,QACA,OACA,UACA,OACA,UACA,SACA,QACA,MACA,UACA,SACA,QACA,MACA,MACA,OACA,SACA,SACA,UACA,UACA,SACA,UACA,QACA,QACA,UACA,OACA,MACA,QACA,SACA,QACA,MACA,OACA,MACA,QACA,UACA,OACA,OACA,MACA,QACA,SACA,OACA,OACA,QACA,UACA,SACA,SACA,SACA,QACA,UACA,QACA,WACA,QACA,SACA,WACA,SACA,UACA,QACA,UACA,QACA,SACA,UACA,OACA,OACA,OACA,MACA,QACA,SACA,SACA,QACA,OACA,SACA,OACA,OACA,SACA,OACA,QACA,QACA,QACA,UACA,QACA,SACA,SACA,OACA,SACA,QACA,OACA,QACA,OACA,UACA,SACA,UACA,QACA,OACA,UACA,QACA,SACA,OACA,UACA,UACA,MACA,UACA,SACA,SACA,SACA,UACA,SACA,SACA,MACA,QACA,QACA,SACA,WACA,QACA,SACA,UACA,QACA,MACA,SACA,OACA,QACA,OACA,UACA,OACA,SACA,QACA,QACA,QACA,SACA,UACA,QACA,OACA,SACA,SACA,QACA,OACA,SACA,OACA,OACA,QACA,QACA,OACA,SACA,OACA,OACA,OACA,UACA,UACA,WACA,WACA,OACA,SACA,UACA,UACA,SACA,QACA,WACA,SACA,UACA,SACA,UACA,UACA,SACA,UACA,QACA,QACA,UACA,QACA,WACA,SACA,UACA,QACA,UACA,UACA,UACA,SACA,UACA,UACA,UACA,QACA,WACA,UACA,UACA,QACA,UACA,SACA,UACA,OACA,OACA,QACA,UACA,QACA,QACA,QACA,WACA,SACA,UACA,QACA,OACA,MACA,SACA,UACA,UACA,UACA,UACA,WACA,QACA,OACA,OACA,QACA,SACA,UACA,OACA,OACA,QACA,QACA,OACA,OACA,QACA,QACA,OACA,QACA,SACA,QACA,QACA,OACA,OACA,SACA,QACA,MACA,QACA,QACA,OACA,SACA,QACA,UACA,SACA,UACA,SACA,SACA,UACA,SACA,UACA,SACA,SACA,SACA,SACA,UACA,SACA,QACA,UACA,SACA,OACA,SACA,WACA,SACA,SACA,SACA,QACA,OACA,SACA,SACA,SACA,UACA,SACA,UACA,SACA,WACA,SACA,WACA,WACA,SACA,SACA,UACA,SACA,UACA,SACA,SACA,SACA,SACA,MACA,SACA,OACA,OACA,OACA,QACA,QACA,QACA,QACA,OACA,OACA,SACA,OACA,SACA,QACA,QACA,OACA,QACA,QACA,SACA,SACA,UACA,OACA,SACA,OACA,OACA,SACA,QACA,QACA,QACA,QACA,SACA,OACA,MACA,OACA,MACA,SACA,QACA,MACA,SACA,UACA,OACA,OACA,QACA,SACA,QACA,OACA,SACA,OACA,SACA,OACA,UACA,UACA,QACA,UACA,OACA,MACA,QACA,OACA,QACA,UACA,QACA,SACA,SACA,UACA,WACA,WACA,QACA,QACA,SACA,SACA,QACA,MACA,SACA,SACA,OACA,SACA,SACA,UACA,WACA,OACA,OACA,UACA,SACA,OACA,UACA,SACA,QACA,WACA,SACA,UACA,UACA,SACA,QACA,QACA,SACA,QACA,UACA,QACA,OACA,QACA,UACA,SACA,QACA,QACA,OACA,SACA,QACA,OACA,QACA,OACA,QACA,WACA,QACA,SACA,QACA,UACA,MACA,UACA,OACA,OACA,QACA,QACA,OACA,SACA,OACA,QACA,SACA,UACA,SACA,QACA,OACA,QACA,SACA,UACA,MACA,OACA,QACA,SACA,MACA,QACA,OACA,QACA,QACA,OACA,OACA,QACA,UACA,QACA,QACA,SACA,OACA,SACA,OACA,OACA,QACA,QACA,QACA,QACA,QACA,SACA,QACA,QACA,OACA,QACA,OACA,OACA,SACA,SACA,OACA,OACA,OACA,QACA,UACA,QACA,WACA,QACA,UACA,OACA,OACA,QACA,OACA,OACA,QACA,OACA,SACA,QACA,QACA,QACA,UACA,QACA,QACA,UACA,QACA,QACA,QACA,SACA,QACA,SACA,QACA,OACA,SACA,QACA,QACA,UACA,QACA,QACA,OACA,QACA,SACA,SACA,MACA,SACA,UACA,WACA,SACA,UACA,QACA,QACA,SACA,QACA,QACA,QACA,QACA,OACA,QACA,QACA,OACA,OACA,SACA,QACA,QACA,QACA,QACA,UACA,QACA,QACA,QACA,QACA,WACA,SACA,SACA,SACA,WACA,UACA,QACA,UACA,QACA,UACA,SACA,SACA,UACA,OACA,SACA,SACA,QACA,UACA,OACA,SACA,MACA,QACA,SACA,QACA,SACA,UACA,OACA,UACA,QACA,WACA,WACA,SACA,UACA,UACA,UACA,QACA,OACA,QACA,QACA,QACA,QACA,OACA,QACA,SACA,QACA,SACA,UACA,QACA,SACA,QACA,SACA,MACA,OACA,SACA,OACA,OACA,OACA,SACA,OACA,QACA,SACA,OACA,QACA,OACA,OACA,MACA,SACA,SACA,OACA,OACA,OACA,OACA,QACA,OACA,QACA,OACA,SACA,QACA,OACA,QACA,OACA,UACA,QACA,SACA,QACA,QACA,UACA,SACA,OACA,QACA,OACA,SACA,OACA,OACA,MACA,QACA,SACA,QACA,QACA,UACA,QACA,UACA,MACA,WACA,SACA,QACA,SACA,WACA,OACA,SACA,UACA,OACA,QACA,MACA,QACA,SACA,QACA,UACA,WACA,OACA,QACA,UACA,SACA,QACA,OACA,MACA,QACA,QACA,UACA,SACA,QACA,WACA,OACA,QACA,SACA,OACA,QACA,OACA,QACA,QACA,QACA,QACA,UACA,OACA,OACA,SACA,UACA,QACA,OACA,QACA,UACA,QACA,QACA,MACA,OACA,UACA,SACA,OACA,SACA,SACA,OACA,SACA,SACA,SACA,QACA,OACA,QACA,MACA,OACA,UACA,OACA,WACA,SACA,UACA,QACA,UACA,QACA,OACA,SACA,SACA,UACA,UACA,SACA,OACA,WACA,UACA,SACA,QACA,UACA,SACA,SACA,UACA,SACA,OACA,QACA,QACA,QACA,OACA,QACA,MACA,OACA,SACA,UACA,QACA,UACA,SACA,SACA,QACA,QACA,SACA,QACA,MACA,SACA,QACA,UACA,OACA,QACA,UACA,SACA,SACA,UACA,QACA,OACA,SACA,UACA,OACA,SACA,UACA,SACA,UACA,UACA,UACA,QACA,OACA,UACA,UACA,SACA,UACA,QACA,OACA,QACA,SACA,QACA,QACA,QACA,QACA,OACA,UACA,SACA,OACA,SACA,OACA,QACA,OACA,OACA,OACA,SACA,OACA,UACA,OACA,UACA,OACA,OACA,QACA,QACA,OACA,MACA,SACA,SACA,OACA,SACA,UACA,MACA,UACA,UACA,QACA,UACA,OACA,MACA,QACA,OACA,QACA,QACA,OACA,QACA,OACA,UACA,OACA,QACA,OACA,OACA,OACA,MACA,SACA,OACA,OACA,OACA,SACA,SACA,OACA,SACA,OACA,OACA,UACA,OACA,QACA,SACA,OACA,OACA,OACA,OACA,QACA,QACA,QACA,OACA,QACA,UACA,QACA,QACA,QACA,OACA,OACA,SACA,MACA,QACA,QACA,QACA,OACA,OACA,OAGa,EAAA,EAAO,QAAA,QAAA;;AC/0DtB,aAAA,OAAA,eAAA,QA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F,EAAE,GACF,EAAE,iBACF,EAAE,iBACF,EAAE,OACF,EAAE,KACF,EAAE,WACF,EAAE,gBACF,EAAE,SAgCA,SAAU,EACd,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,GAEA,IAAM,EAAkB,CACtB,KAAM,EAAe,gBAAC,KACtB,KAAA,EACA,gBAAA,EACA,SAAU,EACV,cAAe,EACf,aAAc,EACd,mBAAoB,EACpB,cAAe,EACf,oBAAqB,EACrB,mBAAoB,EACpB,gBAAiB,EACjB,QAAA,EACA,YAAa,EACb,eAAgB,EAChB,iBAAkB,EAClB,MAAA,EACA,KAAA,EACA,MAAA,EACA,QAAS,EACT,WAAA,GAEF,OAAO,IAAI,EAAW,YAAY,GAI9B,SAAU,EACd,GAuCA,OAAO,EACL,EAAE,KACF,EAAE,gBACF,EAAE,WACF,EAAE,gBACF,EAAE,aACF,EAAE,aACF,EAAE,mBACF,EAAE,cACF,EAAE,oBACF,EAAE,QACF,EAAE,SACF,EAAE,YACF,EAAE,cACF,EAAE,KACF,EAAE,MACF,EAAE,QACF,EAAE,WACF,EAAE,OA2BA,SAAU,EACd,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,GAEA,IAAM,EAAkB,CACtB,KAAM,EAAe,gBAAC,KACtB,KAAA,EACA,gBAAA,EACA,SAAA,EACA,mBAAoB,EACpB,cAAe,EAAqB,sBAAC,oBACrC,gBAAiB,EACjB,QAAA,EACA,YAAa,EACb,eAAgB,EAChB,iBAAkB,EAClB,MAAA,EACA,KAAA,EACA,MAAA,EACA,QAAS,GAEX,OAAO,IAAI,EAAW,YAAY,GAI9B,SAAU,EACd,GA6BA,OAAO,EACL,EAAE,KACF,EAAE,gBACF,EAAE,SACF,EAAE,gBACF,EAAE,aACF,EAAE,QACF,EAAE,SACF,EAAE,YACF,EAAE,cACF,EAAE,KACF,EAAE,MACF,EAAE,QACF,EAAE,OAyBA,SAAU,EACd,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,GAEA,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","file":"index.js","sourceRoot":"..","sourcesContent":["const ERRORS = {\n\tWINDOW_NOT_LOADED: \"Window not loaded\",\n\tWINDOW_IS_OPENED: \"Windows is opened\",\n\tWINDOW_NOT_OPENED: \"Can not open popup window\",\n\tINVALID_WINDOW: \"Invalid window\",\n};\n\nclass SignTxnsError extends Error {\n\tconstructor(message, code, data) {\n\t\tsuper(message);\n\t\tthis.code = code;\n\t\tthis.data = data;\n\t}\n}\n\nmodule.exports = {\n\tERRORS,\n\tSignTxnsError\n};\n","const { WINDOW_NOT_OPENED } = require(\"../utils/errors\");\n\n/**\n * @description Popup configuration\n * @typedef {Object} PopupOptions\n * @property {string} [name]\n * @property {number} [width]\n * @property {number} [height]\n * @property {number} [top]\n * @property {number} [left]\n * @property {0|1} [status]\n * @property {0|1} [resizable]\n * @property {0|1} [toolbar]\n * @property {0|1} [menubar]\n * @property {0|1} [scrollbars]\n */\n\n/**\n * @type {PopupOptions}\n */\nconst defaultOptions = {\n\twidth: 400,\n\theight: 600,\n};\n\n/**\n * @description Open a new browser window\n * @param {string} url\n * @param {PopupOptions} options\n * @returns {Window}\n * @file Open new popup\n * @author The kraken.js team\n * @copyright This file is part of the project BelterJS which is released under Apache-2.0 License.\n * Go to https://github.com/krakenjs/belter for full license details.\n */\n\nfunction openPopup(url, options = defaultOptions) {\n\n\tlet { name = '', width, height, top = 0, left = 0 } = options;\n\n\tif (width) {\n\t\tif (window.outerWidth) {\n\t\t\tleft = Math.round((window.outerWidth - width) / 2) + window.screenX;\n\t\t}\n\t\telse if (window.screen.width) {\n\t\t\tleft = Math.round((window.screen.width - width) / 2);\n\t\t}\n\t}\n\n\tif (height) {\n\t\tif (window.outerHeight) {\n\t\t\ttop = Math.round((window.outerHeight - height) / 2) + window.screenY;\n\t\t}\n\t\telse if (window.screen.height) {\n\t\t\ttop = Math.round((window.screen.height - height) / 2);\n\t\t}\n\t}\n\n\tif (width && height) {\n\t\toptions = {\n\t\t\ttop,\n\t\t\tleft,\n\t\t\twidth,\n\t\t\theight,\n\t\t\tstatus: 1,\n\t\t\ttoolbar: 0,\n\t\t\tmenubar: 0,\n\t\t\tresizable: 1,\n\t\t\tscrollbars: 1,\n\t\t};\n\t}\n\n\t// eslint-disable-next-line array-callback-return\n\tconst params = Object.keys(options).map((key) => {\n\t\tconst param = options[key];\n\t\tif (param !== null && param !== undefined && typeof param.toString === 'function') {\n\t\t\treturn `${key}=${param.toString()}`;\n\t\t}\n\t}).filter(Boolean).join(',');\n\n\tlet win;\n\n\ttry {\n\t\twin = window.open(url, name, params);\n\t}\n\tcatch (err) {\n\t\tthrow new Error(`${WINDOW_NOT_OPENED} - ${err.stack || err.message}`);\n\t}\n\n\tif (!win || window.closed) {\n\t\tthrow new Error(`${WINDOW_NOT_OPENED} - blocked`);\n\t}\n\n\treturn win;\n}\n\nmodule.exports = {\n\topenPopup,\n};\n","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n","/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */\nexports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <http://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\nvar isArray = require('isarray')\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Due to various browser bugs, sometimes the Object implementation will be used even\n * when the browser supports typed arrays.\n *\n * Note:\n *\n *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *     incorrect length in some situations.\n\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n * get the Object implementation, which is slower but behaves correctly.\n */\nBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined\n  ? global.TYPED_ARRAY_SUPPORT\n  : typedArraySupport()\n\n/*\n * Export kMaxLength after typed array support is determined.\n */\nexports.kMaxLength = kMaxLength()\n\nfunction typedArraySupport () {\n  try {\n    var arr = new Uint8Array(1)\n    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}\n    return arr.foo() === 42 && // typed array instances can be augmented\n        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`\n  } catch (e) {\n    return false\n  }\n}\n\nfunction kMaxLength () {\n  return Buffer.TYPED_ARRAY_SUPPORT\n    ? 0x7fffffff\n    : 0x3fffffff\n}\n\nfunction createBuffer (that, length) {\n  if (kMaxLength() < length) {\n    throw new RangeError('Invalid typed array length')\n  }\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = new Uint8Array(length)\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    if (that === null) {\n      that = new Buffer(length)\n    }\n    that.length = length\n  }\n\n  return that\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n    return new Buffer(arg, encodingOrOffset, length)\n  }\n\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new Error(\n        'If encoding is specified then the first argument must be a string'\n      )\n    }\n    return allocUnsafe(this, arg)\n  }\n  return from(this, arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\n// TODO: Legacy, not needed anymore. Remove in next major version.\nBuffer._augment = function (arr) {\n  arr.__proto__ = Buffer.prototype\n  return arr\n}\n\nfunction from (that, value, encodingOrOffset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number')\n  }\n\n  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n    return fromArrayBuffer(that, value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'string') {\n    return fromString(that, value, encodingOrOffset)\n  }\n\n  return fromObject(that, value)\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(null, value, encodingOrOffset, length)\n}\n\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n  Buffer.prototype.__proto__ = Uint8Array.prototype\n  Buffer.__proto__ = Uint8Array\n  if (typeof Symbol !== 'undefined' && Symbol.species &&\n      Buffer[Symbol.species] === Buffer) {\n    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\n    Object.defineProperty(Buffer, Symbol.species, {\n      value: null,\n      configurable: true\n    })\n  }\n}\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be a number')\n  } else if (size < 0) {\n    throw new RangeError('\"size\" argument must not be negative')\n  }\n}\n\nfunction alloc (that, size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(that, size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(that, size).fill(fill, encoding)\n      : createBuffer(that, size).fill(fill)\n  }\n  return createBuffer(that, size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(null, size, fill, encoding)\n}\n\nfunction allocUnsafe (that, size) {\n  assertSize(size)\n  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < size; ++i) {\n      that[i] = 0\n    }\n  }\n  return that\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(null, size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(null, size)\n}\n\nfunction fromString (that, string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('\"encoding\" must be a valid string encoding')\n  }\n\n  var length = byteLength(string, encoding) | 0\n  that = createBuffer(that, length)\n\n  var actual = that.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    that = that.slice(0, actual)\n  }\n\n  return that\n}\n\nfunction fromArrayLike (that, array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  that = createBuffer(that, length)\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255\n  }\n  return that\n}\n\nfunction fromArrayBuffer (that, array, byteOffset, length) {\n  array.byteLength // this throws if `array` is not a valid ArrayBuffer\n\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\\'offset\\' is out of bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\\'length\\' is out of bounds')\n  }\n\n  if (byteOffset === undefined && length === undefined) {\n    array = new Uint8Array(array)\n  } else if (length === undefined) {\n    array = new Uint8Array(array, byteOffset)\n  } else {\n    array = new Uint8Array(array, byteOffset, length)\n  }\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = array\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that = fromArrayLike(that, array)\n  }\n  return that\n}\n\nfunction fromObject (that, obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    that = createBuffer(that, len)\n\n    if (that.length === 0) {\n      return that\n    }\n\n    obj.copy(that, 0, 0, len)\n    return that\n  }\n\n  if (obj) {\n    if ((typeof ArrayBuffer !== 'undefined' &&\n        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {\n      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n        return createBuffer(that, 0)\n      }\n      return fromArrayLike(that, obj)\n    }\n\n    if (obj.type === 'Buffer' && isArray(obj.data)) {\n      return fromArrayLike(that, obj.data)\n    }\n  }\n\n  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < kMaxLength()` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= kMaxLength()) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + kMaxLength().toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return !!(b != null && b._isBuffer)\n}\n\nBuffer.compare = function compare (a, b) {\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers')\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos)\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&\n      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    string = '' + string\n  }\n\n  var len = string.length\n  if (len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n      case undefined:\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) return utf8ToBytes(string).length // assume utf8\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n// Buffer instances.\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length | 0\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\n    if (this.length > max) str += ' ... '\n  }\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError('Argument must be a Buffer')\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset  // Coerce to Number.\n  if (isNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (Buffer.TYPED_ARRAY_SUPPORT &&\n        typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  // must be an even number of digits\n  var strLen = string.length\n  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (isNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction latin1Write (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset | 0\n    if (isFinite(length)) {\n      length = length | 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  // legacy write(string, encoding, offset, length) - remove in v0.13\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n      : (firstByte > 0xBF) ? 2\n      : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = this.subarray(start, end)\n    newBuf.__proto__ = Buffer.prototype\n  } else {\n    var sliceLen = end - start\n    newBuf = new Buffer(sliceLen, undefined)\n    for (var i = 0; i < sliceLen; ++i) {\n      newBuf[i] = this[i + start]\n    }\n  }\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {\n    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n      (littleEndian ? i : 1 - i) * 8\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {\n    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = (value >>> 24)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 1] = (value >>> 8)\n    this[offset] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 3] = (value >>> 24)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n  var i\n\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    // ascending copy from start\n    for (i = 0; i < len; ++i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, start + len),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if (code < 256) {\n        val = code\n      }\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : utf8ToBytes(new Buffer(val, encoding).toString())\n    var len = bytes.length\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction stringtrim (str) {\n  if (str.trim) return str.trim()\n  return str.replace(/^\\s+|\\s+$/g, '')\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\nfunction isnan (val) {\n  return val !== val // eslint-disable-line no-self-compare\n}\n","\nfunction sleep(msec = 200) {\n\treturn new Promise(resolve => setTimeout(resolve, msec));\n}\n\n/**\n * @typedef {import(\"../main\").Transaction} Transaction\n */\n\n/**\n * @typedef {import(\"../main\").EncodedTransaction} EncodedTransaction\n */\n\n/**\n * @description Preparate transactions before send it to the bridge.\n * This method changes all ArrayBuffer to base64.\n * @param {Transaction|EncodedTransaction} transaction Transaction provided by the user\n * @returns {any} Return the same input\n */\nfunction prepareTxn(transaction) {\n\n\tif (transaction.constructor === Uint8Array)\n\t\treturn Buffer.from(transaction).toString(\"base64\");\n\telse if (typeof transaction === \"string\")\n\t\treturn transaction;\n\n\tconst txn = Object.assign({}, transaction);\n\n\tif (txn.note && txn.note.constructor === Uint8Array)\n\t\ttxn.note = Buffer.from(txn.note).toString(\"base64\");\n\n\tif (txn.assetMetadataHash && txn.assetMetadataHash.constructor === Uint8Array)\n\t\ttxn.assetMetadataHash = Buffer.from(txn.assetMetadataHash).toString(\"base64\");\n\n\tif (txn.group && txn.group.constructor === Uint8Array)\n\t\ttxn.group = Buffer.from(txn.group).toString(\"base64\");\n\n\tif (txn.type === \"appl\" && txn.appApprovalProgram && txn.appApprovalProgram.constructor === Uint8Array)\n\t\ttxn.appApprovalProgram = Buffer.from(txn.appApprovalProgram).toString(\"base64\");\n\n\tif (txn.type === \"appl\" && txn.appClearProgram && txn.appClearProgram.constructor === Uint8Array)\n\t\ttxn.appClearProgram = Buffer.from(txn.appClearProgram).toString(\"base64\");\n\n\tif (txn.type === \"appl\" && txn.appArgs && txn.appArgs.length > 0)\n\t\tfor (let i = 0; i < txn.appArgs.length; i++)\n\t\t\tif (txn.appArgs[i].constructor === Uint8Array)\n\t\t\t\ttxn.appArgs[i] = Buffer.from(txn.appArgs[i]).toString(\"base64\");\n\n\treturn txn;\n}\n\nmodule.exports = {\n\tsleep,\n\tprepareTxn,\n};\n","class Messenger {\n\n\t/**\n\t * @callback onMessage\n\t * @param {error} err\n\t * @param {Object} result\n\t */\n\n\t/**\n\t * @description Callback function to send response to the window source of the message\n\t * @callback sendResponse\n\t * @param {Object} response Message response\n\t * @returns {void}\n\t */\n\n\t/**\n\t * @description Callback function to manage message received from the channel\n     * @callback onMessageCallback\n     * @param {Object} json\n\t * @param {Window} source\n     * @param {sendResponse} cb\n\t * @param {Messenger} bridge\n\t * @returns {void}\n     */\n\n\t/**\n\t * @description Send message options\n\t * @typedef {Object} sendMessageOptions\n\t * @property {boolean} waitForReply Wait for a reply from the recipient\n\t * @property {string} origin Override Window.origin\n\t * @property {number} timeout Timeout to wait for reply message, default 4000 msec\n\t */\n\n\t/**\n     * @param {string} channelName  Channel Name\n     * @param {onMessageCallback} [onMessageCallback] Callback function\n     */\n\n\tconstructor(channelName, onMessageCallback) {\n\t\tthis.channelName = channelName;\n\t\tthis.onMessage = onMessageCallback;\n\n\t\tthis._installListener();\n\n\t\t/**\n\t\t * @access private\n\t\t * @typedef {Object.<string, onMessage>} RequestObject Request objects\n\t\t * @type {RequestObject} _requests Mapping of request ids to callbacks\n\t\t */\n\t\tthis._requests = new Map();\n\n\t\t/**\n\t\t * @access private\n\t\t * @type {number} Next request id\n\t\t */\n\t\tthis._nextId = 0;\n\n\t\t/**\n\t\t * @access private\n\t\t * @type {number} Time to wait for the message response\n\t\t */\n\t\tthis._defaultTimeout = 4000;\n\t}\n\n\t/**\n\t * @access private\n\t */\n\n\t_installListener() {\n\t\tconst that = this;\n\n\t\t/**\n\t\t * @access private\n\t\t * @param {Window} this\n\t\t * @param {MessageEvent} event\n\t\t */\n\n\t\tthis._listener = function (event) {\n\t\t\t// Ignore invalid messages or those after the client has closed\n\t\t\tif (!event.data || typeof event.data !== 'string') {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tlet json;\n\n\t\t\ttry {\n\t\t\t\tjson = JSON.parse(event.data);\n\t\t\t\tif (!json.channel || json.channel !== that.channelName) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tif (typeof json.message !== 'object') {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (err) {\n\t\t\t\t // Ignore malformed messages or not targetting us\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Add request callback\n\t\t\tif (typeof json.replyId !== 'undefined') {\n\n\t\t\t\tif (typeof json.replyId !== 'number' || (json.replyId % 1) !== 0) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t// If we have a message waiting for a reply, process it, else ignore\n\t\t\t\tconst req = that._requests.get(json.replyId);\n\t\t\t\tif (req) {\n\t\t\t\t\t// Ignore if the message comes from somewhere else\n\t\t\t\t\tif (event.origin !== req.targetOrigin) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tclearTimeout(req.timeout);\n\n\t\t\t\t\tthat._requests.delete(json.replyId);\n\n\t\t\t\t\treq.resolve(json.message);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (typeof json.id !== 'number' || (json.id % 1) !== 0 || !that.onMessage) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t// We received a message\n\t\t\t\tconst channel = that.channelName;\n\t\t\t\tconst replyId = json.id;\n\t\t\t\tconst origin = event.origin;\n\n\t\t\t\tconst replyMessage = function (message) {\n\t\t\t\t\tconst request = {\n\t\t\t\t\t\tchannel,\n\t\t\t\t\t\treplyId,\n\t\t\t\t\t\tmessage: message,\n\t\t\t\t\t};\n\n\t\t\t\t\tevent.source.postMessage(\n\t\t\t\t\t\tJSON.stringify(request),\n\t\t\t\t\t\torigin\n\t\t\t\t\t);\n\t\t\t\t};\n\n\t\t\t\tthat.onMessage(json.message, event.origin, event.source, replyMessage, that);\n\t\t\t}\n\t\t};\n\n\t\twindow.addEventListener(\"message\", this._listener);\n\t}\n\n\t/**\n\t * @access public\n\t * @description Send a message to another window\n\t * @param {Window} targetWindow Target Window\n\t * @param {Object} message Object Message\n\t * @param {string} origin Target origin\n\t * @param {sendMessageOptions} [options] Object Message\n\t * @returns {Promise<any>} Returns\n\t */\n\tsendMessage(targetWindow, message, origin, options) {\n\t\tlet targetOrigin;\n\t\ttry {\n\t\t\ttargetOrigin = new URL(origin).origin;\n\t\t}\n\t\tcatch (e) {\n\t\t\tthrow new Error('Invalid origin URL');\n\t\t}\n\n\t\t// Prepare message\n\t\tconst request = {\n\t\t\tchannel: this.channelName,\n\t\t\tid: this.getNextId(),\n\t\t\tmessage: message,\n\t\t};\n\n\t\tif (options && options.waitForReply) {\n\t\t\tconst that = this;\n\n\t\t\treturn new Promise(function (resolve, reject) {\n\t\t\t\t// Set a timeout if a response is not received\n\t\t\t\tconst timeout = setTimeout(function() {\n\t\t\t\t\tconst req = that._requests.get(request.id);\n\t\t\t\t\tif (req) {\n\t\t\t\t\t\tthat._requests.delete(request.id);\n\n\t\t\t\t\t\treject(new Error('Timeout expired for the message response'));\n\t\t\t\t\t}\n\t\t\t\t}, options && options.timeout ? options.timeout : that._defaultTimeout);\n\n\t\t\t\tthat._requests.set(request.id, {\n\t\t\t\t\ttimeout,\n\t\t\t\t\tresolve,\n\t\t\t\t\ttargetOrigin,\n\t\t\t\t});\n\n\t\t\t\ttargetWindow.postMessage(\n\t\t\t\t\tJSON.stringify(request),\n\t\t\t\t\ttargetOrigin\n\t\t\t\t);\n\t\t\t});\n\n\t\t}\n\t\ttargetWindow.postMessage(\n\t\t\tJSON.stringify(request),\n\t\t\ttargetOrigin\n\t\t);\n\t}\n\n\t/**\n\t * @access public\n\t * @description Close client connection\n\t */\n\n\tclose() {\n\t\twindow.removeEventListener('message', this._listener);\n\t\tthis._listener = null;\n\t\tdelete this._requests;\n\t}\n\n\t/**\n\t * @access private\n\t */\n\n\tgetNextId() {\n\t\tthis._nextId += 1;\n\t\treturn this._nextId;\n\t}\n}\n\nmodule.exports = Messenger;\n","module.exports = require(\"./lib/messenger\");\n","const Messenger = require(\"@randlabs/communication-bridge\");\n\nconst WALLET_BRIDGE_CHANNEL_NAME = \"wallet-bridge-communication-channel\";\n\nclass Messaging {\n\n\t/**\n\t * @description Request object\n\t * @typedef {Object} Request\n\t * @property {string} method Request method\n\t * @property {Object} [params] Optionally, request params\n\t */\n\n\t/**\n\t * @description Response object\n\t * @typedef {Object} Response\n\t * @property {\"error\"|\"success\"} status Response status\n\t * @property {string} message Response message\n\t * @property {Object} [data] Optionally, is the request was a success and sent data\n\t */\n\n\n\t/**\n\t * @description Callback function to manage message received from the channel\n     * @callback onMessagingCallback\n     * @param {Request} request Request received from another window\n     * @param {sendResponse} cb Response callback\n\t * @returns {void}\n     */\n\n\t/**\n     * @constructor Messaging constructor\n     * @param {onMessagingCallback} [listenerCallback]\n     * @description Create an abstraction of Messenger class\n     */\n\n\tconstructor(listenerCallback) {\n\t\tconst that = this;\n\n\t\t/**\n\t\t * @access public\n\t\t * @description Send message options\n\t\t * @type {import(\"bridge-communication\").sendMessageOptions}\n\t\t */\n\t\tthis.options = { waitForReply: true, timeout: 250 };\n\n\t\t/**\n\t\t * @access private\n\t\t */\n\t\tthis.listenerCallback = listenerCallback;\n\n\t\t/**\n\t\t * @access private\n\t\t * @type {Messenger}\n\t\t */\n\t\tthis.bridge = new Messenger(WALLET_BRIDGE_CHANNEL_NAME, function(req, source, cb, bridge) {\n\t\t\tif (that.listenerCallback)\n\t\t\t\tthat.listenerCallback(req, cb);\n\t\t});\n\t}\n\n\t/**\n\t * @access public\n     * @description Send message to a target window\n     * @param {Window} window Target window\n     * @param {Request} request Request\n     * @param {string} origin Target origin\n\t * @param {import(\"bridge-communication\").sendMessageOptions} [options] Override default message options\n\t * @returns {Promise<Response>} Response of the target window\n     */\n\n\tsendMessage(window, request, origin, options) {\n\t\treturn this.bridge.sendMessage(window, request, origin, options ? options : this.options);\n\t}\n\n\t/**\n\t * @access public\n\t * @description Set new listener\n\t * @param {onMessagingCallback} [listenerCallback] Set a new listener or override actual listener\n\t * @returns {void}\n\t */\n\tsetNewListener(listenerCallback) {\n\t\tthis.listenerCallback = listenerCallback;\n\t}\n\n\t/**\n\t * @access public\n\t * @description Close bridge\n\t * @returns {void}\n\t */\n\tclose() {\n\t\tthis.bridge.close();\n\t}\n}\n\nmodule.exports = Messaging;\n","const { openPopup } = require(\"./popup/popup\");\nconst { sleep, prepareTxn } = require(\"./utils/utils\");\nconst { Errors, SignTxnsError } = require(\"./utils/errors\");\n\nconst Messaging = require(\"./messaging/Messaging\");\n\n/**\n * @type {Messaging | null}\n */\nlet bridge = null;\n\n/**\n * @description Transaction hash\n * @typedef TxHash\n * @type {string}\n */\n\n/**\n * @description Base64 string\n * @typedef Base64\n * @type {string}\n */\n\n/**\n  * @description Options\n  * @typedef Options\n  * @type {object}\n  * @property {string} [bridgeUrl] Override wallet.myalgo.com default frame url.\n  * @property {number} [timeout] Number of msec to wait the popup response, default value: 1600000 msec.\n  * @property {boolean} [disableLedgerNano] It will disable ledger nano accounts and returns only mnemonic accounts.\n  */\n\n/**\n  * @description Sign transaction options\n  * @typedef SignTransactionOptions\n  * @type {object}\n  * @property {Address} [overrideSigner] Force transactions to be signed with the specified account instead of the from/auth address.\n  */\n\n/**\n * @description Connect method settings\n * @typedef ConnectionSettings\n * @type {object}\n * @property {boolean} [shouldSelectOneAccount] Only returns one account\n * @property {boolean} [openManager] Open account manager\n */\n\n/**\n * @description Algorand account address\n * @typedef Address\n * @type {string}\n */\n\n/**\n * @description Payment transaction object\n * @typedef PaymentTxn\n * @type {object}\n * @property {\"pay\"} type Transaction type\n * @property {Address} from Sender Address\n * @property {Address} [to] Receiver Address\n * @property {number} fee Transaction fee (in mAlgos)\n * @property {number} [amount] Amount to transfer (in mAlgos)\n * @property {number} firstRound First block round\n * @property {number} lastRound Last block round\n * @property {Uint8Array|Base64} [note] Transaction note\n * @property {string} genesisID Algorand network genesis ID\n * @property {string} genesisHash Algorand network genesis hash\n * @property {Address} [reKeyTo] Change signer address\n * @property {boolean} [flatFee] flatFee (default: false)\n * @property {Buffer|Base64} [group] Group id\n * @property {Address} [closeRemainderTo] Close remainder to address\n */\n\n/**\n * @description Asset transfer transaction object\n * @typedef AssetTransferTxn\n * @type {object}\n * @property {\"axfer\"} type Transaction type\n * @property {Address} from Sender Address\n * @property {Address} [to] Receiver Address\n * @property {number} fee Transaction fee (in mAlgos)\n * @property {number} [amount] Amount to transfer (in mAlgos)\n * @property {number} firstRound First block round\n * @property {number} lastRound Last block round\n * @property {Uint8Array|Base64} [note] Transaction note\n * @property {string} genesisID Algorand network genesis ID\n * @property {string} genesisHash Algorand network genesis hash\n * @property {Address} [reKeyTo] Change signer address\n * @property {boolean} [flatFee] flatFee (default: false)\n * @property {Address} [signer] Signer address\n * @property {Buffer|Base64} [group] Group id\n * @property {Address} [closeRemainderTo] Close remainder to address\n * @property {number} [assetIndex] Asset index\n * @property {Address} [assetRevocationTarget] Asset revocation address\n */\n\n/**\n * @description Asset configuration transaction object\n * @typedef AssetConfigTxn\n * @type {object}\n * @property {\"acfg\"} type Transaction type\n * @property {Address} from Sender Address\n * @property {number} fee Transaction fee (in mAlgos)\n * @property {number} firstRound First block round\n * @property {number} lastRound Last block round\n * @property {Uint8Array|Base64} [note] Transaction note\n * @property {string} genesisID Algorand network genesis ID\n * @property {string} genesisHash Algorand network genesis hash\n * @property {Address} [reKeyTo] Change signer address\n * @property {boolean} [flatFee] flatFee (default: false)\n * @property {Address} [signer] Signer address\n * @property {Buffer|Base64} [group] Group id\n * @property {number} [assetIndex] Asset index\n * @property {number} [assetTotal] Asset total supply\n * @property {number} [assetDecimals] Asset decimals\n * @property {boolean} [assetDefaultFrozen] Default frozen\n * @property {Address} [assetManager] Asset manager address\n * @property {Address} [assetReserve] Asset reserve address\n * @property {Address} [assetFreeze] Asset freeze address\n * @property {Address} [assetClawback] Asset clawback address\n * @property {string} [assetUnitName] Asset unit name\n * @property {string} [assetName] Asset name\n * @property {string} [assetURL] Asset url\n * @property {string} [assetMetadataHash] Asset metadata hash\n * @property {boolean} [strictEmptyAddressChecking]\n */\n\n/**\n * @description Key registration transaction object\n * @typedef KeyRegTxn\n * @type {object}\n * @property {\"keyreg\"} type Transaction type\n * @property {Address} from Sender Address\n * @property {number} fee Transaction fee (in mAlgos)\n * @property {number} firstRound First block round\n * @property {number} lastRound Last block round\n * @property {Uint8Array|Base64} [note] Transaction note\n * @property {string} genesisID Algorand network genesis ID\n * @property {string} genesisHash Algorand network genesis hash\n * @property {Address} [reKeyTo] Change signer address\n * @property {boolean} [flatFee] flatFee (default: false)\n * @property {Address} [signer] Signer address\n * @property {Buffer|Base64} [group] Group id\n * @property {string} [voteKey] Vote key\n * @property {string} [selectionKey] Selection key\n * @property {number} voteFirst Vote first round\n * @property {number} voteLast Vote last round\n * @property {number} [voteKeyDilution] Vote key dilution\n */\n\n/**\n * @description Application call transaction object\n * @typedef ApplicationTxn\n * @type {object}\n * @property {\"appl\"} type Transaction type\n * @property {Address} from Sender Address\n * @property {number} fee Transaction fee (in mAlgos)\n * @property {number} firstRound First block round\n * @property {number} lastRound Last block round\n * @property {Uint8Array|Base64} [note] Transaction note\n * @property {string} genesisID Algorand network genesis ID\n * @property {string} genesisHash Algorand network genesis hash\n * @property {Address} [reKeyTo] Change signer address\n * @property {boolean} [flatFee] flatFee (default: false)\n * @property {Address} [signer] Signer address\n * @property {Buffer|Base64} [group] Group id\n * @property {number} [appIndex] Application id\n * @property {0|1|2|3|4|5} [appOnComplete]\n * @property {number} [appLocalInts]\n * @property {number} [appLocalByteSlices]\n * @property {number} [appGlobalInts]\n * @property {number} [appGlobalByteSlices]\n * @property {Uint8Array|Base64} [appApprovalProgram]\n * @property {Uint8Array|Base64} [appClearProgram]\n * @property {Uint8Array[]|Base64[]} [appArgs]\n * @property {Address[]} [appAccounts]\n * @property {number[]} [appForeignApps]\n * @property {number[]} [appForeignAssets]\n */\n\n/**\n * @description Transaction Object\n * @typedef Transaction\n * @type {PaymentTxn | AssetTransferTxn | AssetConfigTxn | KeyRegTxn | ApplicationTxn}\n */\n\n/**\n * @description Base64 encoding of the canonical msgpack encoding of a SignedTxn\n * @typedef SignedTxnStr\n * @type {Base64}\n */\n\n/**\n * @description Application call transaction object\n * @typedef MultisigMetadata\n * @type {object}\n * @property {number} version Multisig version\n * @property {number} threshold Multisig threshold value\n * @property {Address[]} addrs Multisig cosigners\n */\n\n/**\n * @description ARC-0001 Transaction Object\n * @typedef WalletTransactions\n * @type {object}\n * @property {txs}\n * @property {Base64} txn Base64 encoding of the canonical msgpack encoding of a Transaction.\n * @property {Address} [authAddr] Authorized address used to sign the transaction when the account is rekeyed\n * @property {MultisigMetadata} [msig] Multisig metadata used to sign the transaction\n * @property {Address[]} [signers] Optional list of addresses that must sign the transactions\n * @property {SignedTxnStr} [stxn] Base64 encoding of the canonical msgpack encoding\n * of a SignedTxn corresponding to txn, when signers=[]\n * @property {string} [message] Optional message explaining the reason of the transaction\n * @property {string} [groupMessage] Message explaining the reason of this group of transaction.\n * Field only allowed in the first transaction of a group\n */\n\n/**\n * @description ARC-0001 Transaction Options Object\n * @typedef SignTxnsOpts\n * @type {object}\n */\n\n/**\n * @typedef EncodedTransaction\n * @type {Uint8Array|Base64} Algorand Encoded Transaction\n */\n\n/**\n * @typedef SignedTx\n * @type {object}\n * @property {TxHash} txID Transaction hash\n * @property {Uint8Array} blob Signed transaction\n */\n\nclass MyAlgoConnect {\n\n\t/**\n\t * @constructor\n\t * @param {Options} [options] Operation options\n\t */\n\tconstructor(options) {\n\n\t\tif (!bridge) {\n\t\t\tbridge = new Messaging();\n\t\t}\n\n\t\t/**\n\t\t * @access private\n\t\t * @type {Messaging}\n\t\t */\n\t\tthis.bridge = bridge;\n\n\t\t/**\n\t\t * @access private\n\t\t * @type {number} Popup Timeout\n\t\t */\n\t\tthis.timeout = (options && options.timeout ? options.timeout : 1600000);\n\n\t\t/**\n\t\t * @access private\n\t\t * @type {string} Frame url\n\t\t */\n\t\tthis.url = (options && options.bridgeUrl ? options.bridgeUrl : \"https://wallet.myalgo.com/bridge\");\n\n\t\tif (this.url.endsWith(\"/\"))\n\t\t\tthis.url = this.url.slice(0, -1);\n\n\t\t/**\n\t\t * @access private\n\t\t * @description This is used to reuse the current connect opened popup\n\t\t * @type {Window|null}\n\t\t */\n\t\tthis.currentConnectPopup = null;\n\n\t\t/**\n\t\t * @access private\n\t\t * @description This is used to reuse the current signtx opened popup\n\t\t * @type {Window|null}\n\t\t */\n\t\tthis.currentSigntxPopup = null;\n\n\t\t/**\n\t\t * @access private\n\t\t * @description This is used to reuse the current signlogic opened popup\n\t\t * @type {Window|null}\n\t\t */\n\t\tthis.currentSignLogicSigPopup = null;\n\n\t\t/**\n\t\t * @access private\n\t\t * @description This is used to reuse the current tealsign opened popup\n\t\t * @type {Window|null}\n\t\t */\n\t\tthis.currentTealSignPopup = null;\n\n\t\t/**\n\t\t * @access private\n\t\t * @description This is used to reuse the current signbytes opened popup\n\t\t * @type {Window|null}\n\t\t */\n\t\t this.currentSignBytesPopup = null;\n\n\t\t/**\n\t\t * @access private\n\t\t * @description Replace default bridge options\n\t\t * @type {import(\"@randlabs/communication-bridge\").sendMessageOptions}\n\t\t */\n\t\tthis.options = { waitForReply: true, timeout: this.timeout };\n\n\t\t/**\n\t\t * @access private\n\t\t * @description Disable ledger nano\n\t\t * @type {boolean}\n\t\t */\n\t\tthis.disableLedgerNano = (options && options.disableLedgerNano) ? options.disableLedgerNano : false;\n\t}\n\n\t/**\n\t * @async\n\t * @access public\n\t * @description Open a new window to load accounts from storage.\n\t * @param {ConnectionSettings} settings Connect settings\n\t * @returns {Promise<string[]>} Returns allowed accounts by the user.\n\t */\n\tasync connect(settings = { shouldSelectOneAccount: false, openManager: false }) {\n\n\t\tif (this.currentConnectPopup) {\n\t\t\tif (this.currentConnectPopup.closed) {\n\t\t\t\tthis.currentConnectPopup = null;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.focusWindow(this.currentConnectPopup);\n\t\t\t}\n\t\t}\n\n\t\ttry {\n\t\t\tthis.currentConnectPopup = openPopup(this.url + \"/connect.html\");\n\n\t\t\tawait this.waitForWindowToLoad(this.currentConnectPopup);\n\n\t\t\tconst res = await this.bridge.sendMessage(\n\t\t\t\tthis.currentConnectPopup,\n\t\t\t\t{ method: \"unlock\", params: Object.assign(settings, { disableLedgerNano: this.disableLedgerNano }) },\n\t\t\t\tthis.url, this.options\n\t\t\t);\n\n\t\t\tthis.closeWindow(this.currentConnectPopup);\n\t\t\tthis.currentConnectPopup = null;\n\n\t\t\tif (res.status === \"error\")\n\t\t\t\tthrow new Error(res.message);\n\n\t\t\treturn res.data.accounts;\n\t\t}\n\t\tcatch (err) {\n\t\t\tthis.closeWindow(this.currentConnectPopup);\n\t\t\tthis.currentConnectPopup = null;\n\t\t\tthrow err;\n\t\t}\n\t}\n\n\t/**\n\t * @async\n\t * @access public\n\t * @description Open a new window to sign transaction.\n\t * @param {Transaction|Transaction[]|EncodedTransaction|EncodedTransaction[]} transaction Transaction object or a Transaction array.\n\t * @param {SignTransactionOptions} [signOptions] Sign transactions options object.\n\t * (The signer account must be the same for all transactions).\n\t * @returns {(SignedTx|SignedTx[])} Returns transaction blob or an Array of blobs, depends if the\n\t * transaction was an object or an array.\n\t */\n\tasync signTransaction(transaction, signOptions) {\n\t\tlet txn;\n\n\t\tif (this.currentSigntxPopup) {\n\t\t\tif (this.currentSigntxPopup.closed) {\n\t\t\t\tthis.currentSigntxPopup = null;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.focusWindow(this.currentSigntxPopup);\n\t\t\t}\n\t\t}\n\n\t\tif (Array.isArray(transaction))\n\t\t\ttxn = Array.from(transaction).map(tx => prepareTxn(tx));\n\t\telse\n\t\t\ttxn = prepareTxn(transaction);\n\n\t\ttry {\n\t\t\tthis.currentSigntxPopup = openPopup(this.url + \"/signtx.html\");\n\n\t\t\tawait this.waitForWindowToLoad(this.currentSigntxPopup);\n\n\t\t\t// Send transaction info\n\t\t\tconst res = await this.bridge.sendMessage(\n\t\t\t\tthis.currentSigntxPopup, {\n\t\t\t\t\tmethod: \"transaction\",\n\t\t\t\t\tparams: { txn, settings: { disableLedgerNano: this.disableLedgerNano }, options: signOptions },\n\t\t\t\t},\n\t\t\t\tthis.url, this.options\n\t\t\t);\n\n\t\t\tthis.closeWindow(this.currentSigntxPopup);\n\t\t\tthis.currentSigntxPopup = null;\n\n\t\t\tif (res.status === \"error\")\n\t\t\t\tthrow new Error(res.message);\n\n\t\t\tif (Array.isArray(res.data)) {\n\t\t\t\tconst result = [];\n\t\t\t\tfor (const t of res.data) {\n\t\t\t\t\tt.blob = new Uint8Array(Buffer.from(t.blob, \"hex\"));\n\t\t\t\t\tresult.push(t);\n\t\t\t\t}\n\t\t\t\treturn result;\n\t\t\t}\n\n\t\t\tres.data.blob = new Uint8Array(Buffer.from(res.data.blob, \"hex\"));\n\n\t\t\treturn res.data;\n\t\t}\n\t\tcatch (err) {\n\t\t\tthis.closeWindow(this.currentSigntxPopup);\n\t\t\tthis.currentSigntxPopup = null;\n\t\t\tthrow err;\n\t\t}\n\t}\n\n\t/**\n\t * @async\n\t * @access public\n\t * @description Open a new window to sign transaction.\n\t * @param {WalletTransaction[]} txnsToSign Transactions to sign.\n\t * @param {SignTxnsOpts} [opts] Sign transactions options object.\n\t * @returns {(SignedTxnStr|null)[]} Returns an array of base64 encoding of the SignedTxn,\n\t * or null where the transaction was not to be signed.\n\t */\n\tasync signTxns(txnsToSign, opts) {\n\t\tif (this.currentSigntxPopup) {\n\t\t\tif (this.currentSigntxPopup.closed) {\n\t\t\t\tthis.currentSigntxPopup = null;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.focusWindow(this.currentSigntxPopup);\n\t\t\t}\n\t\t}\n\n\t\ttry {\n\t\t\tlet txns = txnsToSign;\n\t\t\tif (!Array.isArray(txnsToSign)) {\n\t\t\t\ttxns = [ txnsToSign ];\n\t\t\t}\n\n\t\t\tthis.currentSigntxPopup = openPopup(this.url + \"/signtx.html\");\n\t\t\tawait this.waitForWindowToLoad(this.currentSigntxPopup);\n\n\t\t\t// Send transaction info\n\t\t\tconst res = await this.bridge.sendMessage(\n\t\t\t\tthis.currentSigntxPopup, {\n\t\t\t\t\tmethod: \"signTxns\",\n\t\t\t\t\tparams: { txns, settings: { disableLedgerNano: this.disableLedgerNano }, opts },\n\t\t\t\t},\n\t\t\t\tthis.url, this.options\n\t\t\t);\n\n\t\t\tthis.closeWindow(this.currentSigntxPopup);\n\t\t\tthis.currentSigntxPopup = null;\n\n\t\t\tif (res.status === \"error\")\n\t\t\t\tthrow new SignTxnsError(res.message, res.code, res.data);\n\n\t\t\treturn res.data.map(r => (r ? Buffer.from(r.blob, 'hex').toString('base64') : null));\n\t\t}\n\t\tcatch (err) {\n\t\t\tthis.closeWindow(this.currentSigntxPopup);\n\t\t\tthis.currentSigntxPopup = null;\n\t\t\tthrow err;\n\t\t}\n\t}\n\n\t/**\n\t * @async\n\t * @access public\n\t * @description Open a new window to sign a teal program.\n\t * @param {Uint8Array|Base64} logic LogicSig program\n\t * @param {Address} address Signer Address\n\t * @returns {Uint8Array} Returns logicsig blob\n\t */\n\tasync signLogicSig(logic, address) {\n\n\t\tif (this.currentSignLogicSigPopup) {\n\t\t\tif (this.currentSignLogicSigPopup.closed) {\n\t\t\t\tthis.currentSignLogicSigPopup = null;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.focusWindow(this.currentSignLogicSigPopup);\n\t\t\t}\n\t\t}\n\n\t\ttry {\n\t\t\tthis.currentSignLogicSigPopup = openPopup(this.url + \"/logicsigtx.html\");\n\t\t\tawait this.waitForWindowToLoad(this.currentSignLogicSigPopup);\n\n\t\t\t// Send program\n\t\t\tlet logicInBase64 = logic;\n\t\t\tif (logic.constructor === Uint8Array)\n\t\t\t\tlogicInBase64 = Buffer.from(logic).toString(\"base64\");\n\t\t\tconst res = await this.bridge.sendMessage(\n\t\t\t\tthis.currentSignLogicSigPopup,\n\t\t\t\t{ method: \"logicsig\", params: { logic: logicInBase64, address } },\n\t\t\t\tthis.url, this.options\n\t\t\t);\n\n\t\t\tthis.closeWindow(this.currentSignLogicSigPopup);\n\t\t\tthis.currentSignLogicSigPopup = null;\n\n\t\t\tif (res.status === \"error\")\n\t\t\t\tthrow new Error(res.message);\n\n\t\t\treturn new Uint8Array(Buffer.from(res.data.signedTeal, \"base64\"));\n\t\t}\n\t\tcatch (err) {\n\t\t\tthis.closeWindow(this.currentSignLogicSigPopup);\n\t\t\tthis.currentSignLogicSigPopup = null;\n\t\t\tthrow err;\n\t\t}\n\t}\n\n\t/**\n\t * @async\n\t * @access public\n\t * @description Open a new window to sign data to verify in a teal program.\n\t * @param {Uint8Array|Base64} data Data to sign\n\t * @param {Address} contractAddress Address of the contract that will verify the data\n\t * @param {Address} address Signer Address\n\t * @returns {Uint8Array} Returns data signature\n\t */\n\tasync tealSign(data, contractAddress, address) {\n\n\t\tif (this.currentTealSignPopup) {\n\t\t\tif (this.currentTealSignPopup.closed) {\n\t\t\t\tthis.currentTealSignPopup = null;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.focusWindow(this.currentTealSignPopup);\n\t\t\t}\n\t\t}\n\n\t\ttry {\n\t\t\tthis.currentTealSignPopup = openPopup(this.url + \"/tealsign.html\");\n\t\t\tawait this.waitForWindowToLoad(this.currentTealSignPopup);\n\n\t\t\t// Send program\n\t\t\tlet dataInBase64 = data;\n\t\t\tif (data.constructor === Uint8Array)\n\t\t\t\tdataInBase64 = Buffer.from(data).toString(\"base64\");\n\n\t\t\tconst res = await this.bridge.sendMessage(\n\t\t\t\tthis.currentTealSignPopup,\n\t\t\t\t{ method: \"tealsign\", params: { data: dataInBase64, contractAddress: contractAddress, address } },\n\t\t\t\tthis.url, this.options\n\t\t\t);\n\n\t\t\tthis.closeWindow(this.currentTealSignPopup);\n\t\t\tthis.currentTealSignPopup = null;\n\n\t\t\tif (res.status === \"error\")\n\t\t\t\tthrow new Error(res.message);\n\n\t\t\treturn new Uint8Array(Buffer.from(res.data.signature, \"base64\"));\n\t\t}\n\t\tcatch (err) {\n\t\t\tthis.closeWindow(this.currentTealSignPopup);\n\t\t\tthis.currentTealSignPopup = null;\n\t\t\tthrow err;\n\t\t}\n\t}\n\n\t/**\n\t * @async\n\t * @access public\n\t * @description Open a new window to sign an arbitrary array of bytes.\n\t * @param {Uint8Array} bytes Bytes to sign\n\t * @param {Address} address Signer Address\n\t * @returns {Uint8Array} Returns bytes signature\n\t */\n\t async signBytes(bytes, address) {\n\t\tif (this.currentSignBytesPopup) {\n\t\t\tif (this.currentSignBytesPopup.closed) {\n\t\t\t\tthis.currentSignBytesPopup = null;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.focusWindow(this.currentSignBytesPopup);\n\t\t\t}\n\t\t}\n\n\t\ttry {\n\t\t\tthis.currentSignBytesPopup = openPopup(this.url + \"/signbytes.html\");\n\t\t\tawait this.waitForWindowToLoad(this.currentSignBytesPopup);\n\n\t\t\tlet messageInBase64 = Buffer.from(bytes).toString(\"base64\");\n\n\t\t\tconst res = await this.bridge.sendMessage(\n\t\t\t\tthis.currentSignBytesPopup,\n\t\t\t\t{ method: \"signbytes\", params: { data: messageInBase64, address } },\n\t\t\t\tthis.url, this.options\n\t\t\t);\n\n\t\t\tthis.closeWindow(this.currentSignBytesPopup);\n\t\t\tthis.currentSignBytesPopup = null;\n\n\t\t\tif (res.status === \"error\")\n\t\t\t\tthrow new Error(res.message);\n\n\t\t\treturn new Uint8Array(Buffer.from(res.data.signature, \"base64\"));\n\t\t}\n\t\tcatch (err) {\n\t\t\tthis.closeWindow(this.currentSignBytesPopup);\n\t\t\tthis.currentSignBytesPopup = null;\n\t\t\tthrow err;\n\t\t}\n\t}\n\n\t/**\n\t * @async\n\t * @access private\n\t * @description Wait until the window opened loads.\n\t * @param {Window} targetWindow Window opened context.\n\t * @param {number} retries Times to retry before throw an error.\n\t * @returns {Promise<void>} Throw error if the window does not load.\n\t */\n\tasync waitForWindowToLoad(targetWindow, retries = 30) {\n\t\tfor (let i = 0; i < retries; i++) {\n\t\t\tawait sleep(300);\n\t\t\tif (!targetWindow) break;\n\t\t\ttry {\n\t\t\t\tconst res = await bridge.sendMessage(targetWindow, { method: \"status\" }, this.url);\n\t\t\t\tif (res.status == \"success\")\n\t\t\t\t\treturn;\n\t\t\t}\n\t\t\tcatch (err) {\n\t\t\t\t// Ignore error\n\t\t\t}\n\t\t}\n\t\tthrow new Error(Errors.WINDOW_NOT_LOADED);\n\t}\n\n\t/**\n\t * @access private\n\t * @description Safely close an opened window\n\t * @param {Window} window Window object\n\t * @returns {void}\n\t */\n\tcloseWindow(window) {\n\t\tif (window && !window.closed && window.close) {\n\t\t\twindow.close();\n\t\t}\n\t}\n\n\t/**\n\t * @access private\n\t * @description Focus current popup\n\t * @param {Window} window Window object\n\t * @returns {void}\n\t * @throws {\"Windows is opened\"}\n\t */\n\tfocusWindow(window) {\n\t\tif (window && window.focus) {\n\t\t\twindow.focus();\n\t\t\tthrow new Error(Errors.WINDOW_IS_OPENED);\n\t\t}\n\t\telse {\n\t\t\tthrow new Error(Errors.INVALID_WINDOW);\n\t\t}\n\t}\n}\n\nmodule.exports = MyAlgoConnect;\n","module.exports = require(\"./lib/main\");\n","import { IQRCodeModalOptions } from \"@walletconnect/types\";\n\nimport * as nodeLib from \"./node\";\nimport * as browserLib from \"./browser\";\nimport { transformUri } from \"./transform\";\n\nconst isNode = () =>\n  typeof process !== \"undefined\" &&\n  typeof process.versions !== \"undefined\" &&\n  typeof process.versions.node !== \"undefined\";\n\nexport type AlgorandQRCodeModalOptions = IQRCodeModalOptions & {\n  addAlgorandMarkerToUri?: boolean;\n};\n\nfunction open(uri: string, cb: any, qrcodeModalOptions?: AlgorandQRCodeModalOptions) {\n  const { addAlgorandMarkerToUri, ...vanillaOptions } = qrcodeModalOptions || {};\n\n  uri = transformUri(uri, addAlgorandMarkerToUri);\n\n  // eslint-disable-next-line no-console\n  console.log(uri);\n  if (isNode()) {\n    nodeLib.open(uri);\n  } else {\n    browserLib.open(uri, cb, vanillaOptions);\n  }\n}\n\nfunction close() {\n  if (isNode()) {\n    nodeLib.close();\n  } else {\n    browserLib.close();\n  }\n}\n\nexport default { open, close };\n","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","var __spreadArrays = (this && this.__spreadArrays) || function () {\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\n            r[k] = a[j];\n    return r;\n};\nvar BrowserInfo = /** @class */ (function () {\n    function BrowserInfo(name, version, os) {\n        this.name = name;\n        this.version = version;\n        this.os = os;\n        this.type = 'browser';\n    }\n    return BrowserInfo;\n}());\nexport { BrowserInfo };\nvar NodeInfo = /** @class */ (function () {\n    function NodeInfo(version) {\n        this.version = version;\n        this.type = 'node';\n        this.name = 'node';\n        this.os = process.platform;\n    }\n    return NodeInfo;\n}());\nexport { NodeInfo };\nvar SearchBotDeviceInfo = /** @class */ (function () {\n    function SearchBotDeviceInfo(name, version, os, bot) {\n        this.name = name;\n        this.version = version;\n        this.os = os;\n        this.bot = bot;\n        this.type = 'bot-device';\n    }\n    return SearchBotDeviceInfo;\n}());\nexport { SearchBotDeviceInfo };\nvar BotInfo = /** @class */ (function () {\n    function BotInfo() {\n        this.type = 'bot';\n        this.bot = true; // NOTE: deprecated test name instead\n        this.name = 'bot';\n        this.version = null;\n        this.os = null;\n    }\n    return BotInfo;\n}());\nexport { BotInfo };\nvar ReactNativeInfo = /** @class */ (function () {\n    function ReactNativeInfo() {\n        this.type = 'react-native';\n        this.name = 'react-native';\n        this.version = null;\n        this.os = null;\n    }\n    return ReactNativeInfo;\n}());\nexport { ReactNativeInfo };\n// tslint:disable-next-line:max-line-length\nvar SEARCHBOX_UA_REGEX = /alexa|bot|crawl(er|ing)|facebookexternalhit|feedburner|google web preview|nagios|postrank|pingdom|slurp|spider|yahoo!|yandex/;\nvar SEARCHBOT_OS_REGEX = /(nuhk|Googlebot|Yammybot|Openbot|Slurp|MSNBot|Ask\\ Jeeves\\/Teoma|ia_archiver)/;\nvar REQUIRED_VERSION_PARTS = 3;\nvar userAgentRules = [\n    ['aol', /AOLShield\\/([0-9\\._]+)/],\n    ['edge', /Edge\\/([0-9\\._]+)/],\n    ['edge-ios', /EdgiOS\\/([0-9\\._]+)/],\n    ['yandexbrowser', /YaBrowser\\/([0-9\\._]+)/],\n    ['kakaotalk', /KAKAOTALK\\s([0-9\\.]+)/],\n    ['samsung', /SamsungBrowser\\/([0-9\\.]+)/],\n    ['silk', /\\bSilk\\/([0-9._-]+)\\b/],\n    ['miui', /MiuiBrowser\\/([0-9\\.]+)$/],\n    ['beaker', /BeakerBrowser\\/([0-9\\.]+)/],\n    ['edge-chromium', /EdgA?\\/([0-9\\.]+)/],\n    [\n        'chromium-webview',\n        /(?!Chrom.*OPR)wv\\).*Chrom(?:e|ium)\\/([0-9\\.]+)(:?\\s|$)/,\n    ],\n    ['chrome', /(?!Chrom.*OPR)Chrom(?:e|ium)\\/([0-9\\.]+)(:?\\s|$)/],\n    ['phantomjs', /PhantomJS\\/([0-9\\.]+)(:?\\s|$)/],\n    ['crios', /CriOS\\/([0-9\\.]+)(:?\\s|$)/],\n    ['firefox', /Firefox\\/([0-9\\.]+)(?:\\s|$)/],\n    ['fxios', /FxiOS\\/([0-9\\.]+)/],\n    ['opera-mini', /Opera Mini.*Version\\/([0-9\\.]+)/],\n    ['opera', /Opera\\/([0-9\\.]+)(?:\\s|$)/],\n    ['opera', /OPR\\/([0-9\\.]+)(:?\\s|$)/],\n    ['ie', /Trident\\/7\\.0.*rv\\:([0-9\\.]+).*\\).*Gecko$/],\n    ['ie', /MSIE\\s([0-9\\.]+);.*Trident\\/[4-7].0/],\n    ['ie', /MSIE\\s(7\\.0)/],\n    ['bb10', /BB10;\\sTouch.*Version\\/([0-9\\.]+)/],\n    ['android', /Android\\s([0-9\\.]+)/],\n    ['ios', /Version\\/([0-9\\._]+).*Mobile.*Safari.*/],\n    ['safari', /Version\\/([0-9\\._]+).*Safari/],\n    ['facebook', /FBAV\\/([0-9\\.]+)/],\n    ['instagram', /Instagram\\s([0-9\\.]+)/],\n    ['ios-webview', /AppleWebKit\\/([0-9\\.]+).*Mobile/],\n    ['ios-webview', /AppleWebKit\\/([0-9\\.]+).*Gecko\\)$/],\n    ['searchbot', SEARCHBOX_UA_REGEX],\n];\nvar operatingSystemRules = [\n    ['iOS', /iP(hone|od|ad)/],\n    ['Android OS', /Android/],\n    ['BlackBerry OS', /BlackBerry|BB10/],\n    ['Windows Mobile', /IEMobile/],\n    ['Amazon OS', /Kindle/],\n    ['Windows 3.11', /Win16/],\n    ['Windows 95', /(Windows 95)|(Win95)|(Windows_95)/],\n    ['Windows 98', /(Windows 98)|(Win98)/],\n    ['Windows 2000', /(Windows NT 5.0)|(Windows 2000)/],\n    ['Windows XP', /(Windows NT 5.1)|(Windows XP)/],\n    ['Windows Server 2003', /(Windows NT 5.2)/],\n    ['Windows Vista', /(Windows NT 6.0)/],\n    ['Windows 7', /(Windows NT 6.1)/],\n    ['Windows 8', /(Windows NT 6.2)/],\n    ['Windows 8.1', /(Windows NT 6.3)/],\n    ['Windows 10', /(Windows NT 10.0)/],\n    ['Windows ME', /Windows ME/],\n    ['Open BSD', /OpenBSD/],\n    ['Sun OS', /SunOS/],\n    ['Chrome OS', /CrOS/],\n    ['Linux', /(Linux)|(X11)/],\n    ['Mac OS', /(Mac_PowerPC)|(Macintosh)/],\n    ['QNX', /QNX/],\n    ['BeOS', /BeOS/],\n    ['OS/2', /OS\\/2/],\n];\nexport function detect(userAgent) {\n    if (!!userAgent) {\n        return parseUserAgent(userAgent);\n    }\n    if (typeof document === 'undefined' &&\n        typeof navigator !== 'undefined' &&\n        navigator.product === 'ReactNative') {\n        return new ReactNativeInfo();\n    }\n    if (typeof navigator !== 'undefined') {\n        return parseUserAgent(navigator.userAgent);\n    }\n    return getNodeVersion();\n}\nfunction matchUserAgent(ua) {\n    // opted for using reduce here rather than Array#first with a regex.test call\n    // this is primarily because using the reduce we only perform the regex\n    // execution once rather than once for the test and for the exec again below\n    // probably something that needs to be benchmarked though\n    return (ua !== '' &&\n        userAgentRules.reduce(function (matched, _a) {\n            var browser = _a[0], regex = _a[1];\n            if (matched) {\n                return matched;\n            }\n            var uaMatch = regex.exec(ua);\n            return !!uaMatch && [browser, uaMatch];\n        }, false));\n}\nexport function browserName(ua) {\n    var data = matchUserAgent(ua);\n    return data ? data[0] : null;\n}\nexport function parseUserAgent(ua) {\n    var matchedRule = matchUserAgent(ua);\n    if (!matchedRule) {\n        return null;\n    }\n    var name = matchedRule[0], match = matchedRule[1];\n    if (name === 'searchbot') {\n        return new BotInfo();\n    }\n    var versionParts = match[1] && match[1].split(/[._]/).slice(0, 3);\n    if (versionParts) {\n        if (versionParts.length < REQUIRED_VERSION_PARTS) {\n            versionParts = __spreadArrays(versionParts, createVersionParts(REQUIRED_VERSION_PARTS - versionParts.length));\n        }\n    }\n    else {\n        versionParts = [];\n    }\n    var version = versionParts.join('.');\n    var os = detectOS(ua);\n    var searchBotMatch = SEARCHBOT_OS_REGEX.exec(ua);\n    if (searchBotMatch && searchBotMatch[1]) {\n        return new SearchBotDeviceInfo(name, version, os, searchBotMatch[1]);\n    }\n    return new BrowserInfo(name, version, os);\n}\nexport function detectOS(ua) {\n    for (var ii = 0, count = operatingSystemRules.length; ii < count; ii++) {\n        var _a = operatingSystemRules[ii], os = _a[0], regex = _a[1];\n        var match = regex.exec(ua);\n        if (match) {\n            return os;\n        }\n    }\n    return null;\n}\nexport function getNodeVersion() {\n    var isNode = typeof process !== 'undefined' && process.version;\n    return isNode ? new NodeInfo(process.version.slice(1)) : null;\n}\nfunction createVersionParts(count) {\n    var output = [];\n    for (var ii = 0; ii < count; ii++) {\n        output.push('0');\n    }\n    return output;\n}\n",null,null,null,null,null,null,"(function (module, exports) {\n  'use strict';\n\n  // Utils\n  function assert (val, msg) {\n    if (!val) throw new Error(msg || 'Assertion failed');\n  }\n\n  // Could use `inherits` module, but don't want to move from single file\n  // architecture yet.\n  function inherits (ctor, superCtor) {\n    ctor.super_ = superCtor;\n    var TempCtor = function () {};\n    TempCtor.prototype = superCtor.prototype;\n    ctor.prototype = new TempCtor();\n    ctor.prototype.constructor = ctor;\n  }\n\n  // BN\n\n  function BN (number, base, endian) {\n    if (BN.isBN(number)) {\n      return number;\n    }\n\n    this.negative = 0;\n    this.words = null;\n    this.length = 0;\n\n    // Reduction context\n    this.red = null;\n\n    if (number !== null) {\n      if (base === 'le' || base === 'be') {\n        endian = base;\n        base = 10;\n      }\n\n      this._init(number || 0, base || 10, endian || 'be');\n    }\n  }\n  if (typeof module === 'object') {\n    module.exports = BN;\n  } else {\n    exports.BN = BN;\n  }\n\n  BN.BN = BN;\n  BN.wordSize = 26;\n\n  var Buffer;\n  try {\n    Buffer = require('buffer').Buffer;\n  } catch (e) {\n  }\n\n  BN.isBN = function isBN (num) {\n    if (num instanceof BN) {\n      return true;\n    }\n\n    return num !== null && typeof num === 'object' &&\n      num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);\n  };\n\n  BN.max = function max (left, right) {\n    if (left.cmp(right) > 0) return left;\n    return right;\n  };\n\n  BN.min = function min (left, right) {\n    if (left.cmp(right) < 0) return left;\n    return right;\n  };\n\n  BN.prototype._init = function init (number, base, endian) {\n    if (typeof number === 'number') {\n      return this._initNumber(number, base, endian);\n    }\n\n    if (typeof number === 'object') {\n      return this._initArray(number, base, endian);\n    }\n\n    if (base === 'hex') {\n      base = 16;\n    }\n    assert(base === (base | 0) && base >= 2 && base <= 36);\n\n    number = number.toString().replace(/\\s+/g, '');\n    var start = 0;\n    if (number[0] === '-') {\n      start++;\n    }\n\n    if (base === 16) {\n      this._parseHex(number, start);\n    } else {\n      this._parseBase(number, base, start);\n    }\n\n    if (number[0] === '-') {\n      this.negative = 1;\n    }\n\n    this.strip();\n\n    if (endian !== 'le') return;\n\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initNumber = function _initNumber (number, base, endian) {\n    if (number < 0) {\n      this.negative = 1;\n      number = -number;\n    }\n    if (number < 0x4000000) {\n      this.words = [ number & 0x3ffffff ];\n      this.length = 1;\n    } else if (number < 0x10000000000000) {\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff\n      ];\n      this.length = 2;\n    } else {\n      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff,\n        1\n      ];\n      this.length = 3;\n    }\n\n    if (endian !== 'le') return;\n\n    // Reverse the bytes\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initArray = function _initArray (number, base, endian) {\n    // Perhaps a Uint8Array\n    assert(typeof number.length === 'number');\n    if (number.length <= 0) {\n      this.words = [ 0 ];\n      this.length = 1;\n      return this;\n    }\n\n    this.length = Math.ceil(number.length / 3);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    var off = 0;\n    if (endian === 'be') {\n      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {\n        w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    } else if (endian === 'le') {\n      for (i = 0, j = 0; i < number.length; i += 3) {\n        w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    }\n    return this.strip();\n  };\n\n  function parseHex (str, start, end) {\n    var r = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r <<= 4;\n\n      // 'a' - 'f'\n      if (c >= 49 && c <= 54) {\n        r |= c - 49 + 0xa;\n\n      // 'A' - 'F'\n      } else if (c >= 17 && c <= 22) {\n        r |= c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        r |= c & 0xf;\n      }\n    }\n    return r;\n  }\n\n  BN.prototype._parseHex = function _parseHex (number, start) {\n    // Create possibly bigger array to ensure that it fits the number\n    this.length = Math.ceil((number.length - start) / 6);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    // Scan 24-bit chunks and add them to the number\n    var off = 0;\n    for (i = number.length - 6, j = 0; i >= start; i -= 6) {\n      w = parseHex(number, i, i + 6);\n      this.words[j] |= (w << off) & 0x3ffffff;\n      // NOTE: `0x3fffff` is intentional here, 26bits max shift + 24bit hex limb\n      this.words[j + 1] |= w >>> (26 - off) & 0x3fffff;\n      off += 24;\n      if (off >= 26) {\n        off -= 26;\n        j++;\n      }\n    }\n    if (i + 6 !== start) {\n      w = parseHex(number, start, i + 6);\n      this.words[j] |= (w << off) & 0x3ffffff;\n      this.words[j + 1] |= w >>> (26 - off) & 0x3fffff;\n    }\n    this.strip();\n  };\n\n  function parseBase (str, start, end, mul) {\n    var r = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r *= mul;\n\n      // 'a'\n      if (c >= 49) {\n        r += c - 49 + 0xa;\n\n      // 'A'\n      } else if (c >= 17) {\n        r += c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        r += c;\n      }\n    }\n    return r;\n  }\n\n  BN.prototype._parseBase = function _parseBase (number, base, start) {\n    // Initialize as zero\n    this.words = [ 0 ];\n    this.length = 1;\n\n    // Find length of limb in base\n    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {\n      limbLen++;\n    }\n    limbLen--;\n    limbPow = (limbPow / base) | 0;\n\n    var total = number.length - start;\n    var mod = total % limbLen;\n    var end = Math.min(total, total - mod) + start;\n\n    var word = 0;\n    for (var i = start; i < end; i += limbLen) {\n      word = parseBase(number, i, i + limbLen, base);\n\n      this.imuln(limbPow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    if (mod !== 0) {\n      var pow = 1;\n      word = parseBase(number, i, number.length, base);\n\n      for (i = 0; i < mod; i++) {\n        pow *= base;\n      }\n\n      this.imuln(pow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n  };\n\n  BN.prototype.copy = function copy (dest) {\n    dest.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      dest.words[i] = this.words[i];\n    }\n    dest.length = this.length;\n    dest.negative = this.negative;\n    dest.red = this.red;\n  };\n\n  BN.prototype.clone = function clone () {\n    var r = new BN(null);\n    this.copy(r);\n    return r;\n  };\n\n  BN.prototype._expand = function _expand (size) {\n    while (this.length < size) {\n      this.words[this.length++] = 0;\n    }\n    return this;\n  };\n\n  // Remove leading `0` from `this`\n  BN.prototype.strip = function strip () {\n    while (this.length > 1 && this.words[this.length - 1] === 0) {\n      this.length--;\n    }\n    return this._normSign();\n  };\n\n  BN.prototype._normSign = function _normSign () {\n    // -0 = 0\n    if (this.length === 1 && this.words[0] === 0) {\n      this.negative = 0;\n    }\n    return this;\n  };\n\n  BN.prototype.inspect = function inspect () {\n    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';\n  };\n\n  /*\n\n  var zeros = [];\n  var groupSizes = [];\n  var groupBases = [];\n\n  var s = '';\n  var i = -1;\n  while (++i < BN.wordSize) {\n    zeros[i] = s;\n    s += '0';\n  }\n  groupSizes[0] = 0;\n  groupSizes[1] = 0;\n  groupBases[0] = 0;\n  groupBases[1] = 0;\n  var base = 2 - 1;\n  while (++base < 36 + 1) {\n    var groupSize = 0;\n    var groupBase = 1;\n    while (groupBase < (1 << BN.wordSize) / base) {\n      groupBase *= base;\n      groupSize += 1;\n    }\n    groupSizes[base] = groupSize;\n    groupBases[base] = groupBase;\n  }\n\n  */\n\n  var zeros = [\n    '',\n    '0',\n    '00',\n    '000',\n    '0000',\n    '00000',\n    '000000',\n    '0000000',\n    '00000000',\n    '000000000',\n    '0000000000',\n    '00000000000',\n    '000000000000',\n    '0000000000000',\n    '00000000000000',\n    '000000000000000',\n    '0000000000000000',\n    '00000000000000000',\n    '000000000000000000',\n    '0000000000000000000',\n    '00000000000000000000',\n    '000000000000000000000',\n    '0000000000000000000000',\n    '00000000000000000000000',\n    '000000000000000000000000',\n    '0000000000000000000000000'\n  ];\n\n  var groupSizes = [\n    0, 0,\n    25, 16, 12, 11, 10, 9, 8,\n    8, 7, 7, 7, 7, 6, 6,\n    6, 6, 6, 6, 6, 5, 5,\n    5, 5, 5, 5, 5, 5, 5,\n    5, 5, 5, 5, 5, 5, 5\n  ];\n\n  var groupBases = [\n    0, 0,\n    33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216,\n    43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625,\n    16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632,\n    6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149,\n    24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176\n  ];\n\n  BN.prototype.toString = function toString (base, padding) {\n    base = base || 10;\n    padding = padding | 0 || 1;\n\n    var out;\n    if (base === 16 || base === 'hex') {\n      out = '';\n      var off = 0;\n      var carry = 0;\n      for (var i = 0; i < this.length; i++) {\n        var w = this.words[i];\n        var word = (((w << off) | carry) & 0xffffff).toString(16);\n        carry = (w >>> (24 - off)) & 0xffffff;\n        if (carry !== 0 || i !== this.length - 1) {\n          out = zeros[6 - word.length] + word + out;\n        } else {\n          out = word + out;\n        }\n        off += 2;\n        if (off >= 26) {\n          off -= 26;\n          i--;\n        }\n      }\n      if (carry !== 0) {\n        out = carry.toString(16) + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    if (base === (base | 0) && base >= 2 && base <= 36) {\n      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));\n      var groupSize = groupSizes[base];\n      // var groupBase = Math.pow(base, groupSize);\n      var groupBase = groupBases[base];\n      out = '';\n      var c = this.clone();\n      c.negative = 0;\n      while (!c.isZero()) {\n        var r = c.modn(groupBase).toString(base);\n        c = c.idivn(groupBase);\n\n        if (!c.isZero()) {\n          out = zeros[groupSize - r.length] + r + out;\n        } else {\n          out = r + out;\n        }\n      }\n      if (this.isZero()) {\n        out = '0' + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    assert(false, 'Base should be between 2 and 36');\n  };\n\n  BN.prototype.toNumber = function toNumber () {\n    var ret = this.words[0];\n    if (this.length === 2) {\n      ret += this.words[1] * 0x4000000;\n    } else if (this.length === 3 && this.words[2] === 0x01) {\n      // NOTE: at this stage it is known that the top bit is set\n      ret += 0x10000000000000 + (this.words[1] * 0x4000000);\n    } else if (this.length > 2) {\n      assert(false, 'Number can only safely store up to 53 bits');\n    }\n    return (this.negative !== 0) ? -ret : ret;\n  };\n\n  BN.prototype.toJSON = function toJSON () {\n    return this.toString(16);\n  };\n\n  BN.prototype.toBuffer = function toBuffer (endian, length) {\n    assert(typeof Buffer !== 'undefined');\n    return this.toArrayLike(Buffer, endian, length);\n  };\n\n  BN.prototype.toArray = function toArray (endian, length) {\n    return this.toArrayLike(Array, endian, length);\n  };\n\n  BN.prototype.toArrayLike = function toArrayLike (ArrayType, endian, length) {\n    var byteLength = this.byteLength();\n    var reqLength = length || Math.max(1, byteLength);\n    assert(byteLength <= reqLength, 'byte array longer than desired length');\n    assert(reqLength > 0, 'Requested array length <= 0');\n\n    this.strip();\n    var littleEndian = endian === 'le';\n    var res = new ArrayType(reqLength);\n\n    var b, i;\n    var q = this.clone();\n    if (!littleEndian) {\n      // Assume big-endian\n      for (i = 0; i < reqLength - byteLength; i++) {\n        res[i] = 0;\n      }\n\n      for (i = 0; !q.isZero(); i++) {\n        b = q.andln(0xff);\n        q.iushrn(8);\n\n        res[reqLength - i - 1] = b;\n      }\n    } else {\n      for (i = 0; !q.isZero(); i++) {\n        b = q.andln(0xff);\n        q.iushrn(8);\n\n        res[i] = b;\n      }\n\n      for (; i < reqLength; i++) {\n        res[i] = 0;\n      }\n    }\n\n    return res;\n  };\n\n  if (Math.clz32) {\n    BN.prototype._countBits = function _countBits (w) {\n      return 32 - Math.clz32(w);\n    };\n  } else {\n    BN.prototype._countBits = function _countBits (w) {\n      var t = w;\n      var r = 0;\n      if (t >= 0x1000) {\n        r += 13;\n        t >>>= 13;\n      }\n      if (t >= 0x40) {\n        r += 7;\n        t >>>= 7;\n      }\n      if (t >= 0x8) {\n        r += 4;\n        t >>>= 4;\n      }\n      if (t >= 0x02) {\n        r += 2;\n        t >>>= 2;\n      }\n      return r + t;\n    };\n  }\n\n  BN.prototype._zeroBits = function _zeroBits (w) {\n    // Short-cut\n    if (w === 0) return 26;\n\n    var t = w;\n    var r = 0;\n    if ((t & 0x1fff) === 0) {\n      r += 13;\n      t >>>= 13;\n    }\n    if ((t & 0x7f) === 0) {\n      r += 7;\n      t >>>= 7;\n    }\n    if ((t & 0xf) === 0) {\n      r += 4;\n      t >>>= 4;\n    }\n    if ((t & 0x3) === 0) {\n      r += 2;\n      t >>>= 2;\n    }\n    if ((t & 0x1) === 0) {\n      r++;\n    }\n    return r;\n  };\n\n  // Return number of used bits in a BN\n  BN.prototype.bitLength = function bitLength () {\n    var w = this.words[this.length - 1];\n    var hi = this._countBits(w);\n    return (this.length - 1) * 26 + hi;\n  };\n\n  function toBitArray (num) {\n    var w = new Array(num.bitLength());\n\n    for (var bit = 0; bit < w.length; bit++) {\n      var off = (bit / 26) | 0;\n      var wbit = bit % 26;\n\n      w[bit] = (num.words[off] & (1 << wbit)) >>> wbit;\n    }\n\n    return w;\n  }\n\n  // Number of trailing zero bits\n  BN.prototype.zeroBits = function zeroBits () {\n    if (this.isZero()) return 0;\n\n    var r = 0;\n    for (var i = 0; i < this.length; i++) {\n      var b = this._zeroBits(this.words[i]);\n      r += b;\n      if (b !== 26) break;\n    }\n    return r;\n  };\n\n  BN.prototype.byteLength = function byteLength () {\n    return Math.ceil(this.bitLength() / 8);\n  };\n\n  BN.prototype.toTwos = function toTwos (width) {\n    if (this.negative !== 0) {\n      return this.abs().inotn(width).iaddn(1);\n    }\n    return this.clone();\n  };\n\n  BN.prototype.fromTwos = function fromTwos (width) {\n    if (this.testn(width - 1)) {\n      return this.notn(width).iaddn(1).ineg();\n    }\n    return this.clone();\n  };\n\n  BN.prototype.isNeg = function isNeg () {\n    return this.negative !== 0;\n  };\n\n  // Return negative clone of `this`\n  BN.prototype.neg = function neg () {\n    return this.clone().ineg();\n  };\n\n  BN.prototype.ineg = function ineg () {\n    if (!this.isZero()) {\n      this.negative ^= 1;\n    }\n\n    return this;\n  };\n\n  // Or `num` with `this` in-place\n  BN.prototype.iuor = function iuor (num) {\n    while (this.length < num.length) {\n      this.words[this.length++] = 0;\n    }\n\n    for (var i = 0; i < num.length; i++) {\n      this.words[i] = this.words[i] | num.words[i];\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ior = function ior (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuor(num);\n  };\n\n  // Or `num` with `this`\n  BN.prototype.or = function or (num) {\n    if (this.length > num.length) return this.clone().ior(num);\n    return num.clone().ior(this);\n  };\n\n  BN.prototype.uor = function uor (num) {\n    if (this.length > num.length) return this.clone().iuor(num);\n    return num.clone().iuor(this);\n  };\n\n  // And `num` with `this` in-place\n  BN.prototype.iuand = function iuand (num) {\n    // b = min-length(num, this)\n    var b;\n    if (this.length > num.length) {\n      b = num;\n    } else {\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = this.words[i] & num.words[i];\n    }\n\n    this.length = b.length;\n\n    return this.strip();\n  };\n\n  BN.prototype.iand = function iand (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuand(num);\n  };\n\n  // And `num` with `this`\n  BN.prototype.and = function and (num) {\n    if (this.length > num.length) return this.clone().iand(num);\n    return num.clone().iand(this);\n  };\n\n  BN.prototype.uand = function uand (num) {\n    if (this.length > num.length) return this.clone().iuand(num);\n    return num.clone().iuand(this);\n  };\n\n  // Xor `num` with `this` in-place\n  BN.prototype.iuxor = function iuxor (num) {\n    // a.length > b.length\n    var a;\n    var b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = a.words[i] ^ b.words[i];\n    }\n\n    if (this !== a) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = a.length;\n\n    return this.strip();\n  };\n\n  BN.prototype.ixor = function ixor (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuxor(num);\n  };\n\n  // Xor `num` with `this`\n  BN.prototype.xor = function xor (num) {\n    if (this.length > num.length) return this.clone().ixor(num);\n    return num.clone().ixor(this);\n  };\n\n  BN.prototype.uxor = function uxor (num) {\n    if (this.length > num.length) return this.clone().iuxor(num);\n    return num.clone().iuxor(this);\n  };\n\n  // Not ``this`` with ``width`` bitwidth\n  BN.prototype.inotn = function inotn (width) {\n    assert(typeof width === 'number' && width >= 0);\n\n    var bytesNeeded = Math.ceil(width / 26) | 0;\n    var bitsLeft = width % 26;\n\n    // Extend the buffer with leading zeroes\n    this._expand(bytesNeeded);\n\n    if (bitsLeft > 0) {\n      bytesNeeded--;\n    }\n\n    // Handle complete words\n    for (var i = 0; i < bytesNeeded; i++) {\n      this.words[i] = ~this.words[i] & 0x3ffffff;\n    }\n\n    // Handle the residue\n    if (bitsLeft > 0) {\n      this.words[i] = ~this.words[i] & (0x3ffffff >> (26 - bitsLeft));\n    }\n\n    // And remove leading zeroes\n    return this.strip();\n  };\n\n  BN.prototype.notn = function notn (width) {\n    return this.clone().inotn(width);\n  };\n\n  // Set `bit` of `this`\n  BN.prototype.setn = function setn (bit, val) {\n    assert(typeof bit === 'number' && bit >= 0);\n\n    var off = (bit / 26) | 0;\n    var wbit = bit % 26;\n\n    this._expand(off + 1);\n\n    if (val) {\n      this.words[off] = this.words[off] | (1 << wbit);\n    } else {\n      this.words[off] = this.words[off] & ~(1 << wbit);\n    }\n\n    return this.strip();\n  };\n\n  // Add `num` to `this` in-place\n  BN.prototype.iadd = function iadd (num) {\n    var r;\n\n    // negative + positive\n    if (this.negative !== 0 && num.negative === 0) {\n      this.negative = 0;\n      r = this.isub(num);\n      this.negative ^= 1;\n      return this._normSign();\n\n    // positive + negative\n    } else if (this.negative === 0 && num.negative !== 0) {\n      num.negative = 0;\n      r = this.isub(num);\n      num.negative = 1;\n      return r._normSign();\n    }\n\n    // a.length > b.length\n    var a, b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) + (b.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n\n    this.length = a.length;\n    if (carry !== 0) {\n      this.words[this.length] = carry;\n      this.length++;\n    // Copy the rest of the words\n    } else if (a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    return this;\n  };\n\n  // Add `num` to `this`\n  BN.prototype.add = function add (num) {\n    var res;\n    if (num.negative !== 0 && this.negative === 0) {\n      num.negative = 0;\n      res = this.sub(num);\n      num.negative ^= 1;\n      return res;\n    } else if (num.negative === 0 && this.negative !== 0) {\n      this.negative = 0;\n      res = num.sub(this);\n      this.negative = 1;\n      return res;\n    }\n\n    if (this.length > num.length) return this.clone().iadd(num);\n\n    return num.clone().iadd(this);\n  };\n\n  // Subtract `num` from `this` in-place\n  BN.prototype.isub = function isub (num) {\n    // this - (-num) = this + num\n    if (num.negative !== 0) {\n      num.negative = 0;\n      var r = this.iadd(num);\n      num.negative = 1;\n      return r._normSign();\n\n    // -this - num = -(this + num)\n    } else if (this.negative !== 0) {\n      this.negative = 0;\n      this.iadd(num);\n      this.negative = 1;\n      return this._normSign();\n    }\n\n    // At this point both numbers are positive\n    var cmp = this.cmp(num);\n\n    // Optimization - zeroify\n    if (cmp === 0) {\n      this.negative = 0;\n      this.length = 1;\n      this.words[0] = 0;\n      return this;\n    }\n\n    // a > b\n    var a, b;\n    if (cmp > 0) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) - (b.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n\n    // Copy rest of the words\n    if (carry === 0 && i < a.length && a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = Math.max(this.length, i);\n\n    if (a !== this) {\n      this.negative = 1;\n    }\n\n    return this.strip();\n  };\n\n  // Subtract `num` from `this`\n  BN.prototype.sub = function sub (num) {\n    return this.clone().isub(num);\n  };\n\n  function smallMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    var len = (self.length + num.length) | 0;\n    out.length = len;\n    len = (len - 1) | 0;\n\n    // Peel one iteration (compiler can't do it, because of code complexity)\n    var a = self.words[0] | 0;\n    var b = num.words[0] | 0;\n    var r = a * b;\n\n    var lo = r & 0x3ffffff;\n    var carry = (r / 0x4000000) | 0;\n    out.words[0] = lo;\n\n    for (var k = 1; k < len; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = carry >>> 26;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = (k - j) | 0;\n        a = self.words[i] | 0;\n        b = num.words[j] | 0;\n        r = a * b + rword;\n        ncarry += (r / 0x4000000) | 0;\n        rword = r & 0x3ffffff;\n      }\n      out.words[k] = rword | 0;\n      carry = ncarry | 0;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry | 0;\n    } else {\n      out.length--;\n    }\n\n    return out.strip();\n  }\n\n  // TODO(indutny): it may be reasonable to omit it for users who don't need\n  // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit\n  // multiplication (like elliptic secp256k1).\n  var comb10MulTo = function comb10MulTo (self, num, out) {\n    var a = self.words;\n    var b = num.words;\n    var o = out.words;\n    var c = 0;\n    var lo;\n    var mid;\n    var hi;\n    var a0 = a[0] | 0;\n    var al0 = a0 & 0x1fff;\n    var ah0 = a0 >>> 13;\n    var a1 = a[1] | 0;\n    var al1 = a1 & 0x1fff;\n    var ah1 = a1 >>> 13;\n    var a2 = a[2] | 0;\n    var al2 = a2 & 0x1fff;\n    var ah2 = a2 >>> 13;\n    var a3 = a[3] | 0;\n    var al3 = a3 & 0x1fff;\n    var ah3 = a3 >>> 13;\n    var a4 = a[4] | 0;\n    var al4 = a4 & 0x1fff;\n    var ah4 = a4 >>> 13;\n    var a5 = a[5] | 0;\n    var al5 = a5 & 0x1fff;\n    var ah5 = a5 >>> 13;\n    var a6 = a[6] | 0;\n    var al6 = a6 & 0x1fff;\n    var ah6 = a6 >>> 13;\n    var a7 = a[7] | 0;\n    var al7 = a7 & 0x1fff;\n    var ah7 = a7 >>> 13;\n    var a8 = a[8] | 0;\n    var al8 = a8 & 0x1fff;\n    var ah8 = a8 >>> 13;\n    var a9 = a[9] | 0;\n    var al9 = a9 & 0x1fff;\n    var ah9 = a9 >>> 13;\n    var b0 = b[0] | 0;\n    var bl0 = b0 & 0x1fff;\n    var bh0 = b0 >>> 13;\n    var b1 = b[1] | 0;\n    var bl1 = b1 & 0x1fff;\n    var bh1 = b1 >>> 13;\n    var b2 = b[2] | 0;\n    var bl2 = b2 & 0x1fff;\n    var bh2 = b2 >>> 13;\n    var b3 = b[3] | 0;\n    var bl3 = b3 & 0x1fff;\n    var bh3 = b3 >>> 13;\n    var b4 = b[4] | 0;\n    var bl4 = b4 & 0x1fff;\n    var bh4 = b4 >>> 13;\n    var b5 = b[5] | 0;\n    var bl5 = b5 & 0x1fff;\n    var bh5 = b5 >>> 13;\n    var b6 = b[6] | 0;\n    var bl6 = b6 & 0x1fff;\n    var bh6 = b6 >>> 13;\n    var b7 = b[7] | 0;\n    var bl7 = b7 & 0x1fff;\n    var bh7 = b7 >>> 13;\n    var b8 = b[8] | 0;\n    var bl8 = b8 & 0x1fff;\n    var bh8 = b8 >>> 13;\n    var b9 = b[9] | 0;\n    var bl9 = b9 & 0x1fff;\n    var bh9 = b9 >>> 13;\n\n    out.negative = self.negative ^ num.negative;\n    out.length = 19;\n    /* k = 0 */\n    lo = Math.imul(al0, bl0);\n    mid = Math.imul(al0, bh0);\n    mid = (mid + Math.imul(ah0, bl0)) | 0;\n    hi = Math.imul(ah0, bh0);\n    var w0 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0;\n    w0 &= 0x3ffffff;\n    /* k = 1 */\n    lo = Math.imul(al1, bl0);\n    mid = Math.imul(al1, bh0);\n    mid = (mid + Math.imul(ah1, bl0)) | 0;\n    hi = Math.imul(ah1, bh0);\n    lo = (lo + Math.imul(al0, bl1)) | 0;\n    mid = (mid + Math.imul(al0, bh1)) | 0;\n    mid = (mid + Math.imul(ah0, bl1)) | 0;\n    hi = (hi + Math.imul(ah0, bh1)) | 0;\n    var w1 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0;\n    w1 &= 0x3ffffff;\n    /* k = 2 */\n    lo = Math.imul(al2, bl0);\n    mid = Math.imul(al2, bh0);\n    mid = (mid + Math.imul(ah2, bl0)) | 0;\n    hi = Math.imul(ah2, bh0);\n    lo = (lo + Math.imul(al1, bl1)) | 0;\n    mid = (mid + Math.imul(al1, bh1)) | 0;\n    mid = (mid + Math.imul(ah1, bl1)) | 0;\n    hi = (hi + Math.imul(ah1, bh1)) | 0;\n    lo = (lo + Math.imul(al0, bl2)) | 0;\n    mid = (mid + Math.imul(al0, bh2)) | 0;\n    mid = (mid + Math.imul(ah0, bl2)) | 0;\n    hi = (hi + Math.imul(ah0, bh2)) | 0;\n    var w2 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0;\n    w2 &= 0x3ffffff;\n    /* k = 3 */\n    lo = Math.imul(al3, bl0);\n    mid = Math.imul(al3, bh0);\n    mid = (mid + Math.imul(ah3, bl0)) | 0;\n    hi = Math.imul(ah3, bh0);\n    lo = (lo + Math.imul(al2, bl1)) | 0;\n    mid = (mid + Math.imul(al2, bh1)) | 0;\n    mid = (mid + Math.imul(ah2, bl1)) | 0;\n    hi = (hi + Math.imul(ah2, bh1)) | 0;\n    lo = (lo + Math.imul(al1, bl2)) | 0;\n    mid = (mid + Math.imul(al1, bh2)) | 0;\n    mid = (mid + Math.imul(ah1, bl2)) | 0;\n    hi = (hi + Math.imul(ah1, bh2)) | 0;\n    lo = (lo + Math.imul(al0, bl3)) | 0;\n    mid = (mid + Math.imul(al0, bh3)) | 0;\n    mid = (mid + Math.imul(ah0, bl3)) | 0;\n    hi = (hi + Math.imul(ah0, bh3)) | 0;\n    var w3 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0;\n    w3 &= 0x3ffffff;\n    /* k = 4 */\n    lo = Math.imul(al4, bl0);\n    mid = Math.imul(al4, bh0);\n    mid = (mid + Math.imul(ah4, bl0)) | 0;\n    hi = Math.imul(ah4, bh0);\n    lo = (lo + Math.imul(al3, bl1)) | 0;\n    mid = (mid + Math.imul(al3, bh1)) | 0;\n    mid = (mid + Math.imul(ah3, bl1)) | 0;\n    hi = (hi + Math.imul(ah3, bh1)) | 0;\n    lo = (lo + Math.imul(al2, bl2)) | 0;\n    mid = (mid + Math.imul(al2, bh2)) | 0;\n    mid = (mid + Math.imul(ah2, bl2)) | 0;\n    hi = (hi + Math.imul(ah2, bh2)) | 0;\n    lo = (lo + Math.imul(al1, bl3)) | 0;\n    mid = (mid + Math.imul(al1, bh3)) | 0;\n    mid = (mid + Math.imul(ah1, bl3)) | 0;\n    hi = (hi + Math.imul(ah1, bh3)) | 0;\n    lo = (lo + Math.imul(al0, bl4)) | 0;\n    mid = (mid + Math.imul(al0, bh4)) | 0;\n    mid = (mid + Math.imul(ah0, bl4)) | 0;\n    hi = (hi + Math.imul(ah0, bh4)) | 0;\n    var w4 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0;\n    w4 &= 0x3ffffff;\n    /* k = 5 */\n    lo = Math.imul(al5, bl0);\n    mid = Math.imul(al5, bh0);\n    mid = (mid + Math.imul(ah5, bl0)) | 0;\n    hi = Math.imul(ah5, bh0);\n    lo = (lo + Math.imul(al4, bl1)) | 0;\n    mid = (mid + Math.imul(al4, bh1)) | 0;\n    mid = (mid + Math.imul(ah4, bl1)) | 0;\n    hi = (hi + Math.imul(ah4, bh1)) | 0;\n    lo = (lo + Math.imul(al3, bl2)) | 0;\n    mid = (mid + Math.imul(al3, bh2)) | 0;\n    mid = (mid + Math.imul(ah3, bl2)) | 0;\n    hi = (hi + Math.imul(ah3, bh2)) | 0;\n    lo = (lo + Math.imul(al2, bl3)) | 0;\n    mid = (mid + Math.imul(al2, bh3)) | 0;\n    mid = (mid + Math.imul(ah2, bl3)) | 0;\n    hi = (hi + Math.imul(ah2, bh3)) | 0;\n    lo = (lo + Math.imul(al1, bl4)) | 0;\n    mid = (mid + Math.imul(al1, bh4)) | 0;\n    mid = (mid + Math.imul(ah1, bl4)) | 0;\n    hi = (hi + Math.imul(ah1, bh4)) | 0;\n    lo = (lo + Math.imul(al0, bl5)) | 0;\n    mid = (mid + Math.imul(al0, bh5)) | 0;\n    mid = (mid + Math.imul(ah0, bl5)) | 0;\n    hi = (hi + Math.imul(ah0, bh5)) | 0;\n    var w5 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0;\n    w5 &= 0x3ffffff;\n    /* k = 6 */\n    lo = Math.imul(al6, bl0);\n    mid = Math.imul(al6, bh0);\n    mid = (mid + Math.imul(ah6, bl0)) | 0;\n    hi = Math.imul(ah6, bh0);\n    lo = (lo + Math.imul(al5, bl1)) | 0;\n    mid = (mid + Math.imul(al5, bh1)) | 0;\n    mid = (mid + Math.imul(ah5, bl1)) | 0;\n    hi = (hi + Math.imul(ah5, bh1)) | 0;\n    lo = (lo + Math.imul(al4, bl2)) | 0;\n    mid = (mid + Math.imul(al4, bh2)) | 0;\n    mid = (mid + Math.imul(ah4, bl2)) | 0;\n    hi = (hi + Math.imul(ah4, bh2)) | 0;\n    lo = (lo + Math.imul(al3, bl3)) | 0;\n    mid = (mid + Math.imul(al3, bh3)) | 0;\n    mid = (mid + Math.imul(ah3, bl3)) | 0;\n    hi = (hi + Math.imul(ah3, bh3)) | 0;\n    lo = (lo + Math.imul(al2, bl4)) | 0;\n    mid = (mid + Math.imul(al2, bh4)) | 0;\n    mid = (mid + Math.imul(ah2, bl4)) | 0;\n    hi = (hi + Math.imul(ah2, bh4)) | 0;\n    lo = (lo + Math.imul(al1, bl5)) | 0;\n    mid = (mid + Math.imul(al1, bh5)) | 0;\n    mid = (mid + Math.imul(ah1, bl5)) | 0;\n    hi = (hi + Math.imul(ah1, bh5)) | 0;\n    lo = (lo + Math.imul(al0, bl6)) | 0;\n    mid = (mid + Math.imul(al0, bh6)) | 0;\n    mid = (mid + Math.imul(ah0, bl6)) | 0;\n    hi = (hi + Math.imul(ah0, bh6)) | 0;\n    var w6 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0;\n    w6 &= 0x3ffffff;\n    /* k = 7 */\n    lo = Math.imul(al7, bl0);\n    mid = Math.imul(al7, bh0);\n    mid = (mid + Math.imul(ah7, bl0)) | 0;\n    hi = Math.imul(ah7, bh0);\n    lo = (lo + Math.imul(al6, bl1)) | 0;\n    mid = (mid + Math.imul(al6, bh1)) | 0;\n    mid = (mid + Math.imul(ah6, bl1)) | 0;\n    hi = (hi + Math.imul(ah6, bh1)) | 0;\n    lo = (lo + Math.imul(al5, bl2)) | 0;\n    mid = (mid + Math.imul(al5, bh2)) | 0;\n    mid = (mid + Math.imul(ah5, bl2)) | 0;\n    hi = (hi + Math.imul(ah5, bh2)) | 0;\n    lo = (lo + Math.imul(al4, bl3)) | 0;\n    mid = (mid + Math.imul(al4, bh3)) | 0;\n    mid = (mid + Math.imul(ah4, bl3)) | 0;\n    hi = (hi + Math.imul(ah4, bh3)) | 0;\n    lo = (lo + Math.imul(al3, bl4)) | 0;\n    mid = (mid + Math.imul(al3, bh4)) | 0;\n    mid = (mid + Math.imul(ah3, bl4)) | 0;\n    hi = (hi + Math.imul(ah3, bh4)) | 0;\n    lo = (lo + Math.imul(al2, bl5)) | 0;\n    mid = (mid + Math.imul(al2, bh5)) | 0;\n    mid = (mid + Math.imul(ah2, bl5)) | 0;\n    hi = (hi + Math.imul(ah2, bh5)) | 0;\n    lo = (lo + Math.imul(al1, bl6)) | 0;\n    mid = (mid + Math.imul(al1, bh6)) | 0;\n    mid = (mid + Math.imul(ah1, bl6)) | 0;\n    hi = (hi + Math.imul(ah1, bh6)) | 0;\n    lo = (lo + Math.imul(al0, bl7)) | 0;\n    mid = (mid + Math.imul(al0, bh7)) | 0;\n    mid = (mid + Math.imul(ah0, bl7)) | 0;\n    hi = (hi + Math.imul(ah0, bh7)) | 0;\n    var w7 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0;\n    w7 &= 0x3ffffff;\n    /* k = 8 */\n    lo = Math.imul(al8, bl0);\n    mid = Math.imul(al8, bh0);\n    mid = (mid + Math.imul(ah8, bl0)) | 0;\n    hi = Math.imul(ah8, bh0);\n    lo = (lo + Math.imul(al7, bl1)) | 0;\n    mid = (mid + Math.imul(al7, bh1)) | 0;\n    mid = (mid + Math.imul(ah7, bl1)) | 0;\n    hi = (hi + Math.imul(ah7, bh1)) | 0;\n    lo = (lo + Math.imul(al6, bl2)) | 0;\n    mid = (mid + Math.imul(al6, bh2)) | 0;\n    mid = (mid + Math.imul(ah6, bl2)) | 0;\n    hi = (hi + Math.imul(ah6, bh2)) | 0;\n    lo = (lo + Math.imul(al5, bl3)) | 0;\n    mid = (mid + Math.imul(al5, bh3)) | 0;\n    mid = (mid + Math.imul(ah5, bl3)) | 0;\n    hi = (hi + Math.imul(ah5, bh3)) | 0;\n    lo = (lo + Math.imul(al4, bl4)) | 0;\n    mid = (mid + Math.imul(al4, bh4)) | 0;\n    mid = (mid + Math.imul(ah4, bl4)) | 0;\n    hi = (hi + Math.imul(ah4, bh4)) | 0;\n    lo = (lo + Math.imul(al3, bl5)) | 0;\n    mid = (mid + Math.imul(al3, bh5)) | 0;\n    mid = (mid + Math.imul(ah3, bl5)) | 0;\n    hi = (hi + Math.imul(ah3, bh5)) | 0;\n    lo = (lo + Math.imul(al2, bl6)) | 0;\n    mid = (mid + Math.imul(al2, bh6)) | 0;\n    mid = (mid + Math.imul(ah2, bl6)) | 0;\n    hi = (hi + Math.imul(ah2, bh6)) | 0;\n    lo = (lo + Math.imul(al1, bl7)) | 0;\n    mid = (mid + Math.imul(al1, bh7)) | 0;\n    mid = (mid + Math.imul(ah1, bl7)) | 0;\n    hi = (hi + Math.imul(ah1, bh7)) | 0;\n    lo = (lo + Math.imul(al0, bl8)) | 0;\n    mid = (mid + Math.imul(al0, bh8)) | 0;\n    mid = (mid + Math.imul(ah0, bl8)) | 0;\n    hi = (hi + Math.imul(ah0, bh8)) | 0;\n    var w8 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0;\n    w8 &= 0x3ffffff;\n    /* k = 9 */\n    lo = Math.imul(al9, bl0);\n    mid = Math.imul(al9, bh0);\n    mid = (mid + Math.imul(ah9, bl0)) | 0;\n    hi = Math.imul(ah9, bh0);\n    lo = (lo + Math.imul(al8, bl1)) | 0;\n    mid = (mid + Math.imul(al8, bh1)) | 0;\n    mid = (mid + Math.imul(ah8, bl1)) | 0;\n    hi = (hi + Math.imul(ah8, bh1)) | 0;\n    lo = (lo + Math.imul(al7, bl2)) | 0;\n    mid = (mid + Math.imul(al7, bh2)) | 0;\n    mid = (mid + Math.imul(ah7, bl2)) | 0;\n    hi = (hi + Math.imul(ah7, bh2)) | 0;\n    lo = (lo + Math.imul(al6, bl3)) | 0;\n    mid = (mid + Math.imul(al6, bh3)) | 0;\n    mid = (mid + Math.imul(ah6, bl3)) | 0;\n    hi = (hi + Math.imul(ah6, bh3)) | 0;\n    lo = (lo + Math.imul(al5, bl4)) | 0;\n    mid = (mid + Math.imul(al5, bh4)) | 0;\n    mid = (mid + Math.imul(ah5, bl4)) | 0;\n    hi = (hi + Math.imul(ah5, bh4)) | 0;\n    lo = (lo + Math.imul(al4, bl5)) | 0;\n    mid = (mid + Math.imul(al4, bh5)) | 0;\n    mid = (mid + Math.imul(ah4, bl5)) | 0;\n    hi = (hi + Math.imul(ah4, bh5)) | 0;\n    lo = (lo + Math.imul(al3, bl6)) | 0;\n    mid = (mid + Math.imul(al3, bh6)) | 0;\n    mid = (mid + Math.imul(ah3, bl6)) | 0;\n    hi = (hi + Math.imul(ah3, bh6)) | 0;\n    lo = (lo + Math.imul(al2, bl7)) | 0;\n    mid = (mid + Math.imul(al2, bh7)) | 0;\n    mid = (mid + Math.imul(ah2, bl7)) | 0;\n    hi = (hi + Math.imul(ah2, bh7)) | 0;\n    lo = (lo + Math.imul(al1, bl8)) | 0;\n    mid = (mid + Math.imul(al1, bh8)) | 0;\n    mid = (mid + Math.imul(ah1, bl8)) | 0;\n    hi = (hi + Math.imul(ah1, bh8)) | 0;\n    lo = (lo + Math.imul(al0, bl9)) | 0;\n    mid = (mid + Math.imul(al0, bh9)) | 0;\n    mid = (mid + Math.imul(ah0, bl9)) | 0;\n    hi = (hi + Math.imul(ah0, bh9)) | 0;\n    var w9 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0;\n    w9 &= 0x3ffffff;\n    /* k = 10 */\n    lo = Math.imul(al9, bl1);\n    mid = Math.imul(al9, bh1);\n    mid = (mid + Math.imul(ah9, bl1)) | 0;\n    hi = Math.imul(ah9, bh1);\n    lo = (lo + Math.imul(al8, bl2)) | 0;\n    mid = (mid + Math.imul(al8, bh2)) | 0;\n    mid = (mid + Math.imul(ah8, bl2)) | 0;\n    hi = (hi + Math.imul(ah8, bh2)) | 0;\n    lo = (lo + Math.imul(al7, bl3)) | 0;\n    mid = (mid + Math.imul(al7, bh3)) | 0;\n    mid = (mid + Math.imul(ah7, bl3)) | 0;\n    hi = (hi + Math.imul(ah7, bh3)) | 0;\n    lo = (lo + Math.imul(al6, bl4)) | 0;\n    mid = (mid + Math.imul(al6, bh4)) | 0;\n    mid = (mid + Math.imul(ah6, bl4)) | 0;\n    hi = (hi + Math.imul(ah6, bh4)) | 0;\n    lo = (lo + Math.imul(al5, bl5)) | 0;\n    mid = (mid + Math.imul(al5, bh5)) | 0;\n    mid = (mid + Math.imul(ah5, bl5)) | 0;\n    hi = (hi + Math.imul(ah5, bh5)) | 0;\n    lo = (lo + Math.imul(al4, bl6)) | 0;\n    mid = (mid + Math.imul(al4, bh6)) | 0;\n    mid = (mid + Math.imul(ah4, bl6)) | 0;\n    hi = (hi + Math.imul(ah4, bh6)) | 0;\n    lo = (lo + Math.imul(al3, bl7)) | 0;\n    mid = (mid + Math.imul(al3, bh7)) | 0;\n    mid = (mid + Math.imul(ah3, bl7)) | 0;\n    hi = (hi + Math.imul(ah3, bh7)) | 0;\n    lo = (lo + Math.imul(al2, bl8)) | 0;\n    mid = (mid + Math.imul(al2, bh8)) | 0;\n    mid = (mid + Math.imul(ah2, bl8)) | 0;\n    hi = (hi + Math.imul(ah2, bh8)) | 0;\n    lo = (lo + Math.imul(al1, bl9)) | 0;\n    mid = (mid + Math.imul(al1, bh9)) | 0;\n    mid = (mid + Math.imul(ah1, bl9)) | 0;\n    hi = (hi + Math.imul(ah1, bh9)) | 0;\n    var w10 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0;\n    w10 &= 0x3ffffff;\n    /* k = 11 */\n    lo = Math.imul(al9, bl2);\n    mid = Math.imul(al9, bh2);\n    mid = (mid + Math.imul(ah9, bl2)) | 0;\n    hi = Math.imul(ah9, bh2);\n    lo = (lo + Math.imul(al8, bl3)) | 0;\n    mid = (mid + Math.imul(al8, bh3)) | 0;\n    mid = (mid + Math.imul(ah8, bl3)) | 0;\n    hi = (hi + Math.imul(ah8, bh3)) | 0;\n    lo = (lo + Math.imul(al7, bl4)) | 0;\n    mid = (mid + Math.imul(al7, bh4)) | 0;\n    mid = (mid + Math.imul(ah7, bl4)) | 0;\n    hi = (hi + Math.imul(ah7, bh4)) | 0;\n    lo = (lo + Math.imul(al6, bl5)) | 0;\n    mid = (mid + Math.imul(al6, bh5)) | 0;\n    mid = (mid + Math.imul(ah6, bl5)) | 0;\n    hi = (hi + Math.imul(ah6, bh5)) | 0;\n    lo = (lo + Math.imul(al5, bl6)) | 0;\n    mid = (mid + Math.imul(al5, bh6)) | 0;\n    mid = (mid + Math.imul(ah5, bl6)) | 0;\n    hi = (hi + Math.imul(ah5, bh6)) | 0;\n    lo = (lo + Math.imul(al4, bl7)) | 0;\n    mid = (mid + Math.imul(al4, bh7)) | 0;\n    mid = (mid + Math.imul(ah4, bl7)) | 0;\n    hi = (hi + Math.imul(ah4, bh7)) | 0;\n    lo = (lo + Math.imul(al3, bl8)) | 0;\n    mid = (mid + Math.imul(al3, bh8)) | 0;\n    mid = (mid + Math.imul(ah3, bl8)) | 0;\n    hi = (hi + Math.imul(ah3, bh8)) | 0;\n    lo = (lo + Math.imul(al2, bl9)) | 0;\n    mid = (mid + Math.imul(al2, bh9)) | 0;\n    mid = (mid + Math.imul(ah2, bl9)) | 0;\n    hi = (hi + Math.imul(ah2, bh9)) | 0;\n    var w11 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0;\n    w11 &= 0x3ffffff;\n    /* k = 12 */\n    lo = Math.imul(al9, bl3);\n    mid = Math.imul(al9, bh3);\n    mid = (mid + Math.imul(ah9, bl3)) | 0;\n    hi = Math.imul(ah9, bh3);\n    lo = (lo + Math.imul(al8, bl4)) | 0;\n    mid = (mid + Math.imul(al8, bh4)) | 0;\n    mid = (mid + Math.imul(ah8, bl4)) | 0;\n    hi = (hi + Math.imul(ah8, bh4)) | 0;\n    lo = (lo + Math.imul(al7, bl5)) | 0;\n    mid = (mid + Math.imul(al7, bh5)) | 0;\n    mid = (mid + Math.imul(ah7, bl5)) | 0;\n    hi = (hi + Math.imul(ah7, bh5)) | 0;\n    lo = (lo + Math.imul(al6, bl6)) | 0;\n    mid = (mid + Math.imul(al6, bh6)) | 0;\n    mid = (mid + Math.imul(ah6, bl6)) | 0;\n    hi = (hi + Math.imul(ah6, bh6)) | 0;\n    lo = (lo + Math.imul(al5, bl7)) | 0;\n    mid = (mid + Math.imul(al5, bh7)) | 0;\n    mid = (mid + Math.imul(ah5, bl7)) | 0;\n    hi = (hi + Math.imul(ah5, bh7)) | 0;\n    lo = (lo + Math.imul(al4, bl8)) | 0;\n    mid = (mid + Math.imul(al4, bh8)) | 0;\n    mid = (mid + Math.imul(ah4, bl8)) | 0;\n    hi = (hi + Math.imul(ah4, bh8)) | 0;\n    lo = (lo + Math.imul(al3, bl9)) | 0;\n    mid = (mid + Math.imul(al3, bh9)) | 0;\n    mid = (mid + Math.imul(ah3, bl9)) | 0;\n    hi = (hi + Math.imul(ah3, bh9)) | 0;\n    var w12 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0;\n    w12 &= 0x3ffffff;\n    /* k = 13 */\n    lo = Math.imul(al9, bl4);\n    mid = Math.imul(al9, bh4);\n    mid = (mid + Math.imul(ah9, bl4)) | 0;\n    hi = Math.imul(ah9, bh4);\n    lo = (lo + Math.imul(al8, bl5)) | 0;\n    mid = (mid + Math.imul(al8, bh5)) | 0;\n    mid = (mid + Math.imul(ah8, bl5)) | 0;\n    hi = (hi + Math.imul(ah8, bh5)) | 0;\n    lo = (lo + Math.imul(al7, bl6)) | 0;\n    mid = (mid + Math.imul(al7, bh6)) | 0;\n    mid = (mid + Math.imul(ah7, bl6)) | 0;\n    hi = (hi + Math.imul(ah7, bh6)) | 0;\n    lo = (lo + Math.imul(al6, bl7)) | 0;\n    mid = (mid + Math.imul(al6, bh7)) | 0;\n    mid = (mid + Math.imul(ah6, bl7)) | 0;\n    hi = (hi + Math.imul(ah6, bh7)) | 0;\n    lo = (lo + Math.imul(al5, bl8)) | 0;\n    mid = (mid + Math.imul(al5, bh8)) | 0;\n    mid = (mid + Math.imul(ah5, bl8)) | 0;\n    hi = (hi + Math.imul(ah5, bh8)) | 0;\n    lo = (lo + Math.imul(al4, bl9)) | 0;\n    mid = (mid + Math.imul(al4, bh9)) | 0;\n    mid = (mid + Math.imul(ah4, bl9)) | 0;\n    hi = (hi + Math.imul(ah4, bh9)) | 0;\n    var w13 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0;\n    w13 &= 0x3ffffff;\n    /* k = 14 */\n    lo = Math.imul(al9, bl5);\n    mid = Math.imul(al9, bh5);\n    mid = (mid + Math.imul(ah9, bl5)) | 0;\n    hi = Math.imul(ah9, bh5);\n    lo = (lo + Math.imul(al8, bl6)) | 0;\n    mid = (mid + Math.imul(al8, bh6)) | 0;\n    mid = (mid + Math.imul(ah8, bl6)) | 0;\n    hi = (hi + Math.imul(ah8, bh6)) | 0;\n    lo = (lo + Math.imul(al7, bl7)) | 0;\n    mid = (mid + Math.imul(al7, bh7)) | 0;\n    mid = (mid + Math.imul(ah7, bl7)) | 0;\n    hi = (hi + Math.imul(ah7, bh7)) | 0;\n    lo = (lo + Math.imul(al6, bl8)) | 0;\n    mid = (mid + Math.imul(al6, bh8)) | 0;\n    mid = (mid + Math.imul(ah6, bl8)) | 0;\n    hi = (hi + Math.imul(ah6, bh8)) | 0;\n    lo = (lo + Math.imul(al5, bl9)) | 0;\n    mid = (mid + Math.imul(al5, bh9)) | 0;\n    mid = (mid + Math.imul(ah5, bl9)) | 0;\n    hi = (hi + Math.imul(ah5, bh9)) | 0;\n    var w14 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0;\n    w14 &= 0x3ffffff;\n    /* k = 15 */\n    lo = Math.imul(al9, bl6);\n    mid = Math.imul(al9, bh6);\n    mid = (mid + Math.imul(ah9, bl6)) | 0;\n    hi = Math.imul(ah9, bh6);\n    lo = (lo + Math.imul(al8, bl7)) | 0;\n    mid = (mid + Math.imul(al8, bh7)) | 0;\n    mid = (mid + Math.imul(ah8, bl7)) | 0;\n    hi = (hi + Math.imul(ah8, bh7)) | 0;\n    lo = (lo + Math.imul(al7, bl8)) | 0;\n    mid = (mid + Math.imul(al7, bh8)) | 0;\n    mid = (mid + Math.imul(ah7, bl8)) | 0;\n    hi = (hi + Math.imul(ah7, bh8)) | 0;\n    lo = (lo + Math.imul(al6, bl9)) | 0;\n    mid = (mid + Math.imul(al6, bh9)) | 0;\n    mid = (mid + Math.imul(ah6, bl9)) | 0;\n    hi = (hi + Math.imul(ah6, bh9)) | 0;\n    var w15 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0;\n    w15 &= 0x3ffffff;\n    /* k = 16 */\n    lo = Math.imul(al9, bl7);\n    mid = Math.imul(al9, bh7);\n    mid = (mid + Math.imul(ah9, bl7)) | 0;\n    hi = Math.imul(ah9, bh7);\n    lo = (lo + Math.imul(al8, bl8)) | 0;\n    mid = (mid + Math.imul(al8, bh8)) | 0;\n    mid = (mid + Math.imul(ah8, bl8)) | 0;\n    hi = (hi + Math.imul(ah8, bh8)) | 0;\n    lo = (lo + Math.imul(al7, bl9)) | 0;\n    mid = (mid + Math.imul(al7, bh9)) | 0;\n    mid = (mid + Math.imul(ah7, bl9)) | 0;\n    hi = (hi + Math.imul(ah7, bh9)) | 0;\n    var w16 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0;\n    w16 &= 0x3ffffff;\n    /* k = 17 */\n    lo = Math.imul(al9, bl8);\n    mid = Math.imul(al9, bh8);\n    mid = (mid + Math.imul(ah9, bl8)) | 0;\n    hi = Math.imul(ah9, bh8);\n    lo = (lo + Math.imul(al8, bl9)) | 0;\n    mid = (mid + Math.imul(al8, bh9)) | 0;\n    mid = (mid + Math.imul(ah8, bl9)) | 0;\n    hi = (hi + Math.imul(ah8, bh9)) | 0;\n    var w17 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0;\n    w17 &= 0x3ffffff;\n    /* k = 18 */\n    lo = Math.imul(al9, bl9);\n    mid = Math.imul(al9, bh9);\n    mid = (mid + Math.imul(ah9, bl9)) | 0;\n    hi = Math.imul(ah9, bh9);\n    var w18 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0;\n    w18 &= 0x3ffffff;\n    o[0] = w0;\n    o[1] = w1;\n    o[2] = w2;\n    o[3] = w3;\n    o[4] = w4;\n    o[5] = w5;\n    o[6] = w6;\n    o[7] = w7;\n    o[8] = w8;\n    o[9] = w9;\n    o[10] = w10;\n    o[11] = w11;\n    o[12] = w12;\n    o[13] = w13;\n    o[14] = w14;\n    o[15] = w15;\n    o[16] = w16;\n    o[17] = w17;\n    o[18] = w18;\n    if (c !== 0) {\n      o[19] = c;\n      out.length++;\n    }\n    return out;\n  };\n\n  // Polyfill comb\n  if (!Math.imul) {\n    comb10MulTo = smallMulTo;\n  }\n\n  function bigMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    out.length = self.length + num.length;\n\n    var carry = 0;\n    var hncarry = 0;\n    for (var k = 0; k < out.length - 1; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = hncarry;\n      hncarry = 0;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = k - j;\n        var a = self.words[i] | 0;\n        var b = num.words[j] | 0;\n        var r = a * b;\n\n        var lo = r & 0x3ffffff;\n        ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;\n        lo = (lo + rword) | 0;\n        rword = lo & 0x3ffffff;\n        ncarry = (ncarry + (lo >>> 26)) | 0;\n\n        hncarry += ncarry >>> 26;\n        ncarry &= 0x3ffffff;\n      }\n      out.words[k] = rword;\n      carry = ncarry;\n      ncarry = hncarry;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry;\n    } else {\n      out.length--;\n    }\n\n    return out.strip();\n  }\n\n  function jumboMulTo (self, num, out) {\n    var fftm = new FFTM();\n    return fftm.mulp(self, num, out);\n  }\n\n  BN.prototype.mulTo = function mulTo (num, out) {\n    var res;\n    var len = this.length + num.length;\n    if (this.length === 10 && num.length === 10) {\n      res = comb10MulTo(this, num, out);\n    } else if (len < 63) {\n      res = smallMulTo(this, num, out);\n    } else if (len < 1024) {\n      res = bigMulTo(this, num, out);\n    } else {\n      res = jumboMulTo(this, num, out);\n    }\n\n    return res;\n  };\n\n  // Cooley-Tukey algorithm for FFT\n  // slightly revisited to rely on looping instead of recursion\n\n  function FFTM (x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  FFTM.prototype.makeRBT = function makeRBT (N) {\n    var t = new Array(N);\n    var l = BN.prototype._countBits(N) - 1;\n    for (var i = 0; i < N; i++) {\n      t[i] = this.revBin(i, l, N);\n    }\n\n    return t;\n  };\n\n  // Returns binary-reversed representation of `x`\n  FFTM.prototype.revBin = function revBin (x, l, N) {\n    if (x === 0 || x === N - 1) return x;\n\n    var rb = 0;\n    for (var i = 0; i < l; i++) {\n      rb |= (x & 1) << (l - i - 1);\n      x >>= 1;\n    }\n\n    return rb;\n  };\n\n  // Performs \"tweedling\" phase, therefore 'emulating'\n  // behaviour of the recursive algorithm\n  FFTM.prototype.permute = function permute (rbt, rws, iws, rtws, itws, N) {\n    for (var i = 0; i < N; i++) {\n      rtws[i] = rws[rbt[i]];\n      itws[i] = iws[rbt[i]];\n    }\n  };\n\n  FFTM.prototype.transform = function transform (rws, iws, rtws, itws, N, rbt) {\n    this.permute(rbt, rws, iws, rtws, itws, N);\n\n    for (var s = 1; s < N; s <<= 1) {\n      var l = s << 1;\n\n      var rtwdf = Math.cos(2 * Math.PI / l);\n      var itwdf = Math.sin(2 * Math.PI / l);\n\n      for (var p = 0; p < N; p += l) {\n        var rtwdf_ = rtwdf;\n        var itwdf_ = itwdf;\n\n        for (var j = 0; j < s; j++) {\n          var re = rtws[p + j];\n          var ie = itws[p + j];\n\n          var ro = rtws[p + j + s];\n          var io = itws[p + j + s];\n\n          var rx = rtwdf_ * ro - itwdf_ * io;\n\n          io = rtwdf_ * io + itwdf_ * ro;\n          ro = rx;\n\n          rtws[p + j] = re + ro;\n          itws[p + j] = ie + io;\n\n          rtws[p + j + s] = re - ro;\n          itws[p + j + s] = ie - io;\n\n          /* jshint maxdepth : false */\n          if (j !== l) {\n            rx = rtwdf * rtwdf_ - itwdf * itwdf_;\n\n            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;\n            rtwdf_ = rx;\n          }\n        }\n      }\n    }\n  };\n\n  FFTM.prototype.guessLen13b = function guessLen13b (n, m) {\n    var N = Math.max(m, n) | 1;\n    var odd = N & 1;\n    var i = 0;\n    for (N = N / 2 | 0; N; N = N >>> 1) {\n      i++;\n    }\n\n    return 1 << i + 1 + odd;\n  };\n\n  FFTM.prototype.conjugate = function conjugate (rws, iws, N) {\n    if (N <= 1) return;\n\n    for (var i = 0; i < N / 2; i++) {\n      var t = rws[i];\n\n      rws[i] = rws[N - i - 1];\n      rws[N - i - 1] = t;\n\n      t = iws[i];\n\n      iws[i] = -iws[N - i - 1];\n      iws[N - i - 1] = -t;\n    }\n  };\n\n  FFTM.prototype.normalize13b = function normalize13b (ws, N) {\n    var carry = 0;\n    for (var i = 0; i < N / 2; i++) {\n      var w = Math.round(ws[2 * i + 1] / N) * 0x2000 +\n        Math.round(ws[2 * i] / N) +\n        carry;\n\n      ws[i] = w & 0x3ffffff;\n\n      if (w < 0x4000000) {\n        carry = 0;\n      } else {\n        carry = w / 0x4000000 | 0;\n      }\n    }\n\n    return ws;\n  };\n\n  FFTM.prototype.convert13b = function convert13b (ws, len, rws, N) {\n    var carry = 0;\n    for (var i = 0; i < len; i++) {\n      carry = carry + (ws[i] | 0);\n\n      rws[2 * i] = carry & 0x1fff; carry = carry >>> 13;\n      rws[2 * i + 1] = carry & 0x1fff; carry = carry >>> 13;\n    }\n\n    // Pad with zeroes\n    for (i = 2 * len; i < N; ++i) {\n      rws[i] = 0;\n    }\n\n    assert(carry === 0);\n    assert((carry & ~0x1fff) === 0);\n  };\n\n  FFTM.prototype.stub = function stub (N) {\n    var ph = new Array(N);\n    for (var i = 0; i < N; i++) {\n      ph[i] = 0;\n    }\n\n    return ph;\n  };\n\n  FFTM.prototype.mulp = function mulp (x, y, out) {\n    var N = 2 * this.guessLen13b(x.length, y.length);\n\n    var rbt = this.makeRBT(N);\n\n    var _ = this.stub(N);\n\n    var rws = new Array(N);\n    var rwst = new Array(N);\n    var iwst = new Array(N);\n\n    var nrws = new Array(N);\n    var nrwst = new Array(N);\n    var niwst = new Array(N);\n\n    var rmws = out.words;\n    rmws.length = N;\n\n    this.convert13b(x.words, x.length, rws, N);\n    this.convert13b(y.words, y.length, nrws, N);\n\n    this.transform(rws, _, rwst, iwst, N, rbt);\n    this.transform(nrws, _, nrwst, niwst, N, rbt);\n\n    for (var i = 0; i < N; i++) {\n      var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];\n      iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];\n      rwst[i] = rx;\n    }\n\n    this.conjugate(rwst, iwst, N);\n    this.transform(rwst, iwst, rmws, _, N, rbt);\n    this.conjugate(rmws, _, N);\n    this.normalize13b(rmws, N);\n\n    out.negative = x.negative ^ y.negative;\n    out.length = x.length + y.length;\n    return out.strip();\n  };\n\n  // Multiply `this` by `num`\n  BN.prototype.mul = function mul (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return this.mulTo(num, out);\n  };\n\n  // Multiply employing FFT\n  BN.prototype.mulf = function mulf (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return jumboMulTo(this, num, out);\n  };\n\n  // In-place Multiplication\n  BN.prototype.imul = function imul (num) {\n    return this.clone().mulTo(num, this);\n  };\n\n  BN.prototype.imuln = function imuln (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n\n    // Carry\n    var carry = 0;\n    for (var i = 0; i < this.length; i++) {\n      var w = (this.words[i] | 0) * num;\n      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);\n      carry >>= 26;\n      carry += (w / 0x4000000) | 0;\n      // NOTE: lo is 27bit maximum\n      carry += lo >>> 26;\n      this.words[i] = lo & 0x3ffffff;\n    }\n\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n\n    return this;\n  };\n\n  BN.prototype.muln = function muln (num) {\n    return this.clone().imuln(num);\n  };\n\n  // `this` * `this`\n  BN.prototype.sqr = function sqr () {\n    return this.mul(this);\n  };\n\n  // `this` * `this` in-place\n  BN.prototype.isqr = function isqr () {\n    return this.imul(this.clone());\n  };\n\n  // Math.pow(`this`, `num`)\n  BN.prototype.pow = function pow (num) {\n    var w = toBitArray(num);\n    if (w.length === 0) return new BN(1);\n\n    // Skip leading zeroes\n    var res = this;\n    for (var i = 0; i < w.length; i++, res = res.sqr()) {\n      if (w[i] !== 0) break;\n    }\n\n    if (++i < w.length) {\n      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {\n        if (w[i] === 0) continue;\n\n        res = res.mul(q);\n      }\n    }\n\n    return res;\n  };\n\n  // Shift-left in-place\n  BN.prototype.iushln = function iushln (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n    var carryMask = (0x3ffffff >>> (26 - r)) << (26 - r);\n    var i;\n\n    if (r !== 0) {\n      var carry = 0;\n\n      for (i = 0; i < this.length; i++) {\n        var newCarry = this.words[i] & carryMask;\n        var c = ((this.words[i] | 0) - newCarry) << r;\n        this.words[i] = c | carry;\n        carry = newCarry >>> (26 - r);\n      }\n\n      if (carry) {\n        this.words[i] = carry;\n        this.length++;\n      }\n    }\n\n    if (s !== 0) {\n      for (i = this.length - 1; i >= 0; i--) {\n        this.words[i + s] = this.words[i];\n      }\n\n      for (i = 0; i < s; i++) {\n        this.words[i] = 0;\n      }\n\n      this.length += s;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ishln = function ishln (bits) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushln(bits);\n  };\n\n  // Shift-right in-place\n  // NOTE: `hint` is a lowest bit before trailing zeroes\n  // NOTE: if `extended` is present - it will be filled with destroyed bits\n  BN.prototype.iushrn = function iushrn (bits, hint, extended) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var h;\n    if (hint) {\n      h = (hint - (hint % 26)) / 26;\n    } else {\n      h = 0;\n    }\n\n    var r = bits % 26;\n    var s = Math.min((bits - r) / 26, this.length);\n    var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n    var maskedWords = extended;\n\n    h -= s;\n    h = Math.max(0, h);\n\n    // Extended mode, copy masked part\n    if (maskedWords) {\n      for (var i = 0; i < s; i++) {\n        maskedWords.words[i] = this.words[i];\n      }\n      maskedWords.length = s;\n    }\n\n    if (s === 0) {\n      // No-op, we should not move anything at all\n    } else if (this.length > s) {\n      this.length -= s;\n      for (i = 0; i < this.length; i++) {\n        this.words[i] = this.words[i + s];\n      }\n    } else {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    var carry = 0;\n    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {\n      var word = this.words[i] | 0;\n      this.words[i] = (carry << (26 - r)) | (word >>> r);\n      carry = word & mask;\n    }\n\n    // Push carried bits as a mask\n    if (maskedWords && carry !== 0) {\n      maskedWords.words[maskedWords.length++] = carry;\n    }\n\n    if (this.length === 0) {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ishrn = function ishrn (bits, hint, extended) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushrn(bits, hint, extended);\n  };\n\n  // Shift-left\n  BN.prototype.shln = function shln (bits) {\n    return this.clone().ishln(bits);\n  };\n\n  BN.prototype.ushln = function ushln (bits) {\n    return this.clone().iushln(bits);\n  };\n\n  // Shift-right\n  BN.prototype.shrn = function shrn (bits) {\n    return this.clone().ishrn(bits);\n  };\n\n  BN.prototype.ushrn = function ushrn (bits) {\n    return this.clone().iushrn(bits);\n  };\n\n  // Test if n bit is set\n  BN.prototype.testn = function testn (bit) {\n    assert(typeof bit === 'number' && bit >= 0);\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) return false;\n\n    // Check bit and return\n    var w = this.words[s];\n\n    return !!(w & q);\n  };\n\n  // Return only lowers bits of number (in-place)\n  BN.prototype.imaskn = function imaskn (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n\n    assert(this.negative === 0, 'imaskn works only with positive numbers');\n\n    if (this.length <= s) {\n      return this;\n    }\n\n    if (r !== 0) {\n      s++;\n    }\n    this.length = Math.min(s, this.length);\n\n    if (r !== 0) {\n      var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n      this.words[this.length - 1] &= mask;\n    }\n\n    return this.strip();\n  };\n\n  // Return only lowers bits of number\n  BN.prototype.maskn = function maskn (bits) {\n    return this.clone().imaskn(bits);\n  };\n\n  // Add plain number `num` to `this`\n  BN.prototype.iaddn = function iaddn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.isubn(-num);\n\n    // Possible sign change\n    if (this.negative !== 0) {\n      if (this.length === 1 && (this.words[0] | 0) < num) {\n        this.words[0] = num - (this.words[0] | 0);\n        this.negative = 0;\n        return this;\n      }\n\n      this.negative = 0;\n      this.isubn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    // Add without checks\n    return this._iaddn(num);\n  };\n\n  BN.prototype._iaddn = function _iaddn (num) {\n    this.words[0] += num;\n\n    // Carry\n    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {\n      this.words[i] -= 0x4000000;\n      if (i === this.length - 1) {\n        this.words[i + 1] = 1;\n      } else {\n        this.words[i + 1]++;\n      }\n    }\n    this.length = Math.max(this.length, i + 1);\n\n    return this;\n  };\n\n  // Subtract plain number `num` from `this`\n  BN.prototype.isubn = function isubn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.iaddn(-num);\n\n    if (this.negative !== 0) {\n      this.negative = 0;\n      this.iaddn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    this.words[0] -= num;\n\n    if (this.length === 1 && this.words[0] < 0) {\n      this.words[0] = -this.words[0];\n      this.negative = 1;\n    } else {\n      // Carry\n      for (var i = 0; i < this.length && this.words[i] < 0; i++) {\n        this.words[i] += 0x4000000;\n        this.words[i + 1] -= 1;\n      }\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.addn = function addn (num) {\n    return this.clone().iaddn(num);\n  };\n\n  BN.prototype.subn = function subn (num) {\n    return this.clone().isubn(num);\n  };\n\n  BN.prototype.iabs = function iabs () {\n    this.negative = 0;\n\n    return this;\n  };\n\n  BN.prototype.abs = function abs () {\n    return this.clone().iabs();\n  };\n\n  BN.prototype._ishlnsubmul = function _ishlnsubmul (num, mul, shift) {\n    var len = num.length + shift;\n    var i;\n\n    this._expand(len);\n\n    var w;\n    var carry = 0;\n    for (i = 0; i < num.length; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      var right = (num.words[i] | 0) * mul;\n      w -= right & 0x3ffffff;\n      carry = (w >> 26) - ((right / 0x4000000) | 0);\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n    for (; i < this.length - shift; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      carry = w >> 26;\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n\n    if (carry === 0) return this.strip();\n\n    // Subtraction overflow\n    assert(carry === -1);\n    carry = 0;\n    for (i = 0; i < this.length; i++) {\n      w = -(this.words[i] | 0) + carry;\n      carry = w >> 26;\n      this.words[i] = w & 0x3ffffff;\n    }\n    this.negative = 1;\n\n    return this.strip();\n  };\n\n  BN.prototype._wordDiv = function _wordDiv (num, mode) {\n    var shift = this.length - num.length;\n\n    var a = this.clone();\n    var b = num;\n\n    // Normalize\n    var bhi = b.words[b.length - 1] | 0;\n    var bhiBits = this._countBits(bhi);\n    shift = 26 - bhiBits;\n    if (shift !== 0) {\n      b = b.ushln(shift);\n      a.iushln(shift);\n      bhi = b.words[b.length - 1] | 0;\n    }\n\n    // Initialize quotient\n    var m = a.length - b.length;\n    var q;\n\n    if (mode !== 'mod') {\n      q = new BN(null);\n      q.length = m + 1;\n      q.words = new Array(q.length);\n      for (var i = 0; i < q.length; i++) {\n        q.words[i] = 0;\n      }\n    }\n\n    var diff = a.clone()._ishlnsubmul(b, 1, m);\n    if (diff.negative === 0) {\n      a = diff;\n      if (q) {\n        q.words[m] = 1;\n      }\n    }\n\n    for (var j = m - 1; j >= 0; j--) {\n      var qj = (a.words[b.length + j] | 0) * 0x4000000 +\n        (a.words[b.length + j - 1] | 0);\n\n      // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max\n      // (0x7ffffff)\n      qj = Math.min((qj / bhi) | 0, 0x3ffffff);\n\n      a._ishlnsubmul(b, qj, j);\n      while (a.negative !== 0) {\n        qj--;\n        a.negative = 0;\n        a._ishlnsubmul(b, 1, j);\n        if (!a.isZero()) {\n          a.negative ^= 1;\n        }\n      }\n      if (q) {\n        q.words[j] = qj;\n      }\n    }\n    if (q) {\n      q.strip();\n    }\n    a.strip();\n\n    // Denormalize\n    if (mode !== 'div' && shift !== 0) {\n      a.iushrn(shift);\n    }\n\n    return {\n      div: q || null,\n      mod: a\n    };\n  };\n\n  // NOTE: 1) `mode` can be set to `mod` to request mod only,\n  //       to `div` to request div only, or be absent to\n  //       request both div & mod\n  //       2) `positive` is true if unsigned mod is requested\n  BN.prototype.divmod = function divmod (num, mode, positive) {\n    assert(!num.isZero());\n\n    if (this.isZero()) {\n      return {\n        div: new BN(0),\n        mod: new BN(0)\n      };\n    }\n\n    var div, mod, res;\n    if (this.negative !== 0 && num.negative === 0) {\n      res = this.neg().divmod(num, mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.iadd(num);\n        }\n      }\n\n      return {\n        div: div,\n        mod: mod\n      };\n    }\n\n    if (this.negative === 0 && num.negative !== 0) {\n      res = this.divmod(num.neg(), mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      return {\n        div: div,\n        mod: res.mod\n      };\n    }\n\n    if ((this.negative & num.negative) !== 0) {\n      res = this.neg().divmod(num.neg(), mode);\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.isub(num);\n        }\n      }\n\n      return {\n        div: res.div,\n        mod: mod\n      };\n    }\n\n    // Both numbers are positive at this point\n\n    // Strip both numbers to approximate shift value\n    if (num.length > this.length || this.cmp(num) < 0) {\n      return {\n        div: new BN(0),\n        mod: this\n      };\n    }\n\n    // Very short reduction\n    if (num.length === 1) {\n      if (mode === 'div') {\n        return {\n          div: this.divn(num.words[0]),\n          mod: null\n        };\n      }\n\n      if (mode === 'mod') {\n        return {\n          div: null,\n          mod: new BN(this.modn(num.words[0]))\n        };\n      }\n\n      return {\n        div: this.divn(num.words[0]),\n        mod: new BN(this.modn(num.words[0]))\n      };\n    }\n\n    return this._wordDiv(num, mode);\n  };\n\n  // Find `this` / `num`\n  BN.prototype.div = function div (num) {\n    return this.divmod(num, 'div', false).div;\n  };\n\n  // Find `this` % `num`\n  BN.prototype.mod = function mod (num) {\n    return this.divmod(num, 'mod', false).mod;\n  };\n\n  BN.prototype.umod = function umod (num) {\n    return this.divmod(num, 'mod', true).mod;\n  };\n\n  // Find Round(`this` / `num`)\n  BN.prototype.divRound = function divRound (num) {\n    var dm = this.divmod(num);\n\n    // Fast case - exact division\n    if (dm.mod.isZero()) return dm.div;\n\n    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;\n\n    var half = num.ushrn(1);\n    var r2 = num.andln(1);\n    var cmp = mod.cmp(half);\n\n    // Round down\n    if (cmp < 0 || r2 === 1 && cmp === 0) return dm.div;\n\n    // Round up\n    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);\n  };\n\n  BN.prototype.modn = function modn (num) {\n    assert(num <= 0x3ffffff);\n    var p = (1 << 26) % num;\n\n    var acc = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      acc = (p * acc + (this.words[i] | 0)) % num;\n    }\n\n    return acc;\n  };\n\n  // In-place division by number\n  BN.prototype.idivn = function idivn (num) {\n    assert(num <= 0x3ffffff);\n\n    var carry = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var w = (this.words[i] | 0) + carry * 0x4000000;\n      this.words[i] = (w / num) | 0;\n      carry = w % num;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.divn = function divn (num) {\n    return this.clone().idivn(num);\n  };\n\n  BN.prototype.egcd = function egcd (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var x = this;\n    var y = p.clone();\n\n    if (x.negative !== 0) {\n      x = x.umod(p);\n    } else {\n      x = x.clone();\n    }\n\n    // A * x + B * y = x\n    var A = new BN(1);\n    var B = new BN(0);\n\n    // C * x + D * y = y\n    var C = new BN(0);\n    var D = new BN(1);\n\n    var g = 0;\n\n    while (x.isEven() && y.isEven()) {\n      x.iushrn(1);\n      y.iushrn(1);\n      ++g;\n    }\n\n    var yp = y.clone();\n    var xp = x.clone();\n\n    while (!x.isZero()) {\n      for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        x.iushrn(i);\n        while (i-- > 0) {\n          if (A.isOdd() || B.isOdd()) {\n            A.iadd(yp);\n            B.isub(xp);\n          }\n\n          A.iushrn(1);\n          B.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        y.iushrn(j);\n        while (j-- > 0) {\n          if (C.isOdd() || D.isOdd()) {\n            C.iadd(yp);\n            D.isub(xp);\n          }\n\n          C.iushrn(1);\n          D.iushrn(1);\n        }\n      }\n\n      if (x.cmp(y) >= 0) {\n        x.isub(y);\n        A.isub(C);\n        B.isub(D);\n      } else {\n        y.isub(x);\n        C.isub(A);\n        D.isub(B);\n      }\n    }\n\n    return {\n      a: C,\n      b: D,\n      gcd: y.iushln(g)\n    };\n  };\n\n  // This is reduced incarnation of the binary EEA\n  // above, designated to invert members of the\n  // _prime_ fields F(p) at a maximal speed\n  BN.prototype._invmp = function _invmp (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var a = this;\n    var b = p.clone();\n\n    if (a.negative !== 0) {\n      a = a.umod(p);\n    } else {\n      a = a.clone();\n    }\n\n    var x1 = new BN(1);\n    var x2 = new BN(0);\n\n    var delta = b.clone();\n\n    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {\n      for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        a.iushrn(i);\n        while (i-- > 0) {\n          if (x1.isOdd()) {\n            x1.iadd(delta);\n          }\n\n          x1.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        b.iushrn(j);\n        while (j-- > 0) {\n          if (x2.isOdd()) {\n            x2.iadd(delta);\n          }\n\n          x2.iushrn(1);\n        }\n      }\n\n      if (a.cmp(b) >= 0) {\n        a.isub(b);\n        x1.isub(x2);\n      } else {\n        b.isub(a);\n        x2.isub(x1);\n      }\n    }\n\n    var res;\n    if (a.cmpn(1) === 0) {\n      res = x1;\n    } else {\n      res = x2;\n    }\n\n    if (res.cmpn(0) < 0) {\n      res.iadd(p);\n    }\n\n    return res;\n  };\n\n  BN.prototype.gcd = function gcd (num) {\n    if (this.isZero()) return num.abs();\n    if (num.isZero()) return this.abs();\n\n    var a = this.clone();\n    var b = num.clone();\n    a.negative = 0;\n    b.negative = 0;\n\n    // Remove common factor of two\n    for (var shift = 0; a.isEven() && b.isEven(); shift++) {\n      a.iushrn(1);\n      b.iushrn(1);\n    }\n\n    do {\n      while (a.isEven()) {\n        a.iushrn(1);\n      }\n      while (b.isEven()) {\n        b.iushrn(1);\n      }\n\n      var r = a.cmp(b);\n      if (r < 0) {\n        // Swap `a` and `b` to make `a` always bigger than `b`\n        var t = a;\n        a = b;\n        b = t;\n      } else if (r === 0 || b.cmpn(1) === 0) {\n        break;\n      }\n\n      a.isub(b);\n    } while (true);\n\n    return b.iushln(shift);\n  };\n\n  // Invert number in the field F(num)\n  BN.prototype.invm = function invm (num) {\n    return this.egcd(num).a.umod(num);\n  };\n\n  BN.prototype.isEven = function isEven () {\n    return (this.words[0] & 1) === 0;\n  };\n\n  BN.prototype.isOdd = function isOdd () {\n    return (this.words[0] & 1) === 1;\n  };\n\n  // And first word and num\n  BN.prototype.andln = function andln (num) {\n    return this.words[0] & num;\n  };\n\n  // Increment at the bit position in-line\n  BN.prototype.bincn = function bincn (bit) {\n    assert(typeof bit === 'number');\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) {\n      this._expand(s + 1);\n      this.words[s] |= q;\n      return this;\n    }\n\n    // Add bit and propagate, if needed\n    var carry = q;\n    for (var i = s; carry !== 0 && i < this.length; i++) {\n      var w = this.words[i] | 0;\n      w += carry;\n      carry = w >>> 26;\n      w &= 0x3ffffff;\n      this.words[i] = w;\n    }\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n    return this;\n  };\n\n  BN.prototype.isZero = function isZero () {\n    return this.length === 1 && this.words[0] === 0;\n  };\n\n  BN.prototype.cmpn = function cmpn (num) {\n    var negative = num < 0;\n\n    if (this.negative !== 0 && !negative) return -1;\n    if (this.negative === 0 && negative) return 1;\n\n    this.strip();\n\n    var res;\n    if (this.length > 1) {\n      res = 1;\n    } else {\n      if (negative) {\n        num = -num;\n      }\n\n      assert(num <= 0x3ffffff, 'Number is too big');\n\n      var w = this.words[0] | 0;\n      res = w === num ? 0 : w < num ? -1 : 1;\n    }\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Compare two numbers and return:\n  // 1 - if `this` > `num`\n  // 0 - if `this` == `num`\n  // -1 - if `this` < `num`\n  BN.prototype.cmp = function cmp (num) {\n    if (this.negative !== 0 && num.negative === 0) return -1;\n    if (this.negative === 0 && num.negative !== 0) return 1;\n\n    var res = this.ucmp(num);\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Unsigned comparison\n  BN.prototype.ucmp = function ucmp (num) {\n    // At this point both numbers have the same sign\n    if (this.length > num.length) return 1;\n    if (this.length < num.length) return -1;\n\n    var res = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var a = this.words[i] | 0;\n      var b = num.words[i] | 0;\n\n      if (a === b) continue;\n      if (a < b) {\n        res = -1;\n      } else if (a > b) {\n        res = 1;\n      }\n      break;\n    }\n    return res;\n  };\n\n  BN.prototype.gtn = function gtn (num) {\n    return this.cmpn(num) === 1;\n  };\n\n  BN.prototype.gt = function gt (num) {\n    return this.cmp(num) === 1;\n  };\n\n  BN.prototype.gten = function gten (num) {\n    return this.cmpn(num) >= 0;\n  };\n\n  BN.prototype.gte = function gte (num) {\n    return this.cmp(num) >= 0;\n  };\n\n  BN.prototype.ltn = function ltn (num) {\n    return this.cmpn(num) === -1;\n  };\n\n  BN.prototype.lt = function lt (num) {\n    return this.cmp(num) === -1;\n  };\n\n  BN.prototype.lten = function lten (num) {\n    return this.cmpn(num) <= 0;\n  };\n\n  BN.prototype.lte = function lte (num) {\n    return this.cmp(num) <= 0;\n  };\n\n  BN.prototype.eqn = function eqn (num) {\n    return this.cmpn(num) === 0;\n  };\n\n  BN.prototype.eq = function eq (num) {\n    return this.cmp(num) === 0;\n  };\n\n  //\n  // A reduce context, could be using montgomery or something better, depending\n  // on the `m` itself.\n  //\n  BN.red = function red (num) {\n    return new Red(num);\n  };\n\n  BN.prototype.toRed = function toRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    assert(this.negative === 0, 'red works only with positives');\n    return ctx.convertTo(this)._forceRed(ctx);\n  };\n\n  BN.prototype.fromRed = function fromRed () {\n    assert(this.red, 'fromRed works only with numbers in reduction context');\n    return this.red.convertFrom(this);\n  };\n\n  BN.prototype._forceRed = function _forceRed (ctx) {\n    this.red = ctx;\n    return this;\n  };\n\n  BN.prototype.forceRed = function forceRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    return this._forceRed(ctx);\n  };\n\n  BN.prototype.redAdd = function redAdd (num) {\n    assert(this.red, 'redAdd works only with red numbers');\n    return this.red.add(this, num);\n  };\n\n  BN.prototype.redIAdd = function redIAdd (num) {\n    assert(this.red, 'redIAdd works only with red numbers');\n    return this.red.iadd(this, num);\n  };\n\n  BN.prototype.redSub = function redSub (num) {\n    assert(this.red, 'redSub works only with red numbers');\n    return this.red.sub(this, num);\n  };\n\n  BN.prototype.redISub = function redISub (num) {\n    assert(this.red, 'redISub works only with red numbers');\n    return this.red.isub(this, num);\n  };\n\n  BN.prototype.redShl = function redShl (num) {\n    assert(this.red, 'redShl works only with red numbers');\n    return this.red.shl(this, num);\n  };\n\n  BN.prototype.redMul = function redMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.mul(this, num);\n  };\n\n  BN.prototype.redIMul = function redIMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.imul(this, num);\n  };\n\n  BN.prototype.redSqr = function redSqr () {\n    assert(this.red, 'redSqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqr(this);\n  };\n\n  BN.prototype.redISqr = function redISqr () {\n    assert(this.red, 'redISqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.isqr(this);\n  };\n\n  // Square root over p\n  BN.prototype.redSqrt = function redSqrt () {\n    assert(this.red, 'redSqrt works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqrt(this);\n  };\n\n  BN.prototype.redInvm = function redInvm () {\n    assert(this.red, 'redInvm works only with red numbers');\n    this.red._verify1(this);\n    return this.red.invm(this);\n  };\n\n  // Return negative clone of `this` % `red modulo`\n  BN.prototype.redNeg = function redNeg () {\n    assert(this.red, 'redNeg works only with red numbers');\n    this.red._verify1(this);\n    return this.red.neg(this);\n  };\n\n  BN.prototype.redPow = function redPow (num) {\n    assert(this.red && !num.red, 'redPow(normalNum)');\n    this.red._verify1(this);\n    return this.red.pow(this, num);\n  };\n\n  // Prime numbers with efficient reduction\n  var primes = {\n    k256: null,\n    p224: null,\n    p192: null,\n    p25519: null\n  };\n\n  // Pseudo-Mersenne prime\n  function MPrime (name, p) {\n    // P = 2 ^ N - K\n    this.name = name;\n    this.p = new BN(p, 16);\n    this.n = this.p.bitLength();\n    this.k = new BN(1).iushln(this.n).isub(this.p);\n\n    this.tmp = this._tmp();\n  }\n\n  MPrime.prototype._tmp = function _tmp () {\n    var tmp = new BN(null);\n    tmp.words = new Array(Math.ceil(this.n / 13));\n    return tmp;\n  };\n\n  MPrime.prototype.ireduce = function ireduce (num) {\n    // Assumes that `num` is less than `P^2`\n    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)\n    var r = num;\n    var rlen;\n\n    do {\n      this.split(r, this.tmp);\n      r = this.imulK(r);\n      r = r.iadd(this.tmp);\n      rlen = r.bitLength();\n    } while (rlen > this.n);\n\n    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);\n    if (cmp === 0) {\n      r.words[0] = 0;\n      r.length = 1;\n    } else if (cmp > 0) {\n      r.isub(this.p);\n    } else {\n      r.strip();\n    }\n\n    return r;\n  };\n\n  MPrime.prototype.split = function split (input, out) {\n    input.iushrn(this.n, 0, out);\n  };\n\n  MPrime.prototype.imulK = function imulK (num) {\n    return num.imul(this.k);\n  };\n\n  function K256 () {\n    MPrime.call(\n      this,\n      'k256',\n      'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');\n  }\n  inherits(K256, MPrime);\n\n  K256.prototype.split = function split (input, output) {\n    // 256 = 9 * 26 + 22\n    var mask = 0x3fffff;\n\n    var outLen = Math.min(input.length, 9);\n    for (var i = 0; i < outLen; i++) {\n      output.words[i] = input.words[i];\n    }\n    output.length = outLen;\n\n    if (input.length <= 9) {\n      input.words[0] = 0;\n      input.length = 1;\n      return;\n    }\n\n    // Shift by 9 limbs\n    var prev = input.words[9];\n    output.words[output.length++] = prev & mask;\n\n    for (i = 10; i < input.length; i++) {\n      var next = input.words[i] | 0;\n      input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);\n      prev = next;\n    }\n    prev >>>= 22;\n    input.words[i - 10] = prev;\n    if (prev === 0 && input.length > 10) {\n      input.length -= 10;\n    } else {\n      input.length -= 9;\n    }\n  };\n\n  K256.prototype.imulK = function imulK (num) {\n    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]\n    num.words[num.length] = 0;\n    num.words[num.length + 1] = 0;\n    num.length += 2;\n\n    // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390\n    var lo = 0;\n    for (var i = 0; i < num.length; i++) {\n      var w = num.words[i] | 0;\n      lo += w * 0x3d1;\n      num.words[i] = lo & 0x3ffffff;\n      lo = w * 0x40 + ((lo / 0x4000000) | 0);\n    }\n\n    // Fast length reduction\n    if (num.words[num.length - 1] === 0) {\n      num.length--;\n      if (num.words[num.length - 1] === 0) {\n        num.length--;\n      }\n    }\n    return num;\n  };\n\n  function P224 () {\n    MPrime.call(\n      this,\n      'p224',\n      'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');\n  }\n  inherits(P224, MPrime);\n\n  function P192 () {\n    MPrime.call(\n      this,\n      'p192',\n      'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');\n  }\n  inherits(P192, MPrime);\n\n  function P25519 () {\n    // 2 ^ 255 - 19\n    MPrime.call(\n      this,\n      '25519',\n      '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');\n  }\n  inherits(P25519, MPrime);\n\n  P25519.prototype.imulK = function imulK (num) {\n    // K = 0x13\n    var carry = 0;\n    for (var i = 0; i < num.length; i++) {\n      var hi = (num.words[i] | 0) * 0x13 + carry;\n      var lo = hi & 0x3ffffff;\n      hi >>>= 26;\n\n      num.words[i] = lo;\n      carry = hi;\n    }\n    if (carry !== 0) {\n      num.words[num.length++] = carry;\n    }\n    return num;\n  };\n\n  // Exported mostly for testing purposes, use plain name instead\n  BN._prime = function prime (name) {\n    // Cached version of prime\n    if (primes[name]) return primes[name];\n\n    var prime;\n    if (name === 'k256') {\n      prime = new K256();\n    } else if (name === 'p224') {\n      prime = new P224();\n    } else if (name === 'p192') {\n      prime = new P192();\n    } else if (name === 'p25519') {\n      prime = new P25519();\n    } else {\n      throw new Error('Unknown prime ' + name);\n    }\n    primes[name] = prime;\n\n    return prime;\n  };\n\n  //\n  // Base reduction engine\n  //\n  function Red (m) {\n    if (typeof m === 'string') {\n      var prime = BN._prime(m);\n      this.m = prime.p;\n      this.prime = prime;\n    } else {\n      assert(m.gtn(1), 'modulus must be greater than 1');\n      this.m = m;\n      this.prime = null;\n    }\n  }\n\n  Red.prototype._verify1 = function _verify1 (a) {\n    assert(a.negative === 0, 'red works only with positives');\n    assert(a.red, 'red works only with red numbers');\n  };\n\n  Red.prototype._verify2 = function _verify2 (a, b) {\n    assert((a.negative | b.negative) === 0, 'red works only with positives');\n    assert(a.red && a.red === b.red,\n      'red works only with red numbers');\n  };\n\n  Red.prototype.imod = function imod (a) {\n    if (this.prime) return this.prime.ireduce(a)._forceRed(this);\n    return a.umod(this.m)._forceRed(this);\n  };\n\n  Red.prototype.neg = function neg (a) {\n    if (a.isZero()) {\n      return a.clone();\n    }\n\n    return this.m.sub(a)._forceRed(this);\n  };\n\n  Red.prototype.add = function add (a, b) {\n    this._verify2(a, b);\n\n    var res = a.add(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.iadd = function iadd (a, b) {\n    this._verify2(a, b);\n\n    var res = a.iadd(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.sub = function sub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.sub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.isub = function isub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.isub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.shl = function shl (a, num) {\n    this._verify1(a);\n    return this.imod(a.ushln(num));\n  };\n\n  Red.prototype.imul = function imul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.imul(b));\n  };\n\n  Red.prototype.mul = function mul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.mul(b));\n  };\n\n  Red.prototype.isqr = function isqr (a) {\n    return this.imul(a, a.clone());\n  };\n\n  Red.prototype.sqr = function sqr (a) {\n    return this.mul(a, a);\n  };\n\n  Red.prototype.sqrt = function sqrt (a) {\n    if (a.isZero()) return a.clone();\n\n    var mod3 = this.m.andln(3);\n    assert(mod3 % 2 === 1);\n\n    // Fast case\n    if (mod3 === 3) {\n      var pow = this.m.add(new BN(1)).iushrn(2);\n      return this.pow(a, pow);\n    }\n\n    // Tonelli-Shanks algorithm (Totally unoptimized and slow)\n    //\n    // Find Q and S, that Q * 2 ^ S = (P - 1)\n    var q = this.m.subn(1);\n    var s = 0;\n    while (!q.isZero() && q.andln(1) === 0) {\n      s++;\n      q.iushrn(1);\n    }\n    assert(!q.isZero());\n\n    var one = new BN(1).toRed(this);\n    var nOne = one.redNeg();\n\n    // Find quadratic non-residue\n    // NOTE: Max is such because of generalized Riemann hypothesis.\n    var lpow = this.m.subn(1).iushrn(1);\n    var z = this.m.bitLength();\n    z = new BN(2 * z * z).toRed(this);\n\n    while (this.pow(z, lpow).cmp(nOne) !== 0) {\n      z.redIAdd(nOne);\n    }\n\n    var c = this.pow(z, q);\n    var r = this.pow(a, q.addn(1).iushrn(1));\n    var t = this.pow(a, q);\n    var m = s;\n    while (t.cmp(one) !== 0) {\n      var tmp = t;\n      for (var i = 0; tmp.cmp(one) !== 0; i++) {\n        tmp = tmp.redSqr();\n      }\n      assert(i < m);\n      var b = this.pow(c, new BN(1).iushln(m - i - 1));\n\n      r = r.redMul(b);\n      c = b.redSqr();\n      t = t.redMul(c);\n      m = i;\n    }\n\n    return r;\n  };\n\n  Red.prototype.invm = function invm (a) {\n    var inv = a._invmp(this.m);\n    if (inv.negative !== 0) {\n      inv.negative = 0;\n      return this.imod(inv).redNeg();\n    } else {\n      return this.imod(inv);\n    }\n  };\n\n  Red.prototype.pow = function pow (a, num) {\n    if (num.isZero()) return new BN(1).toRed(this);\n    if (num.cmpn(1) === 0) return a.clone();\n\n    var windowSize = 4;\n    var wnd = new Array(1 << windowSize);\n    wnd[0] = new BN(1).toRed(this);\n    wnd[1] = a;\n    for (var i = 2; i < wnd.length; i++) {\n      wnd[i] = this.mul(wnd[i - 1], a);\n    }\n\n    var res = wnd[0];\n    var current = 0;\n    var currentLen = 0;\n    var start = num.bitLength() % 26;\n    if (start === 0) {\n      start = 26;\n    }\n\n    for (i = num.length - 1; i >= 0; i--) {\n      var word = num.words[i];\n      for (var j = start - 1; j >= 0; j--) {\n        var bit = (word >> j) & 1;\n        if (res !== wnd[0]) {\n          res = this.sqr(res);\n        }\n\n        if (bit === 0 && current === 0) {\n          currentLen = 0;\n          continue;\n        }\n\n        current <<= 1;\n        current |= bit;\n        currentLen++;\n        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;\n\n        res = this.mul(res, wnd[current]);\n        currentLen = 0;\n        current = 0;\n      }\n      start = 26;\n    }\n\n    return res;\n  };\n\n  Red.prototype.convertTo = function convertTo (num) {\n    var r = num.umod(this.m);\n\n    return r === num ? r.clone() : r;\n  };\n\n  Red.prototype.convertFrom = function convertFrom (num) {\n    var res = num.clone();\n    res.red = null;\n    return res;\n  };\n\n  //\n  // Montgomery method engine\n  //\n\n  BN.mont = function mont (num) {\n    return new Mont(num);\n  };\n\n  function Mont (m) {\n    Red.call(this, m);\n\n    this.shift = this.m.bitLength();\n    if (this.shift % 26 !== 0) {\n      this.shift += 26 - (this.shift % 26);\n    }\n\n    this.r = new BN(1).iushln(this.shift);\n    this.r2 = this.imod(this.r.sqr());\n    this.rinv = this.r._invmp(this.m);\n\n    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);\n    this.minv = this.minv.umod(this.r);\n    this.minv = this.r.sub(this.minv);\n  }\n  inherits(Mont, Red);\n\n  Mont.prototype.convertTo = function convertTo (num) {\n    return this.imod(num.ushln(this.shift));\n  };\n\n  Mont.prototype.convertFrom = function convertFrom (num) {\n    var r = this.imod(num.mul(this.rinv));\n    r.red = null;\n    return r;\n  };\n\n  Mont.prototype.imul = function imul (a, b) {\n    if (a.isZero() || b.isZero()) {\n      a.words[0] = 0;\n      a.length = 1;\n      return a;\n    }\n\n    var t = a.imul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.mul = function mul (a, b) {\n    if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);\n\n    var t = a.mul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.invm = function invm (a) {\n    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R\n    var res = this.imod(a._invmp(this.m).mul(this.r2));\n    return res._forceRed(this);\n  };\n})(typeof module === 'undefined' || module, this);\n","module.exports      = isTypedArray\nisTypedArray.strict = isStrictTypedArray\nisTypedArray.loose  = isLooseTypedArray\n\nvar toString = Object.prototype.toString\nvar names = {\n    '[object Int8Array]': true\n  , '[object Int16Array]': true\n  , '[object Int32Array]': true\n  , '[object Uint8Array]': true\n  , '[object Uint8ClampedArray]': true\n  , '[object Uint16Array]': true\n  , '[object Uint32Array]': true\n  , '[object Float32Array]': true\n  , '[object Float64Array]': true\n}\n\nfunction isTypedArray(arr) {\n  return (\n       isStrictTypedArray(arr)\n    || isLooseTypedArray(arr)\n  )\n}\n\nfunction isStrictTypedArray(arr) {\n  return (\n       arr instanceof Int8Array\n    || arr instanceof Int16Array\n    || arr instanceof Int32Array\n    || arr instanceof Uint8Array\n    || arr instanceof Uint8ClampedArray\n    || arr instanceof Uint16Array\n    || arr instanceof Uint32Array\n    || arr instanceof Float32Array\n    || arr instanceof Float64Array\n  )\n}\n\nfunction isLooseTypedArray(arr) {\n  return names[toString.call(arr)]\n}\n","/**\n * Convert a typed array to a Buffer without a copy\n *\n * Author:   Feross Aboukhadijeh <https://feross.org>\n * License:  MIT\n *\n * `npm install typedarray-to-buffer`\n */\n\nvar isTypedArray = require('is-typedarray').strict\n\nmodule.exports = function typedarrayToBuffer (arr) {\n  if (isTypedArray(arr)) {\n    // To avoid a copy, use the typed array's underlying ArrayBuffer to back new Buffer\n    var buf = Buffer.from(arr.buffer)\n    if (arr.byteLength !== arr.buffer.byteLength) {\n      // Respect the \"view\", i.e. byteOffset and byteLength, without doing a copy\n      buf = buf.slice(arr.byteOffset, arr.byteOffset + arr.byteLength)\n    }\n    return buf\n  } else {\n    // Pass through all other types to `Buffer.from`\n    return Buffer.from(arr)\n  }\n}\n",null,"/**\n * [js-sha3]{@link https://github.com/emn178/js-sha3}\n *\n * @version 0.8.0\n * @author Chen, Yi-Cyuan [emn178@gmail.com]\n * @copyright Chen, Yi-Cyuan 2015-2018\n * @license MIT\n */\n/*jslint bitwise: true */\n(function () {\n  'use strict';\n\n  var INPUT_ERROR = 'input is invalid type';\n  var FINALIZE_ERROR = 'finalize already called';\n  var WINDOW = typeof window === 'object';\n  var root = WINDOW ? window : {};\n  if (root.JS_SHA3_NO_WINDOW) {\n    WINDOW = false;\n  }\n  var WEB_WORKER = !WINDOW && typeof self === 'object';\n  var NODE_JS = !root.JS_SHA3_NO_NODE_JS && typeof process === 'object' && process.versions && process.versions.node;\n  if (NODE_JS) {\n    root = global;\n  } else if (WEB_WORKER) {\n    root = self;\n  }\n  var COMMON_JS = !root.JS_SHA3_NO_COMMON_JS && typeof module === 'object' && module.exports;\n  var AMD = typeof define === 'function' && define.amd;\n  var ARRAY_BUFFER = !root.JS_SHA3_NO_ARRAY_BUFFER && typeof ArrayBuffer !== 'undefined';\n  var HEX_CHARS = '0123456789abcdef'.split('');\n  var SHAKE_PADDING = [31, 7936, 2031616, 520093696];\n  var CSHAKE_PADDING = [4, 1024, 262144, 67108864];\n  var KECCAK_PADDING = [1, 256, 65536, 16777216];\n  var PADDING = [6, 1536, 393216, 100663296];\n  var SHIFT = [0, 8, 16, 24];\n  var RC = [1, 0, 32898, 0, 32906, 2147483648, 2147516416, 2147483648, 32907, 0, 2147483649,\n    0, 2147516545, 2147483648, 32777, 2147483648, 138, 0, 136, 0, 2147516425, 0,\n    2147483658, 0, 2147516555, 0, 139, 2147483648, 32905, 2147483648, 32771,\n    2147483648, 32770, 2147483648, 128, 2147483648, 32778, 0, 2147483658, 2147483648,\n    2147516545, 2147483648, 32896, 2147483648, 2147483649, 0, 2147516424, 2147483648];\n  var BITS = [224, 256, 384, 512];\n  var SHAKE_BITS = [128, 256];\n  var OUTPUT_TYPES = ['hex', 'buffer', 'arrayBuffer', 'array', 'digest'];\n  var CSHAKE_BYTEPAD = {\n    '128': 168,\n    '256': 136\n  };\n\n  if (root.JS_SHA3_NO_NODE_JS || !Array.isArray) {\n    Array.isArray = function (obj) {\n      return Object.prototype.toString.call(obj) === '[object Array]';\n    };\n  }\n\n  if (ARRAY_BUFFER && (root.JS_SHA3_NO_ARRAY_BUFFER_IS_VIEW || !ArrayBuffer.isView)) {\n    ArrayBuffer.isView = function (obj) {\n      return typeof obj === 'object' && obj.buffer && obj.buffer.constructor === ArrayBuffer;\n    };\n  }\n\n  var createOutputMethod = function (bits, padding, outputType) {\n    return function (message) {\n      return new Keccak(bits, padding, bits).update(message)[outputType]();\n    };\n  };\n\n  var createShakeOutputMethod = function (bits, padding, outputType) {\n    return function (message, outputBits) {\n      return new Keccak(bits, padding, outputBits).update(message)[outputType]();\n    };\n  };\n\n  var createCshakeOutputMethod = function (bits, padding, outputType) {\n    return function (message, outputBits, n, s) {\n      return methods['cshake' + bits].update(message, outputBits, n, s)[outputType]();\n    };\n  };\n\n  var createKmacOutputMethod = function (bits, padding, outputType) {\n    return function (key, message, outputBits, s) {\n      return methods['kmac' + bits].update(key, message, outputBits, s)[outputType]();\n    };\n  };\n\n  var createOutputMethods = function (method, createMethod, bits, padding) {\n    for (var i = 0; i < OUTPUT_TYPES.length; ++i) {\n      var type = OUTPUT_TYPES[i];\n      method[type] = createMethod(bits, padding, type);\n    }\n    return method;\n  };\n\n  var createMethod = function (bits, padding) {\n    var method = createOutputMethod(bits, padding, 'hex');\n    method.create = function () {\n      return new Keccak(bits, padding, bits);\n    };\n    method.update = function (message) {\n      return method.create().update(message);\n    };\n    return createOutputMethods(method, createOutputMethod, bits, padding);\n  };\n\n  var createShakeMethod = function (bits, padding) {\n    var method = createShakeOutputMethod(bits, padding, 'hex');\n    method.create = function (outputBits) {\n      return new Keccak(bits, padding, outputBits);\n    };\n    method.update = function (message, outputBits) {\n      return method.create(outputBits).update(message);\n    };\n    return createOutputMethods(method, createShakeOutputMethod, bits, padding);\n  };\n\n  var createCshakeMethod = function (bits, padding) {\n    var w = CSHAKE_BYTEPAD[bits];\n    var method = createCshakeOutputMethod(bits, padding, 'hex');\n    method.create = function (outputBits, n, s) {\n      if (!n && !s) {\n        return methods['shake' + bits].create(outputBits);\n      } else {\n        return new Keccak(bits, padding, outputBits).bytepad([n, s], w);\n      }\n    };\n    method.update = function (message, outputBits, n, s) {\n      return method.create(outputBits, n, s).update(message);\n    };\n    return createOutputMethods(method, createCshakeOutputMethod, bits, padding);\n  };\n\n  var createKmacMethod = function (bits, padding) {\n    var w = CSHAKE_BYTEPAD[bits];\n    var method = createKmacOutputMethod(bits, padding, 'hex');\n    method.create = function (key, outputBits, s) {\n      return new Kmac(bits, padding, outputBits).bytepad(['KMAC', s], w).bytepad([key], w);\n    };\n    method.update = function (key, message, outputBits, s) {\n      return method.create(key, outputBits, s).update(message);\n    };\n    return createOutputMethods(method, createKmacOutputMethod, bits, padding);\n  };\n\n  var algorithms = [\n    { name: 'keccak', padding: KECCAK_PADDING, bits: BITS, createMethod: createMethod },\n    { name: 'sha3', padding: PADDING, bits: BITS, createMethod: createMethod },\n    { name: 'shake', padding: SHAKE_PADDING, bits: SHAKE_BITS, createMethod: createShakeMethod },\n    { name: 'cshake', padding: CSHAKE_PADDING, bits: SHAKE_BITS, createMethod: createCshakeMethod },\n    { name: 'kmac', padding: CSHAKE_PADDING, bits: SHAKE_BITS, createMethod: createKmacMethod }\n  ];\n\n  var methods = {}, methodNames = [];\n\n  for (var i = 0; i < algorithms.length; ++i) {\n    var algorithm = algorithms[i];\n    var bits = algorithm.bits;\n    for (var j = 0; j < bits.length; ++j) {\n      var methodName = algorithm.name + '_' + bits[j];\n      methodNames.push(methodName);\n      methods[methodName] = algorithm.createMethod(bits[j], algorithm.padding);\n      if (algorithm.name !== 'sha3') {\n        var newMethodName = algorithm.name + bits[j];\n        methodNames.push(newMethodName);\n        methods[newMethodName] = methods[methodName];\n      }\n    }\n  }\n\n  function Keccak(bits, padding, outputBits) {\n    this.blocks = [];\n    this.s = [];\n    this.padding = padding;\n    this.outputBits = outputBits;\n    this.reset = true;\n    this.finalized = false;\n    this.block = 0;\n    this.start = 0;\n    this.blockCount = (1600 - (bits << 1)) >> 5;\n    this.byteCount = this.blockCount << 2;\n    this.outputBlocks = outputBits >> 5;\n    this.extraBytes = (outputBits & 31) >> 3;\n\n    for (var i = 0; i < 50; ++i) {\n      this.s[i] = 0;\n    }\n  }\n\n  Keccak.prototype.update = function (message) {\n    if (this.finalized) {\n      throw new Error(FINALIZE_ERROR);\n    }\n    var notString, type = typeof message;\n    if (type !== 'string') {\n      if (type === 'object') {\n        if (message === null) {\n          throw new Error(INPUT_ERROR);\n        } else if (ARRAY_BUFFER && message.constructor === ArrayBuffer) {\n          message = new Uint8Array(message);\n        } else if (!Array.isArray(message)) {\n          if (!ARRAY_BUFFER || !ArrayBuffer.isView(message)) {\n            throw new Error(INPUT_ERROR);\n          }\n        }\n      } else {\n        throw new Error(INPUT_ERROR);\n      }\n      notString = true;\n    }\n    var blocks = this.blocks, byteCount = this.byteCount, length = message.length,\n      blockCount = this.blockCount, index = 0, s = this.s, i, code;\n\n    while (index < length) {\n      if (this.reset) {\n        this.reset = false;\n        blocks[0] = this.block;\n        for (i = 1; i < blockCount + 1; ++i) {\n          blocks[i] = 0;\n        }\n      }\n      if (notString) {\n        for (i = this.start; index < length && i < byteCount; ++index) {\n          blocks[i >> 2] |= message[index] << SHIFT[i++ & 3];\n        }\n      } else {\n        for (i = this.start; index < length && i < byteCount; ++index) {\n          code = message.charCodeAt(index);\n          if (code < 0x80) {\n            blocks[i >> 2] |= code << SHIFT[i++ & 3];\n          } else if (code < 0x800) {\n            blocks[i >> 2] |= (0xc0 | (code >> 6)) << SHIFT[i++ & 3];\n            blocks[i >> 2] |= (0x80 | (code & 0x3f)) << SHIFT[i++ & 3];\n          } else if (code < 0xd800 || code >= 0xe000) {\n            blocks[i >> 2] |= (0xe0 | (code >> 12)) << SHIFT[i++ & 3];\n            blocks[i >> 2] |= (0x80 | ((code >> 6) & 0x3f)) << SHIFT[i++ & 3];\n            blocks[i >> 2] |= (0x80 | (code & 0x3f)) << SHIFT[i++ & 3];\n          } else {\n            code = 0x10000 + (((code & 0x3ff) << 10) | (message.charCodeAt(++index) & 0x3ff));\n            blocks[i >> 2] |= (0xf0 | (code >> 18)) << SHIFT[i++ & 3];\n            blocks[i >> 2] |= (0x80 | ((code >> 12) & 0x3f)) << SHIFT[i++ & 3];\n            blocks[i >> 2] |= (0x80 | ((code >> 6) & 0x3f)) << SHIFT[i++ & 3];\n            blocks[i >> 2] |= (0x80 | (code & 0x3f)) << SHIFT[i++ & 3];\n          }\n        }\n      }\n      this.lastByteIndex = i;\n      if (i >= byteCount) {\n        this.start = i - byteCount;\n        this.block = blocks[blockCount];\n        for (i = 0; i < blockCount; ++i) {\n          s[i] ^= blocks[i];\n        }\n        f(s);\n        this.reset = true;\n      } else {\n        this.start = i;\n      }\n    }\n    return this;\n  };\n\n  Keccak.prototype.encode = function (x, right) {\n    var o = x & 255, n = 1;\n    var bytes = [o];\n    x = x >> 8;\n    o = x & 255;\n    while (o > 0) {\n      bytes.unshift(o);\n      x = x >> 8;\n      o = x & 255;\n      ++n;\n    }\n    if (right) {\n      bytes.push(n);\n    } else {\n      bytes.unshift(n);\n    }\n    this.update(bytes);\n    return bytes.length;\n  };\n\n  Keccak.prototype.encodeString = function (str) {\n    var notString, type = typeof str;\n    if (type !== 'string') {\n      if (type === 'object') {\n        if (str === null) {\n          throw new Error(INPUT_ERROR);\n        } else if (ARRAY_BUFFER && str.constructor === ArrayBuffer) {\n          str = new Uint8Array(str);\n        } else if (!Array.isArray(str)) {\n          if (!ARRAY_BUFFER || !ArrayBuffer.isView(str)) {\n            throw new Error(INPUT_ERROR);\n          }\n        }\n      } else {\n        throw new Error(INPUT_ERROR);\n      }\n      notString = true;\n    }\n    var bytes = 0, length = str.length;\n    if (notString) {\n      bytes = length;\n    } else {\n      for (var i = 0; i < str.length; ++i) {\n        var code = str.charCodeAt(i);\n        if (code < 0x80) {\n          bytes += 1;\n        } else if (code < 0x800) {\n          bytes += 2;\n        } else if (code < 0xd800 || code >= 0xe000) {\n          bytes += 3;\n        } else {\n          code = 0x10000 + (((code & 0x3ff) << 10) | (str.charCodeAt(++i) & 0x3ff));\n          bytes += 4;\n        }\n      }\n    }\n    bytes += this.encode(bytes * 8);\n    this.update(str);\n    return bytes;\n  };\n\n  Keccak.prototype.bytepad = function (strs, w) {\n    var bytes = this.encode(w);\n    for (var i = 0; i < strs.length; ++i) {\n      bytes += this.encodeString(strs[i]);\n    }\n    var paddingBytes = w - bytes % w;\n    var zeros = [];\n    zeros.length = paddingBytes;\n    this.update(zeros);\n    return this;\n  };\n\n  Keccak.prototype.finalize = function () {\n    if (this.finalized) {\n      return;\n    }\n    this.finalized = true;\n    var blocks = this.blocks, i = this.lastByteIndex, blockCount = this.blockCount, s = this.s;\n    blocks[i >> 2] |= this.padding[i & 3];\n    if (this.lastByteIndex === this.byteCount) {\n      blocks[0] = blocks[blockCount];\n      for (i = 1; i < blockCount + 1; ++i) {\n        blocks[i] = 0;\n      }\n    }\n    blocks[blockCount - 1] |= 0x80000000;\n    for (i = 0; i < blockCount; ++i) {\n      s[i] ^= blocks[i];\n    }\n    f(s);\n  };\n\n  Keccak.prototype.toString = Keccak.prototype.hex = function () {\n    this.finalize();\n\n    var blockCount = this.blockCount, s = this.s, outputBlocks = this.outputBlocks,\n      extraBytes = this.extraBytes, i = 0, j = 0;\n    var hex = '', block;\n    while (j < outputBlocks) {\n      for (i = 0; i < blockCount && j < outputBlocks; ++i, ++j) {\n        block = s[i];\n        hex += HEX_CHARS[(block >> 4) & 0x0F] + HEX_CHARS[block & 0x0F] +\n          HEX_CHARS[(block >> 12) & 0x0F] + HEX_CHARS[(block >> 8) & 0x0F] +\n          HEX_CHARS[(block >> 20) & 0x0F] + HEX_CHARS[(block >> 16) & 0x0F] +\n          HEX_CHARS[(block >> 28) & 0x0F] + HEX_CHARS[(block >> 24) & 0x0F];\n      }\n      if (j % blockCount === 0) {\n        f(s);\n        i = 0;\n      }\n    }\n    if (extraBytes) {\n      block = s[i];\n      hex += HEX_CHARS[(block >> 4) & 0x0F] + HEX_CHARS[block & 0x0F];\n      if (extraBytes > 1) {\n        hex += HEX_CHARS[(block >> 12) & 0x0F] + HEX_CHARS[(block >> 8) & 0x0F];\n      }\n      if (extraBytes > 2) {\n        hex += HEX_CHARS[(block >> 20) & 0x0F] + HEX_CHARS[(block >> 16) & 0x0F];\n      }\n    }\n    return hex;\n  };\n\n  Keccak.prototype.arrayBuffer = function () {\n    this.finalize();\n\n    var blockCount = this.blockCount, s = this.s, outputBlocks = this.outputBlocks,\n      extraBytes = this.extraBytes, i = 0, j = 0;\n    var bytes = this.outputBits >> 3;\n    var buffer;\n    if (extraBytes) {\n      buffer = new ArrayBuffer((outputBlocks + 1) << 2);\n    } else {\n      buffer = new ArrayBuffer(bytes);\n    }\n    var array = new Uint32Array(buffer);\n    while (j < outputBlocks) {\n      for (i = 0; i < blockCount && j < outputBlocks; ++i, ++j) {\n        array[j] = s[i];\n      }\n      if (j % blockCount === 0) {\n        f(s);\n      }\n    }\n    if (extraBytes) {\n      array[i] = s[i];\n      buffer = buffer.slice(0, bytes);\n    }\n    return buffer;\n  };\n\n  Keccak.prototype.buffer = Keccak.prototype.arrayBuffer;\n\n  Keccak.prototype.digest = Keccak.prototype.array = function () {\n    this.finalize();\n\n    var blockCount = this.blockCount, s = this.s, outputBlocks = this.outputBlocks,\n      extraBytes = this.extraBytes, i = 0, j = 0;\n    var array = [], offset, block;\n    while (j < outputBlocks) {\n      for (i = 0; i < blockCount && j < outputBlocks; ++i, ++j) {\n        offset = j << 2;\n        block = s[i];\n        array[offset] = block & 0xFF;\n        array[offset + 1] = (block >> 8) & 0xFF;\n        array[offset + 2] = (block >> 16) & 0xFF;\n        array[offset + 3] = (block >> 24) & 0xFF;\n      }\n      if (j % blockCount === 0) {\n        f(s);\n      }\n    }\n    if (extraBytes) {\n      offset = j << 2;\n      block = s[i];\n      array[offset] = block & 0xFF;\n      if (extraBytes > 1) {\n        array[offset + 1] = (block >> 8) & 0xFF;\n      }\n      if (extraBytes > 2) {\n        array[offset + 2] = (block >> 16) & 0xFF;\n      }\n    }\n    return array;\n  };\n\n  function Kmac(bits, padding, outputBits) {\n    Keccak.call(this, bits, padding, outputBits);\n  }\n\n  Kmac.prototype = new Keccak();\n\n  Kmac.prototype.finalize = function () {\n    this.encode(this.outputBits, true);\n    return Keccak.prototype.finalize.call(this);\n  };\n\n  var f = function (s) {\n    var h, l, n, c0, c1, c2, c3, c4, c5, c6, c7, c8, c9,\n      b0, b1, b2, b3, b4, b5, b6, b7, b8, b9, b10, b11, b12, b13, b14, b15, b16, b17,\n      b18, b19, b20, b21, b22, b23, b24, b25, b26, b27, b28, b29, b30, b31, b32, b33,\n      b34, b35, b36, b37, b38, b39, b40, b41, b42, b43, b44, b45, b46, b47, b48, b49;\n    for (n = 0; n < 48; n += 2) {\n      c0 = s[0] ^ s[10] ^ s[20] ^ s[30] ^ s[40];\n      c1 = s[1] ^ s[11] ^ s[21] ^ s[31] ^ s[41];\n      c2 = s[2] ^ s[12] ^ s[22] ^ s[32] ^ s[42];\n      c3 = s[3] ^ s[13] ^ s[23] ^ s[33] ^ s[43];\n      c4 = s[4] ^ s[14] ^ s[24] ^ s[34] ^ s[44];\n      c5 = s[5] ^ s[15] ^ s[25] ^ s[35] ^ s[45];\n      c6 = s[6] ^ s[16] ^ s[26] ^ s[36] ^ s[46];\n      c7 = s[7] ^ s[17] ^ s[27] ^ s[37] ^ s[47];\n      c8 = s[8] ^ s[18] ^ s[28] ^ s[38] ^ s[48];\n      c9 = s[9] ^ s[19] ^ s[29] ^ s[39] ^ s[49];\n\n      h = c8 ^ ((c2 << 1) | (c3 >>> 31));\n      l = c9 ^ ((c3 << 1) | (c2 >>> 31));\n      s[0] ^= h;\n      s[1] ^= l;\n      s[10] ^= h;\n      s[11] ^= l;\n      s[20] ^= h;\n      s[21] ^= l;\n      s[30] ^= h;\n      s[31] ^= l;\n      s[40] ^= h;\n      s[41] ^= l;\n      h = c0 ^ ((c4 << 1) | (c5 >>> 31));\n      l = c1 ^ ((c5 << 1) | (c4 >>> 31));\n      s[2] ^= h;\n      s[3] ^= l;\n      s[12] ^= h;\n      s[13] ^= l;\n      s[22] ^= h;\n      s[23] ^= l;\n      s[32] ^= h;\n      s[33] ^= l;\n      s[42] ^= h;\n      s[43] ^= l;\n      h = c2 ^ ((c6 << 1) | (c7 >>> 31));\n      l = c3 ^ ((c7 << 1) | (c6 >>> 31));\n      s[4] ^= h;\n      s[5] ^= l;\n      s[14] ^= h;\n      s[15] ^= l;\n      s[24] ^= h;\n      s[25] ^= l;\n      s[34] ^= h;\n      s[35] ^= l;\n      s[44] ^= h;\n      s[45] ^= l;\n      h = c4 ^ ((c8 << 1) | (c9 >>> 31));\n      l = c5 ^ ((c9 << 1) | (c8 >>> 31));\n      s[6] ^= h;\n      s[7] ^= l;\n      s[16] ^= h;\n      s[17] ^= l;\n      s[26] ^= h;\n      s[27] ^= l;\n      s[36] ^= h;\n      s[37] ^= l;\n      s[46] ^= h;\n      s[47] ^= l;\n      h = c6 ^ ((c0 << 1) | (c1 >>> 31));\n      l = c7 ^ ((c1 << 1) | (c0 >>> 31));\n      s[8] ^= h;\n      s[9] ^= l;\n      s[18] ^= h;\n      s[19] ^= l;\n      s[28] ^= h;\n      s[29] ^= l;\n      s[38] ^= h;\n      s[39] ^= l;\n      s[48] ^= h;\n      s[49] ^= l;\n\n      b0 = s[0];\n      b1 = s[1];\n      b32 = (s[11] << 4) | (s[10] >>> 28);\n      b33 = (s[10] << 4) | (s[11] >>> 28);\n      b14 = (s[20] << 3) | (s[21] >>> 29);\n      b15 = (s[21] << 3) | (s[20] >>> 29);\n      b46 = (s[31] << 9) | (s[30] >>> 23);\n      b47 = (s[30] << 9) | (s[31] >>> 23);\n      b28 = (s[40] << 18) | (s[41] >>> 14);\n      b29 = (s[41] << 18) | (s[40] >>> 14);\n      b20 = (s[2] << 1) | (s[3] >>> 31);\n      b21 = (s[3] << 1) | (s[2] >>> 31);\n      b2 = (s[13] << 12) | (s[12] >>> 20);\n      b3 = (s[12] << 12) | (s[13] >>> 20);\n      b34 = (s[22] << 10) | (s[23] >>> 22);\n      b35 = (s[23] << 10) | (s[22] >>> 22);\n      b16 = (s[33] << 13) | (s[32] >>> 19);\n      b17 = (s[32] << 13) | (s[33] >>> 19);\n      b48 = (s[42] << 2) | (s[43] >>> 30);\n      b49 = (s[43] << 2) | (s[42] >>> 30);\n      b40 = (s[5] << 30) | (s[4] >>> 2);\n      b41 = (s[4] << 30) | (s[5] >>> 2);\n      b22 = (s[14] << 6) | (s[15] >>> 26);\n      b23 = (s[15] << 6) | (s[14] >>> 26);\n      b4 = (s[25] << 11) | (s[24] >>> 21);\n      b5 = (s[24] << 11) | (s[25] >>> 21);\n      b36 = (s[34] << 15) | (s[35] >>> 17);\n      b37 = (s[35] << 15) | (s[34] >>> 17);\n      b18 = (s[45] << 29) | (s[44] >>> 3);\n      b19 = (s[44] << 29) | (s[45] >>> 3);\n      b10 = (s[6] << 28) | (s[7] >>> 4);\n      b11 = (s[7] << 28) | (s[6] >>> 4);\n      b42 = (s[17] << 23) | (s[16] >>> 9);\n      b43 = (s[16] << 23) | (s[17] >>> 9);\n      b24 = (s[26] << 25) | (s[27] >>> 7);\n      b25 = (s[27] << 25) | (s[26] >>> 7);\n      b6 = (s[36] << 21) | (s[37] >>> 11);\n      b7 = (s[37] << 21) | (s[36] >>> 11);\n      b38 = (s[47] << 24) | (s[46] >>> 8);\n      b39 = (s[46] << 24) | (s[47] >>> 8);\n      b30 = (s[8] << 27) | (s[9] >>> 5);\n      b31 = (s[9] << 27) | (s[8] >>> 5);\n      b12 = (s[18] << 20) | (s[19] >>> 12);\n      b13 = (s[19] << 20) | (s[18] >>> 12);\n      b44 = (s[29] << 7) | (s[28] >>> 25);\n      b45 = (s[28] << 7) | (s[29] >>> 25);\n      b26 = (s[38] << 8) | (s[39] >>> 24);\n      b27 = (s[39] << 8) | (s[38] >>> 24);\n      b8 = (s[48] << 14) | (s[49] >>> 18);\n      b9 = (s[49] << 14) | (s[48] >>> 18);\n\n      s[0] = b0 ^ (~b2 & b4);\n      s[1] = b1 ^ (~b3 & b5);\n      s[10] = b10 ^ (~b12 & b14);\n      s[11] = b11 ^ (~b13 & b15);\n      s[20] = b20 ^ (~b22 & b24);\n      s[21] = b21 ^ (~b23 & b25);\n      s[30] = b30 ^ (~b32 & b34);\n      s[31] = b31 ^ (~b33 & b35);\n      s[40] = b40 ^ (~b42 & b44);\n      s[41] = b41 ^ (~b43 & b45);\n      s[2] = b2 ^ (~b4 & b6);\n      s[3] = b3 ^ (~b5 & b7);\n      s[12] = b12 ^ (~b14 & b16);\n      s[13] = b13 ^ (~b15 & b17);\n      s[22] = b22 ^ (~b24 & b26);\n      s[23] = b23 ^ (~b25 & b27);\n      s[32] = b32 ^ (~b34 & b36);\n      s[33] = b33 ^ (~b35 & b37);\n      s[42] = b42 ^ (~b44 & b46);\n      s[43] = b43 ^ (~b45 & b47);\n      s[4] = b4 ^ (~b6 & b8);\n      s[5] = b5 ^ (~b7 & b9);\n      s[14] = b14 ^ (~b16 & b18);\n      s[15] = b15 ^ (~b17 & b19);\n      s[24] = b24 ^ (~b26 & b28);\n      s[25] = b25 ^ (~b27 & b29);\n      s[34] = b34 ^ (~b36 & b38);\n      s[35] = b35 ^ (~b37 & b39);\n      s[44] = b44 ^ (~b46 & b48);\n      s[45] = b45 ^ (~b47 & b49);\n      s[6] = b6 ^ (~b8 & b0);\n      s[7] = b7 ^ (~b9 & b1);\n      s[16] = b16 ^ (~b18 & b10);\n      s[17] = b17 ^ (~b19 & b11);\n      s[26] = b26 ^ (~b28 & b20);\n      s[27] = b27 ^ (~b29 & b21);\n      s[36] = b36 ^ (~b38 & b30);\n      s[37] = b37 ^ (~b39 & b31);\n      s[46] = b46 ^ (~b48 & b40);\n      s[47] = b47 ^ (~b49 & b41);\n      s[8] = b8 ^ (~b0 & b2);\n      s[9] = b9 ^ (~b1 & b3);\n      s[18] = b18 ^ (~b10 & b12);\n      s[19] = b19 ^ (~b11 & b13);\n      s[28] = b28 ^ (~b20 & b22);\n      s[29] = b29 ^ (~b21 & b23);\n      s[38] = b38 ^ (~b30 & b32);\n      s[39] = b39 ^ (~b31 & b33);\n      s[48] = b48 ^ (~b40 & b42);\n      s[49] = b49 ^ (~b41 & b43);\n\n      s[0] ^= RC[n];\n      s[1] ^= RC[n + 1];\n    }\n  };\n\n  if (COMMON_JS) {\n    module.exports = methods;\n  } else {\n    for (i = 0; i < methodNames.length; ++i) {\n      root[methodNames[i]] = methods[methodNames[i]];\n    }\n    if (AMD) {\n      define(function () {\n        return methods;\n      });\n    }\n  }\n})();\n",null,"/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __createBinding(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n",null,null,null,null,null,null,null,null,null,null,null,"'use strict';\nmodule.exports = str => encodeURIComponent(str).replace(/[!'()*]/g, x => `%${x.charCodeAt(0).toString(16).toUpperCase()}`);\n","'use strict';\nvar token = '%[a-f0-9]{2}';\nvar singleMatcher = new RegExp('(' + token + ')|([^%]+?)', 'gi');\nvar multiMatcher = new RegExp('(' + token + ')+', 'gi');\n\nfunction decodeComponents(components, split) {\n\ttry {\n\t\t// Try to decode the entire string first\n\t\treturn [decodeURIComponent(components.join(''))];\n\t} catch (err) {\n\t\t// Do nothing\n\t}\n\n\tif (components.length === 1) {\n\t\treturn components;\n\t}\n\n\tsplit = split || 1;\n\n\t// Split the array in 2 parts\n\tvar left = components.slice(0, split);\n\tvar right = components.slice(split);\n\n\treturn Array.prototype.concat.call([], decodeComponents(left), decodeComponents(right));\n}\n\nfunction decode(input) {\n\ttry {\n\t\treturn decodeURIComponent(input);\n\t} catch (err) {\n\t\tvar tokens = input.match(singleMatcher) || [];\n\n\t\tfor (var i = 1; i < tokens.length; i++) {\n\t\t\tinput = decodeComponents(tokens, i).join('');\n\n\t\t\ttokens = input.match(singleMatcher) || [];\n\t\t}\n\n\t\treturn input;\n\t}\n}\n\nfunction customDecodeURIComponent(input) {\n\t// Keep track of all the replacements and prefill the map with the `BOM`\n\tvar replaceMap = {\n\t\t'%FE%FF': '\\uFFFD\\uFFFD',\n\t\t'%FF%FE': '\\uFFFD\\uFFFD'\n\t};\n\n\tvar match = multiMatcher.exec(input);\n\twhile (match) {\n\t\ttry {\n\t\t\t// Decode as big chunks as possible\n\t\t\treplaceMap[match[0]] = decodeURIComponent(match[0]);\n\t\t} catch (err) {\n\t\t\tvar result = decode(match[0]);\n\n\t\t\tif (result !== match[0]) {\n\t\t\t\treplaceMap[match[0]] = result;\n\t\t\t}\n\t\t}\n\n\t\tmatch = multiMatcher.exec(input);\n\t}\n\n\t// Add `%C2` at the end of the map to make sure it does not replace the combinator before everything else\n\treplaceMap['%C2'] = '\\uFFFD';\n\n\tvar entries = Object.keys(replaceMap);\n\n\tfor (var i = 0; i < entries.length; i++) {\n\t\t// Replace all decoded components\n\t\tvar key = entries[i];\n\t\tinput = input.replace(new RegExp(key, 'g'), replaceMap[key]);\n\t}\n\n\treturn input;\n}\n\nmodule.exports = function (encodedURI) {\n\tif (typeof encodedURI !== 'string') {\n\t\tthrow new TypeError('Expected `encodedURI` to be of type `string`, got `' + typeof encodedURI + '`');\n\t}\n\n\ttry {\n\t\tencodedURI = encodedURI.replace(/\\+/g, ' ');\n\n\t\t// Try the built in decoder first\n\t\treturn decodeURIComponent(encodedURI);\n\t} catch (err) {\n\t\t// Fallback to a more advanced decoder\n\t\treturn customDecodeURIComponent(encodedURI);\n\t}\n};\n","'use strict';\n\nmodule.exports = (string, separator) => {\n\tif (!(typeof string === 'string' && typeof separator === 'string')) {\n\t\tthrow new TypeError('Expected the arguments to be of type `string`');\n\t}\n\n\tif (separator === '') {\n\t\treturn [string];\n\t}\n\n\tconst separatorIndex = string.indexOf(separator);\n\n\tif (separatorIndex === -1) {\n\t\treturn [string];\n\t}\n\n\treturn [\n\t\tstring.slice(0, separatorIndex),\n\t\tstring.slice(separatorIndex + separator.length)\n\t];\n};\n","'use strict';\nconst strictUriEncode = require('strict-uri-encode');\nconst decodeComponent = require('decode-uri-component');\nconst splitOnFirst = require('split-on-first');\n\nconst isNullOrUndefined = value => value === null || value === undefined;\n\nfunction encoderForArrayFormat(options) {\n\tswitch (options.arrayFormat) {\n\t\tcase 'index':\n\t\t\treturn key => (result, value) => {\n\t\t\t\tconst index = result.length;\n\n\t\t\t\tif (\n\t\t\t\t\tvalue === undefined ||\n\t\t\t\t\t(options.skipNull && value === null) ||\n\t\t\t\t\t(options.skipEmptyString && value === '')\n\t\t\t\t) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\n\t\t\t\tif (value === null) {\n\t\t\t\t\treturn [...result, [encode(key, options), '[', index, ']'].join('')];\n\t\t\t\t}\n\n\t\t\t\treturn [\n\t\t\t\t\t...result,\n\t\t\t\t\t[encode(key, options), '[', encode(index, options), ']=', encode(value, options)].join('')\n\t\t\t\t];\n\t\t\t};\n\n\t\tcase 'bracket':\n\t\t\treturn key => (result, value) => {\n\t\t\t\tif (\n\t\t\t\t\tvalue === undefined ||\n\t\t\t\t\t(options.skipNull && value === null) ||\n\t\t\t\t\t(options.skipEmptyString && value === '')\n\t\t\t\t) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\n\t\t\t\tif (value === null) {\n\t\t\t\t\treturn [...result, [encode(key, options), '[]'].join('')];\n\t\t\t\t}\n\n\t\t\t\treturn [...result, [encode(key, options), '[]=', encode(value, options)].join('')];\n\t\t\t};\n\n\t\tcase 'comma':\n\t\tcase 'separator':\n\t\t\treturn key => (result, value) => {\n\t\t\t\tif (value === null || value === undefined || value.length === 0) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\n\t\t\t\tif (result.length === 0) {\n\t\t\t\t\treturn [[encode(key, options), '=', encode(value, options)].join('')];\n\t\t\t\t}\n\n\t\t\t\treturn [[result, encode(value, options)].join(options.arrayFormatSeparator)];\n\t\t\t};\n\n\t\tdefault:\n\t\t\treturn key => (result, value) => {\n\t\t\t\tif (\n\t\t\t\t\tvalue === undefined ||\n\t\t\t\t\t(options.skipNull && value === null) ||\n\t\t\t\t\t(options.skipEmptyString && value === '')\n\t\t\t\t) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\n\t\t\t\tif (value === null) {\n\t\t\t\t\treturn [...result, encode(key, options)];\n\t\t\t\t}\n\n\t\t\t\treturn [...result, [encode(key, options), '=', encode(value, options)].join('')];\n\t\t\t};\n\t}\n}\n\nfunction parserForArrayFormat(options) {\n\tlet result;\n\n\tswitch (options.arrayFormat) {\n\t\tcase 'index':\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tresult = /\\[(\\d*)\\]$/.exec(key);\n\n\t\t\t\tkey = key.replace(/\\[\\d*\\]$/, '');\n\n\t\t\t\tif (!result) {\n\t\t\t\t\taccumulator[key] = value;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = {};\n\t\t\t\t}\n\n\t\t\t\taccumulator[key][result[1]] = value;\n\t\t\t};\n\n\t\tcase 'bracket':\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tresult = /(\\[\\])$/.exec(key);\n\t\t\t\tkey = key.replace(/\\[\\]$/, '');\n\n\t\t\t\tif (!result) {\n\t\t\t\t\taccumulator[key] = value;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = [value];\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\taccumulator[key] = [].concat(accumulator[key], value);\n\t\t\t};\n\n\t\tcase 'comma':\n\t\tcase 'separator':\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tconst isArray = typeof value === 'string' && value.split('').indexOf(options.arrayFormatSeparator) > -1;\n\t\t\t\tconst newValue = isArray ? value.split(options.arrayFormatSeparator).map(item => decode(item, options)) : value === null ? value : decode(value, options);\n\t\t\t\taccumulator[key] = newValue;\n\t\t\t};\n\n\t\tdefault:\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tif (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = value;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\taccumulator[key] = [].concat(accumulator[key], value);\n\t\t\t};\n\t}\n}\n\nfunction validateArrayFormatSeparator(value) {\n\tif (typeof value !== 'string' || value.length !== 1) {\n\t\tthrow new TypeError('arrayFormatSeparator must be single character string');\n\t}\n}\n\nfunction encode(value, options) {\n\tif (options.encode) {\n\t\treturn options.strict ? strictUriEncode(value) : encodeURIComponent(value);\n\t}\n\n\treturn value;\n}\n\nfunction decode(value, options) {\n\tif (options.decode) {\n\t\treturn decodeComponent(value);\n\t}\n\n\treturn value;\n}\n\nfunction keysSorter(input) {\n\tif (Array.isArray(input)) {\n\t\treturn input.sort();\n\t}\n\n\tif (typeof input === 'object') {\n\t\treturn keysSorter(Object.keys(input))\n\t\t\t.sort((a, b) => Number(a) - Number(b))\n\t\t\t.map(key => input[key]);\n\t}\n\n\treturn input;\n}\n\nfunction removeHash(input) {\n\tconst hashStart = input.indexOf('#');\n\tif (hashStart !== -1) {\n\t\tinput = input.slice(0, hashStart);\n\t}\n\n\treturn input;\n}\n\nfunction getHash(url) {\n\tlet hash = '';\n\tconst hashStart = url.indexOf('#');\n\tif (hashStart !== -1) {\n\t\thash = url.slice(hashStart);\n\t}\n\n\treturn hash;\n}\n\nfunction extract(input) {\n\tinput = removeHash(input);\n\tconst queryStart = input.indexOf('?');\n\tif (queryStart === -1) {\n\t\treturn '';\n\t}\n\n\treturn input.slice(queryStart + 1);\n}\n\nfunction parseValue(value, options) {\n\tif (options.parseNumbers && !Number.isNaN(Number(value)) && (typeof value === 'string' && value.trim() !== '')) {\n\t\tvalue = Number(value);\n\t} else if (options.parseBooleans && value !== null && (value.toLowerCase() === 'true' || value.toLowerCase() === 'false')) {\n\t\tvalue = value.toLowerCase() === 'true';\n\t}\n\n\treturn value;\n}\n\nfunction parse(input, options) {\n\toptions = Object.assign({\n\t\tdecode: true,\n\t\tsort: true,\n\t\tarrayFormat: 'none',\n\t\tarrayFormatSeparator: ',',\n\t\tparseNumbers: false,\n\t\tparseBooleans: false\n\t}, options);\n\n\tvalidateArrayFormatSeparator(options.arrayFormatSeparator);\n\n\tconst formatter = parserForArrayFormat(options);\n\n\t// Create an object with no prototype\n\tconst ret = Object.create(null);\n\n\tif (typeof input !== 'string') {\n\t\treturn ret;\n\t}\n\n\tinput = input.trim().replace(/^[?#&]/, '');\n\n\tif (!input) {\n\t\treturn ret;\n\t}\n\n\tfor (const param of input.split('&')) {\n\t\tlet [key, value] = splitOnFirst(options.decode ? param.replace(/\\+/g, ' ') : param, '=');\n\n\t\t// Missing `=` should be `null`:\n\t\t// http://w3.org/TR/2012/WD-url-20120524/#collect-url-parameters\n\t\tvalue = value === undefined ? null : ['comma', 'separator'].includes(options.arrayFormat) ? value : decode(value, options);\n\t\tformatter(decode(key, options), value, ret);\n\t}\n\n\tfor (const key of Object.keys(ret)) {\n\t\tconst value = ret[key];\n\t\tif (typeof value === 'object' && value !== null) {\n\t\t\tfor (const k of Object.keys(value)) {\n\t\t\t\tvalue[k] = parseValue(value[k], options);\n\t\t\t}\n\t\t} else {\n\t\t\tret[key] = parseValue(value, options);\n\t\t}\n\t}\n\n\tif (options.sort === false) {\n\t\treturn ret;\n\t}\n\n\treturn (options.sort === true ? Object.keys(ret).sort() : Object.keys(ret).sort(options.sort)).reduce((result, key) => {\n\t\tconst value = ret[key];\n\t\tif (Boolean(value) && typeof value === 'object' && !Array.isArray(value)) {\n\t\t\t// Sort object keys, not values\n\t\t\tresult[key] = keysSorter(value);\n\t\t} else {\n\t\t\tresult[key] = value;\n\t\t}\n\n\t\treturn result;\n\t}, Object.create(null));\n}\n\nexports.extract = extract;\nexports.parse = parse;\n\nexports.stringify = (object, options) => {\n\tif (!object) {\n\t\treturn '';\n\t}\n\n\toptions = Object.assign({\n\t\tencode: true,\n\t\tstrict: true,\n\t\tarrayFormat: 'none',\n\t\tarrayFormatSeparator: ','\n\t}, options);\n\n\tvalidateArrayFormatSeparator(options.arrayFormatSeparator);\n\n\tconst shouldFilter = key => (\n\t\t(options.skipNull && isNullOrUndefined(object[key])) ||\n\t\t(options.skipEmptyString && object[key] === '')\n\t);\n\n\tconst formatter = encoderForArrayFormat(options);\n\n\tconst objectCopy = {};\n\n\tfor (const key of Object.keys(object)) {\n\t\tif (!shouldFilter(key)) {\n\t\t\tobjectCopy[key] = object[key];\n\t\t}\n\t}\n\n\tconst keys = Object.keys(objectCopy);\n\n\tif (options.sort !== false) {\n\t\tkeys.sort(options.sort);\n\t}\n\n\treturn keys.map(key => {\n\t\tconst value = object[key];\n\n\t\tif (value === undefined) {\n\t\t\treturn '';\n\t\t}\n\n\t\tif (value === null) {\n\t\t\treturn encode(key, options);\n\t\t}\n\n\t\tif (Array.isArray(value)) {\n\t\t\treturn value\n\t\t\t\t.reduce(formatter(key), [])\n\t\t\t\t.join('&');\n\t\t}\n\n\t\treturn encode(key, options) + '=' + encode(value, options);\n\t}).filter(x => x.length > 0).join('&');\n};\n\nexports.parseUrl = (input, options) => {\n\toptions = Object.assign({\n\t\tdecode: true\n\t}, options);\n\n\tconst [url, hash] = splitOnFirst(input, '#');\n\n\treturn Object.assign(\n\t\t{\n\t\t\turl: url.split('?')[0] || '',\n\t\t\tquery: parse(extract(input), options)\n\t\t},\n\t\toptions && options.parseFragmentIdentifier && hash ? {fragmentIdentifier: decode(hash, options)} : {}\n\t);\n};\n\nexports.stringifyUrl = (input, options) => {\n\toptions = Object.assign({\n\t\tencode: true,\n\t\tstrict: true\n\t}, options);\n\n\tconst url = removeHash(input.url).split('?')[0] || '';\n\tconst queryFromUrl = exports.extract(input.url);\n\tconst parsedQueryFromUrl = exports.parse(queryFromUrl, {sort: false});\n\n\tconst query = Object.assign(parsedQueryFromUrl, input.query);\n\tlet queryString = exports.stringify(query, options);\n\tif (queryString) {\n\t\tqueryString = `?${queryString}`;\n\t}\n\n\tlet hash = getHash(input.url);\n\tif (input.fragmentIdentifier) {\n\t\thash = `#${encode(input.fragmentIdentifier, options)}`;\n\t}\n\n\treturn `${url}${queryString}${hash}`;\n};\n",null,null,"'use strict';\n\nmodule.exports = function () {\n  throw new Error(\n    'ws does not work in the browser. Browser clients must use the native ' +\n      'WebSocket object'\n  );\n};\n",null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,"// can-promise has a crash in some versions of react native that dont have\n// standard global objects\n// https://github.com/soldair/node-qrcode/issues/157\n\nmodule.exports = function () {\n  return typeof Promise === 'function' && Promise.prototype && Promise.prototype.then\n}\n","var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n","/**\n * Implementation of a subset of node.js Buffer methods for the browser.\n * Based on https://github.com/feross/buffer\n */\n\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar isArray = require('isarray')\n\nfunction typedArraySupport () {\n  // Can typed array instances be augmented?\n  try {\n    var arr = new Uint8Array(1)\n    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}\n    return arr.foo() === 42\n  } catch (e) {\n    return false\n  }\n}\n\nBuffer.TYPED_ARRAY_SUPPORT = typedArraySupport()\n\nvar K_MAX_LENGTH = Buffer.TYPED_ARRAY_SUPPORT\n    ? 0x7fffffff\n    : 0x3fffffff\n\nfunction Buffer (arg, offset, length) {\n  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n    return new Buffer(arg, offset, length)\n  }\n\n  if (typeof arg === 'number') {\n    return allocUnsafe(this, arg)\n  }\n\n  return from(this, arg, offset, length)\n}\n\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n  Buffer.prototype.__proto__ = Uint8Array.prototype\n  Buffer.__proto__ = Uint8Array\n\n  // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\n  if (typeof Symbol !== 'undefined' && Symbol.species &&\n      Buffer[Symbol.species] === Buffer) {\n    Object.defineProperty(Buffer, Symbol.species, {\n      value: null,\n      configurable: true,\n      enumerable: false,\n      writable: false\n    })\n  }\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < K_MAX_LENGTH` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= K_MAX_LENGTH) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction isnan (val) {\n  return val !== val // eslint-disable-line no-self-compare\n}\n\nfunction createBuffer (that, length) {\n  var buf\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    buf = new Uint8Array(length)\n    buf.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    buf = that\n    if (buf === null) {\n      buf = new Buffer(length)\n    }\n    buf.length = length\n  }\n\n  return buf\n}\n\nfunction allocUnsafe (that, size) {\n  var buf = createBuffer(that, size < 0 ? 0 : checked(size) | 0)\n\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < size; ++i) {\n      buf[i] = 0\n    }\n  }\n\n  return buf\n}\n\nfunction fromString (that, string) {\n  var length = byteLength(string) | 0\n  var buf = createBuffer(that, length)\n\n  var actual = buf.write(string)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    buf = buf.slice(0, actual)\n  }\n\n  return buf\n}\n\nfunction fromArrayLike (that, array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  var buf = createBuffer(that, length)\n  for (var i = 0; i < length; i += 1) {\n    buf[i] = array[i] & 255\n  }\n  return buf\n}\n\nfunction fromArrayBuffer (that, array, byteOffset, length) {\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\\'offset\\' is out of bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\\'length\\' is out of bounds')\n  }\n\n  var buf\n  if (byteOffset === undefined && length === undefined) {\n    buf = new Uint8Array(array)\n  } else if (length === undefined) {\n    buf = new Uint8Array(array, byteOffset)\n  } else {\n    buf = new Uint8Array(array, byteOffset, length)\n  }\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    buf.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    buf = fromArrayLike(that, buf)\n  }\n\n  return buf\n}\n\nfunction fromObject (that, obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    var buf = createBuffer(that, len)\n\n    if (buf.length === 0) {\n      return buf\n    }\n\n    obj.copy(buf, 0, 0, len)\n    return buf\n  }\n\n  if (obj) {\n    if ((typeof ArrayBuffer !== 'undefined' &&\n        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {\n      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n        return createBuffer(that, 0)\n      }\n      return fromArrayLike(that, obj)\n    }\n\n    if (obj.type === 'Buffer' && Array.isArray(obj.data)) {\n      return fromArrayLike(that, obj.data)\n    }\n  }\n\n  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction byteLength (string) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&\n      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    string = '' + string\n  }\n\n  var len = string.length\n  if (len === 0) return 0\n\n  return utf8ToBytes(string).length\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction from (that, value, offset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number')\n  }\n\n  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n    return fromArrayBuffer(that, value, offset, length)\n  }\n\n  if (typeof value === 'string') {\n    return fromString(that, value, offset)\n  }\n\n  return fromObject(that, value)\n}\n\nBuffer.prototype.write = function write (string, offset, length) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length])\n  } else if (isFinite(offset)) {\n    offset = offset | 0\n    if (isFinite(length)) {\n      length = length | 0\n    } else {\n      length = undefined\n    }\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  return utf8Write(this, string, offset, length)\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = this.subarray(start, end)\n    // Return an augmented `Uint8Array` instance\n    newBuf.__proto__ = Buffer.prototype\n  } else {\n    var sliceLen = end - start\n    newBuf = new Buffer(sliceLen, undefined)\n    for (var i = 0; i < sliceLen; ++i) {\n      newBuf[i] = this[i + start]\n    }\n  }\n\n  return newBuf\n}\n\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n  var i\n\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    // ascending copy from start\n    for (i = 0; i < len; ++i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, start + len),\n      targetStart\n    )\n  }\n\n  return len\n}\n\nBuffer.prototype.fill = function fill (val, start, end) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      end = this.length\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if (code < 256) {\n        val = code\n      }\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : new Buffer(val)\n    var len = bytes.length\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return createBuffer(null, 0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = allocUnsafe(null, length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos)\n    pos += buf.length\n  }\n  return buffer\n}\n\nBuffer.byteLength = byteLength\n\nBuffer.prototype._isBuffer = true\nBuffer.isBuffer = function isBuffer (b) {\n  return !!(b != null && b._isBuffer)\n}\n\nmodule.exports.alloc = function (size) {\n  var buffer = new Buffer(size)\n  buffer.fill(0)\n  return buffer\n}\n\nmodule.exports.from = function (data) {\n  return new Buffer(data)\n}\n","var toSJISFunction\nvar CODEWORDS_COUNT = [\n  0, // Not used\n  26, 44, 70, 100, 134, 172, 196, 242, 292, 346,\n  404, 466, 532, 581, 655, 733, 815, 901, 991, 1085,\n  1156, 1258, 1364, 1474, 1588, 1706, 1828, 1921, 2051, 2185,\n  2323, 2465, 2611, 2761, 2876, 3034, 3196, 3362, 3532, 3706\n]\n\n/**\n * Returns the QR Code size for the specified version\n *\n * @param  {Number} version QR Code version\n * @return {Number}         size of QR code\n */\nexports.getSymbolSize = function getSymbolSize (version) {\n  if (!version) throw new Error('\"version\" cannot be null or undefined')\n  if (version < 1 || version > 40) throw new Error('\"version\" should be in range from 1 to 40')\n  return version * 4 + 17\n}\n\n/**\n * Returns the total number of codewords used to store data and EC information.\n *\n * @param  {Number} version QR Code version\n * @return {Number}         Data length in bits\n */\nexports.getSymbolTotalCodewords = function getSymbolTotalCodewords (version) {\n  return CODEWORDS_COUNT[version]\n}\n\n/**\n * Encode data with Bose-Chaudhuri-Hocquenghem\n *\n * @param  {Number} data Value to encode\n * @return {Number}      Encoded value\n */\nexports.getBCHDigit = function (data) {\n  var digit = 0\n\n  while (data !== 0) {\n    digit++\n    data >>>= 1\n  }\n\n  return digit\n}\n\nexports.setToSJISFunction = function setToSJISFunction (f) {\n  if (typeof f !== 'function') {\n    throw new Error('\"toSJISFunc\" is not a valid function.')\n  }\n\n  toSJISFunction = f\n}\n\nexports.isKanjiModeEnabled = function () {\n  return typeof toSJISFunction !== 'undefined'\n}\n\nexports.toSJIS = function toSJIS (kanji) {\n  return toSJISFunction(kanji)\n}\n","exports.L = { bit: 1 }\nexports.M = { bit: 0 }\nexports.Q = { bit: 3 }\nexports.H = { bit: 2 }\n\nfunction fromString (string) {\n  if (typeof string !== 'string') {\n    throw new Error('Param is not a string')\n  }\n\n  var lcStr = string.toLowerCase()\n\n  switch (lcStr) {\n    case 'l':\n    case 'low':\n      return exports.L\n\n    case 'm':\n    case 'medium':\n      return exports.M\n\n    case 'q':\n    case 'quartile':\n      return exports.Q\n\n    case 'h':\n    case 'high':\n      return exports.H\n\n    default:\n      throw new Error('Unknown EC Level: ' + string)\n  }\n}\n\nexports.isValid = function isValid (level) {\n  return level && typeof level.bit !== 'undefined' &&\n    level.bit >= 0 && level.bit < 4\n}\n\nexports.from = function from (value, defaultValue) {\n  if (exports.isValid(value)) {\n    return value\n  }\n\n  try {\n    return fromString(value)\n  } catch (e) {\n    return defaultValue\n  }\n}\n","function BitBuffer () {\n  this.buffer = []\n  this.length = 0\n}\n\nBitBuffer.prototype = {\n\n  get: function (index) {\n    var bufIndex = Math.floor(index / 8)\n    return ((this.buffer[bufIndex] >>> (7 - index % 8)) & 1) === 1\n  },\n\n  put: function (num, length) {\n    for (var i = 0; i < length; i++) {\n      this.putBit(((num >>> (length - i - 1)) & 1) === 1)\n    }\n  },\n\n  getLengthInBits: function () {\n    return this.length\n  },\n\n  putBit: function (bit) {\n    var bufIndex = Math.floor(this.length / 8)\n    if (this.buffer.length <= bufIndex) {\n      this.buffer.push(0)\n    }\n\n    if (bit) {\n      this.buffer[bufIndex] |= (0x80 >>> (this.length % 8))\n    }\n\n    this.length++\n  }\n}\n\nmodule.exports = BitBuffer\n","var BufferUtil = require('../utils/buffer')\n\n/**\n * Helper class to handle QR Code symbol modules\n *\n * @param {Number} size Symbol size\n */\nfunction BitMatrix (size) {\n  if (!size || size < 1) {\n    throw new Error('BitMatrix size must be defined and greater than 0')\n  }\n\n  this.size = size\n  this.data = BufferUtil.alloc(size * size)\n  this.reservedBit = BufferUtil.alloc(size * size)\n}\n\n/**\n * Set bit value at specified location\n * If reserved flag is set, this bit will be ignored during masking process\n *\n * @param {Number}  row\n * @param {Number}  col\n * @param {Boolean} value\n * @param {Boolean} reserved\n */\nBitMatrix.prototype.set = function (row, col, value, reserved) {\n  var index = row * this.size + col\n  this.data[index] = value\n  if (reserved) this.reservedBit[index] = true\n}\n\n/**\n * Returns bit value at specified location\n *\n * @param  {Number}  row\n * @param  {Number}  col\n * @return {Boolean}\n */\nBitMatrix.prototype.get = function (row, col) {\n  return this.data[row * this.size + col]\n}\n\n/**\n * Applies xor operator at specified location\n * (used during masking process)\n *\n * @param {Number}  row\n * @param {Number}  col\n * @param {Boolean} value\n */\nBitMatrix.prototype.xor = function (row, col, value) {\n  this.data[row * this.size + col] ^= value\n}\n\n/**\n * Check if bit at specified location is reserved\n *\n * @param {Number}   row\n * @param {Number}   col\n * @return {Boolean}\n */\nBitMatrix.prototype.isReserved = function (row, col) {\n  return this.reservedBit[row * this.size + col]\n}\n\nmodule.exports = BitMatrix\n","/**\n * Alignment pattern are fixed reference pattern in defined positions\n * in a matrix symbology, which enables the decode software to re-synchronise\n * the coordinate mapping of the image modules in the event of moderate amounts\n * of distortion of the image.\n *\n * Alignment patterns are present only in QR Code symbols of version 2 or larger\n * and their number depends on the symbol version.\n */\n\nvar getSymbolSize = require('./utils').getSymbolSize\n\n/**\n * Calculate the row/column coordinates of the center module of each alignment pattern\n * for the specified QR Code version.\n *\n * The alignment patterns are positioned symmetrically on either side of the diagonal\n * running from the top left corner of the symbol to the bottom right corner.\n *\n * Since positions are simmetrical only half of the coordinates are returned.\n * Each item of the array will represent in turn the x and y coordinate.\n * @see {@link getPositions}\n *\n * @param  {Number} version QR Code version\n * @return {Array}          Array of coordinate\n */\nexports.getRowColCoords = function getRowColCoords (version) {\n  if (version === 1) return []\n\n  var posCount = Math.floor(version / 7) + 2\n  var size = getSymbolSize(version)\n  var intervals = size === 145 ? 26 : Math.ceil((size - 13) / (2 * posCount - 2)) * 2\n  var positions = [size - 7] // Last coord is always (size - 7)\n\n  for (var i = 1; i < posCount - 1; i++) {\n    positions[i] = positions[i - 1] - intervals\n  }\n\n  positions.push(6) // First coord is always 6\n\n  return positions.reverse()\n}\n\n/**\n * Returns an array containing the positions of each alignment pattern.\n * Each array's element represent the center point of the pattern as (x, y) coordinates\n *\n * Coordinates are calculated expanding the row/column coordinates returned by {@link getRowColCoords}\n * and filtering out the items that overlaps with finder pattern\n *\n * @example\n * For a Version 7 symbol {@link getRowColCoords} returns values 6, 22 and 38.\n * The alignment patterns, therefore, are to be centered on (row, column)\n * positions (6,22), (22,6), (22,22), (22,38), (38,22), (38,38).\n * Note that the coordinates (6,6), (6,38), (38,6) are occupied by finder patterns\n * and are not therefore used for alignment patterns.\n *\n * var pos = getPositions(7)\n * // [[6,22], [22,6], [22,22], [22,38], [38,22], [38,38]]\n *\n * @param  {Number} version QR Code version\n * @return {Array}          Array of coordinates\n */\nexports.getPositions = function getPositions (version) {\n  var coords = []\n  var pos = exports.getRowColCoords(version)\n  var posLength = pos.length\n\n  for (var i = 0; i < posLength; i++) {\n    for (var j = 0; j < posLength; j++) {\n      // Skip if position is occupied by finder patterns\n      if ((i === 0 && j === 0) ||             // top-left\n          (i === 0 && j === posLength - 1) || // bottom-left\n          (i === posLength - 1 && j === 0)) { // top-right\n        continue\n      }\n\n      coords.push([pos[i], pos[j]])\n    }\n  }\n\n  return coords\n}\n","var getSymbolSize = require('./utils').getSymbolSize\nvar FINDER_PATTERN_SIZE = 7\n\n/**\n * Returns an array containing the positions of each finder pattern.\n * Each array's element represent the top-left point of the pattern as (x, y) coordinates\n *\n * @param  {Number} version QR Code version\n * @return {Array}          Array of coordinates\n */\nexports.getPositions = function getPositions (version) {\n  var size = getSymbolSize(version)\n\n  return [\n    // top-left\n    [0, 0],\n    // top-right\n    [size - FINDER_PATTERN_SIZE, 0],\n    // bottom-left\n    [0, size - FINDER_PATTERN_SIZE]\n  ]\n}\n","/**\n * Data mask pattern reference\n * @type {Object}\n */\nexports.Patterns = {\n  PATTERN000: 0,\n  PATTERN001: 1,\n  PATTERN010: 2,\n  PATTERN011: 3,\n  PATTERN100: 4,\n  PATTERN101: 5,\n  PATTERN110: 6,\n  PATTERN111: 7\n}\n\n/**\n * Weighted penalty scores for the undesirable features\n * @type {Object}\n */\nvar PenaltyScores = {\n  N1: 3,\n  N2: 3,\n  N3: 40,\n  N4: 10\n}\n\n/**\n * Check if mask pattern value is valid\n *\n * @param  {Number}  mask    Mask pattern\n * @return {Boolean}         true if valid, false otherwise\n */\nexports.isValid = function isValid (mask) {\n  return mask != null && mask !== '' && !isNaN(mask) && mask >= 0 && mask <= 7\n}\n\n/**\n * Returns mask pattern from a value.\n * If value is not valid, returns undefined\n *\n * @param  {Number|String} value        Mask pattern value\n * @return {Number}                     Valid mask pattern or undefined\n */\nexports.from = function from (value) {\n  return exports.isValid(value) ? parseInt(value, 10) : undefined\n}\n\n/**\n* Find adjacent modules in row/column with the same color\n* and assign a penalty value.\n*\n* Points: N1 + i\n* i is the amount by which the number of adjacent modules of the same color exceeds 5\n*/\nexports.getPenaltyN1 = function getPenaltyN1 (data) {\n  var size = data.size\n  var points = 0\n  var sameCountCol = 0\n  var sameCountRow = 0\n  var lastCol = null\n  var lastRow = null\n\n  for (var row = 0; row < size; row++) {\n    sameCountCol = sameCountRow = 0\n    lastCol = lastRow = null\n\n    for (var col = 0; col < size; col++) {\n      var module = data.get(row, col)\n      if (module === lastCol) {\n        sameCountCol++\n      } else {\n        if (sameCountCol >= 5) points += PenaltyScores.N1 + (sameCountCol - 5)\n        lastCol = module\n        sameCountCol = 1\n      }\n\n      module = data.get(col, row)\n      if (module === lastRow) {\n        sameCountRow++\n      } else {\n        if (sameCountRow >= 5) points += PenaltyScores.N1 + (sameCountRow - 5)\n        lastRow = module\n        sameCountRow = 1\n      }\n    }\n\n    if (sameCountCol >= 5) points += PenaltyScores.N1 + (sameCountCol - 5)\n    if (sameCountRow >= 5) points += PenaltyScores.N1 + (sameCountRow - 5)\n  }\n\n  return points\n}\n\n/**\n * Find 2x2 blocks with the same color and assign a penalty value\n *\n * Points: N2 * (m - 1) * (n - 1)\n */\nexports.getPenaltyN2 = function getPenaltyN2 (data) {\n  var size = data.size\n  var points = 0\n\n  for (var row = 0; row < size - 1; row++) {\n    for (var col = 0; col < size - 1; col++) {\n      var last = data.get(row, col) +\n        data.get(row, col + 1) +\n        data.get(row + 1, col) +\n        data.get(row + 1, col + 1)\n\n      if (last === 4 || last === 0) points++\n    }\n  }\n\n  return points * PenaltyScores.N2\n}\n\n/**\n * Find 1:1:3:1:1 ratio (dark:light:dark:light:dark) pattern in row/column,\n * preceded or followed by light area 4 modules wide\n *\n * Points: N3 * number of pattern found\n */\nexports.getPenaltyN3 = function getPenaltyN3 (data) {\n  var size = data.size\n  var points = 0\n  var bitsCol = 0\n  var bitsRow = 0\n\n  for (var row = 0; row < size; row++) {\n    bitsCol = bitsRow = 0\n    for (var col = 0; col < size; col++) {\n      bitsCol = ((bitsCol << 1) & 0x7FF) | data.get(row, col)\n      if (col >= 10 && (bitsCol === 0x5D0 || bitsCol === 0x05D)) points++\n\n      bitsRow = ((bitsRow << 1) & 0x7FF) | data.get(col, row)\n      if (col >= 10 && (bitsRow === 0x5D0 || bitsRow === 0x05D)) points++\n    }\n  }\n\n  return points * PenaltyScores.N3\n}\n\n/**\n * Calculate proportion of dark modules in entire symbol\n *\n * Points: N4 * k\n *\n * k is the rating of the deviation of the proportion of dark modules\n * in the symbol from 50% in steps of 5%\n */\nexports.getPenaltyN4 = function getPenaltyN4 (data) {\n  var darkCount = 0\n  var modulesCount = data.data.length\n\n  for (var i = 0; i < modulesCount; i++) darkCount += data.data[i]\n\n  var k = Math.abs(Math.ceil((darkCount * 100 / modulesCount) / 5) - 10)\n\n  return k * PenaltyScores.N4\n}\n\n/**\n * Return mask value at given position\n *\n * @param  {Number} maskPattern Pattern reference value\n * @param  {Number} i           Row\n * @param  {Number} j           Column\n * @return {Boolean}            Mask value\n */\nfunction getMaskAt (maskPattern, i, j) {\n  switch (maskPattern) {\n    case exports.Patterns.PATTERN000: return (i + j) % 2 === 0\n    case exports.Patterns.PATTERN001: return i % 2 === 0\n    case exports.Patterns.PATTERN010: return j % 3 === 0\n    case exports.Patterns.PATTERN011: return (i + j) % 3 === 0\n    case exports.Patterns.PATTERN100: return (Math.floor(i / 2) + Math.floor(j / 3)) % 2 === 0\n    case exports.Patterns.PATTERN101: return (i * j) % 2 + (i * j) % 3 === 0\n    case exports.Patterns.PATTERN110: return ((i * j) % 2 + (i * j) % 3) % 2 === 0\n    case exports.Patterns.PATTERN111: return ((i * j) % 3 + (i + j) % 2) % 2 === 0\n\n    default: throw new Error('bad maskPattern:' + maskPattern)\n  }\n}\n\n/**\n * Apply a mask pattern to a BitMatrix\n *\n * @param  {Number}    pattern Pattern reference number\n * @param  {BitMatrix} data    BitMatrix data\n */\nexports.applyMask = function applyMask (pattern, data) {\n  var size = data.size\n\n  for (var col = 0; col < size; col++) {\n    for (var row = 0; row < size; row++) {\n      if (data.isReserved(row, col)) continue\n      data.xor(row, col, getMaskAt(pattern, row, col))\n    }\n  }\n}\n\n/**\n * Returns the best mask pattern for data\n *\n * @param  {BitMatrix} data\n * @return {Number} Mask pattern reference number\n */\nexports.getBestMask = function getBestMask (data, setupFormatFunc) {\n  var numPatterns = Object.keys(exports.Patterns).length\n  var bestPattern = 0\n  var lowerPenalty = Infinity\n\n  for (var p = 0; p < numPatterns; p++) {\n    setupFormatFunc(p)\n    exports.applyMask(p, data)\n\n    // Calculate penalty\n    var penalty =\n      exports.getPenaltyN1(data) +\n      exports.getPenaltyN2(data) +\n      exports.getPenaltyN3(data) +\n      exports.getPenaltyN4(data)\n\n    // Undo previously applied mask\n    exports.applyMask(p, data)\n\n    if (penalty < lowerPenalty) {\n      lowerPenalty = penalty\n      bestPattern = p\n    }\n  }\n\n  return bestPattern\n}\n","var ECLevel = require('./error-correction-level')\r\n\r\nvar EC_BLOCKS_TABLE = [\r\n// L  M  Q  H\r\n  1, 1, 1, 1,\r\n  1, 1, 1, 1,\r\n  1, 1, 2, 2,\r\n  1, 2, 2, 4,\r\n  1, 2, 4, 4,\r\n  2, 4, 4, 4,\r\n  2, 4, 6, 5,\r\n  2, 4, 6, 6,\r\n  2, 5, 8, 8,\r\n  4, 5, 8, 8,\r\n  4, 5, 8, 11,\r\n  4, 8, 10, 11,\r\n  4, 9, 12, 16,\r\n  4, 9, 16, 16,\r\n  6, 10, 12, 18,\r\n  6, 10, 17, 16,\r\n  6, 11, 16, 19,\r\n  6, 13, 18, 21,\r\n  7, 14, 21, 25,\r\n  8, 16, 20, 25,\r\n  8, 17, 23, 25,\r\n  9, 17, 23, 34,\r\n  9, 18, 25, 30,\r\n  10, 20, 27, 32,\r\n  12, 21, 29, 35,\r\n  12, 23, 34, 37,\r\n  12, 25, 34, 40,\r\n  13, 26, 35, 42,\r\n  14, 28, 38, 45,\r\n  15, 29, 40, 48,\r\n  16, 31, 43, 51,\r\n  17, 33, 45, 54,\r\n  18, 35, 48, 57,\r\n  19, 37, 51, 60,\r\n  19, 38, 53, 63,\r\n  20, 40, 56, 66,\r\n  21, 43, 59, 70,\r\n  22, 45, 62, 74,\r\n  24, 47, 65, 77,\r\n  25, 49, 68, 81\r\n]\r\n\r\nvar EC_CODEWORDS_TABLE = [\r\n// L  M  Q  H\r\n  7, 10, 13, 17,\r\n  10, 16, 22, 28,\r\n  15, 26, 36, 44,\r\n  20, 36, 52, 64,\r\n  26, 48, 72, 88,\r\n  36, 64, 96, 112,\r\n  40, 72, 108, 130,\r\n  48, 88, 132, 156,\r\n  60, 110, 160, 192,\r\n  72, 130, 192, 224,\r\n  80, 150, 224, 264,\r\n  96, 176, 260, 308,\r\n  104, 198, 288, 352,\r\n  120, 216, 320, 384,\r\n  132, 240, 360, 432,\r\n  144, 280, 408, 480,\r\n  168, 308, 448, 532,\r\n  180, 338, 504, 588,\r\n  196, 364, 546, 650,\r\n  224, 416, 600, 700,\r\n  224, 442, 644, 750,\r\n  252, 476, 690, 816,\r\n  270, 504, 750, 900,\r\n  300, 560, 810, 960,\r\n  312, 588, 870, 1050,\r\n  336, 644, 952, 1110,\r\n  360, 700, 1020, 1200,\r\n  390, 728, 1050, 1260,\r\n  420, 784, 1140, 1350,\r\n  450, 812, 1200, 1440,\r\n  480, 868, 1290, 1530,\r\n  510, 924, 1350, 1620,\r\n  540, 980, 1440, 1710,\r\n  570, 1036, 1530, 1800,\r\n  570, 1064, 1590, 1890,\r\n  600, 1120, 1680, 1980,\r\n  630, 1204, 1770, 2100,\r\n  660, 1260, 1860, 2220,\r\n  720, 1316, 1950, 2310,\r\n  750, 1372, 2040, 2430\r\n]\r\n\r\n/**\r\n * Returns the number of error correction block that the QR Code should contain\r\n * for the specified version and error correction level.\r\n *\r\n * @param  {Number} version              QR Code version\r\n * @param  {Number} errorCorrectionLevel Error correction level\r\n * @return {Number}                      Number of error correction blocks\r\n */\r\nexports.getBlocksCount = function getBlocksCount (version, errorCorrectionLevel) {\r\n  switch (errorCorrectionLevel) {\r\n    case ECLevel.L:\r\n      return EC_BLOCKS_TABLE[(version - 1) * 4 + 0]\r\n    case ECLevel.M:\r\n      return EC_BLOCKS_TABLE[(version - 1) * 4 + 1]\r\n    case ECLevel.Q:\r\n      return EC_BLOCKS_TABLE[(version - 1) * 4 + 2]\r\n    case ECLevel.H:\r\n      return EC_BLOCKS_TABLE[(version - 1) * 4 + 3]\r\n    default:\r\n      return undefined\r\n  }\r\n}\r\n\r\n/**\r\n * Returns the number of error correction codewords to use for the specified\r\n * version and error correction level.\r\n *\r\n * @param  {Number} version              QR Code version\r\n * @param  {Number} errorCorrectionLevel Error correction level\r\n * @return {Number}                      Number of error correction codewords\r\n */\r\nexports.getTotalCodewordsCount = function getTotalCodewordsCount (version, errorCorrectionLevel) {\r\n  switch (errorCorrectionLevel) {\r\n    case ECLevel.L:\r\n      return EC_CODEWORDS_TABLE[(version - 1) * 4 + 0]\r\n    case ECLevel.M:\r\n      return EC_CODEWORDS_TABLE[(version - 1) * 4 + 1]\r\n    case ECLevel.Q:\r\n      return EC_CODEWORDS_TABLE[(version - 1) * 4 + 2]\r\n    case ECLevel.H:\r\n      return EC_CODEWORDS_TABLE[(version - 1) * 4 + 3]\r\n    default:\r\n      return undefined\r\n  }\r\n}\r\n","var BufferUtil = require('../utils/buffer')\n\nvar EXP_TABLE = BufferUtil.alloc(512)\nvar LOG_TABLE = BufferUtil.alloc(256)\n/**\n * Precompute the log and anti-log tables for faster computation later\n *\n * For each possible value in the galois field 2^8, we will pre-compute\n * the logarithm and anti-logarithm (exponential) of this value\n *\n * ref {@link https://en.wikiversity.org/wiki/Reed%E2%80%93Solomon_codes_for_coders#Introduction_to_mathematical_fields}\n */\n;(function initTables () {\n  var x = 1\n  for (var i = 0; i < 255; i++) {\n    EXP_TABLE[i] = x\n    LOG_TABLE[x] = i\n\n    x <<= 1 // multiply by 2\n\n    // The QR code specification says to use byte-wise modulo 100011101 arithmetic.\n    // This means that when a number is 256 or larger, it should be XORed with 0x11D.\n    if (x & 0x100) { // similar to x >= 256, but a lot faster (because 0x100 == 256)\n      x ^= 0x11D\n    }\n  }\n\n  // Optimization: double the size of the anti-log table so that we don't need to mod 255 to\n  // stay inside the bounds (because we will mainly use this table for the multiplication of\n  // two GF numbers, no more).\n  // @see {@link mul}\n  for (i = 255; i < 512; i++) {\n    EXP_TABLE[i] = EXP_TABLE[i - 255]\n  }\n}())\n\n/**\n * Returns log value of n inside Galois Field\n *\n * @param  {Number} n\n * @return {Number}\n */\nexports.log = function log (n) {\n  if (n < 1) throw new Error('log(' + n + ')')\n  return LOG_TABLE[n]\n}\n\n/**\n * Returns anti-log value of n inside Galois Field\n *\n * @param  {Number} n\n * @return {Number}\n */\nexports.exp = function exp (n) {\n  return EXP_TABLE[n]\n}\n\n/**\n * Multiplies two number inside Galois Field\n *\n * @param  {Number} x\n * @param  {Number} y\n * @return {Number}\n */\nexports.mul = function mul (x, y) {\n  if (x === 0 || y === 0) return 0\n\n  // should be EXP_TABLE[(LOG_TABLE[x] + LOG_TABLE[y]) % 255] if EXP_TABLE wasn't oversized\n  // @see {@link initTables}\n  return EXP_TABLE[LOG_TABLE[x] + LOG_TABLE[y]]\n}\n","var BufferUtil = require('../utils/buffer')\nvar GF = require('./galois-field')\n\n/**\n * Multiplies two polynomials inside Galois Field\n *\n * @param  {Buffer} p1 Polynomial\n * @param  {Buffer} p2 Polynomial\n * @return {Buffer}    Product of p1 and p2\n */\nexports.mul = function mul (p1, p2) {\n  var coeff = BufferUtil.alloc(p1.length + p2.length - 1)\n\n  for (var i = 0; i < p1.length; i++) {\n    for (var j = 0; j < p2.length; j++) {\n      coeff[i + j] ^= GF.mul(p1[i], p2[j])\n    }\n  }\n\n  return coeff\n}\n\n/**\n * Calculate the remainder of polynomials division\n *\n * @param  {Buffer} divident Polynomial\n * @param  {Buffer} divisor  Polynomial\n * @return {Buffer}          Remainder\n */\nexports.mod = function mod (divident, divisor) {\n  var result = BufferUtil.from(divident)\n\n  while ((result.length - divisor.length) >= 0) {\n    var coeff = result[0]\n\n    for (var i = 0; i < divisor.length; i++) {\n      result[i] ^= GF.mul(divisor[i], coeff)\n    }\n\n    // remove all zeros from buffer head\n    var offset = 0\n    while (offset < result.length && result[offset] === 0) offset++\n    result = result.slice(offset)\n  }\n\n  return result\n}\n\n/**\n * Generate an irreducible generator polynomial of specified degree\n * (used by Reed-Solomon encoder)\n *\n * @param  {Number} degree Degree of the generator polynomial\n * @return {Buffer}        Buffer containing polynomial coefficients\n */\nexports.generateECPolynomial = function generateECPolynomial (degree) {\n  var poly = BufferUtil.from([1])\n  for (var i = 0; i < degree; i++) {\n    poly = exports.mul(poly, [1, GF.exp(i)])\n  }\n\n  return poly\n}\n","var BufferUtil = require('../utils/buffer')\nvar Polynomial = require('./polynomial')\nvar Buffer = require('buffer').Buffer\n\nfunction ReedSolomonEncoder (degree) {\n  this.genPoly = undefined\n  this.degree = degree\n\n  if (this.degree) this.initialize(this.degree)\n}\n\n/**\n * Initialize the encoder.\n * The input param should correspond to the number of error correction codewords.\n *\n * @param  {Number} degree\n */\nReedSolomonEncoder.prototype.initialize = function initialize (degree) {\n  // create an irreducible generator polynomial\n  this.degree = degree\n  this.genPoly = Polynomial.generateECPolynomial(this.degree)\n}\n\n/**\n * Encodes a chunk of data\n *\n * @param  {Buffer} data Buffer containing input data\n * @return {Buffer}      Buffer containing encoded data\n */\nReedSolomonEncoder.prototype.encode = function encode (data) {\n  if (!this.genPoly) {\n    throw new Error('Encoder not initialized')\n  }\n\n  // Calculate EC for this data block\n  // extends data size to data+genPoly size\n  var pad = BufferUtil.alloc(this.degree)\n  var paddedData = Buffer.concat([data, pad], data.length + this.degree)\n\n  // The error correction codewords are the remainder after dividing the data codewords\n  // by a generator polynomial\n  var remainder = Polynomial.mod(paddedData, this.genPoly)\n\n  // return EC data blocks (last n byte, where n is the degree of genPoly)\n  // If coefficients number in remainder are less than genPoly degree,\n  // pad with 0s to the left to reach the needed number of coefficients\n  var start = this.degree - remainder.length\n  if (start > 0) {\n    var buff = BufferUtil.alloc(this.degree)\n    remainder.copy(buff, start)\n\n    return buff\n  }\n\n  return remainder\n}\n\nmodule.exports = ReedSolomonEncoder\n","/**\n * Check if QR Code version is valid\n *\n * @param  {Number}  version QR Code version\n * @return {Boolean}         true if valid version, false otherwise\n */\nexports.isValid = function isValid (version) {\n  return !isNaN(version) && version >= 1 && version <= 40\n}\n","var numeric = '[0-9]+'\nvar alphanumeric = '[A-Z $%*+\\\\-./:]+'\nvar kanji = '(?:[u3000-u303F]|[u3040-u309F]|[u30A0-u30FF]|' +\n  '[uFF00-uFFEF]|[u4E00-u9FAF]|[u2605-u2606]|[u2190-u2195]|u203B|' +\n  '[u2010u2015u2018u2019u2025u2026u201Cu201Du2225u2260]|' +\n  '[u0391-u0451]|[u00A7u00A8u00B1u00B4u00D7u00F7])+'\nkanji = kanji.replace(/u/g, '\\\\u')\n\nvar byte = '(?:(?![A-Z0-9 $%*+\\\\-./:]|' + kanji + ')(?:.|[\\r\\n]))+'\n\nexports.KANJI = new RegExp(kanji, 'g')\nexports.BYTE_KANJI = new RegExp('[^A-Z0-9 $%*+\\\\-./:]+', 'g')\nexports.BYTE = new RegExp(byte, 'g')\nexports.NUMERIC = new RegExp(numeric, 'g')\nexports.ALPHANUMERIC = new RegExp(alphanumeric, 'g')\n\nvar TEST_KANJI = new RegExp('^' + kanji + '$')\nvar TEST_NUMERIC = new RegExp('^' + numeric + '$')\nvar TEST_ALPHANUMERIC = new RegExp('^[A-Z0-9 $%*+\\\\-./:]+$')\n\nexports.testKanji = function testKanji (str) {\n  return TEST_KANJI.test(str)\n}\n\nexports.testNumeric = function testNumeric (str) {\n  return TEST_NUMERIC.test(str)\n}\n\nexports.testAlphanumeric = function testAlphanumeric (str) {\n  return TEST_ALPHANUMERIC.test(str)\n}\n","var VersionCheck = require('./version-check')\nvar Regex = require('./regex')\n\n/**\n * Numeric mode encodes data from the decimal digit set (0 - 9)\n * (byte values 30HEX to 39HEX).\n * Normally, 3 data characters are represented by 10 bits.\n *\n * @type {Object}\n */\nexports.NUMERIC = {\n  id: 'Numeric',\n  bit: 1 << 0,\n  ccBits: [10, 12, 14]\n}\n\n/**\n * Alphanumeric mode encodes data from a set of 45 characters,\n * i.e. 10 numeric digits (0 - 9),\n *      26 alphabetic characters (A - Z),\n *   and 9 symbols (SP, $, %, *, +, -, ., /, :).\n * Normally, two input characters are represented by 11 bits.\n *\n * @type {Object}\n */\nexports.ALPHANUMERIC = {\n  id: 'Alphanumeric',\n  bit: 1 << 1,\n  ccBits: [9, 11, 13]\n}\n\n/**\n * In byte mode, data is encoded at 8 bits per character.\n *\n * @type {Object}\n */\nexports.BYTE = {\n  id: 'Byte',\n  bit: 1 << 2,\n  ccBits: [8, 16, 16]\n}\n\n/**\n * The Kanji mode efficiently encodes Kanji characters in accordance with\n * the Shift JIS system based on JIS X 0208.\n * The Shift JIS values are shifted from the JIS X 0208 values.\n * JIS X 0208 gives details of the shift coded representation.\n * Each two-byte character value is compacted to a 13-bit binary codeword.\n *\n * @type {Object}\n */\nexports.KANJI = {\n  id: 'Kanji',\n  bit: 1 << 3,\n  ccBits: [8, 10, 12]\n}\n\n/**\n * Mixed mode will contain a sequences of data in a combination of any of\n * the modes described above\n *\n * @type {Object}\n */\nexports.MIXED = {\n  bit: -1\n}\n\n/**\n * Returns the number of bits needed to store the data length\n * according to QR Code specifications.\n *\n * @param  {Mode}   mode    Data mode\n * @param  {Number} version QR Code version\n * @return {Number}         Number of bits\n */\nexports.getCharCountIndicator = function getCharCountIndicator (mode, version) {\n  if (!mode.ccBits) throw new Error('Invalid mode: ' + mode)\n\n  if (!VersionCheck.isValid(version)) {\n    throw new Error('Invalid version: ' + version)\n  }\n\n  if (version >= 1 && version < 10) return mode.ccBits[0]\n  else if (version < 27) return mode.ccBits[1]\n  return mode.ccBits[2]\n}\n\n/**\n * Returns the most efficient mode to store the specified data\n *\n * @param  {String} dataStr Input data string\n * @return {Mode}           Best mode\n */\nexports.getBestModeForData = function getBestModeForData (dataStr) {\n  if (Regex.testNumeric(dataStr)) return exports.NUMERIC\n  else if (Regex.testAlphanumeric(dataStr)) return exports.ALPHANUMERIC\n  else if (Regex.testKanji(dataStr)) return exports.KANJI\n  else return exports.BYTE\n}\n\n/**\n * Return mode name as string\n *\n * @param {Mode} mode Mode object\n * @returns {String}  Mode name\n */\nexports.toString = function toString (mode) {\n  if (mode && mode.id) return mode.id\n  throw new Error('Invalid mode')\n}\n\n/**\n * Check if input param is a valid mode object\n *\n * @param   {Mode}    mode Mode object\n * @returns {Boolean} True if valid mode, false otherwise\n */\nexports.isValid = function isValid (mode) {\n  return mode && mode.bit && mode.ccBits\n}\n\n/**\n * Get mode object from its name\n *\n * @param   {String} string Mode name\n * @returns {Mode}          Mode object\n */\nfunction fromString (string) {\n  if (typeof string !== 'string') {\n    throw new Error('Param is not a string')\n  }\n\n  var lcStr = string.toLowerCase()\n\n  switch (lcStr) {\n    case 'numeric':\n      return exports.NUMERIC\n    case 'alphanumeric':\n      return exports.ALPHANUMERIC\n    case 'kanji':\n      return exports.KANJI\n    case 'byte':\n      return exports.BYTE\n    default:\n      throw new Error('Unknown mode: ' + string)\n  }\n}\n\n/**\n * Returns mode from a value.\n * If value is not a valid mode, returns defaultValue\n *\n * @param  {Mode|String} value        Encoding mode\n * @param  {Mode}        defaultValue Fallback value\n * @return {Mode}                     Encoding mode\n */\nexports.from = function from (value, defaultValue) {\n  if (exports.isValid(value)) {\n    return value\n  }\n\n  try {\n    return fromString(value)\n  } catch (e) {\n    return defaultValue\n  }\n}\n","var Utils = require('./utils')\nvar ECCode = require('./error-correction-code')\nvar ECLevel = require('./error-correction-level')\nvar Mode = require('./mode')\nvar VersionCheck = require('./version-check')\nvar isArray = require('isarray')\n\n// Generator polynomial used to encode version information\nvar G18 = (1 << 12) | (1 << 11) | (1 << 10) | (1 << 9) | (1 << 8) | (1 << 5) | (1 << 2) | (1 << 0)\nvar G18_BCH = Utils.getBCHDigit(G18)\n\nfunction getBestVersionForDataLength (mode, length, errorCorrectionLevel) {\n  for (var currentVersion = 1; currentVersion <= 40; currentVersion++) {\n    if (length <= exports.getCapacity(currentVersion, errorCorrectionLevel, mode)) {\n      return currentVersion\n    }\n  }\n\n  return undefined\n}\n\nfunction getReservedBitsCount (mode, version) {\n  // Character count indicator + mode indicator bits\n  return Mode.getCharCountIndicator(mode, version) + 4\n}\n\nfunction getTotalBitsFromDataArray (segments, version) {\n  var totalBits = 0\n\n  segments.forEach(function (data) {\n    var reservedBits = getReservedBitsCount(data.mode, version)\n    totalBits += reservedBits + data.getBitsLength()\n  })\n\n  return totalBits\n}\n\nfunction getBestVersionForMixedData (segments, errorCorrectionLevel) {\n  for (var currentVersion = 1; currentVersion <= 40; currentVersion++) {\n    var length = getTotalBitsFromDataArray(segments, currentVersion)\n    if (length <= exports.getCapacity(currentVersion, errorCorrectionLevel, Mode.MIXED)) {\n      return currentVersion\n    }\n  }\n\n  return undefined\n}\n\n/**\n * Returns version number from a value.\n * If value is not a valid version, returns defaultValue\n *\n * @param  {Number|String} value        QR Code version\n * @param  {Number}        defaultValue Fallback value\n * @return {Number}                     QR Code version number\n */\nexports.from = function from (value, defaultValue) {\n  if (VersionCheck.isValid(value)) {\n    return parseInt(value, 10)\n  }\n\n  return defaultValue\n}\n\n/**\n * Returns how much data can be stored with the specified QR code version\n * and error correction level\n *\n * @param  {Number} version              QR Code version (1-40)\n * @param  {Number} errorCorrectionLevel Error correction level\n * @param  {Mode}   mode                 Data mode\n * @return {Number}                      Quantity of storable data\n */\nexports.getCapacity = function getCapacity (version, errorCorrectionLevel, mode) {\n  if (!VersionCheck.isValid(version)) {\n    throw new Error('Invalid QR Code version')\n  }\n\n  // Use Byte mode as default\n  if (typeof mode === 'undefined') mode = Mode.BYTE\n\n  // Total codewords for this QR code version (Data + Error correction)\n  var totalCodewords = Utils.getSymbolTotalCodewords(version)\n\n  // Total number of error correction codewords\n  var ecTotalCodewords = ECCode.getTotalCodewordsCount(version, errorCorrectionLevel)\n\n  // Total number of data codewords\n  var dataTotalCodewordsBits = (totalCodewords - ecTotalCodewords) * 8\n\n  if (mode === Mode.MIXED) return dataTotalCodewordsBits\n\n  var usableBits = dataTotalCodewordsBits - getReservedBitsCount(mode, version)\n\n  // Return max number of storable codewords\n  switch (mode) {\n    case Mode.NUMERIC:\n      return Math.floor((usableBits / 10) * 3)\n\n    case Mode.ALPHANUMERIC:\n      return Math.floor((usableBits / 11) * 2)\n\n    case Mode.KANJI:\n      return Math.floor(usableBits / 13)\n\n    case Mode.BYTE:\n    default:\n      return Math.floor(usableBits / 8)\n  }\n}\n\n/**\n * Returns the minimum version needed to contain the amount of data\n *\n * @param  {Segment} data                    Segment of data\n * @param  {Number} [errorCorrectionLevel=H] Error correction level\n * @param  {Mode} mode                       Data mode\n * @return {Number}                          QR Code version\n */\nexports.getBestVersionForData = function getBestVersionForData (data, errorCorrectionLevel) {\n  var seg\n\n  var ecl = ECLevel.from(errorCorrectionLevel, ECLevel.M)\n\n  if (isArray(data)) {\n    if (data.length > 1) {\n      return getBestVersionForMixedData(data, ecl)\n    }\n\n    if (data.length === 0) {\n      return 1\n    }\n\n    seg = data[0]\n  } else {\n    seg = data\n  }\n\n  return getBestVersionForDataLength(seg.mode, seg.getLength(), ecl)\n}\n\n/**\n * Returns version information with relative error correction bits\n *\n * The version information is included in QR Code symbols of version 7 or larger.\n * It consists of an 18-bit sequence containing 6 data bits,\n * with 12 error correction bits calculated using the (18, 6) Golay code.\n *\n * @param  {Number} version QR Code version\n * @return {Number}         Encoded version info bits\n */\nexports.getEncodedBits = function getEncodedBits (version) {\n  if (!VersionCheck.isValid(version) || version < 7) {\n    throw new Error('Invalid QR Code version')\n  }\n\n  var d = version << 12\n\n  while (Utils.getBCHDigit(d) - G18_BCH >= 0) {\n    d ^= (G18 << (Utils.getBCHDigit(d) - G18_BCH))\n  }\n\n  return (version << 12) | d\n}\n","var Utils = require('./utils')\n\nvar G15 = (1 << 10) | (1 << 8) | (1 << 5) | (1 << 4) | (1 << 2) | (1 << 1) | (1 << 0)\nvar G15_MASK = (1 << 14) | (1 << 12) | (1 << 10) | (1 << 4) | (1 << 1)\nvar G15_BCH = Utils.getBCHDigit(G15)\n\n/**\n * Returns format information with relative error correction bits\n *\n * The format information is a 15-bit sequence containing 5 data bits,\n * with 10 error correction bits calculated using the (15, 5) BCH code.\n *\n * @param  {Number} errorCorrectionLevel Error correction level\n * @param  {Number} mask                 Mask pattern\n * @return {Number}                      Encoded format information bits\n */\nexports.getEncodedBits = function getEncodedBits (errorCorrectionLevel, mask) {\n  var data = ((errorCorrectionLevel.bit << 3) | mask)\n  var d = data << 10\n\n  while (Utils.getBCHDigit(d) - G15_BCH >= 0) {\n    d ^= (G15 << (Utils.getBCHDigit(d) - G15_BCH))\n  }\n\n  // xor final data with mask pattern in order to ensure that\n  // no combination of Error Correction Level and data mask pattern\n  // will result in an all-zero data string\n  return ((data << 10) | d) ^ G15_MASK\n}\n","var Mode = require('./mode')\n\nfunction NumericData (data) {\n  this.mode = Mode.NUMERIC\n  this.data = data.toString()\n}\n\nNumericData.getBitsLength = function getBitsLength (length) {\n  return 10 * Math.floor(length / 3) + ((length % 3) ? ((length % 3) * 3 + 1) : 0)\n}\n\nNumericData.prototype.getLength = function getLength () {\n  return this.data.length\n}\n\nNumericData.prototype.getBitsLength = function getBitsLength () {\n  return NumericData.getBitsLength(this.data.length)\n}\n\nNumericData.prototype.write = function write (bitBuffer) {\n  var i, group, value\n\n  // The input data string is divided into groups of three digits,\n  // and each group is converted to its 10-bit binary equivalent.\n  for (i = 0; i + 3 <= this.data.length; i += 3) {\n    group = this.data.substr(i, 3)\n    value = parseInt(group, 10)\n\n    bitBuffer.put(value, 10)\n  }\n\n  // If the number of input digits is not an exact multiple of three,\n  // the final one or two digits are converted to 4 or 7 bits respectively.\n  var remainingNum = this.data.length - i\n  if (remainingNum > 0) {\n    group = this.data.substr(i)\n    value = parseInt(group, 10)\n\n    bitBuffer.put(value, remainingNum * 3 + 1)\n  }\n}\n\nmodule.exports = NumericData\n","var Mode = require('./mode')\n\n/**\n * Array of characters available in alphanumeric mode\n *\n * As per QR Code specification, to each character\n * is assigned a value from 0 to 44 which in this case coincides\n * with the array index\n *\n * @type {Array}\n */\nvar ALPHA_NUM_CHARS = [\n  '0', '1', '2', '3', '4', '5', '6', '7', '8', '9',\n  'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M',\n  'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z',\n  ' ', '$', '%', '*', '+', '-', '.', '/', ':'\n]\n\nfunction AlphanumericData (data) {\n  this.mode = Mode.ALPHANUMERIC\n  this.data = data\n}\n\nAlphanumericData.getBitsLength = function getBitsLength (length) {\n  return 11 * Math.floor(length / 2) + 6 * (length % 2)\n}\n\nAlphanumericData.prototype.getLength = function getLength () {\n  return this.data.length\n}\n\nAlphanumericData.prototype.getBitsLength = function getBitsLength () {\n  return AlphanumericData.getBitsLength(this.data.length)\n}\n\nAlphanumericData.prototype.write = function write (bitBuffer) {\n  var i\n\n  // Input data characters are divided into groups of two characters\n  // and encoded as 11-bit binary codes.\n  for (i = 0; i + 2 <= this.data.length; i += 2) {\n    // The character value of the first character is multiplied by 45\n    var value = ALPHA_NUM_CHARS.indexOf(this.data[i]) * 45\n\n    // The character value of the second digit is added to the product\n    value += ALPHA_NUM_CHARS.indexOf(this.data[i + 1])\n\n    // The sum is then stored as 11-bit binary number\n    bitBuffer.put(value, 11)\n  }\n\n  // If the number of input data characters is not a multiple of two,\n  // the character value of the final character is encoded as a 6-bit binary number.\n  if (this.data.length % 2) {\n    bitBuffer.put(ALPHA_NUM_CHARS.indexOf(this.data[i]), 6)\n  }\n}\n\nmodule.exports = AlphanumericData\n","var BufferUtil = require('../utils/buffer')\nvar Mode = require('./mode')\n\nfunction ByteData (data) {\n  this.mode = Mode.BYTE\n  this.data = BufferUtil.from(data)\n}\n\nByteData.getBitsLength = function getBitsLength (length) {\n  return length * 8\n}\n\nByteData.prototype.getLength = function getLength () {\n  return this.data.length\n}\n\nByteData.prototype.getBitsLength = function getBitsLength () {\n  return ByteData.getBitsLength(this.data.length)\n}\n\nByteData.prototype.write = function (bitBuffer) {\n  for (var i = 0, l = this.data.length; i < l; i++) {\n    bitBuffer.put(this.data[i], 8)\n  }\n}\n\nmodule.exports = ByteData\n","var Mode = require('./mode')\nvar Utils = require('./utils')\n\nfunction KanjiData (data) {\n  this.mode = Mode.KANJI\n  this.data = data\n}\n\nKanjiData.getBitsLength = function getBitsLength (length) {\n  return length * 13\n}\n\nKanjiData.prototype.getLength = function getLength () {\n  return this.data.length\n}\n\nKanjiData.prototype.getBitsLength = function getBitsLength () {\n  return KanjiData.getBitsLength(this.data.length)\n}\n\nKanjiData.prototype.write = function (bitBuffer) {\n  var i\n\n  // In the Shift JIS system, Kanji characters are represented by a two byte combination.\n  // These byte values are shifted from the JIS X 0208 values.\n  // JIS X 0208 gives details of the shift coded representation.\n  for (i = 0; i < this.data.length; i++) {\n    var value = Utils.toSJIS(this.data[i])\n\n    // For characters with Shift JIS values from 0x8140 to 0x9FFC:\n    if (value >= 0x8140 && value <= 0x9FFC) {\n      // Subtract 0x8140 from Shift JIS value\n      value -= 0x8140\n\n    // For characters with Shift JIS values from 0xE040 to 0xEBBF\n    } else if (value >= 0xE040 && value <= 0xEBBF) {\n      // Subtract 0xC140 from Shift JIS value\n      value -= 0xC140\n    } else {\n      throw new Error(\n        'Invalid SJIS character: ' + this.data[i] + '\\n' +\n        'Make sure your charset is UTF-8')\n    }\n\n    // Multiply most significant byte of result by 0xC0\n    // and add least significant byte to product\n    value = (((value >>> 8) & 0xff) * 0xC0) + (value & 0xff)\n\n    // Convert result to a 13-bit binary string\n    bitBuffer.put(value, 13)\n  }\n}\n\nmodule.exports = KanjiData\n","'use strict';\n\n/******************************************************************************\n * Created 2008-08-19.\n *\n * Dijkstra path-finding functions. Adapted from the Dijkstar Python project.\n *\n * Copyright (C) 2008\n *   Wyatt Baldwin <self@wyattbaldwin.com>\n *   All rights reserved\n *\n * Licensed under the MIT license.\n *\n *   http://www.opensource.org/licenses/mit-license.php\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n *****************************************************************************/\nvar dijkstra = {\n  single_source_shortest_paths: function(graph, s, d) {\n    // Predecessor map for each node that has been encountered.\n    // node ID => predecessor node ID\n    var predecessors = {};\n\n    // Costs of shortest paths from s to all nodes encountered.\n    // node ID => cost\n    var costs = {};\n    costs[s] = 0;\n\n    // Costs of shortest paths from s to all nodes encountered; differs from\n    // `costs` in that it provides easy access to the node that currently has\n    // the known shortest path from s.\n    // XXX: Do we actually need both `costs` and `open`?\n    var open = dijkstra.PriorityQueue.make();\n    open.push(s, 0);\n\n    var closest,\n        u, v,\n        cost_of_s_to_u,\n        adjacent_nodes,\n        cost_of_e,\n        cost_of_s_to_u_plus_cost_of_e,\n        cost_of_s_to_v,\n        first_visit;\n    while (!open.empty()) {\n      // In the nodes remaining in graph that have a known cost from s,\n      // find the node, u, that currently has the shortest path from s.\n      closest = open.pop();\n      u = closest.value;\n      cost_of_s_to_u = closest.cost;\n\n      // Get nodes adjacent to u...\n      adjacent_nodes = graph[u] || {};\n\n      // ...and explore the edges that connect u to those nodes, updating\n      // the cost of the shortest paths to any or all of those nodes as\n      // necessary. v is the node across the current edge from u.\n      for (v in adjacent_nodes) {\n        if (adjacent_nodes.hasOwnProperty(v)) {\n          // Get the cost of the edge running from u to v.\n          cost_of_e = adjacent_nodes[v];\n\n          // Cost of s to u plus the cost of u to v across e--this is *a*\n          // cost from s to v that may or may not be less than the current\n          // known cost to v.\n          cost_of_s_to_u_plus_cost_of_e = cost_of_s_to_u + cost_of_e;\n\n          // If we haven't visited v yet OR if the current known cost from s to\n          // v is greater than the new cost we just found (cost of s to u plus\n          // cost of u to v across e), update v's cost in the cost list and\n          // update v's predecessor in the predecessor list (it's now u).\n          cost_of_s_to_v = costs[v];\n          first_visit = (typeof costs[v] === 'undefined');\n          if (first_visit || cost_of_s_to_v > cost_of_s_to_u_plus_cost_of_e) {\n            costs[v] = cost_of_s_to_u_plus_cost_of_e;\n            open.push(v, cost_of_s_to_u_plus_cost_of_e);\n            predecessors[v] = u;\n          }\n        }\n      }\n    }\n\n    if (typeof d !== 'undefined' && typeof costs[d] === 'undefined') {\n      var msg = ['Could not find a path from ', s, ' to ', d, '.'].join('');\n      throw new Error(msg);\n    }\n\n    return predecessors;\n  },\n\n  extract_shortest_path_from_predecessor_list: function(predecessors, d) {\n    var nodes = [];\n    var u = d;\n    var predecessor;\n    while (u) {\n      nodes.push(u);\n      predecessor = predecessors[u];\n      u = predecessors[u];\n    }\n    nodes.reverse();\n    return nodes;\n  },\n\n  find_path: function(graph, s, d) {\n    var predecessors = dijkstra.single_source_shortest_paths(graph, s, d);\n    return dijkstra.extract_shortest_path_from_predecessor_list(\n      predecessors, d);\n  },\n\n  /**\n   * A very naive priority queue implementation.\n   */\n  PriorityQueue: {\n    make: function (opts) {\n      var T = dijkstra.PriorityQueue,\n          t = {},\n          key;\n      opts = opts || {};\n      for (key in T) {\n        if (T.hasOwnProperty(key)) {\n          t[key] = T[key];\n        }\n      }\n      t.queue = [];\n      t.sorter = opts.sorter || T.default_sorter;\n      return t;\n    },\n\n    default_sorter: function (a, b) {\n      return a.cost - b.cost;\n    },\n\n    /**\n     * Add a new item to the queue and ensure the highest priority element\n     * is at the front of the queue.\n     */\n    push: function (value, cost) {\n      var item = {value: value, cost: cost};\n      this.queue.push(item);\n      this.queue.sort(this.sorter);\n    },\n\n    /**\n     * Return the highest priority element in the queue.\n     */\n    pop: function () {\n      return this.queue.shift();\n    },\n\n    empty: function () {\n      return this.queue.length === 0;\n    }\n  }\n};\n\n\n// node.js module exports\nif (typeof module !== 'undefined') {\n  module.exports = dijkstra;\n}\n","var Mode = require('./mode')\nvar NumericData = require('./numeric-data')\nvar AlphanumericData = require('./alphanumeric-data')\nvar ByteData = require('./byte-data')\nvar KanjiData = require('./kanji-data')\nvar Regex = require('./regex')\nvar Utils = require('./utils')\nvar dijkstra = require('dijkstrajs')\n\n/**\n * Returns UTF8 byte length\n *\n * @param  {String} str Input string\n * @return {Number}     Number of byte\n */\nfunction getStringByteLength (str) {\n  return unescape(encodeURIComponent(str)).length\n}\n\n/**\n * Get a list of segments of the specified mode\n * from a string\n *\n * @param  {Mode}   mode Segment mode\n * @param  {String} str  String to process\n * @return {Array}       Array of object with segments data\n */\nfunction getSegments (regex, mode, str) {\n  var segments = []\n  var result\n\n  while ((result = regex.exec(str)) !== null) {\n    segments.push({\n      data: result[0],\n      index: result.index,\n      mode: mode,\n      length: result[0].length\n    })\n  }\n\n  return segments\n}\n\n/**\n * Extracts a series of segments with the appropriate\n * modes from a string\n *\n * @param  {String} dataStr Input string\n * @return {Array}          Array of object with segments data\n */\nfunction getSegmentsFromString (dataStr) {\n  var numSegs = getSegments(Regex.NUMERIC, Mode.NUMERIC, dataStr)\n  var alphaNumSegs = getSegments(Regex.ALPHANUMERIC, Mode.ALPHANUMERIC, dataStr)\n  var byteSegs\n  var kanjiSegs\n\n  if (Utils.isKanjiModeEnabled()) {\n    byteSegs = getSegments(Regex.BYTE, Mode.BYTE, dataStr)\n    kanjiSegs = getSegments(Regex.KANJI, Mode.KANJI, dataStr)\n  } else {\n    byteSegs = getSegments(Regex.BYTE_KANJI, Mode.BYTE, dataStr)\n    kanjiSegs = []\n  }\n\n  var segs = numSegs.concat(alphaNumSegs, byteSegs, kanjiSegs)\n\n  return segs\n    .sort(function (s1, s2) {\n      return s1.index - s2.index\n    })\n    .map(function (obj) {\n      return {\n        data: obj.data,\n        mode: obj.mode,\n        length: obj.length\n      }\n    })\n}\n\n/**\n * Returns how many bits are needed to encode a string of\n * specified length with the specified mode\n *\n * @param  {Number} length String length\n * @param  {Mode} mode     Segment mode\n * @return {Number}        Bit length\n */\nfunction getSegmentBitsLength (length, mode) {\n  switch (mode) {\n    case Mode.NUMERIC:\n      return NumericData.getBitsLength(length)\n    case Mode.ALPHANUMERIC:\n      return AlphanumericData.getBitsLength(length)\n    case Mode.KANJI:\n      return KanjiData.getBitsLength(length)\n    case Mode.BYTE:\n      return ByteData.getBitsLength(length)\n  }\n}\n\n/**\n * Merges adjacent segments which have the same mode\n *\n * @param  {Array} segs Array of object with segments data\n * @return {Array}      Array of object with segments data\n */\nfunction mergeSegments (segs) {\n  return segs.reduce(function (acc, curr) {\n    var prevSeg = acc.length - 1 >= 0 ? acc[acc.length - 1] : null\n    if (prevSeg && prevSeg.mode === curr.mode) {\n      acc[acc.length - 1].data += curr.data\n      return acc\n    }\n\n    acc.push(curr)\n    return acc\n  }, [])\n}\n\n/**\n * Generates a list of all possible nodes combination which\n * will be used to build a segments graph.\n *\n * Nodes are divided by groups. Each group will contain a list of all the modes\n * in which is possible to encode the given text.\n *\n * For example the text '12345' can be encoded as Numeric, Alphanumeric or Byte.\n * The group for '12345' will contain then 3 objects, one for each\n * possible encoding mode.\n *\n * Each node represents a possible segment.\n *\n * @param  {Array} segs Array of object with segments data\n * @return {Array}      Array of object with segments data\n */\nfunction buildNodes (segs) {\n  var nodes = []\n  for (var i = 0; i < segs.length; i++) {\n    var seg = segs[i]\n\n    switch (seg.mode) {\n      case Mode.NUMERIC:\n        nodes.push([seg,\n          { data: seg.data, mode: Mode.ALPHANUMERIC, length: seg.length },\n          { data: seg.data, mode: Mode.BYTE, length: seg.length }\n        ])\n        break\n      case Mode.ALPHANUMERIC:\n        nodes.push([seg,\n          { data: seg.data, mode: Mode.BYTE, length: seg.length }\n        ])\n        break\n      case Mode.KANJI:\n        nodes.push([seg,\n          { data: seg.data, mode: Mode.BYTE, length: getStringByteLength(seg.data) }\n        ])\n        break\n      case Mode.BYTE:\n        nodes.push([\n          { data: seg.data, mode: Mode.BYTE, length: getStringByteLength(seg.data) }\n        ])\n    }\n  }\n\n  return nodes\n}\n\n/**\n * Builds a graph from a list of nodes.\n * All segments in each node group will be connected with all the segments of\n * the next group and so on.\n *\n * At each connection will be assigned a weight depending on the\n * segment's byte length.\n *\n * @param  {Array} nodes    Array of object with segments data\n * @param  {Number} version QR Code version\n * @return {Object}         Graph of all possible segments\n */\nfunction buildGraph (nodes, version) {\n  var table = {}\n  var graph = {'start': {}}\n  var prevNodeIds = ['start']\n\n  for (var i = 0; i < nodes.length; i++) {\n    var nodeGroup = nodes[i]\n    var currentNodeIds = []\n\n    for (var j = 0; j < nodeGroup.length; j++) {\n      var node = nodeGroup[j]\n      var key = '' + i + j\n\n      currentNodeIds.push(key)\n      table[key] = { node: node, lastCount: 0 }\n      graph[key] = {}\n\n      for (var n = 0; n < prevNodeIds.length; n++) {\n        var prevNodeId = prevNodeIds[n]\n\n        if (table[prevNodeId] && table[prevNodeId].node.mode === node.mode) {\n          graph[prevNodeId][key] =\n            getSegmentBitsLength(table[prevNodeId].lastCount + node.length, node.mode) -\n            getSegmentBitsLength(table[prevNodeId].lastCount, node.mode)\n\n          table[prevNodeId].lastCount += node.length\n        } else {\n          if (table[prevNodeId]) table[prevNodeId].lastCount = node.length\n\n          graph[prevNodeId][key] = getSegmentBitsLength(node.length, node.mode) +\n            4 + Mode.getCharCountIndicator(node.mode, version) // switch cost\n        }\n      }\n    }\n\n    prevNodeIds = currentNodeIds\n  }\n\n  for (n = 0; n < prevNodeIds.length; n++) {\n    graph[prevNodeIds[n]]['end'] = 0\n  }\n\n  return { map: graph, table: table }\n}\n\n/**\n * Builds a segment from a specified data and mode.\n * If a mode is not specified, the more suitable will be used.\n *\n * @param  {String} data             Input data\n * @param  {Mode | String} modesHint Data mode\n * @return {Segment}                 Segment\n */\nfunction buildSingleSegment (data, modesHint) {\n  var mode\n  var bestMode = Mode.getBestModeForData(data)\n\n  mode = Mode.from(modesHint, bestMode)\n\n  // Make sure data can be encoded\n  if (mode !== Mode.BYTE && mode.bit < bestMode.bit) {\n    throw new Error('\"' + data + '\"' +\n      ' cannot be encoded with mode ' + Mode.toString(mode) +\n      '.\\n Suggested mode is: ' + Mode.toString(bestMode))\n  }\n\n  // Use Mode.BYTE if Kanji support is disabled\n  if (mode === Mode.KANJI && !Utils.isKanjiModeEnabled()) {\n    mode = Mode.BYTE\n  }\n\n  switch (mode) {\n    case Mode.NUMERIC:\n      return new NumericData(data)\n\n    case Mode.ALPHANUMERIC:\n      return new AlphanumericData(data)\n\n    case Mode.KANJI:\n      return new KanjiData(data)\n\n    case Mode.BYTE:\n      return new ByteData(data)\n  }\n}\n\n/**\n * Builds a list of segments from an array.\n * Array can contain Strings or Objects with segment's info.\n *\n * For each item which is a string, will be generated a segment with the given\n * string and the more appropriate encoding mode.\n *\n * For each item which is an object, will be generated a segment with the given\n * data and mode.\n * Objects must contain at least the property \"data\".\n * If property \"mode\" is not present, the more suitable mode will be used.\n *\n * @param  {Array} array Array of objects with segments data\n * @return {Array}       Array of Segments\n */\nexports.fromArray = function fromArray (array) {\n  return array.reduce(function (acc, seg) {\n    if (typeof seg === 'string') {\n      acc.push(buildSingleSegment(seg, null))\n    } else if (seg.data) {\n      acc.push(buildSingleSegment(seg.data, seg.mode))\n    }\n\n    return acc\n  }, [])\n}\n\n/**\n * Builds an optimized sequence of segments from a string,\n * which will produce the shortest possible bitstream.\n *\n * @param  {String} data    Input string\n * @param  {Number} version QR Code version\n * @return {Array}          Array of segments\n */\nexports.fromString = function fromString (data, version) {\n  var segs = getSegmentsFromString(data, Utils.isKanjiModeEnabled())\n\n  var nodes = buildNodes(segs)\n  var graph = buildGraph(nodes, version)\n  var path = dijkstra.find_path(graph.map, 'start', 'end')\n\n  var optimizedSegs = []\n  for (var i = 1; i < path.length - 1; i++) {\n    optimizedSegs.push(graph.table[path[i]].node)\n  }\n\n  return exports.fromArray(mergeSegments(optimizedSegs))\n}\n\n/**\n * Splits a string in various segments with the modes which\n * best represent their content.\n * The produced segments are far from being optimized.\n * The output of this function is only used to estimate a QR Code version\n * which may contain the data.\n *\n * @param  {string} data Input string\n * @return {Array}       Array of segments\n */\nexports.rawSplit = function rawSplit (data) {\n  return exports.fromArray(\n    getSegmentsFromString(data, Utils.isKanjiModeEnabled())\n  )\n}\n","var BufferUtil = require('../utils/buffer')\nvar Utils = require('./utils')\nvar ECLevel = require('./error-correction-level')\nvar BitBuffer = require('./bit-buffer')\nvar BitMatrix = require('./bit-matrix')\nvar AlignmentPattern = require('./alignment-pattern')\nvar FinderPattern = require('./finder-pattern')\nvar MaskPattern = require('./mask-pattern')\nvar ECCode = require('./error-correction-code')\nvar ReedSolomonEncoder = require('./reed-solomon-encoder')\nvar Version = require('./version')\nvar FormatInfo = require('./format-info')\nvar Mode = require('./mode')\nvar Segments = require('./segments')\nvar isArray = require('isarray')\n\n/**\n * QRCode for JavaScript\n *\n * modified by Ryan Day for nodejs support\n * Copyright (c) 2011 Ryan Day\n *\n * Licensed under the MIT license:\n *   http://www.opensource.org/licenses/mit-license.php\n *\n//---------------------------------------------------------------------\n// QRCode for JavaScript\n//\n// Copyright (c) 2009 Kazuhiko Arase\n//\n// URL: http://www.d-project.com/\n//\n// Licensed under the MIT license:\n//   http://www.opensource.org/licenses/mit-license.php\n//\n// The word \"QR Code\" is registered trademark of\n// DENSO WAVE INCORPORATED\n//   http://www.denso-wave.com/qrcode/faqpatent-e.html\n//\n//---------------------------------------------------------------------\n*/\n\n/**\n * Add finder patterns bits to matrix\n *\n * @param  {BitMatrix} matrix  Modules matrix\n * @param  {Number}    version QR Code version\n */\nfunction setupFinderPattern (matrix, version) {\n  var size = matrix.size\n  var pos = FinderPattern.getPositions(version)\n\n  for (var i = 0; i < pos.length; i++) {\n    var row = pos[i][0]\n    var col = pos[i][1]\n\n    for (var r = -1; r <= 7; r++) {\n      if (row + r <= -1 || size <= row + r) continue\n\n      for (var c = -1; c <= 7; c++) {\n        if (col + c <= -1 || size <= col + c) continue\n\n        if ((r >= 0 && r <= 6 && (c === 0 || c === 6)) ||\n          (c >= 0 && c <= 6 && (r === 0 || r === 6)) ||\n          (r >= 2 && r <= 4 && c >= 2 && c <= 4)) {\n          matrix.set(row + r, col + c, true, true)\n        } else {\n          matrix.set(row + r, col + c, false, true)\n        }\n      }\n    }\n  }\n}\n\n/**\n * Add timing pattern bits to matrix\n *\n * Note: this function must be called before {@link setupAlignmentPattern}\n *\n * @param  {BitMatrix} matrix Modules matrix\n */\nfunction setupTimingPattern (matrix) {\n  var size = matrix.size\n\n  for (var r = 8; r < size - 8; r++) {\n    var value = r % 2 === 0\n    matrix.set(r, 6, value, true)\n    matrix.set(6, r, value, true)\n  }\n}\n\n/**\n * Add alignment patterns bits to matrix\n *\n * Note: this function must be called after {@link setupTimingPattern}\n *\n * @param  {BitMatrix} matrix  Modules matrix\n * @param  {Number}    version QR Code version\n */\nfunction setupAlignmentPattern (matrix, version) {\n  var pos = AlignmentPattern.getPositions(version)\n\n  for (var i = 0; i < pos.length; i++) {\n    var row = pos[i][0]\n    var col = pos[i][1]\n\n    for (var r = -2; r <= 2; r++) {\n      for (var c = -2; c <= 2; c++) {\n        if (r === -2 || r === 2 || c === -2 || c === 2 ||\n          (r === 0 && c === 0)) {\n          matrix.set(row + r, col + c, true, true)\n        } else {\n          matrix.set(row + r, col + c, false, true)\n        }\n      }\n    }\n  }\n}\n\n/**\n * Add version info bits to matrix\n *\n * @param  {BitMatrix} matrix  Modules matrix\n * @param  {Number}    version QR Code version\n */\nfunction setupVersionInfo (matrix, version) {\n  var size = matrix.size\n  var bits = Version.getEncodedBits(version)\n  var row, col, mod\n\n  for (var i = 0; i < 18; i++) {\n    row = Math.floor(i / 3)\n    col = i % 3 + size - 8 - 3\n    mod = ((bits >> i) & 1) === 1\n\n    matrix.set(row, col, mod, true)\n    matrix.set(col, row, mod, true)\n  }\n}\n\n/**\n * Add format info bits to matrix\n *\n * @param  {BitMatrix} matrix               Modules matrix\n * @param  {ErrorCorrectionLevel}    errorCorrectionLevel Error correction level\n * @param  {Number}    maskPattern          Mask pattern reference value\n */\nfunction setupFormatInfo (matrix, errorCorrectionLevel, maskPattern) {\n  var size = matrix.size\n  var bits = FormatInfo.getEncodedBits(errorCorrectionLevel, maskPattern)\n  var i, mod\n\n  for (i = 0; i < 15; i++) {\n    mod = ((bits >> i) & 1) === 1\n\n    // vertical\n    if (i < 6) {\n      matrix.set(i, 8, mod, true)\n    } else if (i < 8) {\n      matrix.set(i + 1, 8, mod, true)\n    } else {\n      matrix.set(size - 15 + i, 8, mod, true)\n    }\n\n    // horizontal\n    if (i < 8) {\n      matrix.set(8, size - i - 1, mod, true)\n    } else if (i < 9) {\n      matrix.set(8, 15 - i - 1 + 1, mod, true)\n    } else {\n      matrix.set(8, 15 - i - 1, mod, true)\n    }\n  }\n\n  // fixed module\n  matrix.set(size - 8, 8, 1, true)\n}\n\n/**\n * Add encoded data bits to matrix\n *\n * @param  {BitMatrix} matrix Modules matrix\n * @param  {Buffer}    data   Data codewords\n */\nfunction setupData (matrix, data) {\n  var size = matrix.size\n  var inc = -1\n  var row = size - 1\n  var bitIndex = 7\n  var byteIndex = 0\n\n  for (var col = size - 1; col > 0; col -= 2) {\n    if (col === 6) col--\n\n    while (true) {\n      for (var c = 0; c < 2; c++) {\n        if (!matrix.isReserved(row, col - c)) {\n          var dark = false\n\n          if (byteIndex < data.length) {\n            dark = (((data[byteIndex] >>> bitIndex) & 1) === 1)\n          }\n\n          matrix.set(row, col - c, dark)\n          bitIndex--\n\n          if (bitIndex === -1) {\n            byteIndex++\n            bitIndex = 7\n          }\n        }\n      }\n\n      row += inc\n\n      if (row < 0 || size <= row) {\n        row -= inc\n        inc = -inc\n        break\n      }\n    }\n  }\n}\n\n/**\n * Create encoded codewords from data input\n *\n * @param  {Number}   version              QR Code version\n * @param  {ErrorCorrectionLevel}   errorCorrectionLevel Error correction level\n * @param  {ByteData} data                 Data input\n * @return {Buffer}                        Buffer containing encoded codewords\n */\nfunction createData (version, errorCorrectionLevel, segments) {\n  // Prepare data buffer\n  var buffer = new BitBuffer()\n\n  segments.forEach(function (data) {\n    // prefix data with mode indicator (4 bits)\n    buffer.put(data.mode.bit, 4)\n\n    // Prefix data with character count indicator.\n    // The character count indicator is a string of bits that represents the\n    // number of characters that are being encoded.\n    // The character count indicator must be placed after the mode indicator\n    // and must be a certain number of bits long, depending on the QR version\n    // and data mode\n    // @see {@link Mode.getCharCountIndicator}.\n    buffer.put(data.getLength(), Mode.getCharCountIndicator(data.mode, version))\n\n    // add binary data sequence to buffer\n    data.write(buffer)\n  })\n\n  // Calculate required number of bits\n  var totalCodewords = Utils.getSymbolTotalCodewords(version)\n  var ecTotalCodewords = ECCode.getTotalCodewordsCount(version, errorCorrectionLevel)\n  var dataTotalCodewordsBits = (totalCodewords - ecTotalCodewords) * 8\n\n  // Add a terminator.\n  // If the bit string is shorter than the total number of required bits,\n  // a terminator of up to four 0s must be added to the right side of the string.\n  // If the bit string is more than four bits shorter than the required number of bits,\n  // add four 0s to the end.\n  if (buffer.getLengthInBits() + 4 <= dataTotalCodewordsBits) {\n    buffer.put(0, 4)\n  }\n\n  // If the bit string is fewer than four bits shorter, add only the number of 0s that\n  // are needed to reach the required number of bits.\n\n  // After adding the terminator, if the number of bits in the string is not a multiple of 8,\n  // pad the string on the right with 0s to make the string's length a multiple of 8.\n  while (buffer.getLengthInBits() % 8 !== 0) {\n    buffer.putBit(0)\n  }\n\n  // Add pad bytes if the string is still shorter than the total number of required bits.\n  // Extend the buffer to fill the data capacity of the symbol corresponding to\n  // the Version and Error Correction Level by adding the Pad Codewords 11101100 (0xEC)\n  // and 00010001 (0x11) alternately.\n  var remainingByte = (dataTotalCodewordsBits - buffer.getLengthInBits()) / 8\n  for (var i = 0; i < remainingByte; i++) {\n    buffer.put(i % 2 ? 0x11 : 0xEC, 8)\n  }\n\n  return createCodewords(buffer, version, errorCorrectionLevel)\n}\n\n/**\n * Encode input data with Reed-Solomon and return codewords with\n * relative error correction bits\n *\n * @param  {BitBuffer} bitBuffer            Data to encode\n * @param  {Number}    version              QR Code version\n * @param  {ErrorCorrectionLevel} errorCorrectionLevel Error correction level\n * @return {Buffer}                         Buffer containing encoded codewords\n */\nfunction createCodewords (bitBuffer, version, errorCorrectionLevel) {\n  // Total codewords for this QR code version (Data + Error correction)\n  var totalCodewords = Utils.getSymbolTotalCodewords(version)\n\n  // Total number of error correction codewords\n  var ecTotalCodewords = ECCode.getTotalCodewordsCount(version, errorCorrectionLevel)\n\n  // Total number of data codewords\n  var dataTotalCodewords = totalCodewords - ecTotalCodewords\n\n  // Total number of blocks\n  var ecTotalBlocks = ECCode.getBlocksCount(version, errorCorrectionLevel)\n\n  // Calculate how many blocks each group should contain\n  var blocksInGroup2 = totalCodewords % ecTotalBlocks\n  var blocksInGroup1 = ecTotalBlocks - blocksInGroup2\n\n  var totalCodewordsInGroup1 = Math.floor(totalCodewords / ecTotalBlocks)\n\n  var dataCodewordsInGroup1 = Math.floor(dataTotalCodewords / ecTotalBlocks)\n  var dataCodewordsInGroup2 = dataCodewordsInGroup1 + 1\n\n  // Number of EC codewords is the same for both groups\n  var ecCount = totalCodewordsInGroup1 - dataCodewordsInGroup1\n\n  // Initialize a Reed-Solomon encoder with a generator polynomial of degree ecCount\n  var rs = new ReedSolomonEncoder(ecCount)\n\n  var offset = 0\n  var dcData = new Array(ecTotalBlocks)\n  var ecData = new Array(ecTotalBlocks)\n  var maxDataSize = 0\n  var buffer = BufferUtil.from(bitBuffer.buffer)\n\n  // Divide the buffer into the required number of blocks\n  for (var b = 0; b < ecTotalBlocks; b++) {\n    var dataSize = b < blocksInGroup1 ? dataCodewordsInGroup1 : dataCodewordsInGroup2\n\n    // extract a block of data from buffer\n    dcData[b] = buffer.slice(offset, offset + dataSize)\n\n    // Calculate EC codewords for this data block\n    ecData[b] = rs.encode(dcData[b])\n\n    offset += dataSize\n    maxDataSize = Math.max(maxDataSize, dataSize)\n  }\n\n  // Create final data\n  // Interleave the data and error correction codewords from each block\n  var data = BufferUtil.alloc(totalCodewords)\n  var index = 0\n  var i, r\n\n  // Add data codewords\n  for (i = 0; i < maxDataSize; i++) {\n    for (r = 0; r < ecTotalBlocks; r++) {\n      if (i < dcData[r].length) {\n        data[index++] = dcData[r][i]\n      }\n    }\n  }\n\n  // Apped EC codewords\n  for (i = 0; i < ecCount; i++) {\n    for (r = 0; r < ecTotalBlocks; r++) {\n      data[index++] = ecData[r][i]\n    }\n  }\n\n  return data\n}\n\n/**\n * Build QR Code symbol\n *\n * @param  {String} data                 Input string\n * @param  {Number} version              QR Code version\n * @param  {ErrorCorretionLevel} errorCorrectionLevel Error level\n * @param  {MaskPattern} maskPattern     Mask pattern\n * @return {Object}                      Object containing symbol data\n */\nfunction createSymbol (data, version, errorCorrectionLevel, maskPattern) {\n  var segments\n\n  if (isArray(data)) {\n    segments = Segments.fromArray(data)\n  } else if (typeof data === 'string') {\n    var estimatedVersion = version\n\n    if (!estimatedVersion) {\n      var rawSegments = Segments.rawSplit(data)\n\n      // Estimate best version that can contain raw splitted segments\n      estimatedVersion = Version.getBestVersionForData(rawSegments,\n        errorCorrectionLevel)\n    }\n\n    // Build optimized segments\n    // If estimated version is undefined, try with the highest version\n    segments = Segments.fromString(data, estimatedVersion || 40)\n  } else {\n    throw new Error('Invalid data')\n  }\n\n  // Get the min version that can contain data\n  var bestVersion = Version.getBestVersionForData(segments,\n      errorCorrectionLevel)\n\n  // If no version is found, data cannot be stored\n  if (!bestVersion) {\n    throw new Error('The amount of data is too big to be stored in a QR Code')\n  }\n\n  // If not specified, use min version as default\n  if (!version) {\n    version = bestVersion\n\n  // Check if the specified version can contain the data\n  } else if (version < bestVersion) {\n    throw new Error('\\n' +\n      'The chosen QR Code version cannot contain this amount of data.\\n' +\n      'Minimum version required to store current data is: ' + bestVersion + '.\\n'\n    )\n  }\n\n  var dataBits = createData(version, errorCorrectionLevel, segments)\n\n  // Allocate matrix buffer\n  var moduleCount = Utils.getSymbolSize(version)\n  var modules = new BitMatrix(moduleCount)\n\n  // Add function modules\n  setupFinderPattern(modules, version)\n  setupTimingPattern(modules)\n  setupAlignmentPattern(modules, version)\n\n  // Add temporary dummy bits for format info just to set them as reserved.\n  // This is needed to prevent these bits from being masked by {@link MaskPattern.applyMask}\n  // since the masking operation must be performed only on the encoding region.\n  // These blocks will be replaced with correct values later in code.\n  setupFormatInfo(modules, errorCorrectionLevel, 0)\n\n  if (version >= 7) {\n    setupVersionInfo(modules, version)\n  }\n\n  // Add data codewords\n  setupData(modules, dataBits)\n\n  if (isNaN(maskPattern)) {\n    // Find best mask pattern\n    maskPattern = MaskPattern.getBestMask(modules,\n      setupFormatInfo.bind(null, modules, errorCorrectionLevel))\n  }\n\n  // Apply mask pattern\n  MaskPattern.applyMask(maskPattern, modules)\n\n  // Replace format info bits with correct values\n  setupFormatInfo(modules, errorCorrectionLevel, maskPattern)\n\n  return {\n    modules: modules,\n    version: version,\n    errorCorrectionLevel: errorCorrectionLevel,\n    maskPattern: maskPattern,\n    segments: segments\n  }\n}\n\n/**\n * QR Code\n *\n * @param {String | Array} data                 Input data\n * @param {Object} options                      Optional configurations\n * @param {Number} options.version              QR Code version\n * @param {String} options.errorCorrectionLevel Error correction level\n * @param {Function} options.toSJISFunc         Helper func to convert utf8 to sjis\n */\nexports.create = function create (data, options) {\n  if (typeof data === 'undefined' || data === '') {\n    throw new Error('No input text')\n  }\n\n  var errorCorrectionLevel = ECLevel.M\n  var version\n  var mask\n\n  if (typeof options !== 'undefined') {\n    // Use higher error correction level as default\n    errorCorrectionLevel = ECLevel.from(options.errorCorrectionLevel, ECLevel.M)\n    version = Version.from(options.version)\n    mask = MaskPattern.from(options.maskPattern)\n\n    if (options.toSJISFunc) {\n      Utils.setToSJISFunction(options.toSJISFunc)\n    }\n  }\n\n  return createSymbol(data, version, errorCorrectionLevel, mask)\n}\n","function hex2rgba (hex) {\n  if (typeof hex === 'number') {\n    hex = hex.toString()\n  }\n\n  if (typeof hex !== 'string') {\n    throw new Error('Color should be defined as hex string')\n  }\n\n  var hexCode = hex.slice().replace('#', '').split('')\n  if (hexCode.length < 3 || hexCode.length === 5 || hexCode.length > 8) {\n    throw new Error('Invalid hex color: ' + hex)\n  }\n\n  // Convert from short to long form (fff -> ffffff)\n  if (hexCode.length === 3 || hexCode.length === 4) {\n    hexCode = Array.prototype.concat.apply([], hexCode.map(function (c) {\n      return [c, c]\n    }))\n  }\n\n  // Add default alpha value\n  if (hexCode.length === 6) hexCode.push('F', 'F')\n\n  var hexValue = parseInt(hexCode.join(''), 16)\n\n  return {\n    r: (hexValue >> 24) & 255,\n    g: (hexValue >> 16) & 255,\n    b: (hexValue >> 8) & 255,\n    a: hexValue & 255,\n    hex: '#' + hexCode.slice(0, 6).join('')\n  }\n}\n\nexports.getOptions = function getOptions (options) {\n  if (!options) options = {}\n  if (!options.color) options.color = {}\n\n  var margin = typeof options.margin === 'undefined' ||\n    options.margin === null ||\n    options.margin < 0 ? 4 : options.margin\n\n  var width = options.width && options.width >= 21 ? options.width : undefined\n  var scale = options.scale || 4\n\n  return {\n    width: width,\n    scale: width ? 4 : scale,\n    margin: margin,\n    color: {\n      dark: hex2rgba(options.color.dark || '#000000ff'),\n      light: hex2rgba(options.color.light || '#ffffffff')\n    },\n    type: options.type,\n    rendererOpts: options.rendererOpts || {}\n  }\n}\n\nexports.getScale = function getScale (qrSize, opts) {\n  return opts.width && opts.width >= qrSize + opts.margin * 2\n    ? opts.width / (qrSize + opts.margin * 2)\n    : opts.scale\n}\n\nexports.getImageWidth = function getImageWidth (qrSize, opts) {\n  var scale = exports.getScale(qrSize, opts)\n  return Math.floor((qrSize + opts.margin * 2) * scale)\n}\n\nexports.qrToImageData = function qrToImageData (imgData, qr, opts) {\n  var size = qr.modules.size\n  var data = qr.modules.data\n  var scale = exports.getScale(size, opts)\n  var symbolSize = Math.floor((size + opts.margin * 2) * scale)\n  var scaledMargin = opts.margin * scale\n  var palette = [opts.color.light, opts.color.dark]\n\n  for (var i = 0; i < symbolSize; i++) {\n    for (var j = 0; j < symbolSize; j++) {\n      var posDst = (i * symbolSize + j) * 4\n      var pxColor = opts.color.light\n\n      if (i >= scaledMargin && j >= scaledMargin &&\n        i < symbolSize - scaledMargin && j < symbolSize - scaledMargin) {\n        var iSrc = Math.floor((i - scaledMargin) / scale)\n        var jSrc = Math.floor((j - scaledMargin) / scale)\n        pxColor = palette[data[iSrc * size + jSrc] ? 1 : 0]\n      }\n\n      imgData[posDst++] = pxColor.r\n      imgData[posDst++] = pxColor.g\n      imgData[posDst++] = pxColor.b\n      imgData[posDst] = pxColor.a\n    }\n  }\n}\n","var Utils = require('./utils')\n\nfunction clearCanvas (ctx, canvas, size) {\n  ctx.clearRect(0, 0, canvas.width, canvas.height)\n\n  if (!canvas.style) canvas.style = {}\n  canvas.height = size\n  canvas.width = size\n  canvas.style.height = size + 'px'\n  canvas.style.width = size + 'px'\n}\n\nfunction getCanvasElement () {\n  try {\n    return document.createElement('canvas')\n  } catch (e) {\n    throw new Error('You need to specify a canvas element')\n  }\n}\n\nexports.render = function render (qrData, canvas, options) {\n  var opts = options\n  var canvasEl = canvas\n\n  if (typeof opts === 'undefined' && (!canvas || !canvas.getContext)) {\n    opts = canvas\n    canvas = undefined\n  }\n\n  if (!canvas) {\n    canvasEl = getCanvasElement()\n  }\n\n  opts = Utils.getOptions(opts)\n  var size = Utils.getImageWidth(qrData.modules.size, opts)\n\n  var ctx = canvasEl.getContext('2d')\n  var image = ctx.createImageData(size, size)\n  Utils.qrToImageData(image.data, qrData, opts)\n\n  clearCanvas(ctx, canvasEl, size)\n  ctx.putImageData(image, 0, 0)\n\n  return canvasEl\n}\n\nexports.renderToDataURL = function renderToDataURL (qrData, canvas, options) {\n  var opts = options\n\n  if (typeof opts === 'undefined' && (!canvas || !canvas.getContext)) {\n    opts = canvas\n    canvas = undefined\n  }\n\n  if (!opts) opts = {}\n\n  var canvasEl = exports.render(qrData, canvas, opts)\n\n  var type = opts.type || 'image/png'\n  var rendererOpts = opts.rendererOpts || {}\n\n  return canvasEl.toDataURL(type, rendererOpts.quality)\n}\n","var Utils = require('./utils')\n\nfunction getColorAttrib (color, attrib) {\n  var alpha = color.a / 255\n  var str = attrib + '=\"' + color.hex + '\"'\n\n  return alpha < 1\n    ? str + ' ' + attrib + '-opacity=\"' + alpha.toFixed(2).slice(1) + '\"'\n    : str\n}\n\nfunction svgCmd (cmd, x, y) {\n  var str = cmd + x\n  if (typeof y !== 'undefined') str += ' ' + y\n\n  return str\n}\n\nfunction qrToPath (data, size, margin) {\n  var path = ''\n  var moveBy = 0\n  var newRow = false\n  var lineLength = 0\n\n  for (var i = 0; i < data.length; i++) {\n    var col = Math.floor(i % size)\n    var row = Math.floor(i / size)\n\n    if (!col && !newRow) newRow = true\n\n    if (data[i]) {\n      lineLength++\n\n      if (!(i > 0 && col > 0 && data[i - 1])) {\n        path += newRow\n          ? svgCmd('M', col + margin, 0.5 + row + margin)\n          : svgCmd('m', moveBy, 0)\n\n        moveBy = 0\n        newRow = false\n      }\n\n      if (!(col + 1 < size && data[i + 1])) {\n        path += svgCmd('h', lineLength)\n        lineLength = 0\n      }\n    } else {\n      moveBy++\n    }\n  }\n\n  return path\n}\n\nexports.render = function render (qrData, options, cb) {\n  var opts = Utils.getOptions(options)\n  var size = qrData.modules.size\n  var data = qrData.modules.data\n  var qrcodesize = size + opts.margin * 2\n\n  var bg = !opts.color.light.a\n    ? ''\n    : '<path ' + getColorAttrib(opts.color.light, 'fill') +\n      ' d=\"M0 0h' + qrcodesize + 'v' + qrcodesize + 'H0z\"/>'\n\n  var path =\n    '<path ' + getColorAttrib(opts.color.dark, 'stroke') +\n    ' d=\"' + qrToPath(data, size, opts.margin) + '\"/>'\n\n  var viewBox = 'viewBox=\"' + '0 0 ' + qrcodesize + ' ' + qrcodesize + '\"'\n\n  var width = !opts.width ? '' : 'width=\"' + opts.width + '\" height=\"' + opts.width + '\" '\n\n  var svgTag = '<svg xmlns=\"http://www.w3.org/2000/svg\" ' + width + viewBox + ' shape-rendering=\"crispEdges\">' + bg + path + '</svg>\\n'\n\n  if (typeof cb === 'function') {\n    cb(null, svgTag)\n  }\n\n  return svgTag\n}\n","\nvar canPromise = require('./can-promise')\n\nvar QRCode = require('./core/qrcode')\nvar CanvasRenderer = require('./renderer/canvas')\nvar SvgRenderer = require('./renderer/svg-tag.js')\n\nfunction renderCanvas (renderFunc, canvas, text, opts, cb) {\n  var args = [].slice.call(arguments, 1)\n  var argsNum = args.length\n  var isLastArgCb = typeof args[argsNum - 1] === 'function'\n\n  if (!isLastArgCb && !canPromise()) {\n    throw new Error('Callback required as last argument')\n  }\n\n  if (isLastArgCb) {\n    if (argsNum < 2) {\n      throw new Error('Too few arguments provided')\n    }\n\n    if (argsNum === 2) {\n      cb = text\n      text = canvas\n      canvas = opts = undefined\n    } else if (argsNum === 3) {\n      if (canvas.getContext && typeof cb === 'undefined') {\n        cb = opts\n        opts = undefined\n      } else {\n        cb = opts\n        opts = text\n        text = canvas\n        canvas = undefined\n      }\n    }\n  } else {\n    if (argsNum < 1) {\n      throw new Error('Too few arguments provided')\n    }\n\n    if (argsNum === 1) {\n      text = canvas\n      canvas = opts = undefined\n    } else if (argsNum === 2 && !canvas.getContext) {\n      opts = text\n      text = canvas\n      canvas = undefined\n    }\n\n    return new Promise(function (resolve, reject) {\n      try {\n        var data = QRCode.create(text, opts)\n        resolve(renderFunc(data, canvas, opts))\n      } catch (e) {\n        reject(e)\n      }\n    })\n  }\n\n  try {\n    var data = QRCode.create(text, opts)\n    cb(null, renderFunc(data, canvas, opts))\n  } catch (e) {\n    cb(e)\n  }\n}\n\nexports.create = QRCode.create\nexports.toCanvas = renderCanvas.bind(null, CanvasRenderer.render)\nexports.toDataURL = renderCanvas.bind(null, CanvasRenderer.renderToDataURL)\n\n// only svg for now.\nexports.toString = renderCanvas.bind(null, function (data, _, opts) {\n  return SvgRenderer.render(data, opts)\n})\n","\nmodule.exports = function () {\n  var selection = document.getSelection();\n  if (!selection.rangeCount) {\n    return function () {};\n  }\n  var active = document.activeElement;\n\n  var ranges = [];\n  for (var i = 0; i < selection.rangeCount; i++) {\n    ranges.push(selection.getRangeAt(i));\n  }\n\n  switch (active.tagName.toUpperCase()) { // .toUpperCase handles XHTML\n    case 'INPUT':\n    case 'TEXTAREA':\n      active.blur();\n      break;\n\n    default:\n      active = null;\n      break;\n  }\n\n  selection.removeAllRanges();\n  return function () {\n    selection.type === 'Caret' &&\n    selection.removeAllRanges();\n\n    if (!selection.rangeCount) {\n      ranges.forEach(function(range) {\n        selection.addRange(range);\n      });\n    }\n\n    active &&\n    active.focus();\n  };\n};\n","\"use strict\";\n\nvar deselectCurrent = require(\"toggle-selection\");\n\nvar clipboardToIE11Formatting = {\n  \"text/plain\": \"Text\",\n  \"text/html\": \"Url\",\n  \"default\": \"Text\"\n}\n\nvar defaultMessage = \"Copy to clipboard: #{key}, Enter\";\n\nfunction format(message) {\n  var copyKey = (/mac os x/i.test(navigator.userAgent) ? \"⌘\" : \"Ctrl\") + \"+C\";\n  return message.replace(/#{\\s*key\\s*}/g, copyKey);\n}\n\nfunction copy(text, options) {\n  var debug,\n    message,\n    reselectPrevious,\n    range,\n    selection,\n    mark,\n    success = false;\n  if (!options) {\n    options = {};\n  }\n  debug = options.debug || false;\n  try {\n    reselectPrevious = deselectCurrent();\n\n    range = document.createRange();\n    selection = document.getSelection();\n\n    mark = document.createElement(\"span\");\n    mark.textContent = text;\n    // avoid screen readers from reading out loud the text\n    mark.ariaHidden = \"true\"\n    // reset user styles for span element\n    mark.style.all = \"unset\";\n    // prevents scrolling to the end of the page\n    mark.style.position = \"fixed\";\n    mark.style.top = 0;\n    mark.style.clip = \"rect(0, 0, 0, 0)\";\n    // used to preserve spaces and line breaks\n    mark.style.whiteSpace = \"pre\";\n    // do not inherit user-select (it may be `none`)\n    mark.style.webkitUserSelect = \"text\";\n    mark.style.MozUserSelect = \"text\";\n    mark.style.msUserSelect = \"text\";\n    mark.style.userSelect = \"text\";\n    mark.addEventListener(\"copy\", function(e) {\n      e.stopPropagation();\n      if (options.format) {\n        e.preventDefault();\n        if (typeof e.clipboardData === \"undefined\") { // IE 11\n          debug && console.warn(\"unable to use e.clipboardData\");\n          debug && console.warn(\"trying IE specific stuff\");\n          window.clipboardData.clearData();\n          var format = clipboardToIE11Formatting[options.format] || clipboardToIE11Formatting[\"default\"]\n          window.clipboardData.setData(format, text);\n        } else { // all other browsers\n          e.clipboardData.clearData();\n          e.clipboardData.setData(options.format, text);\n        }\n      }\n      if (options.onCopy) {\n        e.preventDefault();\n        options.onCopy(e.clipboardData);\n      }\n    });\n\n    document.body.appendChild(mark);\n\n    range.selectNodeContents(mark);\n    selection.addRange(range);\n\n    var successful = document.execCommand(\"copy\");\n    if (!successful) {\n      throw new Error(\"copy command was unsuccessful\");\n    }\n    success = true;\n  } catch (err) {\n    debug && console.error(\"unable to copy using execCommand: \", err);\n    debug && console.warn(\"trying IE specific stuff\");\n    try {\n      window.clipboardData.setData(options.format || \"text\", text);\n      options.onCopy && options.onCopy(window.clipboardData);\n      success = true;\n    } catch (err) {\n      debug && console.error(\"unable to copy using clipboardData: \", err);\n      debug && console.error(\"falling back to prompt\");\n      message = format(\"message\" in options ? options.message : defaultMessage);\n      window.prompt(message, text);\n    }\n  } finally {\n    if (selection) {\n      if (typeof selection.removeRange == \"function\") {\n        selection.removeRange(range);\n      } else {\n        selection.removeAllRanges();\n      }\n    }\n\n    if (mark) {\n      document.body.removeChild(mark);\n    }\n    reselectPrevious();\n  }\n\n  return success;\n}\n\nmodule.exports = copy;\n","import { enqueueRender } from './component';\n\nexport let i = 0;\n\nexport function createContext(defaultValue) {\n\tconst ctx = {};\n\n\tconst context = {\n\t\t_id: '__cC' + i++,\n\t\t_defaultValue: defaultValue,\n\t\tConsumer(props, context) {\n\t\t\treturn props.children(context);\n\t\t},\n\t\tProvider(props) {\n\t\t\tif (!this.getChildContext) {\n\t\t\t\tconst subs = [];\n\t\t\t\tthis.getChildContext = () => {\n\t\t\t\t\tctx[context._id] = this;\n\t\t\t\t\treturn ctx;\n\t\t\t\t};\n\n\t\t\t\tthis.shouldComponentUpdate = _props => {\n\t\t\t\t\tif (this.props.value !== _props.value) {\n\t\t\t\t\t\tsubs.some(c => {\n\t\t\t\t\t\t\tc.context = _props.value;\n\t\t\t\t\t\t\tenqueueRender(c);\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\tthis.sub = c => {\n\t\t\t\t\tsubs.push(c);\n\t\t\t\t\tlet old = c.componentWillUnmount;\n\t\t\t\t\tc.componentWillUnmount = () => {\n\t\t\t\t\t\tsubs.splice(subs.indexOf(c), 1);\n\t\t\t\t\t\told && old.call(c);\n\t\t\t\t\t};\n\t\t\t\t};\n\t\t\t}\n\n\t\t\treturn props.children;\n\t\t}\n\t};\n\n\tcontext.Consumer.contextType = context;\n\n\t// Devtools needs access to the context object when it\n\t// encounters a Provider. This is necessary to support\n\t// setting `displayName` on the context object instead\n\t// of on the component itself. See:\n\t// https://reactjs.org/docs/context.html#contextdisplayname\n\tcontext.Provider._contextRef = context;\n\n\treturn context;\n}\n","export const EMPTY_OBJ = {};\nexport const EMPTY_ARR = [];\nexport const IS_NON_DIMENSIONAL = /acit|ex(?:s|g|n|p|$)|rph|grid|ows|mnc|ntw|ine[ch]|zoo|^ord/i;\n","import { _catchError } from './diff/catch-error';\n\n/**\n * The `option` object can potentially contain callback functions\n * that are called during various stages of our renderer. This is the\n * foundation on which all our addons like `preact/debug`, `preact/compat`,\n * and `preact/hooks` are based on. See the `Options` type in `internal.d.ts`\n * for a full list of available option hooks (most editors/IDEs allow you to\n * ctrl+click or cmd+click on mac the type definition below).\n * @type {import('./internal').Options}\n */\nconst options = {\n\t_catchError\n};\n\nexport default options;\n","import options from './options';\n\n/**\n * Create an virtual node (used for JSX)\n * @param {import('./internal').VNode[\"type\"]} type The node name or Component\n * constructor for this virtual node\n * @param {object | null | undefined} [props] The properties of the virtual node\n * @param {Array<import('.').ComponentChildren>} [children] The children of the virtual node\n * @returns {import('./internal').VNode}\n */\nexport function createElement(type, props, children) {\n\tlet normalizedProps = {},\n\t\ti;\n\tfor (i in props) {\n\t\tif (i !== 'key' && i !== 'ref') normalizedProps[i] = props[i];\n\t}\n\n\tif (arguments.length > 3) {\n\t\tchildren = [children];\n\t\t// https://github.com/preactjs/preact/issues/1916\n\t\tfor (i = 3; i < arguments.length; i++) {\n\t\t\tchildren.push(arguments[i]);\n\t\t}\n\t}\n\tif (children != null) {\n\t\tnormalizedProps.children = children;\n\t}\n\n\t// If a Component VNode, check for and apply defaultProps\n\t// Note: type may be undefined in development, must never error here.\n\tif (typeof type == 'function' && type.defaultProps != null) {\n\t\tfor (i in type.defaultProps) {\n\t\t\tif (normalizedProps[i] === undefined) {\n\t\t\t\tnormalizedProps[i] = type.defaultProps[i];\n\t\t\t}\n\t\t}\n\t}\n\n\treturn createVNode(\n\t\ttype,\n\t\tnormalizedProps,\n\t\tprops && props.key,\n\t\tprops && props.ref,\n\t\tnull\n\t);\n}\n\n/**\n * Create a VNode (used internally by Preact)\n * @param {import('./internal').VNode[\"type\"]} type The node name or Component\n * Constructor for this virtual node\n * @param {object | string | number | null} props The properties of this virtual node.\n * If this virtual node represents a text node, this is the text of the node (string or number).\n * @param {string | number | null} key The key for this virtual node, used when\n * diffing it against its children\n * @param {import('./internal').VNode[\"ref\"]} ref The ref property that will\n * receive a reference to its created child\n * @returns {import('./internal').VNode}\n */\nexport function createVNode(type, props, key, ref, original) {\n\t// V8 seems to be better at detecting type shapes if the object is allocated from the same call site\n\t// Do not inline into createElement and coerceToVNode!\n\tconst vnode = {\n\t\ttype,\n\t\tprops,\n\t\tkey,\n\t\tref,\n\t\t_children: null,\n\t\t_parent: null,\n\t\t_depth: 0,\n\t\t_dom: null,\n\t\t// _nextDom must be initialized to undefined b/c it will eventually\n\t\t// be set to dom.nextSibling which can return `null` and it is important\n\t\t// to be able to distinguish between an uninitialized _nextDom and\n\t\t// a _nextDom that has been set to `null`\n\t\t_nextDom: undefined,\n\t\t_component: null,\n\t\tconstructor: undefined,\n\t\t_original: original\n\t};\n\n\tif (original == null) vnode._original = vnode;\n\tif (options.vnode) options.vnode(vnode);\n\n\treturn vnode;\n}\n\nexport function createRef() {\n\treturn {};\n}\n\nexport function Fragment(props) {\n\treturn props.children;\n}\n\n/**\n * Check if a the argument is a valid Preact VNode.\n * @param {*} vnode\n * @returns {vnode is import('./internal').VNode}\n */\nexport const isValidElement = vnode =>\n\tvnode != null && vnode.constructor === undefined;\n","import { assign } from './util';\nimport { diff, commitRoot } from './diff/index';\nimport options from './options';\nimport { Fragment } from './create-element';\n\n/**\n * Base Component class. Provides `setState()` and `forceUpdate()`, which\n * trigger rendering\n * @param {object} props The initial component props\n * @param {object} context The initial context from parent components'\n * getChildContext\n */\nexport function Component(props, context) {\n\tthis.props = props;\n\tthis.context = context;\n}\n\n/**\n * Update component state and schedule a re-render.\n * @param {object | ((s: object, p: object) => object)} update A hash of state\n * properties to update with new values or a function that given the current\n * state and props returns a new partial state\n * @param {() => void} [callback] A function to be called once component state is\n * updated\n */\nComponent.prototype.setState = function(update, callback) {\n\t// only clone state when copying to nextState the first time.\n\tlet s;\n\tif (this._nextState !== this.state) {\n\t\ts = this._nextState;\n\t} else {\n\t\ts = this._nextState = assign({}, this.state);\n\t}\n\n\tif (typeof update == 'function') {\n\t\tupdate = update(s, this.props);\n\t}\n\n\tif (update) {\n\t\tassign(s, update);\n\t}\n\n\t// Skip update if updater function returned null\n\tif (update == null) return;\n\n\tif (this._vnode) {\n\t\tif (callback) this._renderCallbacks.push(callback);\n\t\tenqueueRender(this);\n\t}\n};\n\n/**\n * Immediately perform a synchronous re-render of the component\n * @param {() => void} [callback] A function to be called after component is\n * re-rendered\n */\nComponent.prototype.forceUpdate = function(callback) {\n\tif (this._vnode) {\n\t\t// Set render mode so that we can differentiate where the render request\n\t\t// is coming from. We need this because forceUpdate should never call\n\t\t// shouldComponentUpdate\n\t\tthis._force = true;\n\t\tif (callback) this._renderCallbacks.push(callback);\n\t\tenqueueRender(this);\n\t}\n};\n\n/**\n * Accepts `props` and `state`, and returns a new Virtual DOM tree to build.\n * Virtual DOM is generally constructed via [JSX](http://jasonformat.com/wtf-is-jsx).\n * @param {object} props Props (eg: JSX attributes) received from parent\n * element/component\n * @param {object} state The component's current state\n * @param {object} context Context object, as returned by the nearest\n * ancestor's `getChildContext()`\n * @returns {import('./index').ComponentChildren | void}\n */\nComponent.prototype.render = Fragment;\n\n/**\n * @param {import('./internal').VNode} vnode\n * @param {number | null} [childIndex]\n */\nexport function getDomSibling(vnode, childIndex) {\n\tif (childIndex == null) {\n\t\t// Use childIndex==null as a signal to resume the search from the vnode's sibling\n\t\treturn vnode._parent\n\t\t\t? getDomSibling(vnode._parent, vnode._parent._children.indexOf(vnode) + 1)\n\t\t\t: null;\n\t}\n\n\tlet sibling;\n\tfor (; childIndex < vnode._children.length; childIndex++) {\n\t\tsibling = vnode._children[childIndex];\n\n\t\tif (sibling != null && sibling._dom != null) {\n\t\t\t// Since updateParentDomPointers keeps _dom pointer correct,\n\t\t\t// we can rely on _dom to tell us if this subtree contains a\n\t\t\t// rendered DOM node, and what the first rendered DOM node is\n\t\t\treturn sibling._dom;\n\t\t}\n\t}\n\n\t// If we get here, we have not found a DOM node in this vnode's children.\n\t// We must resume from this vnode's sibling (in it's parent _children array)\n\t// Only climb up and search the parent if we aren't searching through a DOM\n\t// VNode (meaning we reached the DOM parent of the original vnode that began\n\t// the search)\n\treturn typeof vnode.type == 'function' ? getDomSibling(vnode) : null;\n}\n\n/**\n * Trigger in-place re-rendering of a component.\n * @param {import('./internal').Component} component The component to rerender\n */\nfunction renderComponent(component) {\n\tlet vnode = component._vnode,\n\t\toldDom = vnode._dom,\n\t\tparentDom = component._parentDom;\n\n\tif (parentDom) {\n\t\tlet commitQueue = [];\n\t\tconst oldVNode = assign({}, vnode);\n\t\toldVNode._original = oldVNode;\n\n\t\tlet newDom = diff(\n\t\t\tparentDom,\n\t\t\tvnode,\n\t\t\toldVNode,\n\t\t\tcomponent._globalContext,\n\t\t\tparentDom.ownerSVGElement !== undefined,\n\t\t\tnull,\n\t\t\tcommitQueue,\n\t\t\toldDom == null ? getDomSibling(vnode) : oldDom\n\t\t);\n\t\tcommitRoot(commitQueue, vnode);\n\n\t\tif (newDom != oldDom) {\n\t\t\tupdateParentDomPointers(vnode);\n\t\t}\n\t}\n}\n\n/**\n * @param {import('./internal').VNode} vnode\n */\nfunction updateParentDomPointers(vnode) {\n\tif ((vnode = vnode._parent) != null && vnode._component != null) {\n\t\tvnode._dom = vnode._component.base = null;\n\t\tfor (let i = 0; i < vnode._children.length; i++) {\n\t\t\tlet child = vnode._children[i];\n\t\t\tif (child != null && child._dom != null) {\n\t\t\t\tvnode._dom = vnode._component.base = child._dom;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\treturn updateParentDomPointers(vnode);\n\t}\n}\n\n/**\n * The render queue\n * @type {Array<import('./internal').Component>}\n */\nlet rerenderQueue = [];\nlet rerenderCount = 0;\n\n/**\n * Asynchronously schedule a callback\n * @type {(cb: () => void) => void}\n */\n/* istanbul ignore next */\n// Note the following line isn't tree-shaken by rollup cuz of rollup/rollup#2566\nconst defer =\n\ttypeof Promise == 'function'\n\t\t? Promise.prototype.then.bind(Promise.resolve())\n\t\t: setTimeout;\n\n/*\n * The value of `Component.debounce` must asynchronously invoke the passed in callback. It is\n * important that contributors to Preact can consistently reason about what calls to `setState`, etc.\n * do, and when their effects will be applied. See the links below for some further reading on designing\n * asynchronous APIs.\n * * [Designing APIs for Asynchrony](https://blog.izs.me/2013/08/designing-apis-for-asynchrony)\n * * [Callbacks synchronous and asynchronous](https://blog.ometer.com/2011/07/24/callbacks-synchronous-and-asynchronous/)\n */\n\nlet prevDebounce;\n\n/**\n * Enqueue a rerender of a component\n * @param {import('./internal').Component} c The component to rerender\n */\nexport function enqueueRender(c) {\n\tif (\n\t\t(!c._dirty &&\n\t\t\t(c._dirty = true) &&\n\t\t\trerenderQueue.push(c) &&\n\t\t\t!rerenderCount++) ||\n\t\tprevDebounce !== options.debounceRendering\n\t) {\n\t\tprevDebounce = options.debounceRendering;\n\t\t(prevDebounce || defer)(process);\n\t}\n}\n\n/** Flush the render queue by rerendering all queued components */\nfunction process() {\n\tlet queue;\n\twhile ((rerenderCount = rerenderQueue.length)) {\n\t\tqueue = rerenderQueue.sort((a, b) => a._vnode._depth - b._vnode._depth);\n\t\trerenderQueue = [];\n\t\t// Don't update `renderCount` yet. Keep its value non-zero to prevent unnecessary\n\t\t// process() calls from getting scheduled while `queue` is still being consumed.\n\t\tqueue.some(c => {\n\t\t\tif (c._dirty) renderComponent(c);\n\t\t});\n\t}\n}\n","import { EMPTY_OBJ, EMPTY_ARR } from './constants';\nimport { commitRoot, diff } from './diff/index';\nimport { createElement, Fragment } from './create-element';\nimport options from './options';\n\nconst IS_HYDRATE = EMPTY_OBJ;\n\n/**\n * Render a Preact virtual node into a DOM element\n * @param {import('./index').ComponentChild} vnode The virtual node to render\n * @param {import('./internal').PreactElement} parentDom The DOM element to\n * render into\n * @param {Element | Text} [replaceNode] Optional: Attempt to re-use an\n * existing DOM tree rooted at `replaceNode`\n */\nexport function render(vnode, parentDom, replaceNode) {\n\tif (options._root) options._root(vnode, parentDom);\n\n\t// We abuse the `replaceNode` parameter in `hydrate()` to signal if we\n\t// are in hydration mode or not by passing `IS_HYDRATE` instead of a\n\t// DOM element.\n\tlet isHydrating = replaceNode === IS_HYDRATE;\n\n\t// To be able to support calling `render()` multiple times on the same\n\t// DOM node, we need to obtain a reference to the previous tree. We do\n\t// this by assigning a new `_children` property to DOM nodes which points\n\t// to the last rendered tree. By default this property is not present, which\n\t// means that we are mounting a new tree for the first time.\n\tlet oldVNode = isHydrating\n\t\t? null\n\t\t: (replaceNode && replaceNode._children) || parentDom._children;\n\tvnode = createElement(Fragment, null, [vnode]);\n\n\t// List of effects that need to be called after diffing.\n\tlet commitQueue = [];\n\tdiff(\n\t\tparentDom,\n\t\t// Determine the new vnode tree and store it on the DOM element on\n\t\t// our custom `_children` property.\n\t\t((isHydrating ? parentDom : replaceNode || parentDom)._children = vnode),\n\t\toldVNode || EMPTY_OBJ,\n\t\tEMPTY_OBJ,\n\t\tparentDom.ownerSVGElement !== undefined,\n\t\treplaceNode && !isHydrating\n\t\t\t? [replaceNode]\n\t\t\t: oldVNode\n\t\t\t? null\n\t\t\t: EMPTY_ARR.slice.call(parentDom.childNodes),\n\t\tcommitQueue,\n\t\treplaceNode || EMPTY_OBJ,\n\t\tisHydrating\n\t);\n\n\t// Flush all queued effects\n\tcommitRoot(commitQueue, vnode);\n}\n\n/**\n * Update an existing DOM element with data from a Preact virtual node\n * @param {import('./index').ComponentChild} vnode The virtual node to render\n * @param {import('./internal').PreactElement} parentDom The DOM element to\n * update\n */\nexport function hydrate(vnode, parentDom) {\n\trender(vnode, parentDom, IS_HYDRATE);\n}\n","/**\n * Assign properties from `props` to `obj`\n * @template O, P The obj and props types\n * @param {O} obj The object to copy properties to\n * @param {P} props The object to copy properties from\n * @returns {O & P}\n */\nexport function assign(obj, props) {\n\tfor (let i in props) obj[i] = props[i];\n\treturn /** @type {O & P} */ (obj);\n}\n\n/**\n * Remove a child node from its parent if attached. This is a workaround for\n * IE11 which doesn't support `Element.prototype.remove()`. Using this function\n * is smaller than including a dedicated polyfill.\n * @param {Node} node The node to remove\n */\nexport function removeNode(node) {\n\tlet parentNode = node.parentNode;\n\tif (parentNode) parentNode.removeChild(node);\n}\n","import { diff, unmount, applyRef } from './index';\nimport { createVNode } from '../create-element';\nimport { EMPTY_OBJ, EMPTY_ARR } from '../constants';\nimport { removeNode } from '../util';\nimport { getDomSibling } from '../component';\n\n/**\n * Diff the children of a virtual node\n * @param {import('../internal').PreactElement} parentDom The DOM element whose\n * children are being diffed\n * @param {import('../internal').VNode} newParentVNode The new virtual\n * node whose children should be diff'ed against oldParentVNode\n * @param {import('../internal').VNode} oldParentVNode The old virtual\n * node whose children should be diff'ed against newParentVNode\n * @param {object} globalContext The current context object - modified by getChildContext\n * @param {boolean} isSvg Whether or not this DOM node is an SVG node\n * @param {Array<import('../internal').PreactElement>} excessDomChildren\n * @param {Array<import('../internal').Component>} commitQueue List of components\n * which have callbacks to invoke in commitRoot\n * @param {Node | Text} oldDom The current attached DOM\n * element any new dom elements should be placed around. Likely `null` on first\n * render (except when hydrating). Can be a sibling DOM element when diffing\n * Fragments that have siblings. In most cases, it starts out as `oldChildren[0]._dom`.\n * @param {boolean} isHydrating Whether or not we are in hydration\n */\nexport function diffChildren(\n\tparentDom,\n\tnewParentVNode,\n\toldParentVNode,\n\tglobalContext,\n\tisSvg,\n\texcessDomChildren,\n\tcommitQueue,\n\toldDom,\n\tisHydrating\n) {\n\tlet i, j, oldVNode, newDom, sibDom, firstChildDom, refs;\n\n\t// This is a compression of oldParentVNode!=null && oldParentVNode != EMPTY_OBJ && oldParentVNode._children || EMPTY_ARR\n\t// as EMPTY_OBJ._children should be `undefined`.\n\tlet oldChildren = (oldParentVNode && oldParentVNode._children) || EMPTY_ARR;\n\n\tlet oldChildrenLength = oldChildren.length;\n\n\t// Only in very specific places should this logic be invoked (top level `render` and `diffElementNodes`).\n\t// I'm using `EMPTY_OBJ` to signal when `diffChildren` is invoked in these situations. I can't use `null`\n\t// for this purpose, because `null` is a valid value for `oldDom` which can mean to skip to this logic\n\t// (e.g. if mounting a new tree in which the old DOM should be ignored (usually for Fragments).\n\tif (oldDom == EMPTY_OBJ) {\n\t\tif (excessDomChildren != null) {\n\t\t\toldDom = excessDomChildren[0];\n\t\t} else if (oldChildrenLength) {\n\t\t\toldDom = getDomSibling(oldParentVNode, 0);\n\t\t} else {\n\t\t\toldDom = null;\n\t\t}\n\t}\n\n\ti = 0;\n\tnewParentVNode._children = toChildArray(\n\t\tnewParentVNode._children,\n\t\tchildVNode => {\n\t\t\tif (childVNode != null) {\n\t\t\t\tchildVNode._parent = newParentVNode;\n\t\t\t\tchildVNode._depth = newParentVNode._depth + 1;\n\n\t\t\t\t// Check if we find a corresponding element in oldChildren.\n\t\t\t\t// If found, delete the array item by setting to `undefined`.\n\t\t\t\t// We use `undefined`, as `null` is reserved for empty placeholders\n\t\t\t\t// (holes).\n\t\t\t\toldVNode = oldChildren[i];\n\n\t\t\t\tif (\n\t\t\t\t\toldVNode === null ||\n\t\t\t\t\t(oldVNode &&\n\t\t\t\t\t\tchildVNode.key == oldVNode.key &&\n\t\t\t\t\t\tchildVNode.type === oldVNode.type)\n\t\t\t\t) {\n\t\t\t\t\toldChildren[i] = undefined;\n\t\t\t\t} else {\n\t\t\t\t\t// Either oldVNode === undefined or oldChildrenLength > 0,\n\t\t\t\t\t// so after this loop oldVNode == null or oldVNode is a valid value.\n\t\t\t\t\tfor (j = 0; j < oldChildrenLength; j++) {\n\t\t\t\t\t\toldVNode = oldChildren[j];\n\t\t\t\t\t\t// If childVNode is unkeyed, we only match similarly unkeyed nodes, otherwise we match by key.\n\t\t\t\t\t\t// We always match by type (in either case).\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\toldVNode &&\n\t\t\t\t\t\t\tchildVNode.key == oldVNode.key &&\n\t\t\t\t\t\t\tchildVNode.type === oldVNode.type\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\toldChildren[j] = undefined;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\toldVNode = null;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\toldVNode = oldVNode || EMPTY_OBJ;\n\n\t\t\t\t// Morph the old element into the new one, but don't append it to the dom yet\n\t\t\t\tnewDom = diff(\n\t\t\t\t\tparentDom,\n\t\t\t\t\tchildVNode,\n\t\t\t\t\toldVNode,\n\t\t\t\t\tglobalContext,\n\t\t\t\t\tisSvg,\n\t\t\t\t\texcessDomChildren,\n\t\t\t\t\tcommitQueue,\n\t\t\t\t\toldDom,\n\t\t\t\t\tisHydrating\n\t\t\t\t);\n\n\t\t\t\tif ((j = childVNode.ref) && oldVNode.ref != j) {\n\t\t\t\t\tif (!refs) refs = [];\n\t\t\t\t\tif (oldVNode.ref) refs.push(oldVNode.ref, null, childVNode);\n\t\t\t\t\trefs.push(j, childVNode._component || newDom, childVNode);\n\t\t\t\t}\n\n\t\t\t\t// Only proceed if the vnode has not been unmounted by `diff()` above.\n\t\t\t\tif (newDom != null) {\n\t\t\t\t\tif (firstChildDom == null) {\n\t\t\t\t\t\tfirstChildDom = newDom;\n\t\t\t\t\t}\n\n\t\t\t\t\tlet nextDom;\n\t\t\t\t\tif (childVNode._nextDom !== undefined) {\n\t\t\t\t\t\t// Only Fragments or components that return Fragment like VNodes will\n\t\t\t\t\t\t// have a non-undefined _nextDom. Continue the diff from the sibling\n\t\t\t\t\t\t// of last DOM child of this child VNode\n\t\t\t\t\t\tnextDom = childVNode._nextDom;\n\n\t\t\t\t\t\t// Eagerly cleanup _nextDom. We don't need to persist the value because\n\t\t\t\t\t\t// it is only used by `diffChildren` to determine where to resume the diff after\n\t\t\t\t\t\t// diffing Components and Fragments. Once we store it the nextDOM local var, we\n\t\t\t\t\t\t// can clean up the property\n\t\t\t\t\t\tchildVNode._nextDom = undefined;\n\t\t\t\t\t} else if (\n\t\t\t\t\t\texcessDomChildren == oldVNode ||\n\t\t\t\t\t\tnewDom != oldDom ||\n\t\t\t\t\t\tnewDom.parentNode == null\n\t\t\t\t\t) {\n\t\t\t\t\t\t// NOTE: excessDomChildren==oldVNode above:\n\t\t\t\t\t\t// This is a compression of excessDomChildren==null && oldVNode==null!\n\t\t\t\t\t\t// The values only have the same type when `null`.\n\n\t\t\t\t\t\touter: if (oldDom == null || oldDom.parentNode !== parentDom) {\n\t\t\t\t\t\t\tparentDom.appendChild(newDom);\n\t\t\t\t\t\t\tnextDom = null;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// `j<oldChildrenLength; j+=2` is an alternative to `j++<oldChildrenLength/2`\n\t\t\t\t\t\t\tfor (\n\t\t\t\t\t\t\t\tsibDom = oldDom, j = 0;\n\t\t\t\t\t\t\t\t(sibDom = sibDom.nextSibling) && j < oldChildrenLength;\n\t\t\t\t\t\t\t\tj += 2\n\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\tif (sibDom == newDom) {\n\t\t\t\t\t\t\t\t\tbreak outer;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tparentDom.insertBefore(newDom, oldDom);\n\t\t\t\t\t\t\tnextDom = oldDom;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Browsers will infer an option's `value` from `textContent` when\n\t\t\t\t\t\t// no value is present. This essentially bypasses our code to set it\n\t\t\t\t\t\t// later in `diff()`. It works fine in all browsers except for IE11\n\t\t\t\t\t\t// where it breaks setting `select.value`. There it will be always set\n\t\t\t\t\t\t// to an empty string. Re-applying an options value will fix that, so\n\t\t\t\t\t\t// there are probably some internal data structures that aren't\n\t\t\t\t\t\t// updated properly.\n\t\t\t\t\t\t//\n\t\t\t\t\t\t// To fix it we make sure to reset the inferred value, so that our own\n\t\t\t\t\t\t// value check in `diff()` won't be skipped.\n\t\t\t\t\t\tif (newParentVNode.type == 'option') {\n\t\t\t\t\t\t\tparentDom.value = '';\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// If we have pre-calculated the nextDOM node, use it. Else calculate it now\n\t\t\t\t\t// Strictly check for `undefined` here cuz `null` is a valid value of `nextDom`.\n\t\t\t\t\t// See more detail in create-element.js:createVNode\n\t\t\t\t\tif (nextDom !== undefined) {\n\t\t\t\t\t\toldDom = nextDom;\n\t\t\t\t\t} else {\n\t\t\t\t\t\toldDom = newDom.nextSibling;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (typeof newParentVNode.type == 'function') {\n\t\t\t\t\t\t// Because the newParentVNode is Fragment-like, we need to set it's\n\t\t\t\t\t\t// _nextDom property to the nextSibling of its last child DOM node.\n\t\t\t\t\t\t//\n\t\t\t\t\t\t// `oldDom` contains the correct value here because if the last child\n\t\t\t\t\t\t// is a Fragment-like, then oldDom has already been set to that child's _nextDom.\n\t\t\t\t\t\t// If the last child is a DOM VNode, then oldDom will be set to that DOM\n\t\t\t\t\t\t// node's nextSibling.\n\n\t\t\t\t\t\tnewParentVNode._nextDom = oldDom;\n\t\t\t\t\t}\n\t\t\t\t} else if (\n\t\t\t\t\toldDom &&\n\t\t\t\t\toldVNode._dom == oldDom &&\n\t\t\t\t\toldDom.parentNode != parentDom\n\t\t\t\t) {\n\t\t\t\t\t// The above condition is to handle null placeholders. See test in placeholder.test.js:\n\t\t\t\t\t// `efficiently replace null placeholders in parent rerenders`\n\t\t\t\t\toldDom = getDomSibling(oldVNode);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ti++;\n\t\t\treturn childVNode;\n\t\t}\n\t);\n\n\tnewParentVNode._dom = firstChildDom;\n\n\t// Remove children that are not part of any vnode.\n\tif (excessDomChildren != null && typeof newParentVNode.type != 'function') {\n\t\tfor (i = excessDomChildren.length; i--; ) {\n\t\t\tif (excessDomChildren[i] != null) removeNode(excessDomChildren[i]);\n\t\t}\n\t}\n\n\t// Remove remaining oldChildren if there are any.\n\tfor (i = oldChildrenLength; i--; ) {\n\t\tif (oldChildren[i] != null) unmount(oldChildren[i], oldChildren[i]);\n\t}\n\n\t// Set refs only after unmount\n\tif (refs) {\n\t\tfor (i = 0; i < refs.length; i++) {\n\t\t\tapplyRef(refs[i], refs[++i], refs[++i]);\n\t\t}\n\t}\n}\n\n/**\n * Flatten and loop through the children of a virtual node\n * @param {import('../index').ComponentChildren} children The unflattened\n * children of a virtual node\n * @param {(vnode: import('../internal').VNode) => import('../internal').VNode} [callback]\n * A function to invoke for each child before it is added to the flattened list.\n * @param {Array<import('../internal').VNode | string | number>} [flattened] An flat array of children to modify\n * @returns {import('../internal').VNode[]}\n */\nexport function toChildArray(children, callback, flattened) {\n\tif (flattened == null) flattened = [];\n\n\tif (children == null || typeof children == 'boolean') {\n\t\tif (callback) flattened.push(callback(null));\n\t} else if (Array.isArray(children)) {\n\t\tfor (let i = 0; i < children.length; i++) {\n\t\t\ttoChildArray(children[i], callback, flattened);\n\t\t}\n\t} else if (!callback) {\n\t\tflattened.push(children);\n\t} else if (typeof children == 'string' || typeof children == 'number') {\n\t\tflattened.push(callback(createVNode(null, children, null, null, children)));\n\t} else if (children._dom != null || children._component != null) {\n\t\tflattened.push(\n\t\t\tcallback(\n\t\t\t\tcreateVNode(\n\t\t\t\t\tchildren.type,\n\t\t\t\t\tchildren.props,\n\t\t\t\t\tchildren.key,\n\t\t\t\t\tnull,\n\t\t\t\t\tchildren._original\n\t\t\t\t)\n\t\t\t)\n\t\t);\n\t} else {\n\t\tflattened.push(callback(children));\n\t}\n\n\treturn flattened;\n}\n","import { IS_NON_DIMENSIONAL } from '../constants';\nimport options from '../options';\n\n/**\n * Diff the old and new properties of a VNode and apply changes to the DOM node\n * @param {import('../internal').PreactElement} dom The DOM node to apply\n * changes to\n * @param {object} newProps The new props\n * @param {object} oldProps The old props\n * @param {boolean} isSvg Whether or not this node is an SVG node\n * @param {boolean} hydrate Whether or not we are in hydration mode\n */\nexport function diffProps(dom, newProps, oldProps, isSvg, hydrate) {\n\tlet i;\n\n\tfor (i in oldProps) {\n\t\tif (i !== 'children' && i !== 'key' && !(i in newProps)) {\n\t\t\tsetProperty(dom, i, null, oldProps[i], isSvg);\n\t\t}\n\t}\n\n\tfor (i in newProps) {\n\t\tif (\n\t\t\t(!hydrate || typeof newProps[i] == 'function') &&\n\t\t\ti !== 'children' &&\n\t\t\ti !== 'key' &&\n\t\t\ti !== 'value' &&\n\t\t\ti !== 'checked' &&\n\t\t\toldProps[i] !== newProps[i]\n\t\t) {\n\t\t\tsetProperty(dom, i, newProps[i], oldProps[i], isSvg);\n\t\t}\n\t}\n}\n\nfunction setStyle(style, key, value) {\n\tif (key[0] === '-') {\n\t\tstyle.setProperty(key, value);\n\t} else if (\n\t\ttypeof value == 'number' &&\n\t\tIS_NON_DIMENSIONAL.test(key) === false\n\t) {\n\t\tstyle[key] = value + 'px';\n\t} else if (value == null) {\n\t\tstyle[key] = '';\n\t} else {\n\t\tstyle[key] = value;\n\t}\n}\n\n/**\n * Set a property value on a DOM node\n * @param {import('../internal').PreactElement} dom The DOM node to modify\n * @param {string} name The name of the property to set\n * @param {*} value The value to set the property to\n * @param {*} oldValue The old value the property had\n * @param {boolean} isSvg Whether or not this DOM node is an SVG node or not\n */\nexport function setProperty(dom, name, value, oldValue, isSvg) {\n\tlet s, useCapture, nameLower;\n\n\tif (isSvg) {\n\t\tif (name === 'className') {\n\t\t\tname = 'class';\n\t\t}\n\t} else if (name === 'class') {\n\t\tname = 'className';\n\t}\n\n\tif (name === 'style') {\n\t\ts = dom.style;\n\n\t\tif (typeof value == 'string') {\n\t\t\ts.cssText = value;\n\t\t} else {\n\t\t\tif (typeof oldValue == 'string') {\n\t\t\t\ts.cssText = '';\n\t\t\t\toldValue = null;\n\t\t\t}\n\n\t\t\tif (oldValue) {\n\t\t\t\tfor (let i in oldValue) {\n\t\t\t\t\tif (!(value && i in value)) {\n\t\t\t\t\t\tsetStyle(s, i, '');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (value) {\n\t\t\t\tfor (let i in value) {\n\t\t\t\t\tif (!oldValue || value[i] !== oldValue[i]) {\n\t\t\t\t\t\tsetStyle(s, i, value[i]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t// Benchmark for comparison: https://esbench.com/bench/574c954bdb965b9a00965ac6\n\telse if (name[0] === 'o' && name[1] === 'n') {\n\t\tuseCapture = name !== (name = name.replace(/Capture$/, ''));\n\t\tnameLower = name.toLowerCase();\n\t\tname = (nameLower in dom ? nameLower : name).slice(2);\n\n\t\tif (value) {\n\t\t\tif (!oldValue) dom.addEventListener(name, eventProxy, useCapture);\n\t\t\t(dom._listeners || (dom._listeners = {}))[name] = value;\n\t\t} else {\n\t\t\tdom.removeEventListener(name, eventProxy, useCapture);\n\t\t}\n\t} else if (\n\t\tname !== 'list' &&\n\t\tname !== 'tagName' &&\n\t\t// HTMLButtonElement.form and HTMLInputElement.form are read-only but can be set using\n\t\t// setAttribute\n\t\tname !== 'form' &&\n\t\tname !== 'type' &&\n\t\tname !== 'size' &&\n\t\t!isSvg &&\n\t\tname in dom\n\t) {\n\t\tdom[name] = value == null ? '' : value;\n\t} else if (typeof value != 'function' && name !== 'dangerouslySetInnerHTML') {\n\t\tif (name !== (name = name.replace(/^xlink:?/, ''))) {\n\t\t\tif (value == null || value === false) {\n\t\t\t\tdom.removeAttributeNS(\n\t\t\t\t\t'http://www.w3.org/1999/xlink',\n\t\t\t\t\tname.toLowerCase()\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tdom.setAttributeNS(\n\t\t\t\t\t'http://www.w3.org/1999/xlink',\n\t\t\t\t\tname.toLowerCase(),\n\t\t\t\t\tvalue\n\t\t\t\t);\n\t\t\t}\n\t\t} else if (\n\t\t\tvalue == null ||\n\t\t\t(value === false &&\n\t\t\t\t// ARIA-attributes have a different notion of boolean values.\n\t\t\t\t// The value `false` is different from the attribute not\n\t\t\t\t// existing on the DOM, so we can't remove it. For non-boolean\n\t\t\t\t// ARIA-attributes we could treat false as a removal, but the\n\t\t\t\t// amount of exceptions would cost us too many bytes. On top of\n\t\t\t\t// that other VDOM frameworks also always stringify `false`.\n\t\t\t\t!/^ar/.test(name))\n\t\t) {\n\t\t\tdom.removeAttribute(name);\n\t\t} else {\n\t\t\tdom.setAttribute(name, value);\n\t\t}\n\t}\n}\n\n/**\n * Proxy an event to hooked event handlers\n * @param {Event} e The event object from the browser\n * @private\n */\nfunction eventProxy(e) {\n\tthis._listeners[e.type](options.event ? options.event(e) : e);\n}\n","import { EMPTY_OBJ, EMPTY_ARR } from '../constants';\nimport { Component } from '../component';\nimport { Fragment } from '../create-element';\nimport { diffChildren } from './children';\nimport { diffProps, setProperty } from './props';\nimport { assign, removeNode } from '../util';\nimport options from '../options';\n\n/**\n * Diff two virtual nodes and apply proper changes to the DOM\n * @param {import('../internal').PreactElement} parentDom The parent of the DOM element\n * @param {import('../internal').VNode} newVNode The new virtual node\n * @param {import('../internal').VNode} oldVNode The old virtual node\n * @param {object} globalContext The current context object. Modified by getChildContext\n * @param {boolean} isSvg Whether or not this element is an SVG node\n * @param {Array<import('../internal').PreactElement>} excessDomChildren\n * @param {Array<import('../internal').Component>} commitQueue List of components\n * which have callbacks to invoke in commitRoot\n * @param {Element | Text} oldDom The current attached DOM\n * element any new dom elements should be placed around. Likely `null` on first\n * render (except when hydrating). Can be a sibling DOM element when diffing\n * Fragments that have siblings. In most cases, it starts out as `oldChildren[0]._dom`.\n * @param {boolean} [isHydrating] Whether or not we are in hydration\n */\nexport function diff(\n\tparentDom,\n\tnewVNode,\n\toldVNode,\n\tglobalContext,\n\tisSvg,\n\texcessDomChildren,\n\tcommitQueue,\n\toldDom,\n\tisHydrating\n) {\n\tlet tmp,\n\t\tnewType = newVNode.type;\n\n\t// When passing through createElement it assigns the object\n\t// constructor as undefined. This to prevent JSON-injection.\n\tif (newVNode.constructor !== undefined) return null;\n\n\tif ((tmp = options._diff)) tmp(newVNode);\n\n\ttry {\n\t\touter: if (typeof newType == 'function') {\n\t\t\tlet c, isNew, oldProps, oldState, snapshot, clearProcessingException;\n\t\t\tlet newProps = newVNode.props;\n\n\t\t\t// Necessary for createContext api. Setting this property will pass\n\t\t\t// the context value as `this.context` just for this component.\n\t\t\ttmp = newType.contextType;\n\t\t\tlet provider = tmp && globalContext[tmp._id];\n\t\t\tlet componentContext = tmp\n\t\t\t\t? provider\n\t\t\t\t\t? provider.props.value\n\t\t\t\t\t: tmp._defaultValue\n\t\t\t\t: globalContext;\n\n\t\t\t// Get component and set it to `c`\n\t\t\tif (oldVNode._component) {\n\t\t\t\tc = newVNode._component = oldVNode._component;\n\t\t\t\tclearProcessingException = c._processingException = c._pendingError;\n\t\t\t} else {\n\t\t\t\t// Instantiate the new component\n\t\t\t\tif ('prototype' in newType && newType.prototype.render) {\n\t\t\t\t\tnewVNode._component = c = new newType(newProps, componentContext); // eslint-disable-line new-cap\n\t\t\t\t} else {\n\t\t\t\t\tnewVNode._component = c = new Component(newProps, componentContext);\n\t\t\t\t\tc.constructor = newType;\n\t\t\t\t\tc.render = doRender;\n\t\t\t\t}\n\t\t\t\tif (provider) provider.sub(c);\n\n\t\t\t\tc.props = newProps;\n\t\t\t\tif (!c.state) c.state = {};\n\t\t\t\tc.context = componentContext;\n\t\t\t\tc._globalContext = globalContext;\n\t\t\t\tisNew = c._dirty = true;\n\t\t\t\tc._renderCallbacks = [];\n\t\t\t}\n\n\t\t\t// Invoke getDerivedStateFromProps\n\t\t\tif (c._nextState == null) {\n\t\t\t\tc._nextState = c.state;\n\t\t\t}\n\t\t\tif (newType.getDerivedStateFromProps != null) {\n\t\t\t\tif (c._nextState == c.state) {\n\t\t\t\t\tc._nextState = assign({}, c._nextState);\n\t\t\t\t}\n\n\t\t\t\tassign(\n\t\t\t\t\tc._nextState,\n\t\t\t\t\tnewType.getDerivedStateFromProps(newProps, c._nextState)\n\t\t\t\t);\n\t\t\t}\n\n\t\t\toldProps = c.props;\n\t\t\toldState = c.state;\n\n\t\t\t// Invoke pre-render lifecycle methods\n\t\t\tif (isNew) {\n\t\t\t\tif (\n\t\t\t\t\tnewType.getDerivedStateFromProps == null &&\n\t\t\t\t\tc.componentWillMount != null\n\t\t\t\t) {\n\t\t\t\t\tc.componentWillMount();\n\t\t\t\t}\n\n\t\t\t\tif (c.componentDidMount != null) {\n\t\t\t\t\tc._renderCallbacks.push(c.componentDidMount);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (\n\t\t\t\t\tnewType.getDerivedStateFromProps == null &&\n\t\t\t\t\tnewProps !== oldProps &&\n\t\t\t\t\tc.componentWillReceiveProps != null\n\t\t\t\t) {\n\t\t\t\t\tc.componentWillReceiveProps(newProps, componentContext);\n\t\t\t\t}\n\n\t\t\t\tif (\n\t\t\t\t\t(!c._force &&\n\t\t\t\t\t\tc.shouldComponentUpdate != null &&\n\t\t\t\t\t\tc.shouldComponentUpdate(\n\t\t\t\t\t\t\tnewProps,\n\t\t\t\t\t\t\tc._nextState,\n\t\t\t\t\t\t\tcomponentContext\n\t\t\t\t\t\t) === false) ||\n\t\t\t\t\t(newVNode._original === oldVNode._original && !c._processingException)\n\t\t\t\t) {\n\t\t\t\t\tc.props = newProps;\n\t\t\t\t\tc.state = c._nextState;\n\t\t\t\t\t// More info about this here: https://gist.github.com/JoviDeCroock/bec5f2ce93544d2e6070ef8e0036e4e8\n\t\t\t\t\tif (newVNode._original !== oldVNode._original) c._dirty = false;\n\t\t\t\t\tc._vnode = newVNode;\n\t\t\t\t\tnewVNode._dom = oldVNode._dom;\n\t\t\t\t\tnewVNode._children = oldVNode._children;\n\t\t\t\t\tif (c._renderCallbacks.length) {\n\t\t\t\t\t\tcommitQueue.push(c);\n\t\t\t\t\t}\n\n\t\t\t\t\tfor (tmp = 0; tmp < newVNode._children.length; tmp++) {\n\t\t\t\t\t\tif (newVNode._children[tmp]) {\n\t\t\t\t\t\t\tnewVNode._children[tmp]._parent = newVNode;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak outer;\n\t\t\t\t}\n\n\t\t\t\tif (c.componentWillUpdate != null) {\n\t\t\t\t\tc.componentWillUpdate(newProps, c._nextState, componentContext);\n\t\t\t\t}\n\n\t\t\t\tif (c.componentDidUpdate != null) {\n\t\t\t\t\tc._renderCallbacks.push(() => {\n\t\t\t\t\t\tc.componentDidUpdate(oldProps, oldState, snapshot);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tc.context = componentContext;\n\t\t\tc.props = newProps;\n\t\t\tc.state = c._nextState;\n\n\t\t\tif ((tmp = options._render)) tmp(newVNode);\n\n\t\t\tc._dirty = false;\n\t\t\tc._vnode = newVNode;\n\t\t\tc._parentDom = parentDom;\n\n\t\t\ttmp = c.render(c.props, c.state, c.context);\n\t\t\tlet isTopLevelFragment =\n\t\t\t\ttmp != null && tmp.type == Fragment && tmp.key == null;\n\t\t\tnewVNode._children = isTopLevelFragment\n\t\t\t\t? tmp.props.children\n\t\t\t\t: Array.isArray(tmp)\n\t\t\t\t? tmp\n\t\t\t\t: [tmp];\n\n\t\t\tif (c.getChildContext != null) {\n\t\t\t\tglobalContext = assign(assign({}, globalContext), c.getChildContext());\n\t\t\t}\n\n\t\t\tif (!isNew && c.getSnapshotBeforeUpdate != null) {\n\t\t\t\tsnapshot = c.getSnapshotBeforeUpdate(oldProps, oldState);\n\t\t\t}\n\n\t\t\tdiffChildren(\n\t\t\t\tparentDom,\n\t\t\t\tnewVNode,\n\t\t\t\toldVNode,\n\t\t\t\tglobalContext,\n\t\t\t\tisSvg,\n\t\t\t\texcessDomChildren,\n\t\t\t\tcommitQueue,\n\t\t\t\toldDom,\n\t\t\t\tisHydrating\n\t\t\t);\n\n\t\t\tc.base = newVNode._dom;\n\n\t\t\tif (c._renderCallbacks.length) {\n\t\t\t\tcommitQueue.push(c);\n\t\t\t}\n\n\t\t\tif (clearProcessingException) {\n\t\t\t\tc._pendingError = c._processingException = null;\n\t\t\t}\n\n\t\t\tc._force = false;\n\t\t} else if (\n\t\t\texcessDomChildren == null &&\n\t\t\tnewVNode._original === oldVNode._original\n\t\t) {\n\t\t\tnewVNode._children = oldVNode._children;\n\t\t\tnewVNode._dom = oldVNode._dom;\n\t\t} else {\n\t\t\tnewVNode._dom = diffElementNodes(\n\t\t\t\toldVNode._dom,\n\t\t\t\tnewVNode,\n\t\t\t\toldVNode,\n\t\t\t\tglobalContext,\n\t\t\t\tisSvg,\n\t\t\t\texcessDomChildren,\n\t\t\t\tcommitQueue,\n\t\t\t\tisHydrating\n\t\t\t);\n\t\t}\n\n\t\tif ((tmp = options.diffed)) tmp(newVNode);\n\t} catch (e) {\n\t\tnewVNode._original = null;\n\t\toptions._catchError(e, newVNode, oldVNode);\n\t}\n\n\treturn newVNode._dom;\n}\n\n/**\n * @param {Array<import('../internal').Component>} commitQueue List of components\n * which have callbacks to invoke in commitRoot\n * @param {import('../internal').VNode} root\n */\nexport function commitRoot(commitQueue, root) {\n\tif (options._commit) options._commit(root, commitQueue);\n\n\tcommitQueue.some(c => {\n\t\ttry {\n\t\t\tcommitQueue = c._renderCallbacks;\n\t\t\tc._renderCallbacks = [];\n\t\t\tcommitQueue.some(cb => {\n\t\t\t\tcb.call(c);\n\t\t\t});\n\t\t} catch (e) {\n\t\t\toptions._catchError(e, c._vnode);\n\t\t}\n\t});\n}\n\n/**\n * Diff two virtual nodes representing DOM element\n * @param {import('../internal').PreactElement} dom The DOM element representing\n * the virtual nodes being diffed\n * @param {import('../internal').VNode} newVNode The new virtual node\n * @param {import('../internal').VNode} oldVNode The old virtual node\n * @param {object} globalContext The current context object\n * @param {boolean} isSvg Whether or not this DOM node is an SVG node\n * @param {*} excessDomChildren\n * @param {Array<import('../internal').Component>} commitQueue List of components\n * which have callbacks to invoke in commitRoot\n * @param {boolean} isHydrating Whether or not we are in hydration\n * @returns {import('../internal').PreactElement}\n */\nfunction diffElementNodes(\n\tdom,\n\tnewVNode,\n\toldVNode,\n\tglobalContext,\n\tisSvg,\n\texcessDomChildren,\n\tcommitQueue,\n\tisHydrating\n) {\n\tlet i;\n\tlet oldProps = oldVNode.props;\n\tlet newProps = newVNode.props;\n\n\t// Tracks entering and exiting SVG namespace when descending through the tree.\n\tisSvg = newVNode.type === 'svg' || isSvg;\n\n\tif (excessDomChildren != null) {\n\t\tfor (i = 0; i < excessDomChildren.length; i++) {\n\t\t\tconst child = excessDomChildren[i];\n\n\t\t\t// if newVNode matches an element in excessDomChildren or the `dom`\n\t\t\t// argument matches an element in excessDomChildren, remove it from\n\t\t\t// excessDomChildren so it isn't later removed in diffChildren\n\t\t\tif (\n\t\t\t\tchild != null &&\n\t\t\t\t((newVNode.type === null\n\t\t\t\t\t? child.nodeType === 3\n\t\t\t\t\t: child.localName === newVNode.type) ||\n\t\t\t\t\tdom == child)\n\t\t\t) {\n\t\t\t\tdom = child;\n\t\t\t\texcessDomChildren[i] = null;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\tif (dom == null) {\n\t\tif (newVNode.type === null) {\n\t\t\treturn document.createTextNode(newProps);\n\t\t}\n\n\t\tdom = isSvg\n\t\t\t? document.createElementNS('http://www.w3.org/2000/svg', newVNode.type)\n\t\t\t: document.createElement(\n\t\t\t\t\tnewVNode.type,\n\t\t\t\t\tnewProps.is && { is: newProps.is }\n\t\t\t  );\n\t\t// we created a new parent, so none of the previously attached children can be reused:\n\t\texcessDomChildren = null;\n\t\t// we are creating a new node, so we can assume this is a new subtree (in case we are hydrating), this deopts the hydrate\n\t\tisHydrating = false;\n\t}\n\n\tif (newVNode.type === null) {\n\t\tif (oldProps !== newProps && dom.data != newProps) {\n\t\t\tdom.data = newProps;\n\t\t}\n\t} else {\n\t\tif (excessDomChildren != null) {\n\t\t\texcessDomChildren = EMPTY_ARR.slice.call(dom.childNodes);\n\t\t}\n\n\t\toldProps = oldVNode.props || EMPTY_OBJ;\n\n\t\tlet oldHtml = oldProps.dangerouslySetInnerHTML;\n\t\tlet newHtml = newProps.dangerouslySetInnerHTML;\n\n\t\t// During hydration, props are not diffed at all (including dangerouslySetInnerHTML)\n\t\t// @TODO we should warn in debug mode when props don't match here.\n\t\tif (!isHydrating) {\n\t\t\tif (oldProps === EMPTY_OBJ) {\n\t\t\t\toldProps = {};\n\t\t\t\tfor (let i = 0; i < dom.attributes.length; i++) {\n\t\t\t\t\toldProps[dom.attributes[i].name] = dom.attributes[i].value;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (newHtml || oldHtml) {\n\t\t\t\t// Avoid re-applying the same '__html' if it did not changed between re-render\n\t\t\t\tif (!newHtml || !oldHtml || newHtml.__html != oldHtml.__html) {\n\t\t\t\t\tdom.innerHTML = (newHtml && newHtml.__html) || '';\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tdiffProps(dom, newProps, oldProps, isSvg, isHydrating);\n\n\t\t// If the new vnode didn't have dangerouslySetInnerHTML, diff its children\n\t\tif (newHtml) {\n\t\t\tnewVNode._children = [];\n\t\t} else {\n\t\t\tnewVNode._children = newVNode.props.children;\n\t\t\tdiffChildren(\n\t\t\t\tdom,\n\t\t\t\tnewVNode,\n\t\t\t\toldVNode,\n\t\t\t\tglobalContext,\n\t\t\t\tnewVNode.type === 'foreignObject' ? false : isSvg,\n\t\t\t\texcessDomChildren,\n\t\t\t\tcommitQueue,\n\t\t\t\tEMPTY_OBJ,\n\t\t\t\tisHydrating\n\t\t\t);\n\t\t}\n\n\t\t// (as above, don't diff props during hydration)\n\t\tif (!isHydrating) {\n\t\t\tif (\n\t\t\t\t'value' in newProps &&\n\t\t\t\t(i = newProps.value) !== undefined &&\n\t\t\t\ti !== dom.value\n\t\t\t) {\n\t\t\t\tsetProperty(dom, 'value', i, oldProps.value, false);\n\t\t\t}\n\t\t\tif (\n\t\t\t\t'checked' in newProps &&\n\t\t\t\t(i = newProps.checked) !== undefined &&\n\t\t\t\ti !== dom.checked\n\t\t\t) {\n\t\t\t\tsetProperty(dom, 'checked', i, oldProps.checked, false);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn dom;\n}\n\n/**\n * Invoke or update a ref, depending on whether it is a function or object ref.\n * @param {object|function} ref\n * @param {any} value\n * @param {import('../internal').VNode} vnode\n */\nexport function applyRef(ref, value, vnode) {\n\ttry {\n\t\tif (typeof ref == 'function') ref(value);\n\t\telse ref.current = value;\n\t} catch (e) {\n\t\toptions._catchError(e, vnode);\n\t}\n}\n\n/**\n * Unmount a virtual node from the tree and apply DOM changes\n * @param {import('../internal').VNode} vnode The virtual node to unmount\n * @param {import('../internal').VNode} parentVNode The parent of the VNode that\n * initiated the unmount\n * @param {boolean} [skipRemove] Flag that indicates that a parent node of the\n * current element is already detached from the DOM.\n */\nexport function unmount(vnode, parentVNode, skipRemove) {\n\tlet r;\n\tif (options.unmount) options.unmount(vnode);\n\n\tif ((r = vnode.ref)) {\n\t\tif (!r.current || r.current === vnode._dom) applyRef(r, null, parentVNode);\n\t}\n\n\tlet dom;\n\tif (!skipRemove && typeof vnode.type != 'function') {\n\t\tskipRemove = (dom = vnode._dom) != null;\n\t}\n\n\t// Must be set to `undefined` to properly clean up `_nextDom`\n\t// for which `null` is a valid value. See comment in `create-element.js`\n\tvnode._dom = vnode._nextDom = undefined;\n\n\tif ((r = vnode._component) != null) {\n\t\tif (r.componentWillUnmount) {\n\t\t\ttry {\n\t\t\t\tr.componentWillUnmount();\n\t\t\t} catch (e) {\n\t\t\t\toptions._catchError(e, parentVNode);\n\t\t\t}\n\t\t}\n\n\t\tr.base = r._parentDom = null;\n\t}\n\n\tif ((r = vnode._children)) {\n\t\tfor (let i = 0; i < r.length; i++) {\n\t\t\tif (r[i]) unmount(r[i], parentVNode, skipRemove);\n\t\t}\n\t}\n\n\tif (dom != null) removeNode(dom);\n}\n\n/** The `.render()` method for a PFC backing instance. */\nfunction doRender(props, state, context) {\n\treturn this.constructor(props, context);\n}\n","import { assign } from './util';\nimport { EMPTY_ARR } from './constants';\nimport { createVNode } from './create-element';\n\n/**\n * Clones the given VNode, optionally adding attributes/props and replacing its children.\n * @param {import('./internal').VNode} vnode The virtual DOM element to clone\n * @param {object} props Attributes/props to add when cloning\n * @param {Array<import('./index').ComponentChildren>} rest Any additional arguments will be used as replacement children.\n * @returns {import('./internal').VNode}\n */\nexport function cloneElement(vnode, props) {\n\tprops = assign(assign({}, vnode.props), props);\n\tif (arguments.length > 2) props.children = EMPTY_ARR.slice.call(arguments, 2);\n\tlet normalizedProps = {};\n\tfor (const i in props) {\n\t\tif (i !== 'key' && i !== 'ref') normalizedProps[i] = props[i];\n\t}\n\n\treturn createVNode(\n\t\tvnode.type,\n\t\tnormalizedProps,\n\t\tprops.key || vnode.key,\n\t\tprops.ref || vnode.ref,\n\t\tnull\n\t);\n}\n","import { enqueueRender } from '../component';\n\n/**\n * Find the closest error boundary to a thrown error and call it\n * @param {object} error The thrown value\n * @param {import('../internal').VNode} vnode The vnode that threw\n * the error that was caught (except for unmounting when this parameter\n * is the highest parent that was being unmounted)\n */\nexport function _catchError(error, vnode) {\n\t/** @type {import('../internal').Component} */\n\tlet component, hasCaught;\n\n\tfor (; (vnode = vnode._parent); ) {\n\t\tif ((component = vnode._component) && !component._processingException) {\n\t\t\ttry {\n\t\t\t\tif (\n\t\t\t\t\tcomponent.constructor &&\n\t\t\t\t\tcomponent.constructor.getDerivedStateFromError != null\n\t\t\t\t) {\n\t\t\t\t\thasCaught = true;\n\t\t\t\t\tcomponent.setState(\n\t\t\t\t\t\tcomponent.constructor.getDerivedStateFromError(error)\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\tif (component.componentDidCatch != null) {\n\t\t\t\t\thasCaught = true;\n\t\t\t\t\tcomponent.componentDidCatch(error);\n\t\t\t\t}\n\n\t\t\t\tif (hasCaught)\n\t\t\t\t\treturn enqueueRender((component._pendingError = component));\n\t\t\t} catch (e) {\n\t\t\t\terror = e;\n\t\t\t}\n\t\t}\n\t}\n\n\tthrow error;\n}\n","import { options } from 'preact';\n\n/** @type {number} */\nlet currentIndex;\n\n/** @type {import('./internal').Component} */\nlet currentComponent;\n\n/** @type {number} */\nlet currentHook = 0;\n\n/** @type {Array<import('./internal').Component>} */\nlet afterPaintEffects = [];\n\nlet oldBeforeRender = options._render;\nlet oldAfterDiff = options.diffed;\nlet oldCommit = options._commit;\nlet oldBeforeUnmount = options.unmount;\n\nconst RAF_TIMEOUT = 100;\nlet prevRaf;\n\noptions._render = vnode => {\n\tif (oldBeforeRender) oldBeforeRender(vnode);\n\n\tcurrentComponent = vnode._component;\n\tcurrentIndex = 0;\n\n\tif (currentComponent.__hooks) {\n\t\tcurrentComponent.__hooks._pendingEffects.forEach(invokeCleanup);\n\t\tcurrentComponent.__hooks._pendingEffects.forEach(invokeEffect);\n\t\tcurrentComponent.__hooks._pendingEffects = [];\n\t}\n};\n\noptions.diffed = vnode => {\n\tif (oldAfterDiff) oldAfterDiff(vnode);\n\n\tconst c = vnode._component;\n\tif (!c) return;\n\n\tconst hooks = c.__hooks;\n\tif (hooks) {\n\t\tif (hooks._pendingEffects.length) {\n\t\t\tafterPaint(afterPaintEffects.push(c));\n\t\t}\n\t}\n};\n\noptions._commit = (vnode, commitQueue) => {\n\tcommitQueue.some(component => {\n\t\ttry {\n\t\t\tcomponent._renderCallbacks.forEach(invokeCleanup);\n\t\t\tcomponent._renderCallbacks = component._renderCallbacks.filter(cb =>\n\t\t\t\tcb._value ? invokeEffect(cb) : true\n\t\t\t);\n\t\t} catch (e) {\n\t\t\tcommitQueue.some(c => {\n\t\t\t\tif (c._renderCallbacks) c._renderCallbacks = [];\n\t\t\t});\n\t\t\tcommitQueue = [];\n\t\t\toptions._catchError(e, component._vnode);\n\t\t}\n\t});\n\n\tif (oldCommit) oldCommit(vnode, commitQueue);\n};\n\noptions.unmount = vnode => {\n\tif (oldBeforeUnmount) oldBeforeUnmount(vnode);\n\n\tconst c = vnode._component;\n\tif (!c) return;\n\n\tconst hooks = c.__hooks;\n\tif (hooks) {\n\t\ttry {\n\t\t\thooks._list.forEach(hook => hook._cleanup && hook._cleanup());\n\t\t} catch (e) {\n\t\t\toptions._catchError(e, c._vnode);\n\t\t}\n\t}\n};\n\n/**\n * Get a hook's state from the currentComponent\n * @param {number} index The index of the hook to get\n * @param {number} type The index of the hook to get\n * @returns {import('./internal').HookState}\n */\nfunction getHookState(index, type) {\n\tif (options._hook) {\n\t\toptions._hook(currentComponent, index, currentHook || type);\n\t}\n\tcurrentHook = 0;\n\n\t// Largely inspired by:\n\t// * https://github.com/michael-klein/funcy.js/blob/f6be73468e6ec46b0ff5aa3cc4c9baf72a29025a/src/hooks/core_hooks.mjs\n\t// * https://github.com/michael-klein/funcy.js/blob/650beaa58c43c33a74820a3c98b3c7079cf2e333/src/renderer.mjs\n\t// Other implementations to look at:\n\t// * https://codesandbox.io/s/mnox05qp8\n\tconst hooks =\n\t\tcurrentComponent.__hooks ||\n\t\t(currentComponent.__hooks = {\n\t\t\t_list: [],\n\t\t\t_pendingEffects: []\n\t\t});\n\n\tif (index >= hooks._list.length) {\n\t\thooks._list.push({});\n\t}\n\treturn hooks._list[index];\n}\n\n/**\n * @param {import('./index').StateUpdater<any>} initialState\n */\nexport function useState(initialState) {\n\tcurrentHook = 1;\n\treturn useReducer(invokeOrReturn, initialState);\n}\n\n/**\n * @param {import('./index').Reducer<any, any>} reducer\n * @param {import('./index').StateUpdater<any>} initialState\n * @param {(initialState: any) => void} [init]\n * @returns {[ any, (state: any) => void ]}\n */\nexport function useReducer(reducer, initialState, init) {\n\t/** @type {import('./internal').ReducerHookState} */\n\tconst hookState = getHookState(currentIndex++, 2);\n\tif (!hookState._component) {\n\t\thookState._component = currentComponent;\n\n\t\thookState._value = [\n\t\t\t!init ? invokeOrReturn(undefined, initialState) : init(initialState),\n\n\t\t\taction => {\n\t\t\t\tconst nextValue = reducer(hookState._value[0], action);\n\t\t\t\tif (hookState._value[0] !== nextValue) {\n\t\t\t\t\thookState._value[0] = nextValue;\n\t\t\t\t\thookState._component.setState({});\n\t\t\t\t}\n\t\t\t}\n\t\t];\n\t}\n\n\treturn hookState._value;\n}\n\n/**\n * @param {import('./internal').Effect} callback\n * @param {any[]} args\n */\nexport function useEffect(callback, args) {\n\t/** @type {import('./internal').EffectHookState} */\n\tconst state = getHookState(currentIndex++, 3);\n\tif (!options._skipEffects && argsChanged(state._args, args)) {\n\t\tstate._value = callback;\n\t\tstate._args = args;\n\n\t\tcurrentComponent.__hooks._pendingEffects.push(state);\n\t}\n}\n\n/**\n * @param {import('./internal').Effect} callback\n * @param {any[]} args\n */\nexport function useLayoutEffect(callback, args) {\n\t/** @type {import('./internal').EffectHookState} */\n\tconst state = getHookState(currentIndex++, 4);\n\tif (!options._skipEffects && argsChanged(state._args, args)) {\n\t\tstate._value = callback;\n\t\tstate._args = args;\n\n\t\tcurrentComponent._renderCallbacks.push(state);\n\t}\n}\n\nexport function useRef(initialValue) {\n\tcurrentHook = 5;\n\treturn useMemo(() => ({ current: initialValue }), []);\n}\n\n/**\n * @param {object} ref\n * @param {() => object} createHandle\n * @param {any[]} args\n */\nexport function useImperativeHandle(ref, createHandle, args) {\n\tcurrentHook = 6;\n\tuseLayoutEffect(\n\t\t() => {\n\t\t\tif (typeof ref == 'function') ref(createHandle());\n\t\t\telse if (ref) ref.current = createHandle();\n\t\t},\n\t\targs == null ? args : args.concat(ref)\n\t);\n}\n\n/**\n * @param {() => any} factory\n * @param {any[]} args\n */\nexport function useMemo(factory, args) {\n\t/** @type {import('./internal').MemoHookState} */\n\tconst state = getHookState(currentIndex++, 7);\n\tif (argsChanged(state._args, args)) {\n\t\tstate._args = args;\n\t\tstate._factory = factory;\n\t\treturn (state._value = factory());\n\t}\n\n\treturn state._value;\n}\n\n/**\n * @param {() => void} callback\n * @param {any[]} args\n */\nexport function useCallback(callback, args) {\n\tcurrentHook = 8;\n\treturn useMemo(() => callback, args);\n}\n\n/**\n * @param {import('./internal').PreactContext} context\n */\nexport function useContext(context) {\n\tconst provider = currentComponent.context[context._id];\n\t// We could skip this call here, but than we'd not call\n\t// `options._hook`. We need to do that in order to make\n\t// the devtools aware of this hook.\n\tconst state = getHookState(currentIndex++, 9);\n\t// The devtools needs access to the context object to\n\t// be able to pull of the default value when no provider\n\t// is present in the tree.\n\tstate._context = context;\n\tif (!provider) return context._defaultValue;\n\t// This is probably not safe to convert to \"!\"\n\tif (state._value == null) {\n\t\tstate._value = true;\n\t\tprovider.sub(currentComponent);\n\t}\n\treturn provider.props.value;\n}\n\n/**\n * Display a custom label for a custom hook for the devtools panel\n * @type {<T>(value: T, cb?: (value: T) => string | number) => void}\n */\nexport function useDebugValue(value, formatter) {\n\tif (options.useDebugValue) {\n\t\toptions.useDebugValue(formatter ? formatter(value) : value);\n\t}\n}\n\nexport function useErrorBoundary(cb) {\n\tconst state = getHookState(currentIndex++, 10);\n\tconst errState = useState();\n\tstate._value = cb;\n\tif (!currentComponent.componentDidCatch) {\n\t\tcurrentComponent.componentDidCatch = err => {\n\t\t\tif (state._value) state._value(err);\n\t\t\terrState[1](err);\n\t\t};\n\t}\n\treturn [\n\t\terrState[0],\n\t\t() => {\n\t\t\terrState[1](undefined);\n\t\t}\n\t];\n}\n\n/**\n * After paint effects consumer.\n */\nfunction flushAfterPaintEffects() {\n\tafterPaintEffects.some(component => {\n\t\tif (component._parentDom) {\n\t\t\ttry {\n\t\t\t\tcomponent.__hooks._pendingEffects.forEach(invokeCleanup);\n\t\t\t\tcomponent.__hooks._pendingEffects.forEach(invokeEffect);\n\t\t\t\tcomponent.__hooks._pendingEffects = [];\n\t\t\t} catch (e) {\n\t\t\t\tcomponent.__hooks._pendingEffects = [];\n\t\t\t\toptions._catchError(e, component._vnode);\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t});\n\tafterPaintEffects = [];\n}\n\n/**\n * Schedule a callback to be invoked after the browser has a chance to paint a new frame.\n * Do this by combining requestAnimationFrame (rAF) + setTimeout to invoke a callback after\n * the next browser frame.\n *\n * Also, schedule a timeout in parallel to the the rAF to ensure the callback is invoked\n * even if RAF doesn't fire (for example if the browser tab is not visible)\n *\n * @param {() => void} callback\n */\nfunction afterNextFrame(callback) {\n\tconst done = () => {\n\t\tclearTimeout(timeout);\n\t\tcancelAnimationFrame(raf);\n\t\tsetTimeout(callback);\n\t};\n\tconst timeout = setTimeout(done, RAF_TIMEOUT);\n\n\tlet raf;\n\tif (typeof window != 'undefined') {\n\t\traf = requestAnimationFrame(done);\n\t}\n}\n\n// Note: if someone used options.debounceRendering = requestAnimationFrame,\n// then effects will ALWAYS run on the NEXT frame instead of the current one, incurring a ~16ms delay.\n// Perhaps this is not such a big deal.\n/**\n * Schedule afterPaintEffects flush after the browser paints\n * @param {number} newQueueLength\n */\nfunction afterPaint(newQueueLength) {\n\tif (newQueueLength === 1 || prevRaf !== options.requestAnimationFrame) {\n\t\tprevRaf = options.requestAnimationFrame;\n\t\t(prevRaf || afterNextFrame)(flushAfterPaintEffects);\n\t}\n}\n\n/**\n * @param {import('./internal').EffectHookState} hook\n */\nfunction invokeCleanup(hook) {\n\tif (hook._cleanup) hook._cleanup();\n}\n\n/**\n * Invoke a Hook's effect\n * @param {import('./internal').EffectHookState} hook\n */\nfunction invokeEffect(hook) {\n\tconst result = hook._value();\n\tif (typeof result == 'function') hook._cleanup = result;\n}\n\n/**\n * @param {any[]} oldArgs\n * @param {any[]} newArgs\n */\nfunction argsChanged(oldArgs, newArgs) {\n\treturn !oldArgs || newArgs.some((arg, index) => arg !== oldArgs[index]);\n}\n\nfunction invokeOrReturn(arg, f) {\n\treturn typeof f == 'function' ? f(arg) : f;\n}\n","import { Component } from 'preact';\nimport { shallowDiffers } from './util';\n\n/**\n * Component class with a predefined `shouldComponentUpdate` implementation\n */\nexport class PureComponent extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\t// Some third-party libraries check if this property is present\n\t\tthis.isPureReactComponent = true;\n\t}\n\n\tshouldComponentUpdate(props, state) {\n\t\treturn (\n\t\t\tshallowDiffers(this.props, props) || shallowDiffers(this.state, state)\n\t\t);\n\t}\n}\n","import { createElement } from 'preact';\nimport { shallowDiffers, assign } from './util';\n\n/**\n * Memoize a component, so that it only updates when the props actually have\n * changed. This was previously known as `React.pure`.\n * @param {import('./internal').FunctionalComponent} c functional component\n * @param {(prev: object, next: object) => boolean} [comparer] Custom equality function\n * @returns {import('./internal').FunctionalComponent}\n */\nexport function memo(c, comparer) {\n\tfunction shouldUpdate(nextProps) {\n\t\tlet ref = this.props.ref;\n\t\tlet updateRef = ref == nextProps.ref;\n\t\tif (!updateRef && ref) {\n\t\t\tref.call ? ref(null) : (ref.current = null);\n\t\t}\n\n\t\tif (!comparer) {\n\t\t\treturn shallowDiffers(this.props, nextProps);\n\t\t}\n\n\t\treturn !comparer(this.props, nextProps) || !updateRef;\n\t}\n\n\tfunction Memoed(props) {\n\t\tthis.shouldComponentUpdate = shouldUpdate;\n\t\treturn createElement(c, assign({}, props));\n\t}\n\tMemoed.prototype.isReactComponent = true;\n\tMemoed.displayName = 'Memo(' + (c.displayName || c.name) + ')';\n\tMemoed._forwarded = true;\n\treturn Memoed;\n}\n","import { options } from 'preact';\nimport { assign } from './util';\n\nlet oldDiffHook = options._diff;\noptions._diff = vnode => {\n\tif (vnode.type && vnode.type._forwarded && vnode.ref) {\n\t\tvnode.props.ref = vnode.ref;\n\t\tvnode.ref = null;\n\t}\n\tif (oldDiffHook) oldDiffHook(vnode);\n};\n\n/**\n * Pass ref down to a child. This is mainly used in libraries with HOCs that\n * wrap components. Using `forwardRef` there is an easy way to get a reference\n * of the wrapped component instead of one of the wrapper itself.\n * @param {import('./index').ForwardFn} fn\n * @returns {import('./internal').FunctionalComponent}\n */\nexport function forwardRef(fn) {\n\tfunction Forwarded(props) {\n\t\tlet clone = assign({}, props);\n\t\tdelete clone.ref;\n\t\treturn fn(clone, props.ref);\n\t}\n\tForwarded.prototype.isReactComponent = Forwarded._forwarded = true;\n\tForwarded.displayName = 'ForwardRef(' + (fn.displayName || fn.name) + ')';\n\treturn Forwarded;\n}\n","import { toChildArray } from 'preact';\n\nconst mapFn = (children, fn) => {\n\tif (!children) return null;\n\treturn toChildArray(children).reduce(\n\t\t(acc, value, index) => acc.concat(fn(value, index)),\n\t\t[]\n\t);\n};\n\n// This API is completely unnecessary for Preact, so it's basically passthrough.\nexport const Children = {\n\tmap: mapFn,\n\tforEach: mapFn,\n\tcount(children) {\n\t\treturn children ? toChildArray(children).length : 0;\n\t},\n\tonly(children) {\n\t\tchildren = toChildArray(children);\n\t\tif (children.length !== 1) {\n\t\t\tthrow new Error('Children.only() expects only one child.');\n\t\t}\n\t\treturn children[0];\n\t},\n\ttoArray: toChildArray\n};\n","import { Component, createElement, options } from 'preact';\nimport { assign } from './util';\n\nconst oldCatchError = options._catchError;\noptions._catchError = function(error, newVNode, oldVNode) {\n\tif (error.then) {\n\t\t/** @type {import('./internal').Component} */\n\t\tlet component;\n\t\tlet vnode = newVNode;\n\n\t\tfor (; (vnode = vnode._parent); ) {\n\t\t\tif ((component = vnode._component) && component._childDidSuspend) {\n\t\t\t\t// Don't call oldCatchError if we found a Suspense\n\t\t\t\treturn component._childDidSuspend(error, newVNode._component);\n\t\t\t}\n\t\t}\n\t}\n\toldCatchError(error, newVNode, oldVNode);\n};\n\nfunction detachedClone(vnode) {\n\tif (vnode) {\n\t\tvnode = assign({}, vnode);\n\t\tvnode._component = null;\n\t\tvnode._children = vnode._children && vnode._children.map(detachedClone);\n\t}\n\treturn vnode;\n}\n\n// having custom inheritance instead of a class here saves a lot of bytes\nexport function Suspense() {\n\t// we do not call super here to golf some bytes...\n\tthis._pendingSuspensionCount = 0;\n\tthis._suspenders = null;\n\tthis._detachOnNextRender = null;\n}\n\n// Things we do here to save some bytes but are not proper JS inheritance:\n// - call `new Component()` as the prototype\n// - do not set `Suspense.prototype.constructor` to `Suspense`\nSuspense.prototype = new Component();\n\n/**\n * @param {Promise} promise The thrown promise\n * @param {Component<any, any>} suspendingComponent The suspending component\n */\nSuspense.prototype._childDidSuspend = function(promise, suspendingComponent) {\n\t/** @type {import('./internal').SuspenseComponent} */\n\tconst c = this;\n\n\tif (c._suspenders == null) {\n\t\tc._suspenders = [];\n\t}\n\tc._suspenders.push(suspendingComponent);\n\n\tconst resolve = suspended(c._vnode);\n\n\tlet resolved = false;\n\tconst onResolved = () => {\n\t\tif (resolved) return;\n\n\t\tresolved = true;\n\n\t\tif (resolve) {\n\t\t\tresolve(onSuspensionComplete);\n\t\t} else {\n\t\t\tonSuspensionComplete();\n\t\t}\n\t};\n\n\tsuspendingComponent._suspendedComponentWillUnmount =\n\t\tsuspendingComponent.componentWillUnmount;\n\tsuspendingComponent.componentWillUnmount = () => {\n\t\tonResolved();\n\n\t\tif (suspendingComponent._suspendedComponentWillUnmount) {\n\t\t\tsuspendingComponent._suspendedComponentWillUnmount();\n\t\t}\n\t};\n\n\tconst onSuspensionComplete = () => {\n\t\tif (!--c._pendingSuspensionCount) {\n\t\t\tc._vnode._children[0] = c.state._suspended;\n\t\t\tc.setState({ _suspended: (c._detachOnNextRender = null) });\n\n\t\t\tlet suspended;\n\t\t\twhile ((suspended = c._suspenders.pop())) {\n\t\t\t\tsuspended.forceUpdate();\n\t\t\t}\n\t\t}\n\t};\n\n\tif (!c._pendingSuspensionCount++) {\n\t\tc.setState({ _suspended: (c._detachOnNextRender = c._vnode._children[0]) });\n\t}\n\tpromise.then(onResolved, onResolved);\n};\n\nSuspense.prototype.render = function(props, state) {\n\tif (this._detachOnNextRender) {\n\t\tthis._vnode._children[0] = detachedClone(this._detachOnNextRender);\n\t\tthis._detachOnNextRender = null;\n\t}\n\n\treturn [\n\t\tcreateElement(Component, null, state._suspended ? null : props.children),\n\t\tstate._suspended && props.fallback\n\t];\n};\n\n/**\n * Checks and calls the parent component's _suspended method, passing in the\n * suspended vnode. This is a way for a parent (e.g. SuspenseList) to get notified\n * that one of its children/descendants suspended.\n *\n * The parent MAY return a callback. The callback will get called when the\n * suspension resolves, notifying the parent of the fact.\n * Moreover, the callback gets function `unsuspend` as a parameter. The resolved\n * child descendant will not actually get unsuspended until `unsuspend` gets called.\n * This is a way for the parent to delay unsuspending.\n *\n * If the parent does not return a callback then the resolved vnode\n * gets unsuspended immediately when it resolves.\n *\n * @param {import('../src/internal').VNode} vnode\n * @returns {((unsuspend: () => void) => void)?}\n */\nexport function suspended(vnode) {\n\tlet component = vnode._parent._component;\n\treturn component && component._suspended && component._suspended(vnode);\n}\n\nexport function lazy(loader) {\n\tlet prom;\n\tlet component;\n\tlet error;\n\n\tfunction Lazy(props) {\n\t\tif (!prom) {\n\t\t\tprom = loader();\n\t\t\tprom.then(\n\t\t\t\texports => {\n\t\t\t\t\tcomponent = exports.default || exports;\n\t\t\t\t},\n\t\t\t\te => {\n\t\t\t\t\terror = e;\n\t\t\t\t}\n\t\t\t);\n\t\t}\n\n\t\tif (error) {\n\t\t\tthrow error;\n\t\t}\n\n\t\tif (!component) {\n\t\t\tthrow prom;\n\t\t}\n\n\t\treturn createElement(component, props);\n\t}\n\n\tLazy.displayName = 'Lazy';\n\tLazy._forwarded = true;\n\treturn Lazy;\n}\n","import { Component, toChildArray } from 'preact';\nimport { suspended } from './suspense.js';\n\n// Indexes to linked list nodes (nodes are stored as arrays to save bytes).\nconst SUSPENDED_COUNT = 0;\nconst RESOLVED_COUNT = 1;\nconst NEXT_NODE = 2;\n\n// Having custom inheritance instead of a class here saves a lot of bytes.\nexport function SuspenseList() {\n\tthis._next = null;\n\tthis._map = null;\n}\n\n// Mark one of child's earlier suspensions as resolved.\n// Some pending callbacks may become callable due to this\n// (e.g. the last suspended descendant gets resolved when\n// revealOrder === 'together'). Process those callbacks as well.\nconst resolve = (list, child, node) => {\n\tif (++node[RESOLVED_COUNT] === node[SUSPENDED_COUNT]) {\n\t\t// The number a child (or any of its descendants) has been suspended\n\t\t// matches the number of times it's been resolved. Therefore we\n\t\t// mark the child as completely resolved by deleting it from ._map.\n\t\t// This is used to figure out when *all* children have been completely\n\t\t// resolved when revealOrder is 'together'.\n\t\tlist._map.delete(child);\n\t}\n\n\t// If revealOrder is falsy then we can do an early exit, as the\n\t// callbacks won't get queued in the node anyway.\n\t// If revealOrder is 'together' then also do an early exit\n\t// if all suspended descendants have not yet been resolved.\n\tif (\n\t\t!list.props.revealOrder ||\n\t\t(list.props.revealOrder[0] === 't' && list._map.size)\n\t) {\n\t\treturn;\n\t}\n\n\t// Walk the currently suspended children in order, calling their\n\t// stored callbacks on the way. Stop if we encounter a child that\n\t// has not been completely resolved yet.\n\tnode = list._next;\n\twhile (node) {\n\t\twhile (node.length > 3) {\n\t\t\tnode.pop()();\n\t\t}\n\t\tif (node[RESOLVED_COUNT] < node[SUSPENDED_COUNT]) {\n\t\t\tbreak;\n\t\t}\n\t\tlist._next = node = node[NEXT_NODE];\n\t}\n};\n\n// Things we do here to save some bytes but are not proper JS inheritance:\n// - call `new Component()` as the prototype\n// - do not set `Suspense.prototype.constructor` to `Suspense`\nSuspenseList.prototype = new Component();\n\nSuspenseList.prototype._suspended = function(child) {\n\tconst list = this;\n\tconst delegated = suspended(list._vnode);\n\n\tlet node = list._map.get(child);\n\tnode[SUSPENDED_COUNT]++;\n\n\treturn unsuspend => {\n\t\tconst wrappedUnsuspend = () => {\n\t\t\tif (!list.props.revealOrder) {\n\t\t\t\t// Special case the undefined (falsy) revealOrder, as there\n\t\t\t\t// is no need to coordinate a specific order or unsuspends.\n\t\t\t\tunsuspend();\n\t\t\t} else {\n\t\t\t\tnode.push(unsuspend);\n\t\t\t\tresolve(list, child, node);\n\t\t\t}\n\t\t};\n\t\tif (delegated) {\n\t\t\tdelegated(wrappedUnsuspend);\n\t\t} else {\n\t\t\twrappedUnsuspend();\n\t\t}\n\t};\n};\n\nSuspenseList.prototype.render = function(props) {\n\tthis._next = null;\n\tthis._map = new Map();\n\n\tconst children = toChildArray(props.children);\n\tif (props.revealOrder && props.revealOrder[0] === 'b') {\n\t\t// If order === 'backwards' (or, well, anything starting with a 'b')\n\t\t// then flip the child list around so that the last child will be\n\t\t// the first in the linked list.\n\t\tchildren.reverse();\n\t}\n\t// Build the linked list. Iterate through the children in reverse order\n\t// so that `_next` points to the first linked list node to be resolved.\n\tfor (let i = children.length; i--; ) {\n\t\t// Create a new linked list node as an array of form:\n\t\t// \t[suspended_count, resolved_count, next_node]\n\t\t// where suspended_count and resolved_count are numeric counters for\n\t\t// keeping track how many times a node has been suspended and resolved.\n\t\t//\n\t\t// Note that suspended_count starts from 1 instead of 0, so we can block\n\t\t// processing callbacks until componentDidMount has been called. In a sense\n\t\t// node is suspended at least until componentDidMount gets called!\n\t\t//\n\t\t// Pending callbacks are added to the end of the node:\n\t\t// \t[suspended_count, resolved_count, next_node, callback_0, callback_1, ...]\n\t\tthis._map.set(children[i], (this._next = [1, 0, this._next]));\n\t}\n\treturn props.children;\n};\n\nSuspenseList.prototype.componentDidUpdate = SuspenseList.prototype.componentDidMount = function() {\n\t// Iterate through all children after mounting for two reasons:\n\t// 1. As each node[SUSPENDED_COUNT] starts from 1, this iteration increases\n\t//    each node[RELEASED_COUNT] by 1, therefore balancing the counters.\n\t//    The nodes can now be completely consumed from the linked list.\n\t// 2. Handle nodes that might have gotten resolved between render and\n\t//    componentDidMount.\n\tconst list = this;\n\tlist._map.forEach((node, child) => {\n\t\tresolve(list, child, node);\n\t});\n};\n","import { createElement, hydrate, render, _unmount } from 'preact';\n\nclass ContextProvider {\n\tgetChildContext() {\n\t\treturn this.props.context;\n\t}\n\trender(props) {\n\t\treturn props.children;\n\t}\n}\n\n/**\n * Portal component\n * @param {object | null | undefined} props\n */\nfunction Portal(props) {\n\tlet _this = this;\n\tlet container = props.container;\n\tlet wrap = createElement(\n\t\tContextProvider,\n\t\t{ context: _this.context },\n\t\tprops.vnode\n\t);\n\n\t// When we change container we should clear our old container and\n\t// indicate a new mount.\n\tif (_this._container && _this._container !== container) {\n\t\tif (_this._temp.parentNode) _this._container.removeChild(_this._temp);\n\t\t_unmount(_this._wrap);\n\t\t_this._hasMounted = false;\n\t}\n\n\t// When props.vnode is undefined/false/null we are dealing with some kind of\n\t// conditional vnode. This should not trigger a render.\n\tif (props.vnode) {\n\t\tif (!_this._hasMounted) {\n\t\t\t// Create a placeholder that we can use to insert into.\n\t\t\t_this._temp = document.createTextNode('');\n\t\t\t// Hydrate existing nodes to keep the dom intact, when rendering\n\t\t\t// wrap into the container.\n\t\t\thydrate('', container);\n\t\t\t// Append to the container (this matches React's behavior)\n\t\t\tcontainer.appendChild(_this._temp);\n\t\t\t// At this point we have mounted and should set our container.\n\t\t\t_this._hasMounted = true;\n\t\t\t_this._container = container;\n\t\t\t// Render our wrapping element into temp.\n\t\t\trender(wrap, container, _this._temp);\n\t\t\t_this._children = _this._temp._children;\n\t\t} else {\n\t\t\t// When we have mounted and the vnode is present it means the\n\t\t\t// props have changed or a parent is triggering a rerender.\n\t\t\t// This implies we only need to call render. But we need to keep\n\t\t\t// the old tree around, otherwise will treat the vnodes as new and\n\t\t\t// will wrongly call `componentDidMount` on them\n\t\t\tcontainer._children = _this._children;\n\t\t\trender(wrap, container);\n\t\t\t_this._children = container._children;\n\t\t}\n\t}\n\t// When we come from a conditional render, on a mounted\n\t// portal we should clear the DOM.\n\telse if (_this._hasMounted) {\n\t\tif (_this._temp.parentNode) _this._container.removeChild(_this._temp);\n\t\t_unmount(_this._wrap);\n\t}\n\t// Set the wrapping element for future unmounting.\n\t_this._wrap = wrap;\n\n\t_this.componentWillUnmount = () => {\n\t\tif (_this._temp.parentNode) _this._container.removeChild(_this._temp);\n\t\t_unmount(_this._wrap);\n\t};\n\n\treturn null;\n}\n\n/**\n * Create a `Portal` to continue rendering the vnode tree at a different DOM node\n * @param {import('./internal').VNode} vnode The vnode to render\n * @param {import('./internal').PreactElement} container The DOM node to continue rendering in to.\n */\nexport function createPortal(vnode, container) {\n\treturn createElement(Portal, { vnode, container });\n}\n","/**\n * Normalize event handlers like react does. Most famously it uses `onChange` for any input element.\n * @param {import('./internal').VNode} vnode The vnode to normalize events on\n */\nexport function applyEventNormalization({ type, props }) {\n\tif (!props || typeof type != 'string') return;\n\tlet newProps = {};\n\n\tfor (let i in props) {\n\t\tif (/^on(Ani|Tra|Tou)/.test(i)) {\n\t\t\tprops[i.toLowerCase()] = props[i];\n\t\t\tdelete props[i];\n\t\t}\n\t\tnewProps[i.toLowerCase()] = i;\n\t}\n\tif (newProps.ondoubleclick) {\n\t\tprops.ondblclick = props[newProps.ondoubleclick];\n\t\tdelete props[newProps.ondoubleclick];\n\t}\n\tif (newProps.onbeforeinput) {\n\t\tprops.onbeforeinput = props[newProps.onbeforeinput];\n\t\tdelete props[newProps.onbeforeinput];\n\t}\n\t// for *textual inputs* (incl textarea), normalize `onChange` -> `onInput`:\n\tif (\n\t\tnewProps.onchange &&\n\t\t(type === 'textarea' ||\n\t\t\t(type.toLowerCase() === 'input' && !/^fil|che|ra/i.test(props.type)))\n\t) {\n\t\tlet normalized = newProps.oninput || 'oninput';\n\t\tif (!props[normalized]) {\n\t\t\tprops[normalized] = props[newProps.onchange];\n\t\t\tdelete props[newProps.onchange];\n\t\t}\n\t}\n}\n","import QRCode from \"qrcode\";\n\nexport function open(uri: string) {\n  // eslint-disable-next-line no-console\n  QRCode.toString(uri, { type: \"terminal\" }).then(console.log);\n}\n\nexport function close() {\n  // empty\n}\n","export const WALLETCONNECT_STYLE_SHEET = `:root {\n  --animation-duration: 300ms;\n}\n\n@keyframes fadeIn {\n  from {\n    opacity: 0;\n  }\n  to {\n    opacity: 1;\n  }\n}\n\n@keyframes fadeOut {\n  from {\n    opacity: 1;\n  }\n  to {\n    opacity: 0;\n  }\n}\n\n.animated {\n  animation-duration: var(--animation-duration);\n  animation-fill-mode: both;\n}\n\n.fadeIn {\n  animation-name: fadeIn;\n}\n\n.fadeOut {\n  animation-name: fadeOut;\n}\n\n#walletconnect-wrapper {\n  -webkit-user-select: none;\n  align-items: center;\n  display: flex;\n  height: 100%;\n  justify-content: center;\n  left: 0;\n  pointer-events: none;\n  position: fixed;\n  top: 0;\n  user-select: none;\n  width: 100%;\n  z-index: 99999999999999;\n}\n\n.walletconnect-modal__headerLogo {\n  height: 21px;\n}\n\n.walletconnect-modal__header p {\n  color: #ffffff;\n  font-size: 20px;\n  font-weight: 600;\n  margin: 0;\n  align-items: flex-start;\n  display: flex;\n  flex: 1;\n  margin-left: 5px;\n}\n\n.walletconnect-modal__close__wrapper {\n  position: absolute;\n  top: 0px;\n  right: 0px;\n  z-index: 10000;\n  background: white;\n  border-radius: 26px;\n  padding: 6px;\n  box-sizing: border-box;\n  width: 26px;\n  height: 26px;\n  cursor: pointer;\n}\n\n.walletconnect-modal__close__icon {\n  position: relative;\n  top: 7px;\n  right: 0;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  transform: rotate(45deg);\n}\n\n.walletconnect-modal__close__line1 {\n  position: absolute;\n  width: 100%;\n  border: 1px solid rgb(48, 52, 59);\n}\n\n.walletconnect-modal__close__line2 {\n  position: absolute;\n  width: 100%;\n  border: 1px solid rgb(48, 52, 59);\n  transform: rotate(90deg);\n}\n\n.walletconnect-qrcode__base {\n  -webkit-tap-highlight-color: rgba(0, 0, 0, 0);\n  background: rgba(37, 41, 46, 0.95);\n  height: 100%;\n  left: 0;\n  pointer-events: auto;\n  position: fixed;\n  top: 0;\n  transition: 0.4s cubic-bezier(0.19, 1, 0.22, 1);\n  width: 100%;\n  will-change: opacity;\n  padding: 40px;\n  box-sizing: border-box;\n}\n\n.walletconnect-qrcode__text {\n  color: rgba(60, 66, 82, 0.6);\n  font-size: 16px;\n  font-weight: 600;\n  letter-spacing: 0;\n  line-height: 1.1875em;\n  margin: 10px 0 20px 0;\n  text-align: center;\n  width: 100%;\n}\n\n@media only screen and (max-width: 768px) {\n  .walletconnect-qrcode__text {\n    font-size: 4vw;\n  }\n}\n\n@media only screen and (max-width: 320px) {\n  .walletconnect-qrcode__text {\n    font-size: 14px;\n  }\n}\n\n.walletconnect-qrcode__image {\n  width: calc(100% - 30px);\n  box-sizing: border-box;\n  cursor: none;\n  margin: 0 auto;\n}\n\n.walletconnect-qrcode__notification {\n  position: absolute;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  font-size: 16px;\n  padding: 16px 20px;\n  border-radius: 16px;\n  text-align: center;\n  transition: all 0.1s ease-in-out;\n  background: white;\n  color: black;\n  margin-bottom: -60px;\n  opacity: 0;\n}\n\n.walletconnect-qrcode__notification.notification__show {\n  opacity: 1;\n}\n\n@media only screen and (max-width: 768px) {\n  .walletconnect-modal__header {\n    height: 130px;\n  }\n  .walletconnect-modal__base {\n    overflow: auto;\n  }\n}\n\n@media only screen and (min-device-width: 415px) and (max-width: 768px) {\n  #content {\n    max-width: 768px;\n    box-sizing: border-box;\n  }\n}\n\n@media only screen and (min-width: 375px) and (max-width: 415px) {\n  #content {\n    max-width: 414px;\n    box-sizing: border-box;\n  }\n}\n\n@media only screen and (min-width: 320px) and (max-width: 375px) {\n  #content {\n    max-width: 375px;\n    box-sizing: border-box;\n  }\n}\n\n@media only screen and (max-width: 320px) {\n  #content {\n    max-width: 320px;\n    box-sizing: border-box;\n  }\n}\n\n.walletconnect-modal__base {\n  -webkit-font-smoothing: antialiased;\n  background: #ffffff;\n  border-radius: 24px;\n  box-shadow: 0 10px 50px 5px rgba(0, 0, 0, 0.4);\n  font-family: ui-rounded, \"SF Pro Rounded\", \"SF Pro Text\", medium-content-sans-serif-font,\n    -apple-system, BlinkMacSystemFont, ui-sans-serif, \"Segoe UI\", Roboto, Oxygen, Ubuntu, Cantarell,\n    \"Open Sans\", \"Helvetica Neue\", sans-serif;\n  margin-top: 41px;\n  padding: 24px 24px 22px;\n  pointer-events: auto;\n  position: relative;\n  text-align: center;\n  transition: 0.4s cubic-bezier(0.19, 1, 0.22, 1);\n  will-change: transform;\n  overflow: visible;\n  transform: translateY(-50%);\n  top: 50%;\n  max-width: 500px;\n  margin: auto;\n}\n\n@media only screen and (max-width: 320px) {\n  .walletconnect-modal__base {\n    padding: 24px 12px;\n  }\n}\n\n.walletconnect-modal__base .hidden {\n  transform: translateY(150%);\n  transition: 0.125s cubic-bezier(0.4, 0, 1, 1);\n}\n\n.walletconnect-modal__header {\n  align-items: center;\n  display: flex;\n  height: 26px;\n  left: 0;\n  justify-content: space-between;\n  position: absolute;\n  top: -42px;\n  width: 100%;\n}\n\n.walletconnect-modal__base .wc-logo {\n  align-items: center;\n  display: flex;\n  height: 26px;\n  margin-top: 15px;\n  padding-bottom: 15px;\n  pointer-events: auto;\n}\n\n.walletconnect-modal__base .wc-logo div {\n  background-color: #3399ff;\n  height: 21px;\n  margin-right: 5px;\n  mask-image: url(\"images/wc-logo.svg\") center no-repeat;\n  width: 32px;\n}\n\n.walletconnect-modal__base .wc-logo p {\n  color: #ffffff;\n  font-size: 20px;\n  font-weight: 600;\n  margin: 0;\n}\n\n.walletconnect-modal__base h2 {\n  color: rgba(60, 66, 82, 0.6);\n  font-size: 16px;\n  font-weight: 600;\n  letter-spacing: 0;\n  line-height: 1.1875em;\n  margin: 0 0 19px 0;\n  text-align: center;\n  width: 100%;\n}\n\n.walletconnect-modal__base__row {\n  -webkit-tap-highlight-color: rgba(0, 0, 0, 0);\n  align-items: center;\n  border-radius: 20px;\n  cursor: pointer;\n  display: flex;\n  height: 56px;\n  justify-content: space-between;\n  padding: 0 15px;\n  position: relative;\n  margin: 0px 0px 8px;\n  text-align: left;\n  transition: 0.15s cubic-bezier(0.25, 0.46, 0.45, 0.94);\n  will-change: transform;\n  text-decoration: none;\n}\n\n.walletconnect-modal__base__row:hover {\n  background: rgba(60, 66, 82, 0.06);\n}\n\n.walletconnect-modal__base__row:active {\n  background: rgba(60, 66, 82, 0.06);\n  transform: scale(0.975);\n  transition: 0.1s cubic-bezier(0.25, 0.46, 0.45, 0.94);\n}\n\n.walletconnect-modal__base__row__h3 {\n  color: #25292e;\n  font-size: 20px;\n  font-weight: 700;\n  margin: 0;\n  padding-bottom: 3px;\n}\n\n.walletconnect-modal__base__row__right {\n  align-items: center;\n  display: flex;\n  justify-content: center;\n}\n\n.walletconnect-modal__base__row__right__app-icon {\n  border-radius: 8px;\n  height: 34px;\n  margin: 0 11px 2px 0;\n  width: 34px;\n  background-size: 100%;\n  box-shadow: 0 4px 12px 0 rgba(37, 41, 46, 0.25);\n}\n\n.walletconnect-modal__base__row__right__caret {\n  height: 18px;\n  opacity: 0.3;\n  transition: 0.1s cubic-bezier(0.25, 0.46, 0.45, 0.94);\n  width: 8px;\n  will-change: opacity;\n}\n\n.walletconnect-modal__base__row:hover .caret,\n.walletconnect-modal__base__row:active .caret {\n  opacity: 0.6;\n}\n\n.walletconnect-modal__mobile__toggle {\n  width: 80%;\n  display: flex;\n  margin: 0 auto;\n  position: relative;\n  overflow: hidden;\n  border-radius: 8px;\n  margin-bottom: 18px;\n  background: #d4d5d9;\n}\n\n.walletconnect-modal__single_wallet {\n  display: flex;\n  justify-content: center;\n  margin-top: 7px;\n  margin-bottom: 18px;\n}\n\n.walletconnect-modal__single_wallet a {\n  cursor: pointer;\n  color: rgb(64, 153, 255);\n  font-size: 21px;\n  font-weight: 800;\n  text-decoration: none !important;\n  margin: 0 auto;\n}\n\n.walletconnect-modal__mobile__toggle_selector {\n  width: calc(50% - 8px);\n  background: white;\n  position: absolute;\n  border-radius: 5px;\n  height: calc(100% - 8px);\n  top: 4px;\n  transition: all 0.2s ease-in-out;\n  transform: translate3d(4px, 0, 0);\n}\n\n.walletconnect-modal__mobile__toggle.right__selected .walletconnect-modal__mobile__toggle_selector {\n  transform: translate3d(calc(100% + 12px), 0, 0);\n}\n\n.walletconnect-modal__mobile__toggle a {\n  font-size: 12px;\n  width: 50%;\n  text-align: center;\n  padding: 8px;\n  margin: 0;\n  font-weight: 600;\n  z-index: 1;\n}\n\n.walletconnect-modal__footer {\n  display: flex;\n  justify-content: center;\n  margin-top: 20px;\n}\n\n@media only screen and (max-width: 768px) {\n  .walletconnect-modal__footer {\n    margin-top: 5vw;\n  }\n}\n\n.walletconnect-modal__footer a {\n  cursor: pointer;\n  color: #898d97;\n  font-size: 15px;\n  margin: 0 auto;\n}\n\n@media only screen and (max-width: 320px) {\n  .walletconnect-modal__footer a {\n    font-size: 14px;\n  }\n}\n\n.walletconnect-connect__buttons__wrapper {\n  max-height: 44vh;\n}\n\n.walletconnect-connect__buttons__wrapper__android {\n  margin: 50% 0;\n}\n\n.walletconnect-connect__buttons__wrapper__wrap {\n  display: grid;\n  grid-template-columns: repeat(4, 1fr);\n  margin: 10px 0;\n}\n\n@media only screen and (min-width: 768px) {\n  .walletconnect-connect__buttons__wrapper__wrap {\n    margin-top: 40px;\n  }\n}\n\n.walletconnect-connect__button {\n  background-color: rgb(64, 153, 255);\n  padding: 12px;\n  border-radius: 8px;\n  text-decoration: none;\n  color: rgb(255, 255, 255);\n  font-weight: 500;\n}\n\n.walletconnect-connect__button__icon_anchor {\n  cursor: pointer;\n  display: flex;\n  justify-content: flex-start;\n  align-items: center;\n  margin: 8px;\n  width: 42px;\n  justify-self: center;\n  flex-direction: column;\n  text-decoration: none !important;\n}\n\n@media only screen and (max-width: 320px) {\n  .walletconnect-connect__button__icon_anchor {\n    margin: 4px;\n  }\n}\n\n.walletconnect-connect__button__icon {\n  border-radius: 10px;\n  height: 42px;\n  margin: 0;\n  width: 42px;\n  background-size: cover !important;\n  box-shadow: 0 4px 12px 0 rgba(37, 41, 46, 0.25);\n}\n\n.walletconnect-connect__button__text {\n  color: #424952;\n  font-size: 2.7vw;\n  text-decoration: none !important;\n  padding: 0;\n  margin-top: 1.8vw;\n  font-weight: 600;\n}\n\n@media only screen and (min-width: 768px) {\n  .walletconnect-connect__button__text {\n    font-size: 16px;\n    margin-top: 12px;\n  }\n}\n\n.walletconnect-search__input {\n  border: none;\n  background: #d4d5d9;\n  border-style: none;\n  padding: 8px 16px;\n  outline: none;\n  font-style: normal;\n  font-stretch: normal;\n  font-size: 16px;\n  font-style: normal;\n  font-stretch: normal;\n  line-height: normal;\n  letter-spacing: normal;\n  text-align: left;\n  border-radius: 8px;\n  width: calc(100% - 16px);\n  margin: 0;\n  margin-bottom: 8px;\n}\n`;","export const WALLETCONNECT_LOGO_SVG_URL = `data:image/svg+xml,%3Csvg height='185' viewBox='0 0 300 185' width='300' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='m61.4385429 36.2562612c48.9112241-47.8881663 128.2119871-47.8881663 177.1232091 0l5.886545 5.7634174c2.445561 2.3944081 2.445561 6.2765112 0 8.6709204l-20.136695 19.715503c-1.222781 1.1972051-3.2053 1.1972051-4.428081 0l-8.100584-7.9311479c-34.121692-33.4079817-89.443886-33.4079817-123.5655788 0l-8.6750562 8.4936051c-1.2227816 1.1972041-3.205301 1.1972041-4.4280806 0l-20.1366949-19.7155031c-2.4455612-2.3944092-2.4455612-6.2765122 0-8.6709204zm218.7677961 40.7737449 17.921697 17.546897c2.445549 2.3943969 2.445563 6.2764769.000031 8.6708899l-80.810171 79.121134c-2.445544 2.394426-6.410582 2.394453-8.85616.000062-.00001-.00001-.000022-.000022-.000032-.000032l-57.354143-56.154572c-.61139-.598602-1.60265-.598602-2.21404 0-.000004.000004-.000007.000008-.000011.000011l-57.3529212 56.154531c-2.4455368 2.394432-6.4105755 2.394472-8.8561612.000087-.0000143-.000014-.0000296-.000028-.0000449-.000044l-80.81241943-79.122185c-2.44556021-2.394408-2.44556021-6.2765115 0-8.6709197l17.92172963-17.5468673c2.4455602-2.3944082 6.4105989-2.3944082 8.8561602 0l57.3549775 56.155357c.6113908.598602 1.602649.598602 2.2140398 0 .0000092-.000009.0000174-.000017.0000265-.000024l57.3521031-56.155333c2.445505-2.3944633 6.410544-2.3945531 8.856161-.0002.000034.0000336.000068.0000673.000101.000101l57.354902 56.155432c.61139.598601 1.60265.598601 2.21404 0l57.353975-56.1543249c2.445561-2.3944092 6.410599-2.3944092 8.85616 0z' fill='%233b99fc'/%3E%3C/svg%3E`;","export const WALLETCONNECT_HEADER_TEXT = \"WalletConnect\";\n\nexport const ANIMATION_DURATION = 300;\nexport const DEFAULT_BUTTON_COLOR = \"rgb(64, 153, 255)\";\n\nexport const WALLETCONNECT_WRAPPER_ID = \"walletconnect-wrapper\";\nexport const WALLETCONNECT_STYLE_ID = \"walletconnect-style-sheet\";\nexport const WALLETCONNECT_MODAL_ID = \"walletconnect-qrcode-modal\";\nexport const WALLETCONNECT_CLOSE_BUTTON_ID = \"walletconnect-qrcode-close\";\nexport const WALLETCONNECT_CTA_TEXT_ID = \"walletconnect-qrcode-text\";\nexport const WALLETCONNECT_CONNECT_BUTTON_ID = \"walletconnect-connect-button\";\n","// eslint-disable-next-line @typescript-eslint/no-unused-vars\nimport * as React from \"react\";\n\nimport { WALLETCONNECT_LOGO_SVG_URL } from \"../assets/logo\";\nimport { WALLETCONNECT_HEADER_TEXT, WALLETCONNECT_CLOSE_BUTTON_ID } from \"../constants\";\n\ninterface HeaderProps {\n  onClose: any;\n}\n\nfunction Header(props: HeaderProps) {\n  return (\n    <div className=\"walletconnect-modal__header\">\n      <img src={WALLETCONNECT_LOGO_SVG_URL} className=\"walletconnect-modal__headerLogo\" />\n      <p>{WALLETCONNECT_HEADER_TEXT}</p>\n      <div className=\"walletconnect-modal__close__wrapper\" onClick={props.onClose}>\n        <div id={WALLETCONNECT_CLOSE_BUTTON_ID} className=\"walletconnect-modal__close__icon\">\n          <div className=\"walletconnect-modal__close__line1\"></div>\n          <div className=\"walletconnect-modal__close__line2\"></div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Header;\n","import * as React from \"react\";\n\nimport { WALLETCONNECT_CONNECT_BUTTON_ID } from \"../constants\";\n\ninterface ConnectButtonProps {\n  name: string;\n  color: string;\n  href: string;\n  onClick: (event: React.MouseEvent<HTMLAnchorElement>) => void;\n}\n\nfunction ConnectButton(props: ConnectButtonProps) {\n  return (\n    <a\n      className=\"walletconnect-connect__button\"\n      href={props.href}\n      id={`${WALLETCONNECT_CONNECT_BUTTON_ID}-${props.name}`}\n      onClick={props.onClick}\n      rel=\"noopener noreferrer\"\n      style={{ backgroundColor: props.color }}\n      target=\"_blank\"\n    >\n      {props.name}\n    </a>\n  );\n}\n\nexport default ConnectButton;\n","export const CARET_SVG_URL = `data:image/svg+xml,%3Csvg fill='none' height='18' viewBox='0 0 8 18' width='8' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath clip-rule='evenodd' d='m.586301.213898c-.435947.33907-.5144813.967342-.175411 1.403292l4.87831 6.27212c.28087.36111.28087.86677 0 1.22788l-4.878311 6.27211c-.33907.436-.260536 1.0642.175412 1.4033.435949.3391 1.064219.2605 1.403289-.1754l4.87832-6.2721c.84259-1.08336.84259-2.60034 0-3.68367l-4.87832-6.27212c-.33907-.4359474-.96734-.514482-1.403289-.175412z' fill='%233c4252' fill-rule='evenodd'/%3E%3C/svg%3E`;","import * as React from \"react\";\nimport { CARET_SVG_URL } from \"../assets/caret\";\n\ninterface WalletButtonProps {\n  color: string;\n  name: string;\n  logo: string;\n  href: string;\n  onClick: (event: React.MouseEvent<HTMLAnchorElement>) => void;\n}\n\nfunction WalletButton(props: WalletButtonProps) {\n  const { color, href, name, logo, onClick } = props;\n  return (\n    <a\n      className=\"walletconnect-modal__base__row\"\n      href={href}\n      onClick={onClick}\n      rel=\"noopener noreferrer\"\n      target=\"_blank\"\n    >\n      <h3 className={\"walletconnect-modal__base__row__h3\"}>{name}</h3>\n      <div className=\"walletconnect-modal__base__row__right\">\n        <div\n          className={`walletconnect-modal__base__row__right__app-icon`}\n          style={{ background: `url('${logo}') ${color}`, backgroundSize: \"100%\" }}\n        ></div>\n        <img src={CARET_SVG_URL} className=\"walletconnect-modal__base__row__right__caret\" />\n      </div>\n    </a>\n  );\n}\n\nexport default WalletButton;\n","import * as React from \"react\";\n\ninterface WalletIconProps {\n  color: string;\n  logo: string;\n  href: string;\n  name: string;\n  onClick: (event: React.MouseEvent<HTMLAnchorElement>) => void;\n}\n\nfunction WalletIcon(props: WalletIconProps) {\n  const { color, href, name, logo, onClick } = props;\n  const fontSize = window.innerWidth < 768 ? `${name.length > 8 ? 2.5 : 2.7}vw` : \"inherit\";\n  return (\n    <a\n      className=\"walletconnect-connect__button__icon_anchor\"\n      href={href}\n      onClick={onClick}\n      rel=\"noopener noreferrer\"\n      target=\"_blank\"\n    >\n      <div\n        className=\"walletconnect-connect__button__icon\"\n        style={{ background: `url('${logo}') ${color}`, backgroundSize: \"100%\" }}\n      ></div>\n      <div style={{ fontSize }} className={\"walletconnect-connect__button__text\"}>\n        {name}\n      </div>\n    </a>\n  );\n}\n\nexport default WalletIcon;\n","import * as React from \"react\";\nimport { IMobileRegistryEntry, IQRCodeModalOptions } from \"@walletconnect/types\";\nimport { isAndroid, formatIOSMobile, saveMobileLinkInfo } from \"@walletconnect/browser-utils\";\n\nimport { DEFAULT_BUTTON_COLOR, WALLETCONNECT_CTA_TEXT_ID } from \"../constants\";\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nimport ConnectButton from \"./ConnectButton\";\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nimport WalletButton from \"./WalletButton\";\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nimport WalletIcon from \"./WalletIcon\";\nimport { TextMap } from \"../types\";\n\ninterface LinkDisplayProps {\n  mobile: boolean;\n  text: TextMap;\n  uri: string;\n  qrcodeModalOptions?: IQRCodeModalOptions;\n  links: IMobileRegistryEntry[];\n  errorMessage: string;\n}\n\nconst GRID_MIN_COUNT = 5;\nconst LINKS_PER_PAGE = 12;\n\nfunction LinkDisplay(props: LinkDisplayProps) {\n  const android = isAndroid();\n  const [input, setInput] = React.useState(\"\");\n  const [filter, setFilter] = React.useState(\"\");\n  const [page, setPage] = React.useState(1);\n  const links = filter\n    ? props.links.filter(link => link.name.toLowerCase().includes(filter.toLowerCase()))\n    : props.links;\n  const errorMessage = props.errorMessage;\n  const grid = filter || links.length > GRID_MIN_COUNT;\n  const pages = Math.ceil(links.length / LINKS_PER_PAGE);\n  const range = [(page - 1) * LINKS_PER_PAGE + 1, page * LINKS_PER_PAGE];\n  const pageLinks = links.length\n    ? links.filter((_, index) => index + 1 >= range[0] && index + 1 <= range[1])\n    : [];\n  const hasPaging = !!(!android && pages > 1);\n  let filterTimeout: any = undefined;\n  function handleInput(e) {\n    setInput(e.target.value);\n    clearTimeout(filterTimeout);\n    if (e.target.value) {\n      filterTimeout = setTimeout(() => {\n        setFilter(e.target.value);\n        setPage(1);\n      }, 1000);\n    } else {\n      setInput(\"\");\n      setFilter(\"\");\n      setPage(1);\n    }\n  }\n\n  return (\n    <div>\n      <p id={WALLETCONNECT_CTA_TEXT_ID} className=\"walletconnect-qrcode__text\">\n        {android ? props.text.connect_mobile_wallet : props.text.choose_preferred_wallet}\n      </p>\n      {!android && (\n        <input\n          className={`walletconnect-search__input`}\n          placeholder=\"Search\"\n          value={input}\n          onChange={handleInput}\n        />\n      )}\n      <div\n        className={`walletconnect-connect__buttons__wrapper${\n          android ? \"__android\" : grid && links.length ? \"__wrap\" : \"\"\n        }`}\n      >\n        {!android ? (\n          pageLinks.length ? (\n            pageLinks.map((entry: IMobileRegistryEntry) => {\n              const { color, name, shortName, logo } = entry;\n              const href = formatIOSMobile(props.uri, entry);\n              const handleClickIOS = React.useCallback(() => {\n                saveMobileLinkInfo({\n                  name,\n                  href,\n                });\n              }, [pageLinks]);\n              return !grid ? (\n                <WalletButton\n                  color={color}\n                  href={href}\n                  name={name}\n                  logo={logo}\n                  onClick={handleClickIOS}\n                />\n              ) : (\n                <WalletIcon\n                  color={color}\n                  href={href}\n                  name={shortName || name}\n                  logo={logo}\n                  onClick={handleClickIOS}\n                />\n              );\n            })\n          ) : (\n            <>\n              <p>\n                {errorMessage.length\n                  ? props.errorMessage\n                  : !!props.links.length && !links.length\n                  ? props.text.no_wallets_found\n                  : props.text.loading}\n              </p>\n            </>\n          )\n        ) : (\n          <ConnectButton\n            name={props.text.connect}\n            color={DEFAULT_BUTTON_COLOR}\n            href={props.uri}\n            onClick={React.useCallback(() => {\n              saveMobileLinkInfo({\n                name: \"Unknown\",\n                href: props.uri,\n              });\n            }, [])}\n          />\n        )}\n      </div>\n      {hasPaging && (\n        <div className=\"walletconnect-modal__footer\">\n          {Array(pages)\n            .fill(0)\n            .map((_, index) => {\n              const pageNumber = index + 1;\n              const selected = page === pageNumber;\n              return (\n                <a\n                  style={{ margin: \"auto 10px\", fontWeight: selected ? \"bold\" : \"normal\" }}\n                  onClick={() => setPage(pageNumber)}\n                >\n                  {pageNumber}\n                </a>\n              );\n            })}\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default LinkDisplay;\n","// eslint-disable-next-line @typescript-eslint/no-unused-vars\nimport * as React from \"react\";\n\ninterface NotificationProps {\n  message: string;\n}\n\nfunction Notification(props: NotificationProps) {\n  const show = !!props.message.trim();\n  return (\n    <div className={`walletconnect-qrcode__notification${show ? \" notification__show\" : \"\"}`}>\n      {props.message}\n    </div>\n  );\n}\n\nexport default Notification;\n","// eslint-disable-next-line @typescript-eslint/no-unused-vars\nimport * as React from \"react\";\nimport QRCode from \"qrcode\";\nimport copy from \"copy-to-clipboard\";\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nimport Notification from \"./Notification\";\n\nimport { WALLETCONNECT_CTA_TEXT_ID } from \"../constants\";\nimport { TextMap } from \"../types\";\n\nasync function formatQRCodeImage(data: string) {\n  let result = \"\";\n  const dataString = await QRCode.toString(data, { margin: 0, type: \"svg\" });\n  if (typeof dataString === \"string\") {\n    result = dataString.replace(\"<svg\", `<svg class=\"walletconnect-qrcode__image\"`);\n  }\n  return result;\n}\n\ninterface QRCodeDisplayProps {\n  text: TextMap;\n  uri: string;\n}\n\nfunction QRCodeDisplay(props: QRCodeDisplayProps) {\n  const [notification, setNotification] = React.useState(\"\");\n  const [svg, setSvg] = React.useState(\"\");\n\n  React.useEffect(() => {\n    (async () => {\n      setSvg(await formatQRCodeImage(props.uri));\n    })();\n  }, []);\n\n  const copyToClipboard = () => {\n    const success = copy(props.uri);\n    if (success) {\n      setNotification(props.text.copied_to_clipboard);\n      setInterval(() => setNotification(\"\"), 1200);\n    } else {\n      setNotification(\"Error\");\n      setInterval(() => setNotification(\"\"), 1200);\n    }\n  };\n\n  return (\n    <div>\n      <p id={WALLETCONNECT_CTA_TEXT_ID} className=\"walletconnect-qrcode__text\">\n        {props.text.scan_qrcode_with_wallet}\n      </p>\n      <div dangerouslySetInnerHTML={{ __html: svg }}></div>\n      <div className=\"walletconnect-modal__footer\">\n        <a onClick={copyToClipboard}>{props.text.copy_to_clipboard}</a>\n      </div>\n      <Notification message={notification} />\n    </div>\n  );\n}\n\nexport default QRCodeDisplay;\n","import { IAppRegistry, IAppEntry } from \"@walletconnect/types\";\n\nconst officialAlgorandWallet: IAppEntry = {\n  // hex encoding of 32 random bytes\n  id: \"23138217b046ae8d9d07e62b3337fb288c4445f92f64be067809cd0a8f9454b9\",\n  name: \"Pera Wallet\",\n  homepage: \"https://perawallet.app\",\n  chains: [\n    // need to change once a standard emerges, perhaps https://github.com/ChainAgnostic/CAIPs/pull/55\n    \"algorand\",\n  ],\n  // randomly generated UUID\n  image_id: \"1765f9aa-f99e-414e-826b-6b570d480999\",\n  image_url: {\n    sm: \"https://algorand-app.s3.amazonaws.com/app-icons/Pera-walletconnect-128.png\",\n    md: \"https://algorand-app.s3.amazonaws.com/app-icons/Pera-walletconnect-128.png\",\n    lg: \"https://algorand-app.s3.amazonaws.com/app-icons/Pera-walletconnect-128.png\",\n  },\n  app: {\n    browser: \"\",\n    ios: \"https://apps.apple.com/us/app/algorand-wallet/id1459898525\",\n    android: \"https://play.google.com/store/apps/details?id=com.algorand.android\",\n    mac: \"\",\n    windows: \"\",\n    linux: \"\",\n  },\n  mobile: {\n    native: \"algorand-wc:\",\n    universal: \"\",\n  },\n  desktop: {\n    native: \"\",\n    universal: \"\",\n  },\n  metadata: {\n    shortName: \"Pera Wallet\",\n    colors: {\n      // \"Pera Wallet yellow\"\n      primary: \"rgb(255, 238, 85)\",\n      secondary: \"\",\n    },\n  },\n};\n\nexport const registry: IAppRegistry = {\n  [officialAlgorandWallet.id]: officialAlgorandWallet,\n};\n","import * as React from \"react\";\nimport {\n  IMobileRegistryEntry,\n  IQRCodeModalOptions,\n  IAppRegistry,\n  IMobileLinkInfo,\n} from \"@walletconnect/types\";\nimport {\n  isMobile,\n  isAndroid,\n  formatIOSMobile,\n  saveMobileLinkInfo,\n  getMobileLinkRegistry,\n  getWalletRegistryUrl,\n  formatMobileRegistry,\n} from \"@walletconnect/browser-utils\";\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nimport Header from \"./Header\";\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nimport LinkDisplay from \"./LinkDisplay\";\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nimport QRCodeDisplay from \"./QRCodeDisplay\";\n\nimport { WALLETCONNECT_MODAL_ID } from \"../constants\";\nimport { TextMap } from \"../types\";\nimport { registry } from \"../registry\";\n\ninterface ModalProps {\n  text: TextMap;\n  uri: string;\n  onClose: any;\n  qrcodeModalOptions?: IQRCodeModalOptions;\n}\n\nfunction Modal(props: ModalProps) {\n  const android = isAndroid();\n  const mobile = isMobile();\n\n  const whitelist = mobile\n    ? props.qrcodeModalOptions && props.qrcodeModalOptions.mobileLinks\n      ? props.qrcodeModalOptions.mobileLinks\n      : undefined\n    : props.qrcodeModalOptions && props.qrcodeModalOptions.desktopLinks\n    ? props.qrcodeModalOptions.desktopLinks\n    : undefined;\n  const [loading, setLoading] = React.useState(false);\n  const [fetched, setFetched] = React.useState(false);\n  const [displayQRCode, setDisplayQRCode] = React.useState(!mobile);\n  const displayProps = {\n    mobile,\n    text: props.text,\n    uri: props.uri,\n    qrcodeModalOptions: props.qrcodeModalOptions,\n  };\n\n  const [singleLinkHref, setSingleLinkHref] = React.useState(\"\");\n  const [hasSingleLink, setHasSingleLink] = React.useState(false);\n  const [links, setLinks] = React.useState<IMobileRegistryEntry[]>([]);\n  const [errorMessage, setErrorMessage] = React.useState(\"\");\n\n  const getLinksIfNeeded = () => {\n    if (fetched || loading || (whitelist && !whitelist.length) || links.length > 0) {\n      return;\n    }\n\n    React.useEffect(() => {\n      const initLinks = async () => {\n        if (android) return;\n        setLoading(true);\n        try {\n          // const url =\n          //   props.qrcodeModalOptions && props.qrcodeModalOptions.registryUrl\n          //     ? props.qrcodeModalOptions.registryUrl\n          //     : getWalletRegistryUrl();\n          // const registryResponse = await fetch(url)\n          // const registry = (await registryResponse.json()).listings as IAppRegistry;\n          const platform = mobile ? \"mobile\" : \"desktop\";\n          const _links = getMobileLinkRegistry(formatMobileRegistry(registry, platform), whitelist);\n          setLoading(false);\n          setFetched(true);\n          setErrorMessage(!_links.length ? props.text.no_supported_wallets : \"\");\n          setLinks(_links);\n          const hasSingleLink = _links.length === 1;\n          if (hasSingleLink) {\n            setSingleLinkHref(formatIOSMobile(props.uri, _links[0]));\n            setDisplayQRCode(true);\n          }\n          setHasSingleLink(hasSingleLink);\n        } catch (e) {\n          setLoading(false);\n          setFetched(true);\n          setErrorMessage(props.text.something_went_wrong);\n          console.error(e); // eslint-disable-line no-console\n        }\n      };\n      initLinks();\n    });\n  };\n\n  getLinksIfNeeded();\n\n  const rightSelected = mobile ? displayQRCode : !displayQRCode;\n  return (\n    <div id={WALLETCONNECT_MODAL_ID} className=\"walletconnect-qrcode__base animated fadeIn\">\n      <div className=\"walletconnect-modal__base\">\n        <Header onClose={props.onClose} />\n        {hasSingleLink && displayQRCode ? (\n          <div className=\"walletconnect-modal__single_wallet\">\n            <a\n              onClick={() => saveMobileLinkInfo({ name: links[0].name, href: singleLinkHref })}\n              href={singleLinkHref}\n              rel=\"noopener noreferrer\"\n              target=\"_blank\"\n            >\n              {props.text.connect_with + \" \" + (hasSingleLink ? links[0].name : \"\") + \" ›\"}\n            </a>\n          </div>\n        ) : android || loading || (!loading && links.length) ? (\n          <div\n            className={`walletconnect-modal__mobile__toggle${\n              rightSelected ? \" right__selected\" : \"\"\n            }`}\n          >\n            <div className=\"walletconnect-modal__mobile__toggle_selector\" />\n            {mobile ? (\n              <>\n                <a onClick={() => (setDisplayQRCode(false), getLinksIfNeeded())}>\n                  {props.text.mobile}\n                </a>\n                <a onClick={() => setDisplayQRCode(true)}>{props.text.qrcode}</a>\n              </>\n            ) : (\n              <>\n                <a onClick={() => setDisplayQRCode(true)}>{props.text.qrcode}</a>\n                <a onClick={() => (setDisplayQRCode(false), getLinksIfNeeded())}>\n                  {props.text.desktop}\n                </a>\n              </>\n            )}\n          </div>\n        ) : null}\n\n        <div>\n          {displayQRCode || (!android && !loading && !links.length) ? (\n            <QRCodeDisplay {...displayProps} />\n          ) : (\n            <LinkDisplay {...displayProps} links={links} errorMessage={errorMessage} />\n          )}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Modal;\n","import { TextMap } from \"../types\";\n\nconst de: TextMap = {\n  choose_preferred_wallet: \"Wähle bevorzugte Wallet\",\n  connect_mobile_wallet: \"Verbinde mit Mobile Wallet\",\n  scan_qrcode_with_wallet: \"Scanne den QR-code mit einer WalletConnect kompatiblen Wallet\",\n  connect: \"Verbinden\",\n  qrcode: \"QR-Code\",\n  mobile: \"Mobile\",\n  desktop: \"Desktop\",\n  copy_to_clipboard: \"In die Zwischenablage kopieren\",\n  copied_to_clipboard: \"In die Zwischenablage kopiert!\",\n  connect_with: \"Verbinden mit Hilfe von\",\n  loading: \"Laden...\",\n  something_went_wrong: \"Etwas ist schief gelaufen\",\n  no_supported_wallets: \"Es gibt noch keine unterstützten Wallet\",\n  no_wallets_found: \"keine Wallet gefunden\",\n};\n\nexport default de;\n","import { TextMap } from \"../types\";\n\nconst en: TextMap = {\n  choose_preferred_wallet: \"Choose your preferred wallet\",\n  connect_mobile_wallet: \"Connect to Mobile Wallet\",\n  scan_qrcode_with_wallet: \"Scan QR code with a WalletConnect-compatible wallet\",\n  connect: \"Connect\",\n  qrcode: \"QR Code\",\n  mobile: \"Mobile\",\n  desktop: \"Desktop\",\n  copy_to_clipboard: \"Copy to clipboard\",\n  copied_to_clipboard: \"Copied to clipboard!\",\n  connect_with: \"Connect with\",\n  loading: \"Loading...\",\n  something_went_wrong: \"Something went wrong\",\n  no_supported_wallets: \"There are no supported wallets yet\",\n  no_wallets_found: \"No wallets found\",\n};\n\nexport default en;\n","import { TextMap } from \"../types\";\n\nconst es: TextMap = {\n  choose_preferred_wallet: \"Elige tu billetera preferida\",\n  connect_mobile_wallet: \"Conectar a billetera móvil\",\n  scan_qrcode_with_wallet: \"Escanea el código QR con una billetera compatible con WalletConnect\",\n  connect: \"Conectar\",\n  qrcode: \"Código QR\",\n  mobile: \"Móvil\",\n  desktop: \"Desktop\",\n  copy_to_clipboard: \"Copiar\",\n  copied_to_clipboard: \"Copiado!\",\n  connect_with: \"Conectar mediante\",\n  loading: \"Cargando...\",\n  something_went_wrong: \"Algo salió mal\",\n  no_supported_wallets: \"Todavía no hay billeteras compatibles\",\n  no_wallets_found: \"No se encontraron billeteras\",\n};\n\nexport default es;\n","import { TextMap } from \"../types\";\n\nconst fr: TextMap = {\n  choose_preferred_wallet: \"Choisissez votre portefeuille préféré\",\n  connect_mobile_wallet: \"Se connecter au portefeuille mobile\",\n  scan_qrcode_with_wallet: \"Scannez le QR code avec un portefeuille compatible WalletConnect\",\n  connect: \"Se connecter\",\n  qrcode: \"QR Code\",\n  mobile: \"Mobile\",\n  desktop: \"Desktop\",\n  copy_to_clipboard: \"Copier\",\n  copied_to_clipboard: \"Copié!\",\n  connect_with: \"Connectez-vous à l'aide de\",\n  loading: \"Chargement...\",\n  something_went_wrong: \"Quelque chose a mal tourné\",\n  no_supported_wallets: \"Il n'y a pas encore de portefeuilles pris en charge\",\n  no_wallets_found: \"Aucun portefeuille trouvé\",\n};\n\nexport default fr;\n","import { TextMap } from \"../types\";\n\nconst ko: TextMap = {\n  choose_preferred_wallet: \"원하는 지갑을 선택하세요\",\n  connect_mobile_wallet: \"모바일 지갑과 연결\",\n  scan_qrcode_with_wallet: \"WalletConnect 지원 지갑에서 QR코드를 스캔하세요\",\n  connect: \"연결\",\n  qrcode: \"QR 코드\",\n  mobile: \"모바일\",\n  desktop: \"데스크탑\",\n  copy_to_clipboard: \"클립보드에 복사\",\n  copied_to_clipboard: \"클립보드에 복사되었습니다!\",\n  connect_with: \"와 연결하다\",\n  loading: \"로드 중...\",\n  something_went_wrong: \"문제가 발생했습니다.\",\n  no_supported_wallets: \"아직 지원되는 지갑이 없습니다\",\n  no_wallets_found: \"지갑을 찾을 수 없습니다\",\n};\n\nexport default ko;\n","import { TextMap } from \"../types\";\n\nconst pt: TextMap = {\n  choose_preferred_wallet: \"Escolha sua carteira preferida\",\n  connect_mobile_wallet: \"Conectar-se à carteira móvel\",\n  scan_qrcode_with_wallet: \"Ler o código QR com uma carteira compatível com WalletConnect\",\n  connect: \"Conectar\",\n  qrcode: \"Código QR\",\n  mobile: \"Móvel\",\n  desktop: \"Desktop\",\n  copy_to_clipboard: \"Copiar\",\n  copied_to_clipboard: \"Copiado!\",\n  connect_with: \"Ligar por meio de\",\n  loading: \"Carregamento...\",\n  something_went_wrong: \"Algo correu mal\",\n  no_supported_wallets: \"Ainda não há carteiras suportadas\",\n  no_wallets_found: \"Nenhuma carteira encontrada\",\n};\n\nexport default pt;\n","import { TextMap } from \"../types\";\n\nconst zh: TextMap = {\n  choose_preferred_wallet: \"选择你的钱包\",\n  connect_mobile_wallet: \"连接至移动端钱包\",\n  scan_qrcode_with_wallet: \"使用兼容 WalletConnect 的钱包扫描二维码\",\n  connect: \"连接\",\n  qrcode: \"二维码\",\n  mobile: \"移动\",\n  desktop: \"桌面\",\n  copy_to_clipboard: \"复制到剪贴板\",\n  copied_to_clipboard: \"复制到剪贴板成功！\",\n  connect_with: \"通过以下方式连接\",\n  loading: \"正在加载...\",\n  something_went_wrong: \"出了问题\",\n  no_supported_wallets: \"目前还没有支持的钱包\",\n  no_wallets_found: \"没有找到钱包\",\n};\n\nexport default zh;\n","import { TextMap } from \"../types\";\n\nconst fa: TextMap = {\n  choose_preferred_wallet: \"کیف پول مورد نظر خود را انتخاب کنید\",\n  connect_mobile_wallet: \"به کیف پول موبایل وصل شوید\",\n  scan_qrcode_with_wallet: \"کد QR را با یک کیف پول سازگار با WalletConnect اسکن کنید\",\n  connect: \"اتصال\",\n  qrcode: \"کد QR\",\n  mobile: \"سیار\",\n  desktop: \"دسکتاپ\",\n  copy_to_clipboard: \"کپی به کلیپ بورد\",\n  copied_to_clipboard: \"در کلیپ بورد کپی شد!\",\n  connect_with: \"ارتباط با\",\n  loading: \"...بارگذاری\",\n  something_went_wrong: \"مشکلی پیش آمد\",\n  no_supported_wallets: \"هنوز هیچ کیف پول پشتیبانی شده ای وجود ندارد\",\n  no_wallets_found: \"هیچ کیف پولی پیدا نشد\",\n};\n\nexport default fa;\n","import { TextMap } from \"../types\";\n\nimport de from \"./de\";\nimport en from \"./en\";\nimport es from \"./es\";\nimport fr from \"./fr\";\nimport ko from \"./ko\";\nimport pt from \"./pt\";\nimport zh from \"./zh\";\nimport fa from \"./fa\";\n\nconst languages: { [lang: string]: TextMap } = { de, en, es, fr, ko, pt, zh, fa };\n\nexport default languages;\n","// eslint-disable-next-line @typescript-eslint/no-unused-vars\nimport * as React from \"react\";\n// @ts-ignore\nimport * as ReactDOM from \"react-dom\";\nimport { getDocumentOrThrow, getNavigatorOrThrow } from \"@walletconnect/browser-utils\";\n\nimport { WALLETCONNECT_STYLE_SHEET } from \"./assets/style\";\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nimport Modal from \"./components/Modal\";\nimport Languages from \"./languages\";\nimport {\n  ANIMATION_DURATION,\n  WALLETCONNECT_WRAPPER_ID,\n  WALLETCONNECT_MODAL_ID,\n  WALLETCONNECT_STYLE_ID,\n} from \"./constants\";\nimport { IQRCodeModalOptions } from \"@walletconnect/types\";\nimport { TextMap } from \"./types\";\n\nfunction injectStyleSheet() {\n  const doc = getDocumentOrThrow();\n  const prev = doc.getElementById(WALLETCONNECT_STYLE_ID);\n  if (prev) {\n    doc.head.removeChild(prev);\n  }\n  const style = doc.createElement(\"style\");\n  style.setAttribute(\"id\", WALLETCONNECT_STYLE_ID);\n  style.innerText = WALLETCONNECT_STYLE_SHEET;\n  doc.head.appendChild(style);\n}\n\nfunction renderWrapper(): HTMLDivElement {\n  const doc = getDocumentOrThrow();\n  const wrapper = doc.createElement(\"div\");\n  wrapper.setAttribute(\"id\", WALLETCONNECT_WRAPPER_ID);\n  doc.body.appendChild(wrapper);\n  return wrapper;\n}\n\nfunction triggerCloseAnimation(): void {\n  const doc = getDocumentOrThrow();\n  const modal = doc.getElementById(WALLETCONNECT_MODAL_ID);\n  if (modal) {\n    modal.className = modal.className.replace(\"fadeIn\", \"fadeOut\");\n    setTimeout(() => {\n      const wrapper = doc.getElementById(WALLETCONNECT_WRAPPER_ID);\n      if (wrapper) {\n        doc.body.removeChild(wrapper);\n      }\n    }, ANIMATION_DURATION);\n  }\n}\n\nfunction getWrappedCallback(cb: any): any {\n  return () => {\n    triggerCloseAnimation();\n    if (cb) {\n      cb();\n    }\n  };\n}\n\nfunction getText(): TextMap {\n  const lang = getNavigatorOrThrow().language.split(\"-\")[0] || \"en\";\n  return Languages[lang] || Languages[\"en\"];\n}\n\nexport function open(uri: string, cb: any, qrcodeModalOptions?: IQRCodeModalOptions) {\n  injectStyleSheet();\n  const wrapper = renderWrapper();\n  ReactDOM.render(\n    <Modal\n      text={getText()}\n      uri={uri}\n      onClose={getWrappedCallback(cb)}\n      qrcodeModalOptions={qrcodeModalOptions}\n    />,\n    wrapper,\n  );\n}\n\nexport function close() {\n  triggerCloseAnimation();\n}\n","\nconst ALGORAND_QUERY_PARAM_NAME = \"algorand\";\n\nexport function transformUri(uri: string, addAlgorandMarkerToUri?: boolean): string {\n  if (addAlgorandMarkerToUri == null || addAlgorandMarkerToUri) {\n    const urlObject = new URL(uri);\n    if (!urlObject.searchParams.has(ALGORAND_QUERY_PARAM_NAME)) {\n      urlObject.searchParams.set(ALGORAND_QUERY_PARAM_NAME, \"true\");\n      return urlObject.toString();\n    }\n  }\n  return uri;\n}\n","/******************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    var desc = Object.getOwnPropertyDescriptor(m, k);\r\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\r\n        desc = { enumerable: true, get: function() { return m[k]; } };\r\n    }\r\n    Object.defineProperty(o, k2, desc);\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\r\n\r\nexport function __spreadArray(to, from, pack) {\r\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\r\n        if (ar || !(i in from)) {\r\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\r\n            ar[i] = from[i];\r\n        }\r\n    }\r\n    return to.concat(ar || Array.prototype.slice.call(from));\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\r\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n}\r\n\r\nexport function __classPrivateFieldIn(state, receiver) {\r\n    if (receiver === null || (typeof receiver !== \"object\" && typeof receiver !== \"function\")) throw new TypeError(\"Cannot use 'in' operator on non-object\");\r\n    return typeof state === \"function\" ? receiver === state : state.has(receiver);\r\n}\r\n",null,null,null,null,"(function(nacl) {\n'use strict';\n\n// Ported in 2014 by Dmitry Chestnykh and Devi Mandiri.\n// Public domain.\n//\n// Implementation derived from TweetNaCl version 20140427.\n// See for details: http://tweetnacl.cr.yp.to/\n\nvar gf = function(init) {\n  var i, r = new Float64Array(16);\n  if (init) for (i = 0; i < init.length; i++) r[i] = init[i];\n  return r;\n};\n\n//  Pluggable, initialized in high-level API below.\nvar randombytes = function(/* x, n */) { throw new Error('no PRNG'); };\n\nvar _0 = new Uint8Array(16);\nvar _9 = new Uint8Array(32); _9[0] = 9;\n\nvar gf0 = gf(),\n    gf1 = gf([1]),\n    _121665 = gf([0xdb41, 1]),\n    D = gf([0x78a3, 0x1359, 0x4dca, 0x75eb, 0xd8ab, 0x4141, 0x0a4d, 0x0070, 0xe898, 0x7779, 0x4079, 0x8cc7, 0xfe73, 0x2b6f, 0x6cee, 0x5203]),\n    D2 = gf([0xf159, 0x26b2, 0x9b94, 0xebd6, 0xb156, 0x8283, 0x149a, 0x00e0, 0xd130, 0xeef3, 0x80f2, 0x198e, 0xfce7, 0x56df, 0xd9dc, 0x2406]),\n    X = gf([0xd51a, 0x8f25, 0x2d60, 0xc956, 0xa7b2, 0x9525, 0xc760, 0x692c, 0xdc5c, 0xfdd6, 0xe231, 0xc0a4, 0x53fe, 0xcd6e, 0x36d3, 0x2169]),\n    Y = gf([0x6658, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666]),\n    I = gf([0xa0b0, 0x4a0e, 0x1b27, 0xc4ee, 0xe478, 0xad2f, 0x1806, 0x2f43, 0xd7a7, 0x3dfb, 0x0099, 0x2b4d, 0xdf0b, 0x4fc1, 0x2480, 0x2b83]);\n\nfunction ts64(x, i, h, l) {\n  x[i]   = (h >> 24) & 0xff;\n  x[i+1] = (h >> 16) & 0xff;\n  x[i+2] = (h >>  8) & 0xff;\n  x[i+3] = h & 0xff;\n  x[i+4] = (l >> 24)  & 0xff;\n  x[i+5] = (l >> 16)  & 0xff;\n  x[i+6] = (l >>  8)  & 0xff;\n  x[i+7] = l & 0xff;\n}\n\nfunction vn(x, xi, y, yi, n) {\n  var i,d = 0;\n  for (i = 0; i < n; i++) d |= x[xi+i]^y[yi+i];\n  return (1 & ((d - 1) >>> 8)) - 1;\n}\n\nfunction crypto_verify_16(x, xi, y, yi) {\n  return vn(x,xi,y,yi,16);\n}\n\nfunction crypto_verify_32(x, xi, y, yi) {\n  return vn(x,xi,y,yi,32);\n}\n\nfunction core_salsa20(o, p, k, c) {\n  var j0  = c[ 0] & 0xff | (c[ 1] & 0xff)<<8 | (c[ 2] & 0xff)<<16 | (c[ 3] & 0xff)<<24,\n      j1  = k[ 0] & 0xff | (k[ 1] & 0xff)<<8 | (k[ 2] & 0xff)<<16 | (k[ 3] & 0xff)<<24,\n      j2  = k[ 4] & 0xff | (k[ 5] & 0xff)<<8 | (k[ 6] & 0xff)<<16 | (k[ 7] & 0xff)<<24,\n      j3  = k[ 8] & 0xff | (k[ 9] & 0xff)<<8 | (k[10] & 0xff)<<16 | (k[11] & 0xff)<<24,\n      j4  = k[12] & 0xff | (k[13] & 0xff)<<8 | (k[14] & 0xff)<<16 | (k[15] & 0xff)<<24,\n      j5  = c[ 4] & 0xff | (c[ 5] & 0xff)<<8 | (c[ 6] & 0xff)<<16 | (c[ 7] & 0xff)<<24,\n      j6  = p[ 0] & 0xff | (p[ 1] & 0xff)<<8 | (p[ 2] & 0xff)<<16 | (p[ 3] & 0xff)<<24,\n      j7  = p[ 4] & 0xff | (p[ 5] & 0xff)<<8 | (p[ 6] & 0xff)<<16 | (p[ 7] & 0xff)<<24,\n      j8  = p[ 8] & 0xff | (p[ 9] & 0xff)<<8 | (p[10] & 0xff)<<16 | (p[11] & 0xff)<<24,\n      j9  = p[12] & 0xff | (p[13] & 0xff)<<8 | (p[14] & 0xff)<<16 | (p[15] & 0xff)<<24,\n      j10 = c[ 8] & 0xff | (c[ 9] & 0xff)<<8 | (c[10] & 0xff)<<16 | (c[11] & 0xff)<<24,\n      j11 = k[16] & 0xff | (k[17] & 0xff)<<8 | (k[18] & 0xff)<<16 | (k[19] & 0xff)<<24,\n      j12 = k[20] & 0xff | (k[21] & 0xff)<<8 | (k[22] & 0xff)<<16 | (k[23] & 0xff)<<24,\n      j13 = k[24] & 0xff | (k[25] & 0xff)<<8 | (k[26] & 0xff)<<16 | (k[27] & 0xff)<<24,\n      j14 = k[28] & 0xff | (k[29] & 0xff)<<8 | (k[30] & 0xff)<<16 | (k[31] & 0xff)<<24,\n      j15 = c[12] & 0xff | (c[13] & 0xff)<<8 | (c[14] & 0xff)<<16 | (c[15] & 0xff)<<24;\n\n  var x0 = j0, x1 = j1, x2 = j2, x3 = j3, x4 = j4, x5 = j5, x6 = j6, x7 = j7,\n      x8 = j8, x9 = j9, x10 = j10, x11 = j11, x12 = j12, x13 = j13, x14 = j14,\n      x15 = j15, u;\n\n  for (var i = 0; i < 20; i += 2) {\n    u = x0 + x12 | 0;\n    x4 ^= u<<7 | u>>>(32-7);\n    u = x4 + x0 | 0;\n    x8 ^= u<<9 | u>>>(32-9);\n    u = x8 + x4 | 0;\n    x12 ^= u<<13 | u>>>(32-13);\n    u = x12 + x8 | 0;\n    x0 ^= u<<18 | u>>>(32-18);\n\n    u = x5 + x1 | 0;\n    x9 ^= u<<7 | u>>>(32-7);\n    u = x9 + x5 | 0;\n    x13 ^= u<<9 | u>>>(32-9);\n    u = x13 + x9 | 0;\n    x1 ^= u<<13 | u>>>(32-13);\n    u = x1 + x13 | 0;\n    x5 ^= u<<18 | u>>>(32-18);\n\n    u = x10 + x6 | 0;\n    x14 ^= u<<7 | u>>>(32-7);\n    u = x14 + x10 | 0;\n    x2 ^= u<<9 | u>>>(32-9);\n    u = x2 + x14 | 0;\n    x6 ^= u<<13 | u>>>(32-13);\n    u = x6 + x2 | 0;\n    x10 ^= u<<18 | u>>>(32-18);\n\n    u = x15 + x11 | 0;\n    x3 ^= u<<7 | u>>>(32-7);\n    u = x3 + x15 | 0;\n    x7 ^= u<<9 | u>>>(32-9);\n    u = x7 + x3 | 0;\n    x11 ^= u<<13 | u>>>(32-13);\n    u = x11 + x7 | 0;\n    x15 ^= u<<18 | u>>>(32-18);\n\n    u = x0 + x3 | 0;\n    x1 ^= u<<7 | u>>>(32-7);\n    u = x1 + x0 | 0;\n    x2 ^= u<<9 | u>>>(32-9);\n    u = x2 + x1 | 0;\n    x3 ^= u<<13 | u>>>(32-13);\n    u = x3 + x2 | 0;\n    x0 ^= u<<18 | u>>>(32-18);\n\n    u = x5 + x4 | 0;\n    x6 ^= u<<7 | u>>>(32-7);\n    u = x6 + x5 | 0;\n    x7 ^= u<<9 | u>>>(32-9);\n    u = x7 + x6 | 0;\n    x4 ^= u<<13 | u>>>(32-13);\n    u = x4 + x7 | 0;\n    x5 ^= u<<18 | u>>>(32-18);\n\n    u = x10 + x9 | 0;\n    x11 ^= u<<7 | u>>>(32-7);\n    u = x11 + x10 | 0;\n    x8 ^= u<<9 | u>>>(32-9);\n    u = x8 + x11 | 0;\n    x9 ^= u<<13 | u>>>(32-13);\n    u = x9 + x8 | 0;\n    x10 ^= u<<18 | u>>>(32-18);\n\n    u = x15 + x14 | 0;\n    x12 ^= u<<7 | u>>>(32-7);\n    u = x12 + x15 | 0;\n    x13 ^= u<<9 | u>>>(32-9);\n    u = x13 + x12 | 0;\n    x14 ^= u<<13 | u>>>(32-13);\n    u = x14 + x13 | 0;\n    x15 ^= u<<18 | u>>>(32-18);\n  }\n   x0 =  x0 +  j0 | 0;\n   x1 =  x1 +  j1 | 0;\n   x2 =  x2 +  j2 | 0;\n   x3 =  x3 +  j3 | 0;\n   x4 =  x4 +  j4 | 0;\n   x5 =  x5 +  j5 | 0;\n   x6 =  x6 +  j6 | 0;\n   x7 =  x7 +  j7 | 0;\n   x8 =  x8 +  j8 | 0;\n   x9 =  x9 +  j9 | 0;\n  x10 = x10 + j10 | 0;\n  x11 = x11 + j11 | 0;\n  x12 = x12 + j12 | 0;\n  x13 = x13 + j13 | 0;\n  x14 = x14 + j14 | 0;\n  x15 = x15 + j15 | 0;\n\n  o[ 0] = x0 >>>  0 & 0xff;\n  o[ 1] = x0 >>>  8 & 0xff;\n  o[ 2] = x0 >>> 16 & 0xff;\n  o[ 3] = x0 >>> 24 & 0xff;\n\n  o[ 4] = x1 >>>  0 & 0xff;\n  o[ 5] = x1 >>>  8 & 0xff;\n  o[ 6] = x1 >>> 16 & 0xff;\n  o[ 7] = x1 >>> 24 & 0xff;\n\n  o[ 8] = x2 >>>  0 & 0xff;\n  o[ 9] = x2 >>>  8 & 0xff;\n  o[10] = x2 >>> 16 & 0xff;\n  o[11] = x2 >>> 24 & 0xff;\n\n  o[12] = x3 >>>  0 & 0xff;\n  o[13] = x3 >>>  8 & 0xff;\n  o[14] = x3 >>> 16 & 0xff;\n  o[15] = x3 >>> 24 & 0xff;\n\n  o[16] = x4 >>>  0 & 0xff;\n  o[17] = x4 >>>  8 & 0xff;\n  o[18] = x4 >>> 16 & 0xff;\n  o[19] = x4 >>> 24 & 0xff;\n\n  o[20] = x5 >>>  0 & 0xff;\n  o[21] = x5 >>>  8 & 0xff;\n  o[22] = x5 >>> 16 & 0xff;\n  o[23] = x5 >>> 24 & 0xff;\n\n  o[24] = x6 >>>  0 & 0xff;\n  o[25] = x6 >>>  8 & 0xff;\n  o[26] = x6 >>> 16 & 0xff;\n  o[27] = x6 >>> 24 & 0xff;\n\n  o[28] = x7 >>>  0 & 0xff;\n  o[29] = x7 >>>  8 & 0xff;\n  o[30] = x7 >>> 16 & 0xff;\n  o[31] = x7 >>> 24 & 0xff;\n\n  o[32] = x8 >>>  0 & 0xff;\n  o[33] = x8 >>>  8 & 0xff;\n  o[34] = x8 >>> 16 & 0xff;\n  o[35] = x8 >>> 24 & 0xff;\n\n  o[36] = x9 >>>  0 & 0xff;\n  o[37] = x9 >>>  8 & 0xff;\n  o[38] = x9 >>> 16 & 0xff;\n  o[39] = x9 >>> 24 & 0xff;\n\n  o[40] = x10 >>>  0 & 0xff;\n  o[41] = x10 >>>  8 & 0xff;\n  o[42] = x10 >>> 16 & 0xff;\n  o[43] = x10 >>> 24 & 0xff;\n\n  o[44] = x11 >>>  0 & 0xff;\n  o[45] = x11 >>>  8 & 0xff;\n  o[46] = x11 >>> 16 & 0xff;\n  o[47] = x11 >>> 24 & 0xff;\n\n  o[48] = x12 >>>  0 & 0xff;\n  o[49] = x12 >>>  8 & 0xff;\n  o[50] = x12 >>> 16 & 0xff;\n  o[51] = x12 >>> 24 & 0xff;\n\n  o[52] = x13 >>>  0 & 0xff;\n  o[53] = x13 >>>  8 & 0xff;\n  o[54] = x13 >>> 16 & 0xff;\n  o[55] = x13 >>> 24 & 0xff;\n\n  o[56] = x14 >>>  0 & 0xff;\n  o[57] = x14 >>>  8 & 0xff;\n  o[58] = x14 >>> 16 & 0xff;\n  o[59] = x14 >>> 24 & 0xff;\n\n  o[60] = x15 >>>  0 & 0xff;\n  o[61] = x15 >>>  8 & 0xff;\n  o[62] = x15 >>> 16 & 0xff;\n  o[63] = x15 >>> 24 & 0xff;\n}\n\nfunction core_hsalsa20(o,p,k,c) {\n  var j0  = c[ 0] & 0xff | (c[ 1] & 0xff)<<8 | (c[ 2] & 0xff)<<16 | (c[ 3] & 0xff)<<24,\n      j1  = k[ 0] & 0xff | (k[ 1] & 0xff)<<8 | (k[ 2] & 0xff)<<16 | (k[ 3] & 0xff)<<24,\n      j2  = k[ 4] & 0xff | (k[ 5] & 0xff)<<8 | (k[ 6] & 0xff)<<16 | (k[ 7] & 0xff)<<24,\n      j3  = k[ 8] & 0xff | (k[ 9] & 0xff)<<8 | (k[10] & 0xff)<<16 | (k[11] & 0xff)<<24,\n      j4  = k[12] & 0xff | (k[13] & 0xff)<<8 | (k[14] & 0xff)<<16 | (k[15] & 0xff)<<24,\n      j5  = c[ 4] & 0xff | (c[ 5] & 0xff)<<8 | (c[ 6] & 0xff)<<16 | (c[ 7] & 0xff)<<24,\n      j6  = p[ 0] & 0xff | (p[ 1] & 0xff)<<8 | (p[ 2] & 0xff)<<16 | (p[ 3] & 0xff)<<24,\n      j7  = p[ 4] & 0xff | (p[ 5] & 0xff)<<8 | (p[ 6] & 0xff)<<16 | (p[ 7] & 0xff)<<24,\n      j8  = p[ 8] & 0xff | (p[ 9] & 0xff)<<8 | (p[10] & 0xff)<<16 | (p[11] & 0xff)<<24,\n      j9  = p[12] & 0xff | (p[13] & 0xff)<<8 | (p[14] & 0xff)<<16 | (p[15] & 0xff)<<24,\n      j10 = c[ 8] & 0xff | (c[ 9] & 0xff)<<8 | (c[10] & 0xff)<<16 | (c[11] & 0xff)<<24,\n      j11 = k[16] & 0xff | (k[17] & 0xff)<<8 | (k[18] & 0xff)<<16 | (k[19] & 0xff)<<24,\n      j12 = k[20] & 0xff | (k[21] & 0xff)<<8 | (k[22] & 0xff)<<16 | (k[23] & 0xff)<<24,\n      j13 = k[24] & 0xff | (k[25] & 0xff)<<8 | (k[26] & 0xff)<<16 | (k[27] & 0xff)<<24,\n      j14 = k[28] & 0xff | (k[29] & 0xff)<<8 | (k[30] & 0xff)<<16 | (k[31] & 0xff)<<24,\n      j15 = c[12] & 0xff | (c[13] & 0xff)<<8 | (c[14] & 0xff)<<16 | (c[15] & 0xff)<<24;\n\n  var x0 = j0, x1 = j1, x2 = j2, x3 = j3, x4 = j4, x5 = j5, x6 = j6, x7 = j7,\n      x8 = j8, x9 = j9, x10 = j10, x11 = j11, x12 = j12, x13 = j13, x14 = j14,\n      x15 = j15, u;\n\n  for (var i = 0; i < 20; i += 2) {\n    u = x0 + x12 | 0;\n    x4 ^= u<<7 | u>>>(32-7);\n    u = x4 + x0 | 0;\n    x8 ^= u<<9 | u>>>(32-9);\n    u = x8 + x4 | 0;\n    x12 ^= u<<13 | u>>>(32-13);\n    u = x12 + x8 | 0;\n    x0 ^= u<<18 | u>>>(32-18);\n\n    u = x5 + x1 | 0;\n    x9 ^= u<<7 | u>>>(32-7);\n    u = x9 + x5 | 0;\n    x13 ^= u<<9 | u>>>(32-9);\n    u = x13 + x9 | 0;\n    x1 ^= u<<13 | u>>>(32-13);\n    u = x1 + x13 | 0;\n    x5 ^= u<<18 | u>>>(32-18);\n\n    u = x10 + x6 | 0;\n    x14 ^= u<<7 | u>>>(32-7);\n    u = x14 + x10 | 0;\n    x2 ^= u<<9 | u>>>(32-9);\n    u = x2 + x14 | 0;\n    x6 ^= u<<13 | u>>>(32-13);\n    u = x6 + x2 | 0;\n    x10 ^= u<<18 | u>>>(32-18);\n\n    u = x15 + x11 | 0;\n    x3 ^= u<<7 | u>>>(32-7);\n    u = x3 + x15 | 0;\n    x7 ^= u<<9 | u>>>(32-9);\n    u = x7 + x3 | 0;\n    x11 ^= u<<13 | u>>>(32-13);\n    u = x11 + x7 | 0;\n    x15 ^= u<<18 | u>>>(32-18);\n\n    u = x0 + x3 | 0;\n    x1 ^= u<<7 | u>>>(32-7);\n    u = x1 + x0 | 0;\n    x2 ^= u<<9 | u>>>(32-9);\n    u = x2 + x1 | 0;\n    x3 ^= u<<13 | u>>>(32-13);\n    u = x3 + x2 | 0;\n    x0 ^= u<<18 | u>>>(32-18);\n\n    u = x5 + x4 | 0;\n    x6 ^= u<<7 | u>>>(32-7);\n    u = x6 + x5 | 0;\n    x7 ^= u<<9 | u>>>(32-9);\n    u = x7 + x6 | 0;\n    x4 ^= u<<13 | u>>>(32-13);\n    u = x4 + x7 | 0;\n    x5 ^= u<<18 | u>>>(32-18);\n\n    u = x10 + x9 | 0;\n    x11 ^= u<<7 | u>>>(32-7);\n    u = x11 + x10 | 0;\n    x8 ^= u<<9 | u>>>(32-9);\n    u = x8 + x11 | 0;\n    x9 ^= u<<13 | u>>>(32-13);\n    u = x9 + x8 | 0;\n    x10 ^= u<<18 | u>>>(32-18);\n\n    u = x15 + x14 | 0;\n    x12 ^= u<<7 | u>>>(32-7);\n    u = x12 + x15 | 0;\n    x13 ^= u<<9 | u>>>(32-9);\n    u = x13 + x12 | 0;\n    x14 ^= u<<13 | u>>>(32-13);\n    u = x14 + x13 | 0;\n    x15 ^= u<<18 | u>>>(32-18);\n  }\n\n  o[ 0] = x0 >>>  0 & 0xff;\n  o[ 1] = x0 >>>  8 & 0xff;\n  o[ 2] = x0 >>> 16 & 0xff;\n  o[ 3] = x0 >>> 24 & 0xff;\n\n  o[ 4] = x5 >>>  0 & 0xff;\n  o[ 5] = x5 >>>  8 & 0xff;\n  o[ 6] = x5 >>> 16 & 0xff;\n  o[ 7] = x5 >>> 24 & 0xff;\n\n  o[ 8] = x10 >>>  0 & 0xff;\n  o[ 9] = x10 >>>  8 & 0xff;\n  o[10] = x10 >>> 16 & 0xff;\n  o[11] = x10 >>> 24 & 0xff;\n\n  o[12] = x15 >>>  0 & 0xff;\n  o[13] = x15 >>>  8 & 0xff;\n  o[14] = x15 >>> 16 & 0xff;\n  o[15] = x15 >>> 24 & 0xff;\n\n  o[16] = x6 >>>  0 & 0xff;\n  o[17] = x6 >>>  8 & 0xff;\n  o[18] = x6 >>> 16 & 0xff;\n  o[19] = x6 >>> 24 & 0xff;\n\n  o[20] = x7 >>>  0 & 0xff;\n  o[21] = x7 >>>  8 & 0xff;\n  o[22] = x7 >>> 16 & 0xff;\n  o[23] = x7 >>> 24 & 0xff;\n\n  o[24] = x8 >>>  0 & 0xff;\n  o[25] = x8 >>>  8 & 0xff;\n  o[26] = x8 >>> 16 & 0xff;\n  o[27] = x8 >>> 24 & 0xff;\n\n  o[28] = x9 >>>  0 & 0xff;\n  o[29] = x9 >>>  8 & 0xff;\n  o[30] = x9 >>> 16 & 0xff;\n  o[31] = x9 >>> 24 & 0xff;\n}\n\nfunction crypto_core_salsa20(out,inp,k,c) {\n  core_salsa20(out,inp,k,c);\n}\n\nfunction crypto_core_hsalsa20(out,inp,k,c) {\n  core_hsalsa20(out,inp,k,c);\n}\n\nvar sigma = new Uint8Array([101, 120, 112, 97, 110, 100, 32, 51, 50, 45, 98, 121, 116, 101, 32, 107]);\n            // \"expand 32-byte k\"\n\nfunction crypto_stream_salsa20_xor(c,cpos,m,mpos,b,n,k) {\n  var z = new Uint8Array(16), x = new Uint8Array(64);\n  var u, i;\n  for (i = 0; i < 16; i++) z[i] = 0;\n  for (i = 0; i < 8; i++) z[i] = n[i];\n  while (b >= 64) {\n    crypto_core_salsa20(x,z,k,sigma);\n    for (i = 0; i < 64; i++) c[cpos+i] = m[mpos+i] ^ x[i];\n    u = 1;\n    for (i = 8; i < 16; i++) {\n      u = u + (z[i] & 0xff) | 0;\n      z[i] = u & 0xff;\n      u >>>= 8;\n    }\n    b -= 64;\n    cpos += 64;\n    mpos += 64;\n  }\n  if (b > 0) {\n    crypto_core_salsa20(x,z,k,sigma);\n    for (i = 0; i < b; i++) c[cpos+i] = m[mpos+i] ^ x[i];\n  }\n  return 0;\n}\n\nfunction crypto_stream_salsa20(c,cpos,b,n,k) {\n  var z = new Uint8Array(16), x = new Uint8Array(64);\n  var u, i;\n  for (i = 0; i < 16; i++) z[i] = 0;\n  for (i = 0; i < 8; i++) z[i] = n[i];\n  while (b >= 64) {\n    crypto_core_salsa20(x,z,k,sigma);\n    for (i = 0; i < 64; i++) c[cpos+i] = x[i];\n    u = 1;\n    for (i = 8; i < 16; i++) {\n      u = u + (z[i] & 0xff) | 0;\n      z[i] = u & 0xff;\n      u >>>= 8;\n    }\n    b -= 64;\n    cpos += 64;\n  }\n  if (b > 0) {\n    crypto_core_salsa20(x,z,k,sigma);\n    for (i = 0; i < b; i++) c[cpos+i] = x[i];\n  }\n  return 0;\n}\n\nfunction crypto_stream(c,cpos,d,n,k) {\n  var s = new Uint8Array(32);\n  crypto_core_hsalsa20(s,n,k,sigma);\n  var sn = new Uint8Array(8);\n  for (var i = 0; i < 8; i++) sn[i] = n[i+16];\n  return crypto_stream_salsa20(c,cpos,d,sn,s);\n}\n\nfunction crypto_stream_xor(c,cpos,m,mpos,d,n,k) {\n  var s = new Uint8Array(32);\n  crypto_core_hsalsa20(s,n,k,sigma);\n  var sn = new Uint8Array(8);\n  for (var i = 0; i < 8; i++) sn[i] = n[i+16];\n  return crypto_stream_salsa20_xor(c,cpos,m,mpos,d,sn,s);\n}\n\n/*\n* Port of Andrew Moon's Poly1305-donna-16. Public domain.\n* https://github.com/floodyberry/poly1305-donna\n*/\n\nvar poly1305 = function(key) {\n  this.buffer = new Uint8Array(16);\n  this.r = new Uint16Array(10);\n  this.h = new Uint16Array(10);\n  this.pad = new Uint16Array(8);\n  this.leftover = 0;\n  this.fin = 0;\n\n  var t0, t1, t2, t3, t4, t5, t6, t7;\n\n  t0 = key[ 0] & 0xff | (key[ 1] & 0xff) << 8; this.r[0] = ( t0                     ) & 0x1fff;\n  t1 = key[ 2] & 0xff | (key[ 3] & 0xff) << 8; this.r[1] = ((t0 >>> 13) | (t1 <<  3)) & 0x1fff;\n  t2 = key[ 4] & 0xff | (key[ 5] & 0xff) << 8; this.r[2] = ((t1 >>> 10) | (t2 <<  6)) & 0x1f03;\n  t3 = key[ 6] & 0xff | (key[ 7] & 0xff) << 8; this.r[3] = ((t2 >>>  7) | (t3 <<  9)) & 0x1fff;\n  t4 = key[ 8] & 0xff | (key[ 9] & 0xff) << 8; this.r[4] = ((t3 >>>  4) | (t4 << 12)) & 0x00ff;\n  this.r[5] = ((t4 >>>  1)) & 0x1ffe;\n  t5 = key[10] & 0xff | (key[11] & 0xff) << 8; this.r[6] = ((t4 >>> 14) | (t5 <<  2)) & 0x1fff;\n  t6 = key[12] & 0xff | (key[13] & 0xff) << 8; this.r[7] = ((t5 >>> 11) | (t6 <<  5)) & 0x1f81;\n  t7 = key[14] & 0xff | (key[15] & 0xff) << 8; this.r[8] = ((t6 >>>  8) | (t7 <<  8)) & 0x1fff;\n  this.r[9] = ((t7 >>>  5)) & 0x007f;\n\n  this.pad[0] = key[16] & 0xff | (key[17] & 0xff) << 8;\n  this.pad[1] = key[18] & 0xff | (key[19] & 0xff) << 8;\n  this.pad[2] = key[20] & 0xff | (key[21] & 0xff) << 8;\n  this.pad[3] = key[22] & 0xff | (key[23] & 0xff) << 8;\n  this.pad[4] = key[24] & 0xff | (key[25] & 0xff) << 8;\n  this.pad[5] = key[26] & 0xff | (key[27] & 0xff) << 8;\n  this.pad[6] = key[28] & 0xff | (key[29] & 0xff) << 8;\n  this.pad[7] = key[30] & 0xff | (key[31] & 0xff) << 8;\n};\n\npoly1305.prototype.blocks = function(m, mpos, bytes) {\n  var hibit = this.fin ? 0 : (1 << 11);\n  var t0, t1, t2, t3, t4, t5, t6, t7, c;\n  var d0, d1, d2, d3, d4, d5, d6, d7, d8, d9;\n\n  var h0 = this.h[0],\n      h1 = this.h[1],\n      h2 = this.h[2],\n      h3 = this.h[3],\n      h4 = this.h[4],\n      h5 = this.h[5],\n      h6 = this.h[6],\n      h7 = this.h[7],\n      h8 = this.h[8],\n      h9 = this.h[9];\n\n  var r0 = this.r[0],\n      r1 = this.r[1],\n      r2 = this.r[2],\n      r3 = this.r[3],\n      r4 = this.r[4],\n      r5 = this.r[5],\n      r6 = this.r[6],\n      r7 = this.r[7],\n      r8 = this.r[8],\n      r9 = this.r[9];\n\n  while (bytes >= 16) {\n    t0 = m[mpos+ 0] & 0xff | (m[mpos+ 1] & 0xff) << 8; h0 += ( t0                     ) & 0x1fff;\n    t1 = m[mpos+ 2] & 0xff | (m[mpos+ 3] & 0xff) << 8; h1 += ((t0 >>> 13) | (t1 <<  3)) & 0x1fff;\n    t2 = m[mpos+ 4] & 0xff | (m[mpos+ 5] & 0xff) << 8; h2 += ((t1 >>> 10) | (t2 <<  6)) & 0x1fff;\n    t3 = m[mpos+ 6] & 0xff | (m[mpos+ 7] & 0xff) << 8; h3 += ((t2 >>>  7) | (t3 <<  9)) & 0x1fff;\n    t4 = m[mpos+ 8] & 0xff | (m[mpos+ 9] & 0xff) << 8; h4 += ((t3 >>>  4) | (t4 << 12)) & 0x1fff;\n    h5 += ((t4 >>>  1)) & 0x1fff;\n    t5 = m[mpos+10] & 0xff | (m[mpos+11] & 0xff) << 8; h6 += ((t4 >>> 14) | (t5 <<  2)) & 0x1fff;\n    t6 = m[mpos+12] & 0xff | (m[mpos+13] & 0xff) << 8; h7 += ((t5 >>> 11) | (t6 <<  5)) & 0x1fff;\n    t7 = m[mpos+14] & 0xff | (m[mpos+15] & 0xff) << 8; h8 += ((t6 >>>  8) | (t7 <<  8)) & 0x1fff;\n    h9 += ((t7 >>> 5)) | hibit;\n\n    c = 0;\n\n    d0 = c;\n    d0 += h0 * r0;\n    d0 += h1 * (5 * r9);\n    d0 += h2 * (5 * r8);\n    d0 += h3 * (5 * r7);\n    d0 += h4 * (5 * r6);\n    c = (d0 >>> 13); d0 &= 0x1fff;\n    d0 += h5 * (5 * r5);\n    d0 += h6 * (5 * r4);\n    d0 += h7 * (5 * r3);\n    d0 += h8 * (5 * r2);\n    d0 += h9 * (5 * r1);\n    c += (d0 >>> 13); d0 &= 0x1fff;\n\n    d1 = c;\n    d1 += h0 * r1;\n    d1 += h1 * r0;\n    d1 += h2 * (5 * r9);\n    d1 += h3 * (5 * r8);\n    d1 += h4 * (5 * r7);\n    c = (d1 >>> 13); d1 &= 0x1fff;\n    d1 += h5 * (5 * r6);\n    d1 += h6 * (5 * r5);\n    d1 += h7 * (5 * r4);\n    d1 += h8 * (5 * r3);\n    d1 += h9 * (5 * r2);\n    c += (d1 >>> 13); d1 &= 0x1fff;\n\n    d2 = c;\n    d2 += h0 * r2;\n    d2 += h1 * r1;\n    d2 += h2 * r0;\n    d2 += h3 * (5 * r9);\n    d2 += h4 * (5 * r8);\n    c = (d2 >>> 13); d2 &= 0x1fff;\n    d2 += h5 * (5 * r7);\n    d2 += h6 * (5 * r6);\n    d2 += h7 * (5 * r5);\n    d2 += h8 * (5 * r4);\n    d2 += h9 * (5 * r3);\n    c += (d2 >>> 13); d2 &= 0x1fff;\n\n    d3 = c;\n    d3 += h0 * r3;\n    d3 += h1 * r2;\n    d3 += h2 * r1;\n    d3 += h3 * r0;\n    d3 += h4 * (5 * r9);\n    c = (d3 >>> 13); d3 &= 0x1fff;\n    d3 += h5 * (5 * r8);\n    d3 += h6 * (5 * r7);\n    d3 += h7 * (5 * r6);\n    d3 += h8 * (5 * r5);\n    d3 += h9 * (5 * r4);\n    c += (d3 >>> 13); d3 &= 0x1fff;\n\n    d4 = c;\n    d4 += h0 * r4;\n    d4 += h1 * r3;\n    d4 += h2 * r2;\n    d4 += h3 * r1;\n    d4 += h4 * r0;\n    c = (d4 >>> 13); d4 &= 0x1fff;\n    d4 += h5 * (5 * r9);\n    d4 += h6 * (5 * r8);\n    d4 += h7 * (5 * r7);\n    d4 += h8 * (5 * r6);\n    d4 += h9 * (5 * r5);\n    c += (d4 >>> 13); d4 &= 0x1fff;\n\n    d5 = c;\n    d5 += h0 * r5;\n    d5 += h1 * r4;\n    d5 += h2 * r3;\n    d5 += h3 * r2;\n    d5 += h4 * r1;\n    c = (d5 >>> 13); d5 &= 0x1fff;\n    d5 += h5 * r0;\n    d5 += h6 * (5 * r9);\n    d5 += h7 * (5 * r8);\n    d5 += h8 * (5 * r7);\n    d5 += h9 * (5 * r6);\n    c += (d5 >>> 13); d5 &= 0x1fff;\n\n    d6 = c;\n    d6 += h0 * r6;\n    d6 += h1 * r5;\n    d6 += h2 * r4;\n    d6 += h3 * r3;\n    d6 += h4 * r2;\n    c = (d6 >>> 13); d6 &= 0x1fff;\n    d6 += h5 * r1;\n    d6 += h6 * r0;\n    d6 += h7 * (5 * r9);\n    d6 += h8 * (5 * r8);\n    d6 += h9 * (5 * r7);\n    c += (d6 >>> 13); d6 &= 0x1fff;\n\n    d7 = c;\n    d7 += h0 * r7;\n    d7 += h1 * r6;\n    d7 += h2 * r5;\n    d7 += h3 * r4;\n    d7 += h4 * r3;\n    c = (d7 >>> 13); d7 &= 0x1fff;\n    d7 += h5 * r2;\n    d7 += h6 * r1;\n    d7 += h7 * r0;\n    d7 += h8 * (5 * r9);\n    d7 += h9 * (5 * r8);\n    c += (d7 >>> 13); d7 &= 0x1fff;\n\n    d8 = c;\n    d8 += h0 * r8;\n    d8 += h1 * r7;\n    d8 += h2 * r6;\n    d8 += h3 * r5;\n    d8 += h4 * r4;\n    c = (d8 >>> 13); d8 &= 0x1fff;\n    d8 += h5 * r3;\n    d8 += h6 * r2;\n    d8 += h7 * r1;\n    d8 += h8 * r0;\n    d8 += h9 * (5 * r9);\n    c += (d8 >>> 13); d8 &= 0x1fff;\n\n    d9 = c;\n    d9 += h0 * r9;\n    d9 += h1 * r8;\n    d9 += h2 * r7;\n    d9 += h3 * r6;\n    d9 += h4 * r5;\n    c = (d9 >>> 13); d9 &= 0x1fff;\n    d9 += h5 * r4;\n    d9 += h6 * r3;\n    d9 += h7 * r2;\n    d9 += h8 * r1;\n    d9 += h9 * r0;\n    c += (d9 >>> 13); d9 &= 0x1fff;\n\n    c = (((c << 2) + c)) | 0;\n    c = (c + d0) | 0;\n    d0 = c & 0x1fff;\n    c = (c >>> 13);\n    d1 += c;\n\n    h0 = d0;\n    h1 = d1;\n    h2 = d2;\n    h3 = d3;\n    h4 = d4;\n    h5 = d5;\n    h6 = d6;\n    h7 = d7;\n    h8 = d8;\n    h9 = d9;\n\n    mpos += 16;\n    bytes -= 16;\n  }\n  this.h[0] = h0;\n  this.h[1] = h1;\n  this.h[2] = h2;\n  this.h[3] = h3;\n  this.h[4] = h4;\n  this.h[5] = h5;\n  this.h[6] = h6;\n  this.h[7] = h7;\n  this.h[8] = h8;\n  this.h[9] = h9;\n};\n\npoly1305.prototype.finish = function(mac, macpos) {\n  var g = new Uint16Array(10);\n  var c, mask, f, i;\n\n  if (this.leftover) {\n    i = this.leftover;\n    this.buffer[i++] = 1;\n    for (; i < 16; i++) this.buffer[i] = 0;\n    this.fin = 1;\n    this.blocks(this.buffer, 0, 16);\n  }\n\n  c = this.h[1] >>> 13;\n  this.h[1] &= 0x1fff;\n  for (i = 2; i < 10; i++) {\n    this.h[i] += c;\n    c = this.h[i] >>> 13;\n    this.h[i] &= 0x1fff;\n  }\n  this.h[0] += (c * 5);\n  c = this.h[0] >>> 13;\n  this.h[0] &= 0x1fff;\n  this.h[1] += c;\n  c = this.h[1] >>> 13;\n  this.h[1] &= 0x1fff;\n  this.h[2] += c;\n\n  g[0] = this.h[0] + 5;\n  c = g[0] >>> 13;\n  g[0] &= 0x1fff;\n  for (i = 1; i < 10; i++) {\n    g[i] = this.h[i] + c;\n    c = g[i] >>> 13;\n    g[i] &= 0x1fff;\n  }\n  g[9] -= (1 << 13);\n\n  mask = (c ^ 1) - 1;\n  for (i = 0; i < 10; i++) g[i] &= mask;\n  mask = ~mask;\n  for (i = 0; i < 10; i++) this.h[i] = (this.h[i] & mask) | g[i];\n\n  this.h[0] = ((this.h[0]       ) | (this.h[1] << 13)                    ) & 0xffff;\n  this.h[1] = ((this.h[1] >>>  3) | (this.h[2] << 10)                    ) & 0xffff;\n  this.h[2] = ((this.h[2] >>>  6) | (this.h[3] <<  7)                    ) & 0xffff;\n  this.h[3] = ((this.h[3] >>>  9) | (this.h[4] <<  4)                    ) & 0xffff;\n  this.h[4] = ((this.h[4] >>> 12) | (this.h[5] <<  1) | (this.h[6] << 14)) & 0xffff;\n  this.h[5] = ((this.h[6] >>>  2) | (this.h[7] << 11)                    ) & 0xffff;\n  this.h[6] = ((this.h[7] >>>  5) | (this.h[8] <<  8)                    ) & 0xffff;\n  this.h[7] = ((this.h[8] >>>  8) | (this.h[9] <<  5)                    ) & 0xffff;\n\n  f = this.h[0] + this.pad[0];\n  this.h[0] = f & 0xffff;\n  for (i = 1; i < 8; i++) {\n    f = (((this.h[i] + this.pad[i]) | 0) + (f >>> 16)) | 0;\n    this.h[i] = f & 0xffff;\n  }\n\n  mac[macpos+ 0] = (this.h[0] >>> 0) & 0xff;\n  mac[macpos+ 1] = (this.h[0] >>> 8) & 0xff;\n  mac[macpos+ 2] = (this.h[1] >>> 0) & 0xff;\n  mac[macpos+ 3] = (this.h[1] >>> 8) & 0xff;\n  mac[macpos+ 4] = (this.h[2] >>> 0) & 0xff;\n  mac[macpos+ 5] = (this.h[2] >>> 8) & 0xff;\n  mac[macpos+ 6] = (this.h[3] >>> 0) & 0xff;\n  mac[macpos+ 7] = (this.h[3] >>> 8) & 0xff;\n  mac[macpos+ 8] = (this.h[4] >>> 0) & 0xff;\n  mac[macpos+ 9] = (this.h[4] >>> 8) & 0xff;\n  mac[macpos+10] = (this.h[5] >>> 0) & 0xff;\n  mac[macpos+11] = (this.h[5] >>> 8) & 0xff;\n  mac[macpos+12] = (this.h[6] >>> 0) & 0xff;\n  mac[macpos+13] = (this.h[6] >>> 8) & 0xff;\n  mac[macpos+14] = (this.h[7] >>> 0) & 0xff;\n  mac[macpos+15] = (this.h[7] >>> 8) & 0xff;\n};\n\npoly1305.prototype.update = function(m, mpos, bytes) {\n  var i, want;\n\n  if (this.leftover) {\n    want = (16 - this.leftover);\n    if (want > bytes)\n      want = bytes;\n    for (i = 0; i < want; i++)\n      this.buffer[this.leftover + i] = m[mpos+i];\n    bytes -= want;\n    mpos += want;\n    this.leftover += want;\n    if (this.leftover < 16)\n      return;\n    this.blocks(this.buffer, 0, 16);\n    this.leftover = 0;\n  }\n\n  if (bytes >= 16) {\n    want = bytes - (bytes % 16);\n    this.blocks(m, mpos, want);\n    mpos += want;\n    bytes -= want;\n  }\n\n  if (bytes) {\n    for (i = 0; i < bytes; i++)\n      this.buffer[this.leftover + i] = m[mpos+i];\n    this.leftover += bytes;\n  }\n};\n\nfunction crypto_onetimeauth(out, outpos, m, mpos, n, k) {\n  var s = new poly1305(k);\n  s.update(m, mpos, n);\n  s.finish(out, outpos);\n  return 0;\n}\n\nfunction crypto_onetimeauth_verify(h, hpos, m, mpos, n, k) {\n  var x = new Uint8Array(16);\n  crypto_onetimeauth(x,0,m,mpos,n,k);\n  return crypto_verify_16(h,hpos,x,0);\n}\n\nfunction crypto_secretbox(c,m,d,n,k) {\n  var i;\n  if (d < 32) return -1;\n  crypto_stream_xor(c,0,m,0,d,n,k);\n  crypto_onetimeauth(c, 16, c, 32, d - 32, c);\n  for (i = 0; i < 16; i++) c[i] = 0;\n  return 0;\n}\n\nfunction crypto_secretbox_open(m,c,d,n,k) {\n  var i;\n  var x = new Uint8Array(32);\n  if (d < 32) return -1;\n  crypto_stream(x,0,32,n,k);\n  if (crypto_onetimeauth_verify(c, 16,c, 32,d - 32,x) !== 0) return -1;\n  crypto_stream_xor(m,0,c,0,d,n,k);\n  for (i = 0; i < 32; i++) m[i] = 0;\n  return 0;\n}\n\nfunction set25519(r, a) {\n  var i;\n  for (i = 0; i < 16; i++) r[i] = a[i]|0;\n}\n\nfunction car25519(o) {\n  var i, v, c = 1;\n  for (i = 0; i < 16; i++) {\n    v = o[i] + c + 65535;\n    c = Math.floor(v / 65536);\n    o[i] = v - c * 65536;\n  }\n  o[0] += c-1 + 37 * (c-1);\n}\n\nfunction sel25519(p, q, b) {\n  var t, c = ~(b-1);\n  for (var i = 0; i < 16; i++) {\n    t = c & (p[i] ^ q[i]);\n    p[i] ^= t;\n    q[i] ^= t;\n  }\n}\n\nfunction pack25519(o, n) {\n  var i, j, b;\n  var m = gf(), t = gf();\n  for (i = 0; i < 16; i++) t[i] = n[i];\n  car25519(t);\n  car25519(t);\n  car25519(t);\n  for (j = 0; j < 2; j++) {\n    m[0] = t[0] - 0xffed;\n    for (i = 1; i < 15; i++) {\n      m[i] = t[i] - 0xffff - ((m[i-1]>>16) & 1);\n      m[i-1] &= 0xffff;\n    }\n    m[15] = t[15] - 0x7fff - ((m[14]>>16) & 1);\n    b = (m[15]>>16) & 1;\n    m[14] &= 0xffff;\n    sel25519(t, m, 1-b);\n  }\n  for (i = 0; i < 16; i++) {\n    o[2*i] = t[i] & 0xff;\n    o[2*i+1] = t[i]>>8;\n  }\n}\n\nfunction neq25519(a, b) {\n  var c = new Uint8Array(32), d = new Uint8Array(32);\n  pack25519(c, a);\n  pack25519(d, b);\n  return crypto_verify_32(c, 0, d, 0);\n}\n\nfunction par25519(a) {\n  var d = new Uint8Array(32);\n  pack25519(d, a);\n  return d[0] & 1;\n}\n\nfunction unpack25519(o, n) {\n  var i;\n  for (i = 0; i < 16; i++) o[i] = n[2*i] + (n[2*i+1] << 8);\n  o[15] &= 0x7fff;\n}\n\nfunction A(o, a, b) {\n  for (var i = 0; i < 16; i++) o[i] = a[i] + b[i];\n}\n\nfunction Z(o, a, b) {\n  for (var i = 0; i < 16; i++) o[i] = a[i] - b[i];\n}\n\nfunction M(o, a, b) {\n  var v, c,\n     t0 = 0,  t1 = 0,  t2 = 0,  t3 = 0,  t4 = 0,  t5 = 0,  t6 = 0,  t7 = 0,\n     t8 = 0,  t9 = 0, t10 = 0, t11 = 0, t12 = 0, t13 = 0, t14 = 0, t15 = 0,\n    t16 = 0, t17 = 0, t18 = 0, t19 = 0, t20 = 0, t21 = 0, t22 = 0, t23 = 0,\n    t24 = 0, t25 = 0, t26 = 0, t27 = 0, t28 = 0, t29 = 0, t30 = 0,\n    b0 = b[0],\n    b1 = b[1],\n    b2 = b[2],\n    b3 = b[3],\n    b4 = b[4],\n    b5 = b[5],\n    b6 = b[6],\n    b7 = b[7],\n    b8 = b[8],\n    b9 = b[9],\n    b10 = b[10],\n    b11 = b[11],\n    b12 = b[12],\n    b13 = b[13],\n    b14 = b[14],\n    b15 = b[15];\n\n  v = a[0];\n  t0 += v * b0;\n  t1 += v * b1;\n  t2 += v * b2;\n  t3 += v * b3;\n  t4 += v * b4;\n  t5 += v * b5;\n  t6 += v * b6;\n  t7 += v * b7;\n  t8 += v * b8;\n  t9 += v * b9;\n  t10 += v * b10;\n  t11 += v * b11;\n  t12 += v * b12;\n  t13 += v * b13;\n  t14 += v * b14;\n  t15 += v * b15;\n  v = a[1];\n  t1 += v * b0;\n  t2 += v * b1;\n  t3 += v * b2;\n  t4 += v * b3;\n  t5 += v * b4;\n  t6 += v * b5;\n  t7 += v * b6;\n  t8 += v * b7;\n  t9 += v * b8;\n  t10 += v * b9;\n  t11 += v * b10;\n  t12 += v * b11;\n  t13 += v * b12;\n  t14 += v * b13;\n  t15 += v * b14;\n  t16 += v * b15;\n  v = a[2];\n  t2 += v * b0;\n  t3 += v * b1;\n  t4 += v * b2;\n  t5 += v * b3;\n  t6 += v * b4;\n  t7 += v * b5;\n  t8 += v * b6;\n  t9 += v * b7;\n  t10 += v * b8;\n  t11 += v * b9;\n  t12 += v * b10;\n  t13 += v * b11;\n  t14 += v * b12;\n  t15 += v * b13;\n  t16 += v * b14;\n  t17 += v * b15;\n  v = a[3];\n  t3 += v * b0;\n  t4 += v * b1;\n  t5 += v * b2;\n  t6 += v * b3;\n  t7 += v * b4;\n  t8 += v * b5;\n  t9 += v * b6;\n  t10 += v * b7;\n  t11 += v * b8;\n  t12 += v * b9;\n  t13 += v * b10;\n  t14 += v * b11;\n  t15 += v * b12;\n  t16 += v * b13;\n  t17 += v * b14;\n  t18 += v * b15;\n  v = a[4];\n  t4 += v * b0;\n  t5 += v * b1;\n  t6 += v * b2;\n  t7 += v * b3;\n  t8 += v * b4;\n  t9 += v * b5;\n  t10 += v * b6;\n  t11 += v * b7;\n  t12 += v * b8;\n  t13 += v * b9;\n  t14 += v * b10;\n  t15 += v * b11;\n  t16 += v * b12;\n  t17 += v * b13;\n  t18 += v * b14;\n  t19 += v * b15;\n  v = a[5];\n  t5 += v * b0;\n  t6 += v * b1;\n  t7 += v * b2;\n  t8 += v * b3;\n  t9 += v * b4;\n  t10 += v * b5;\n  t11 += v * b6;\n  t12 += v * b7;\n  t13 += v * b8;\n  t14 += v * b9;\n  t15 += v * b10;\n  t16 += v * b11;\n  t17 += v * b12;\n  t18 += v * b13;\n  t19 += v * b14;\n  t20 += v * b15;\n  v = a[6];\n  t6 += v * b0;\n  t7 += v * b1;\n  t8 += v * b2;\n  t9 += v * b3;\n  t10 += v * b4;\n  t11 += v * b5;\n  t12 += v * b6;\n  t13 += v * b7;\n  t14 += v * b8;\n  t15 += v * b9;\n  t16 += v * b10;\n  t17 += v * b11;\n  t18 += v * b12;\n  t19 += v * b13;\n  t20 += v * b14;\n  t21 += v * b15;\n  v = a[7];\n  t7 += v * b0;\n  t8 += v * b1;\n  t9 += v * b2;\n  t10 += v * b3;\n  t11 += v * b4;\n  t12 += v * b5;\n  t13 += v * b6;\n  t14 += v * b7;\n  t15 += v * b8;\n  t16 += v * b9;\n  t17 += v * b10;\n  t18 += v * b11;\n  t19 += v * b12;\n  t20 += v * b13;\n  t21 += v * b14;\n  t22 += v * b15;\n  v = a[8];\n  t8 += v * b0;\n  t9 += v * b1;\n  t10 += v * b2;\n  t11 += v * b3;\n  t12 += v * b4;\n  t13 += v * b5;\n  t14 += v * b6;\n  t15 += v * b7;\n  t16 += v * b8;\n  t17 += v * b9;\n  t18 += v * b10;\n  t19 += v * b11;\n  t20 += v * b12;\n  t21 += v * b13;\n  t22 += v * b14;\n  t23 += v * b15;\n  v = a[9];\n  t9 += v * b0;\n  t10 += v * b1;\n  t11 += v * b2;\n  t12 += v * b3;\n  t13 += v * b4;\n  t14 += v * b5;\n  t15 += v * b6;\n  t16 += v * b7;\n  t17 += v * b8;\n  t18 += v * b9;\n  t19 += v * b10;\n  t20 += v * b11;\n  t21 += v * b12;\n  t22 += v * b13;\n  t23 += v * b14;\n  t24 += v * b15;\n  v = a[10];\n  t10 += v * b0;\n  t11 += v * b1;\n  t12 += v * b2;\n  t13 += v * b3;\n  t14 += v * b4;\n  t15 += v * b5;\n  t16 += v * b6;\n  t17 += v * b7;\n  t18 += v * b8;\n  t19 += v * b9;\n  t20 += v * b10;\n  t21 += v * b11;\n  t22 += v * b12;\n  t23 += v * b13;\n  t24 += v * b14;\n  t25 += v * b15;\n  v = a[11];\n  t11 += v * b0;\n  t12 += v * b1;\n  t13 += v * b2;\n  t14 += v * b3;\n  t15 += v * b4;\n  t16 += v * b5;\n  t17 += v * b6;\n  t18 += v * b7;\n  t19 += v * b8;\n  t20 += v * b9;\n  t21 += v * b10;\n  t22 += v * b11;\n  t23 += v * b12;\n  t24 += v * b13;\n  t25 += v * b14;\n  t26 += v * b15;\n  v = a[12];\n  t12 += v * b0;\n  t13 += v * b1;\n  t14 += v * b2;\n  t15 += v * b3;\n  t16 += v * b4;\n  t17 += v * b5;\n  t18 += v * b6;\n  t19 += v * b7;\n  t20 += v * b8;\n  t21 += v * b9;\n  t22 += v * b10;\n  t23 += v * b11;\n  t24 += v * b12;\n  t25 += v * b13;\n  t26 += v * b14;\n  t27 += v * b15;\n  v = a[13];\n  t13 += v * b0;\n  t14 += v * b1;\n  t15 += v * b2;\n  t16 += v * b3;\n  t17 += v * b4;\n  t18 += v * b5;\n  t19 += v * b6;\n  t20 += v * b7;\n  t21 += v * b8;\n  t22 += v * b9;\n  t23 += v * b10;\n  t24 += v * b11;\n  t25 += v * b12;\n  t26 += v * b13;\n  t27 += v * b14;\n  t28 += v * b15;\n  v = a[14];\n  t14 += v * b0;\n  t15 += v * b1;\n  t16 += v * b2;\n  t17 += v * b3;\n  t18 += v * b4;\n  t19 += v * b5;\n  t20 += v * b6;\n  t21 += v * b7;\n  t22 += v * b8;\n  t23 += v * b9;\n  t24 += v * b10;\n  t25 += v * b11;\n  t26 += v * b12;\n  t27 += v * b13;\n  t28 += v * b14;\n  t29 += v * b15;\n  v = a[15];\n  t15 += v * b0;\n  t16 += v * b1;\n  t17 += v * b2;\n  t18 += v * b3;\n  t19 += v * b4;\n  t20 += v * b5;\n  t21 += v * b6;\n  t22 += v * b7;\n  t23 += v * b8;\n  t24 += v * b9;\n  t25 += v * b10;\n  t26 += v * b11;\n  t27 += v * b12;\n  t28 += v * b13;\n  t29 += v * b14;\n  t30 += v * b15;\n\n  t0  += 38 * t16;\n  t1  += 38 * t17;\n  t2  += 38 * t18;\n  t3  += 38 * t19;\n  t4  += 38 * t20;\n  t5  += 38 * t21;\n  t6  += 38 * t22;\n  t7  += 38 * t23;\n  t8  += 38 * t24;\n  t9  += 38 * t25;\n  t10 += 38 * t26;\n  t11 += 38 * t27;\n  t12 += 38 * t28;\n  t13 += 38 * t29;\n  t14 += 38 * t30;\n  // t15 left as is\n\n  // first car\n  c = 1;\n  v =  t0 + c + 65535; c = Math.floor(v / 65536);  t0 = v - c * 65536;\n  v =  t1 + c + 65535; c = Math.floor(v / 65536);  t1 = v - c * 65536;\n  v =  t2 + c + 65535; c = Math.floor(v / 65536);  t2 = v - c * 65536;\n  v =  t3 + c + 65535; c = Math.floor(v / 65536);  t3 = v - c * 65536;\n  v =  t4 + c + 65535; c = Math.floor(v / 65536);  t4 = v - c * 65536;\n  v =  t5 + c + 65535; c = Math.floor(v / 65536);  t5 = v - c * 65536;\n  v =  t6 + c + 65535; c = Math.floor(v / 65536);  t6 = v - c * 65536;\n  v =  t7 + c + 65535; c = Math.floor(v / 65536);  t7 = v - c * 65536;\n  v =  t8 + c + 65535; c = Math.floor(v / 65536);  t8 = v - c * 65536;\n  v =  t9 + c + 65535; c = Math.floor(v / 65536);  t9 = v - c * 65536;\n  v = t10 + c + 65535; c = Math.floor(v / 65536); t10 = v - c * 65536;\n  v = t11 + c + 65535; c = Math.floor(v / 65536); t11 = v - c * 65536;\n  v = t12 + c + 65535; c = Math.floor(v / 65536); t12 = v - c * 65536;\n  v = t13 + c + 65535; c = Math.floor(v / 65536); t13 = v - c * 65536;\n  v = t14 + c + 65535; c = Math.floor(v / 65536); t14 = v - c * 65536;\n  v = t15 + c + 65535; c = Math.floor(v / 65536); t15 = v - c * 65536;\n  t0 += c-1 + 37 * (c-1);\n\n  // second car\n  c = 1;\n  v =  t0 + c + 65535; c = Math.floor(v / 65536);  t0 = v - c * 65536;\n  v =  t1 + c + 65535; c = Math.floor(v / 65536);  t1 = v - c * 65536;\n  v =  t2 + c + 65535; c = Math.floor(v / 65536);  t2 = v - c * 65536;\n  v =  t3 + c + 65535; c = Math.floor(v / 65536);  t3 = v - c * 65536;\n  v =  t4 + c + 65535; c = Math.floor(v / 65536);  t4 = v - c * 65536;\n  v =  t5 + c + 65535; c = Math.floor(v / 65536);  t5 = v - c * 65536;\n  v =  t6 + c + 65535; c = Math.floor(v / 65536);  t6 = v - c * 65536;\n  v =  t7 + c + 65535; c = Math.floor(v / 65536);  t7 = v - c * 65536;\n  v =  t8 + c + 65535; c = Math.floor(v / 65536);  t8 = v - c * 65536;\n  v =  t9 + c + 65535; c = Math.floor(v / 65536);  t9 = v - c * 65536;\n  v = t10 + c + 65535; c = Math.floor(v / 65536); t10 = v - c * 65536;\n  v = t11 + c + 65535; c = Math.floor(v / 65536); t11 = v - c * 65536;\n  v = t12 + c + 65535; c = Math.floor(v / 65536); t12 = v - c * 65536;\n  v = t13 + c + 65535; c = Math.floor(v / 65536); t13 = v - c * 65536;\n  v = t14 + c + 65535; c = Math.floor(v / 65536); t14 = v - c * 65536;\n  v = t15 + c + 65535; c = Math.floor(v / 65536); t15 = v - c * 65536;\n  t0 += c-1 + 37 * (c-1);\n\n  o[ 0] = t0;\n  o[ 1] = t1;\n  o[ 2] = t2;\n  o[ 3] = t3;\n  o[ 4] = t4;\n  o[ 5] = t5;\n  o[ 6] = t6;\n  o[ 7] = t7;\n  o[ 8] = t8;\n  o[ 9] = t9;\n  o[10] = t10;\n  o[11] = t11;\n  o[12] = t12;\n  o[13] = t13;\n  o[14] = t14;\n  o[15] = t15;\n}\n\nfunction S(o, a) {\n  M(o, a, a);\n}\n\nfunction inv25519(o, i) {\n  var c = gf();\n  var a;\n  for (a = 0; a < 16; a++) c[a] = i[a];\n  for (a = 253; a >= 0; a--) {\n    S(c, c);\n    if(a !== 2 && a !== 4) M(c, c, i);\n  }\n  for (a = 0; a < 16; a++) o[a] = c[a];\n}\n\nfunction pow2523(o, i) {\n  var c = gf();\n  var a;\n  for (a = 0; a < 16; a++) c[a] = i[a];\n  for (a = 250; a >= 0; a--) {\n      S(c, c);\n      if(a !== 1) M(c, c, i);\n  }\n  for (a = 0; a < 16; a++) o[a] = c[a];\n}\n\nfunction crypto_scalarmult(q, n, p) {\n  var z = new Uint8Array(32);\n  var x = new Float64Array(80), r, i;\n  var a = gf(), b = gf(), c = gf(),\n      d = gf(), e = gf(), f = gf();\n  for (i = 0; i < 31; i++) z[i] = n[i];\n  z[31]=(n[31]&127)|64;\n  z[0]&=248;\n  unpack25519(x,p);\n  for (i = 0; i < 16; i++) {\n    b[i]=x[i];\n    d[i]=a[i]=c[i]=0;\n  }\n  a[0]=d[0]=1;\n  for (i=254; i>=0; --i) {\n    r=(z[i>>>3]>>>(i&7))&1;\n    sel25519(a,b,r);\n    sel25519(c,d,r);\n    A(e,a,c);\n    Z(a,a,c);\n    A(c,b,d);\n    Z(b,b,d);\n    S(d,e);\n    S(f,a);\n    M(a,c,a);\n    M(c,b,e);\n    A(e,a,c);\n    Z(a,a,c);\n    S(b,a);\n    Z(c,d,f);\n    M(a,c,_121665);\n    A(a,a,d);\n    M(c,c,a);\n    M(a,d,f);\n    M(d,b,x);\n    S(b,e);\n    sel25519(a,b,r);\n    sel25519(c,d,r);\n  }\n  for (i = 0; i < 16; i++) {\n    x[i+16]=a[i];\n    x[i+32]=c[i];\n    x[i+48]=b[i];\n    x[i+64]=d[i];\n  }\n  var x32 = x.subarray(32);\n  var x16 = x.subarray(16);\n  inv25519(x32,x32);\n  M(x16,x16,x32);\n  pack25519(q,x16);\n  return 0;\n}\n\nfunction crypto_scalarmult_base(q, n) {\n  return crypto_scalarmult(q, n, _9);\n}\n\nfunction crypto_box_keypair(y, x) {\n  randombytes(x, 32);\n  return crypto_scalarmult_base(y, x);\n}\n\nfunction crypto_box_beforenm(k, y, x) {\n  var s = new Uint8Array(32);\n  crypto_scalarmult(s, x, y);\n  return crypto_core_hsalsa20(k, _0, s, sigma);\n}\n\nvar crypto_box_afternm = crypto_secretbox;\nvar crypto_box_open_afternm = crypto_secretbox_open;\n\nfunction crypto_box(c, m, d, n, y, x) {\n  var k = new Uint8Array(32);\n  crypto_box_beforenm(k, y, x);\n  return crypto_box_afternm(c, m, d, n, k);\n}\n\nfunction crypto_box_open(m, c, d, n, y, x) {\n  var k = new Uint8Array(32);\n  crypto_box_beforenm(k, y, x);\n  return crypto_box_open_afternm(m, c, d, n, k);\n}\n\nvar K = [\n  0x428a2f98, 0xd728ae22, 0x71374491, 0x23ef65cd,\n  0xb5c0fbcf, 0xec4d3b2f, 0xe9b5dba5, 0x8189dbbc,\n  0x3956c25b, 0xf348b538, 0x59f111f1, 0xb605d019,\n  0x923f82a4, 0xaf194f9b, 0xab1c5ed5, 0xda6d8118,\n  0xd807aa98, 0xa3030242, 0x12835b01, 0x45706fbe,\n  0x243185be, 0x4ee4b28c, 0x550c7dc3, 0xd5ffb4e2,\n  0x72be5d74, 0xf27b896f, 0x80deb1fe, 0x3b1696b1,\n  0x9bdc06a7, 0x25c71235, 0xc19bf174, 0xcf692694,\n  0xe49b69c1, 0x9ef14ad2, 0xefbe4786, 0x384f25e3,\n  0x0fc19dc6, 0x8b8cd5b5, 0x240ca1cc, 0x77ac9c65,\n  0x2de92c6f, 0x592b0275, 0x4a7484aa, 0x6ea6e483,\n  0x5cb0a9dc, 0xbd41fbd4, 0x76f988da, 0x831153b5,\n  0x983e5152, 0xee66dfab, 0xa831c66d, 0x2db43210,\n  0xb00327c8, 0x98fb213f, 0xbf597fc7, 0xbeef0ee4,\n  0xc6e00bf3, 0x3da88fc2, 0xd5a79147, 0x930aa725,\n  0x06ca6351, 0xe003826f, 0x14292967, 0x0a0e6e70,\n  0x27b70a85, 0x46d22ffc, 0x2e1b2138, 0x5c26c926,\n  0x4d2c6dfc, 0x5ac42aed, 0x53380d13, 0x9d95b3df,\n  0x650a7354, 0x8baf63de, 0x766a0abb, 0x3c77b2a8,\n  0x81c2c92e, 0x47edaee6, 0x92722c85, 0x1482353b,\n  0xa2bfe8a1, 0x4cf10364, 0xa81a664b, 0xbc423001,\n  0xc24b8b70, 0xd0f89791, 0xc76c51a3, 0x0654be30,\n  0xd192e819, 0xd6ef5218, 0xd6990624, 0x5565a910,\n  0xf40e3585, 0x5771202a, 0x106aa070, 0x32bbd1b8,\n  0x19a4c116, 0xb8d2d0c8, 0x1e376c08, 0x5141ab53,\n  0x2748774c, 0xdf8eeb99, 0x34b0bcb5, 0xe19b48a8,\n  0x391c0cb3, 0xc5c95a63, 0x4ed8aa4a, 0xe3418acb,\n  0x5b9cca4f, 0x7763e373, 0x682e6ff3, 0xd6b2b8a3,\n  0x748f82ee, 0x5defb2fc, 0x78a5636f, 0x43172f60,\n  0x84c87814, 0xa1f0ab72, 0x8cc70208, 0x1a6439ec,\n  0x90befffa, 0x23631e28, 0xa4506ceb, 0xde82bde9,\n  0xbef9a3f7, 0xb2c67915, 0xc67178f2, 0xe372532b,\n  0xca273ece, 0xea26619c, 0xd186b8c7, 0x21c0c207,\n  0xeada7dd6, 0xcde0eb1e, 0xf57d4f7f, 0xee6ed178,\n  0x06f067aa, 0x72176fba, 0x0a637dc5, 0xa2c898a6,\n  0x113f9804, 0xbef90dae, 0x1b710b35, 0x131c471b,\n  0x28db77f5, 0x23047d84, 0x32caab7b, 0x40c72493,\n  0x3c9ebe0a, 0x15c9bebc, 0x431d67c4, 0x9c100d4c,\n  0x4cc5d4be, 0xcb3e42b6, 0x597f299c, 0xfc657e2a,\n  0x5fcb6fab, 0x3ad6faec, 0x6c44198c, 0x4a475817\n];\n\nfunction crypto_hashblocks_hl(hh, hl, m, n) {\n  var wh = new Int32Array(16), wl = new Int32Array(16),\n      bh0, bh1, bh2, bh3, bh4, bh5, bh6, bh7,\n      bl0, bl1, bl2, bl3, bl4, bl5, bl6, bl7,\n      th, tl, i, j, h, l, a, b, c, d;\n\n  var ah0 = hh[0],\n      ah1 = hh[1],\n      ah2 = hh[2],\n      ah3 = hh[3],\n      ah4 = hh[4],\n      ah5 = hh[5],\n      ah6 = hh[6],\n      ah7 = hh[7],\n\n      al0 = hl[0],\n      al1 = hl[1],\n      al2 = hl[2],\n      al3 = hl[3],\n      al4 = hl[4],\n      al5 = hl[5],\n      al6 = hl[6],\n      al7 = hl[7];\n\n  var pos = 0;\n  while (n >= 128) {\n    for (i = 0; i < 16; i++) {\n      j = 8 * i + pos;\n      wh[i] = (m[j+0] << 24) | (m[j+1] << 16) | (m[j+2] << 8) | m[j+3];\n      wl[i] = (m[j+4] << 24) | (m[j+5] << 16) | (m[j+6] << 8) | m[j+7];\n    }\n    for (i = 0; i < 80; i++) {\n      bh0 = ah0;\n      bh1 = ah1;\n      bh2 = ah2;\n      bh3 = ah3;\n      bh4 = ah4;\n      bh5 = ah5;\n      bh6 = ah6;\n      bh7 = ah7;\n\n      bl0 = al0;\n      bl1 = al1;\n      bl2 = al2;\n      bl3 = al3;\n      bl4 = al4;\n      bl5 = al5;\n      bl6 = al6;\n      bl7 = al7;\n\n      // add\n      h = ah7;\n      l = al7;\n\n      a = l & 0xffff; b = l >>> 16;\n      c = h & 0xffff; d = h >>> 16;\n\n      // Sigma1\n      h = ((ah4 >>> 14) | (al4 << (32-14))) ^ ((ah4 >>> 18) | (al4 << (32-18))) ^ ((al4 >>> (41-32)) | (ah4 << (32-(41-32))));\n      l = ((al4 >>> 14) | (ah4 << (32-14))) ^ ((al4 >>> 18) | (ah4 << (32-18))) ^ ((ah4 >>> (41-32)) | (al4 << (32-(41-32))));\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      // Ch\n      h = (ah4 & ah5) ^ (~ah4 & ah6);\n      l = (al4 & al5) ^ (~al4 & al6);\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      // K\n      h = K[i*2];\n      l = K[i*2+1];\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      // w\n      h = wh[i%16];\n      l = wl[i%16];\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      b += a >>> 16;\n      c += b >>> 16;\n      d += c >>> 16;\n\n      th = c & 0xffff | d << 16;\n      tl = a & 0xffff | b << 16;\n\n      // add\n      h = th;\n      l = tl;\n\n      a = l & 0xffff; b = l >>> 16;\n      c = h & 0xffff; d = h >>> 16;\n\n      // Sigma0\n      h = ((ah0 >>> 28) | (al0 << (32-28))) ^ ((al0 >>> (34-32)) | (ah0 << (32-(34-32)))) ^ ((al0 >>> (39-32)) | (ah0 << (32-(39-32))));\n      l = ((al0 >>> 28) | (ah0 << (32-28))) ^ ((ah0 >>> (34-32)) | (al0 << (32-(34-32)))) ^ ((ah0 >>> (39-32)) | (al0 << (32-(39-32))));\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      // Maj\n      h = (ah0 & ah1) ^ (ah0 & ah2) ^ (ah1 & ah2);\n      l = (al0 & al1) ^ (al0 & al2) ^ (al1 & al2);\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      b += a >>> 16;\n      c += b >>> 16;\n      d += c >>> 16;\n\n      bh7 = (c & 0xffff) | (d << 16);\n      bl7 = (a & 0xffff) | (b << 16);\n\n      // add\n      h = bh3;\n      l = bl3;\n\n      a = l & 0xffff; b = l >>> 16;\n      c = h & 0xffff; d = h >>> 16;\n\n      h = th;\n      l = tl;\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      b += a >>> 16;\n      c += b >>> 16;\n      d += c >>> 16;\n\n      bh3 = (c & 0xffff) | (d << 16);\n      bl3 = (a & 0xffff) | (b << 16);\n\n      ah1 = bh0;\n      ah2 = bh1;\n      ah3 = bh2;\n      ah4 = bh3;\n      ah5 = bh4;\n      ah6 = bh5;\n      ah7 = bh6;\n      ah0 = bh7;\n\n      al1 = bl0;\n      al2 = bl1;\n      al3 = bl2;\n      al4 = bl3;\n      al5 = bl4;\n      al6 = bl5;\n      al7 = bl6;\n      al0 = bl7;\n\n      if (i%16 === 15) {\n        for (j = 0; j < 16; j++) {\n          // add\n          h = wh[j];\n          l = wl[j];\n\n          a = l & 0xffff; b = l >>> 16;\n          c = h & 0xffff; d = h >>> 16;\n\n          h = wh[(j+9)%16];\n          l = wl[(j+9)%16];\n\n          a += l & 0xffff; b += l >>> 16;\n          c += h & 0xffff; d += h >>> 16;\n\n          // sigma0\n          th = wh[(j+1)%16];\n          tl = wl[(j+1)%16];\n          h = ((th >>> 1) | (tl << (32-1))) ^ ((th >>> 8) | (tl << (32-8))) ^ (th >>> 7);\n          l = ((tl >>> 1) | (th << (32-1))) ^ ((tl >>> 8) | (th << (32-8))) ^ ((tl >>> 7) | (th << (32-7)));\n\n          a += l & 0xffff; b += l >>> 16;\n          c += h & 0xffff; d += h >>> 16;\n\n          // sigma1\n          th = wh[(j+14)%16];\n          tl = wl[(j+14)%16];\n          h = ((th >>> 19) | (tl << (32-19))) ^ ((tl >>> (61-32)) | (th << (32-(61-32)))) ^ (th >>> 6);\n          l = ((tl >>> 19) | (th << (32-19))) ^ ((th >>> (61-32)) | (tl << (32-(61-32)))) ^ ((tl >>> 6) | (th << (32-6)));\n\n          a += l & 0xffff; b += l >>> 16;\n          c += h & 0xffff; d += h >>> 16;\n\n          b += a >>> 16;\n          c += b >>> 16;\n          d += c >>> 16;\n\n          wh[j] = (c & 0xffff) | (d << 16);\n          wl[j] = (a & 0xffff) | (b << 16);\n        }\n      }\n    }\n\n    // add\n    h = ah0;\n    l = al0;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[0];\n    l = hl[0];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[0] = ah0 = (c & 0xffff) | (d << 16);\n    hl[0] = al0 = (a & 0xffff) | (b << 16);\n\n    h = ah1;\n    l = al1;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[1];\n    l = hl[1];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[1] = ah1 = (c & 0xffff) | (d << 16);\n    hl[1] = al1 = (a & 0xffff) | (b << 16);\n\n    h = ah2;\n    l = al2;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[2];\n    l = hl[2];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[2] = ah2 = (c & 0xffff) | (d << 16);\n    hl[2] = al2 = (a & 0xffff) | (b << 16);\n\n    h = ah3;\n    l = al3;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[3];\n    l = hl[3];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[3] = ah3 = (c & 0xffff) | (d << 16);\n    hl[3] = al3 = (a & 0xffff) | (b << 16);\n\n    h = ah4;\n    l = al4;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[4];\n    l = hl[4];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[4] = ah4 = (c & 0xffff) | (d << 16);\n    hl[4] = al4 = (a & 0xffff) | (b << 16);\n\n    h = ah5;\n    l = al5;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[5];\n    l = hl[5];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[5] = ah5 = (c & 0xffff) | (d << 16);\n    hl[5] = al5 = (a & 0xffff) | (b << 16);\n\n    h = ah6;\n    l = al6;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[6];\n    l = hl[6];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[6] = ah6 = (c & 0xffff) | (d << 16);\n    hl[6] = al6 = (a & 0xffff) | (b << 16);\n\n    h = ah7;\n    l = al7;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[7];\n    l = hl[7];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[7] = ah7 = (c & 0xffff) | (d << 16);\n    hl[7] = al7 = (a & 0xffff) | (b << 16);\n\n    pos += 128;\n    n -= 128;\n  }\n\n  return n;\n}\n\nfunction crypto_hash(out, m, n) {\n  var hh = new Int32Array(8),\n      hl = new Int32Array(8),\n      x = new Uint8Array(256),\n      i, b = n;\n\n  hh[0] = 0x6a09e667;\n  hh[1] = 0xbb67ae85;\n  hh[2] = 0x3c6ef372;\n  hh[3] = 0xa54ff53a;\n  hh[4] = 0x510e527f;\n  hh[5] = 0x9b05688c;\n  hh[6] = 0x1f83d9ab;\n  hh[7] = 0x5be0cd19;\n\n  hl[0] = 0xf3bcc908;\n  hl[1] = 0x84caa73b;\n  hl[2] = 0xfe94f82b;\n  hl[3] = 0x5f1d36f1;\n  hl[4] = 0xade682d1;\n  hl[5] = 0x2b3e6c1f;\n  hl[6] = 0xfb41bd6b;\n  hl[7] = 0x137e2179;\n\n  crypto_hashblocks_hl(hh, hl, m, n);\n  n %= 128;\n\n  for (i = 0; i < n; i++) x[i] = m[b-n+i];\n  x[n] = 128;\n\n  n = 256-128*(n<112?1:0);\n  x[n-9] = 0;\n  ts64(x, n-8,  (b / 0x20000000) | 0, b << 3);\n  crypto_hashblocks_hl(hh, hl, x, n);\n\n  for (i = 0; i < 8; i++) ts64(out, 8*i, hh[i], hl[i]);\n\n  return 0;\n}\n\nfunction add(p, q) {\n  var a = gf(), b = gf(), c = gf(),\n      d = gf(), e = gf(), f = gf(),\n      g = gf(), h = gf(), t = gf();\n\n  Z(a, p[1], p[0]);\n  Z(t, q[1], q[0]);\n  M(a, a, t);\n  A(b, p[0], p[1]);\n  A(t, q[0], q[1]);\n  M(b, b, t);\n  M(c, p[3], q[3]);\n  M(c, c, D2);\n  M(d, p[2], q[2]);\n  A(d, d, d);\n  Z(e, b, a);\n  Z(f, d, c);\n  A(g, d, c);\n  A(h, b, a);\n\n  M(p[0], e, f);\n  M(p[1], h, g);\n  M(p[2], g, f);\n  M(p[3], e, h);\n}\n\nfunction cswap(p, q, b) {\n  var i;\n  for (i = 0; i < 4; i++) {\n    sel25519(p[i], q[i], b);\n  }\n}\n\nfunction pack(r, p) {\n  var tx = gf(), ty = gf(), zi = gf();\n  inv25519(zi, p[2]);\n  M(tx, p[0], zi);\n  M(ty, p[1], zi);\n  pack25519(r, ty);\n  r[31] ^= par25519(tx) << 7;\n}\n\nfunction scalarmult(p, q, s) {\n  var b, i;\n  set25519(p[0], gf0);\n  set25519(p[1], gf1);\n  set25519(p[2], gf1);\n  set25519(p[3], gf0);\n  for (i = 255; i >= 0; --i) {\n    b = (s[(i/8)|0] >> (i&7)) & 1;\n    cswap(p, q, b);\n    add(q, p);\n    add(p, p);\n    cswap(p, q, b);\n  }\n}\n\nfunction scalarbase(p, s) {\n  var q = [gf(), gf(), gf(), gf()];\n  set25519(q[0], X);\n  set25519(q[1], Y);\n  set25519(q[2], gf1);\n  M(q[3], X, Y);\n  scalarmult(p, q, s);\n}\n\nfunction crypto_sign_keypair(pk, sk, seeded) {\n  var d = new Uint8Array(64);\n  var p = [gf(), gf(), gf(), gf()];\n  var i;\n\n  if (!seeded) randombytes(sk, 32);\n  crypto_hash(d, sk, 32);\n  d[0] &= 248;\n  d[31] &= 127;\n  d[31] |= 64;\n\n  scalarbase(p, d);\n  pack(pk, p);\n\n  for (i = 0; i < 32; i++) sk[i+32] = pk[i];\n  return 0;\n}\n\nvar L = new Float64Array([0xed, 0xd3, 0xf5, 0x5c, 0x1a, 0x63, 0x12, 0x58, 0xd6, 0x9c, 0xf7, 0xa2, 0xde, 0xf9, 0xde, 0x14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0x10]);\n\nfunction modL(r, x) {\n  var carry, i, j, k;\n  for (i = 63; i >= 32; --i) {\n    carry = 0;\n    for (j = i - 32, k = i - 12; j < k; ++j) {\n      x[j] += carry - 16 * x[i] * L[j - (i - 32)];\n      carry = Math.floor((x[j] + 128) / 256);\n      x[j] -= carry * 256;\n    }\n    x[j] += carry;\n    x[i] = 0;\n  }\n  carry = 0;\n  for (j = 0; j < 32; j++) {\n    x[j] += carry - (x[31] >> 4) * L[j];\n    carry = x[j] >> 8;\n    x[j] &= 255;\n  }\n  for (j = 0; j < 32; j++) x[j] -= carry * L[j];\n  for (i = 0; i < 32; i++) {\n    x[i+1] += x[i] >> 8;\n    r[i] = x[i] & 255;\n  }\n}\n\nfunction reduce(r) {\n  var x = new Float64Array(64), i;\n  for (i = 0; i < 64; i++) x[i] = r[i];\n  for (i = 0; i < 64; i++) r[i] = 0;\n  modL(r, x);\n}\n\n// Note: difference from C - smlen returned, not passed as argument.\nfunction crypto_sign(sm, m, n, sk) {\n  var d = new Uint8Array(64), h = new Uint8Array(64), r = new Uint8Array(64);\n  var i, j, x = new Float64Array(64);\n  var p = [gf(), gf(), gf(), gf()];\n\n  crypto_hash(d, sk, 32);\n  d[0] &= 248;\n  d[31] &= 127;\n  d[31] |= 64;\n\n  var smlen = n + 64;\n  for (i = 0; i < n; i++) sm[64 + i] = m[i];\n  for (i = 0; i < 32; i++) sm[32 + i] = d[32 + i];\n\n  crypto_hash(r, sm.subarray(32), n+32);\n  reduce(r);\n  scalarbase(p, r);\n  pack(sm, p);\n\n  for (i = 32; i < 64; i++) sm[i] = sk[i];\n  crypto_hash(h, sm, n + 64);\n  reduce(h);\n\n  for (i = 0; i < 64; i++) x[i] = 0;\n  for (i = 0; i < 32; i++) x[i] = r[i];\n  for (i = 0; i < 32; i++) {\n    for (j = 0; j < 32; j++) {\n      x[i+j] += h[i] * d[j];\n    }\n  }\n\n  modL(sm.subarray(32), x);\n  return smlen;\n}\n\nfunction unpackneg(r, p) {\n  var t = gf(), chk = gf(), num = gf(),\n      den = gf(), den2 = gf(), den4 = gf(),\n      den6 = gf();\n\n  set25519(r[2], gf1);\n  unpack25519(r[1], p);\n  S(num, r[1]);\n  M(den, num, D);\n  Z(num, num, r[2]);\n  A(den, r[2], den);\n\n  S(den2, den);\n  S(den4, den2);\n  M(den6, den4, den2);\n  M(t, den6, num);\n  M(t, t, den);\n\n  pow2523(t, t);\n  M(t, t, num);\n  M(t, t, den);\n  M(t, t, den);\n  M(r[0], t, den);\n\n  S(chk, r[0]);\n  M(chk, chk, den);\n  if (neq25519(chk, num)) M(r[0], r[0], I);\n\n  S(chk, r[0]);\n  M(chk, chk, den);\n  if (neq25519(chk, num)) return -1;\n\n  if (par25519(r[0]) === (p[31]>>7)) Z(r[0], gf0, r[0]);\n\n  M(r[3], r[0], r[1]);\n  return 0;\n}\n\nfunction crypto_sign_open(m, sm, n, pk) {\n  var i;\n  var t = new Uint8Array(32), h = new Uint8Array(64);\n  var p = [gf(), gf(), gf(), gf()],\n      q = [gf(), gf(), gf(), gf()];\n\n  if (n < 64) return -1;\n\n  if (unpackneg(q, pk)) return -1;\n\n  for (i = 0; i < n; i++) m[i] = sm[i];\n  for (i = 0; i < 32; i++) m[i+32] = pk[i];\n  crypto_hash(h, m, n);\n  reduce(h);\n  scalarmult(p, q, h);\n\n  scalarbase(q, sm.subarray(32));\n  add(p, q);\n  pack(t, p);\n\n  n -= 64;\n  if (crypto_verify_32(sm, 0, t, 0)) {\n    for (i = 0; i < n; i++) m[i] = 0;\n    return -1;\n  }\n\n  for (i = 0; i < n; i++) m[i] = sm[i + 64];\n  return n;\n}\n\nvar crypto_secretbox_KEYBYTES = 32,\n    crypto_secretbox_NONCEBYTES = 24,\n    crypto_secretbox_ZEROBYTES = 32,\n    crypto_secretbox_BOXZEROBYTES = 16,\n    crypto_scalarmult_BYTES = 32,\n    crypto_scalarmult_SCALARBYTES = 32,\n    crypto_box_PUBLICKEYBYTES = 32,\n    crypto_box_SECRETKEYBYTES = 32,\n    crypto_box_BEFORENMBYTES = 32,\n    crypto_box_NONCEBYTES = crypto_secretbox_NONCEBYTES,\n    crypto_box_ZEROBYTES = crypto_secretbox_ZEROBYTES,\n    crypto_box_BOXZEROBYTES = crypto_secretbox_BOXZEROBYTES,\n    crypto_sign_BYTES = 64,\n    crypto_sign_PUBLICKEYBYTES = 32,\n    crypto_sign_SECRETKEYBYTES = 64,\n    crypto_sign_SEEDBYTES = 32,\n    crypto_hash_BYTES = 64;\n\nnacl.lowlevel = {\n  crypto_core_hsalsa20: crypto_core_hsalsa20,\n  crypto_stream_xor: crypto_stream_xor,\n  crypto_stream: crypto_stream,\n  crypto_stream_salsa20_xor: crypto_stream_salsa20_xor,\n  crypto_stream_salsa20: crypto_stream_salsa20,\n  crypto_onetimeauth: crypto_onetimeauth,\n  crypto_onetimeauth_verify: crypto_onetimeauth_verify,\n  crypto_verify_16: crypto_verify_16,\n  crypto_verify_32: crypto_verify_32,\n  crypto_secretbox: crypto_secretbox,\n  crypto_secretbox_open: crypto_secretbox_open,\n  crypto_scalarmult: crypto_scalarmult,\n  crypto_scalarmult_base: crypto_scalarmult_base,\n  crypto_box_beforenm: crypto_box_beforenm,\n  crypto_box_afternm: crypto_box_afternm,\n  crypto_box: crypto_box,\n  crypto_box_open: crypto_box_open,\n  crypto_box_keypair: crypto_box_keypair,\n  crypto_hash: crypto_hash,\n  crypto_sign: crypto_sign,\n  crypto_sign_keypair: crypto_sign_keypair,\n  crypto_sign_open: crypto_sign_open,\n\n  crypto_secretbox_KEYBYTES: crypto_secretbox_KEYBYTES,\n  crypto_secretbox_NONCEBYTES: crypto_secretbox_NONCEBYTES,\n  crypto_secretbox_ZEROBYTES: crypto_secretbox_ZEROBYTES,\n  crypto_secretbox_BOXZEROBYTES: crypto_secretbox_BOXZEROBYTES,\n  crypto_scalarmult_BYTES: crypto_scalarmult_BYTES,\n  crypto_scalarmult_SCALARBYTES: crypto_scalarmult_SCALARBYTES,\n  crypto_box_PUBLICKEYBYTES: crypto_box_PUBLICKEYBYTES,\n  crypto_box_SECRETKEYBYTES: crypto_box_SECRETKEYBYTES,\n  crypto_box_BEFORENMBYTES: crypto_box_BEFORENMBYTES,\n  crypto_box_NONCEBYTES: crypto_box_NONCEBYTES,\n  crypto_box_ZEROBYTES: crypto_box_ZEROBYTES,\n  crypto_box_BOXZEROBYTES: crypto_box_BOXZEROBYTES,\n  crypto_sign_BYTES: crypto_sign_BYTES,\n  crypto_sign_PUBLICKEYBYTES: crypto_sign_PUBLICKEYBYTES,\n  crypto_sign_SECRETKEYBYTES: crypto_sign_SECRETKEYBYTES,\n  crypto_sign_SEEDBYTES: crypto_sign_SEEDBYTES,\n  crypto_hash_BYTES: crypto_hash_BYTES,\n\n  gf: gf,\n  D: D,\n  L: L,\n  pack25519: pack25519,\n  unpack25519: unpack25519,\n  M: M,\n  A: A,\n  S: S,\n  Z: Z,\n  pow2523: pow2523,\n  add: add,\n  set25519: set25519,\n  modL: modL,\n  scalarmult: scalarmult,\n  scalarbase: scalarbase,\n};\n\n/* High-level API */\n\nfunction checkLengths(k, n) {\n  if (k.length !== crypto_secretbox_KEYBYTES) throw new Error('bad key size');\n  if (n.length !== crypto_secretbox_NONCEBYTES) throw new Error('bad nonce size');\n}\n\nfunction checkBoxLengths(pk, sk) {\n  if (pk.length !== crypto_box_PUBLICKEYBYTES) throw new Error('bad public key size');\n  if (sk.length !== crypto_box_SECRETKEYBYTES) throw new Error('bad secret key size');\n}\n\nfunction checkArrayTypes() {\n  for (var i = 0; i < arguments.length; i++) {\n    if (!(arguments[i] instanceof Uint8Array))\n      throw new TypeError('unexpected type, use Uint8Array');\n  }\n}\n\nfunction cleanup(arr) {\n  for (var i = 0; i < arr.length; i++) arr[i] = 0;\n}\n\nnacl.randomBytes = function(n) {\n  var b = new Uint8Array(n);\n  randombytes(b, n);\n  return b;\n};\n\nnacl.secretbox = function(msg, nonce, key) {\n  checkArrayTypes(msg, nonce, key);\n  checkLengths(key, nonce);\n  var m = new Uint8Array(crypto_secretbox_ZEROBYTES + msg.length);\n  var c = new Uint8Array(m.length);\n  for (var i = 0; i < msg.length; i++) m[i+crypto_secretbox_ZEROBYTES] = msg[i];\n  crypto_secretbox(c, m, m.length, nonce, key);\n  return c.subarray(crypto_secretbox_BOXZEROBYTES);\n};\n\nnacl.secretbox.open = function(box, nonce, key) {\n  checkArrayTypes(box, nonce, key);\n  checkLengths(key, nonce);\n  var c = new Uint8Array(crypto_secretbox_BOXZEROBYTES + box.length);\n  var m = new Uint8Array(c.length);\n  for (var i = 0; i < box.length; i++) c[i+crypto_secretbox_BOXZEROBYTES] = box[i];\n  if (c.length < 32) return null;\n  if (crypto_secretbox_open(m, c, c.length, nonce, key) !== 0) return null;\n  return m.subarray(crypto_secretbox_ZEROBYTES);\n};\n\nnacl.secretbox.keyLength = crypto_secretbox_KEYBYTES;\nnacl.secretbox.nonceLength = crypto_secretbox_NONCEBYTES;\nnacl.secretbox.overheadLength = crypto_secretbox_BOXZEROBYTES;\n\nnacl.scalarMult = function(n, p) {\n  checkArrayTypes(n, p);\n  if (n.length !== crypto_scalarmult_SCALARBYTES) throw new Error('bad n size');\n  if (p.length !== crypto_scalarmult_BYTES) throw new Error('bad p size');\n  var q = new Uint8Array(crypto_scalarmult_BYTES);\n  crypto_scalarmult(q, n, p);\n  return q;\n};\n\nnacl.scalarMult.base = function(n) {\n  checkArrayTypes(n);\n  if (n.length !== crypto_scalarmult_SCALARBYTES) throw new Error('bad n size');\n  var q = new Uint8Array(crypto_scalarmult_BYTES);\n  crypto_scalarmult_base(q, n);\n  return q;\n};\n\nnacl.scalarMult.scalarLength = crypto_scalarmult_SCALARBYTES;\nnacl.scalarMult.groupElementLength = crypto_scalarmult_BYTES;\n\nnacl.box = function(msg, nonce, publicKey, secretKey) {\n  var k = nacl.box.before(publicKey, secretKey);\n  return nacl.secretbox(msg, nonce, k);\n};\n\nnacl.box.before = function(publicKey, secretKey) {\n  checkArrayTypes(publicKey, secretKey);\n  checkBoxLengths(publicKey, secretKey);\n  var k = new Uint8Array(crypto_box_BEFORENMBYTES);\n  crypto_box_beforenm(k, publicKey, secretKey);\n  return k;\n};\n\nnacl.box.after = nacl.secretbox;\n\nnacl.box.open = function(msg, nonce, publicKey, secretKey) {\n  var k = nacl.box.before(publicKey, secretKey);\n  return nacl.secretbox.open(msg, nonce, k);\n};\n\nnacl.box.open.after = nacl.secretbox.open;\n\nnacl.box.keyPair = function() {\n  var pk = new Uint8Array(crypto_box_PUBLICKEYBYTES);\n  var sk = new Uint8Array(crypto_box_SECRETKEYBYTES);\n  crypto_box_keypair(pk, sk);\n  return {publicKey: pk, secretKey: sk};\n};\n\nnacl.box.keyPair.fromSecretKey = function(secretKey) {\n  checkArrayTypes(secretKey);\n  if (secretKey.length !== crypto_box_SECRETKEYBYTES)\n    throw new Error('bad secret key size');\n  var pk = new Uint8Array(crypto_box_PUBLICKEYBYTES);\n  crypto_scalarmult_base(pk, secretKey);\n  return {publicKey: pk, secretKey: new Uint8Array(secretKey)};\n};\n\nnacl.box.publicKeyLength = crypto_box_PUBLICKEYBYTES;\nnacl.box.secretKeyLength = crypto_box_SECRETKEYBYTES;\nnacl.box.sharedKeyLength = crypto_box_BEFORENMBYTES;\nnacl.box.nonceLength = crypto_box_NONCEBYTES;\nnacl.box.overheadLength = nacl.secretbox.overheadLength;\n\nnacl.sign = function(msg, secretKey) {\n  checkArrayTypes(msg, secretKey);\n  if (secretKey.length !== crypto_sign_SECRETKEYBYTES)\n    throw new Error('bad secret key size');\n  var signedMsg = new Uint8Array(crypto_sign_BYTES+msg.length);\n  crypto_sign(signedMsg, msg, msg.length, secretKey);\n  return signedMsg;\n};\n\nnacl.sign.open = function(signedMsg, publicKey) {\n  checkArrayTypes(signedMsg, publicKey);\n  if (publicKey.length !== crypto_sign_PUBLICKEYBYTES)\n    throw new Error('bad public key size');\n  var tmp = new Uint8Array(signedMsg.length);\n  var mlen = crypto_sign_open(tmp, signedMsg, signedMsg.length, publicKey);\n  if (mlen < 0) return null;\n  var m = new Uint8Array(mlen);\n  for (var i = 0; i < m.length; i++) m[i] = tmp[i];\n  return m;\n};\n\nnacl.sign.detached = function(msg, secretKey) {\n  var signedMsg = nacl.sign(msg, secretKey);\n  var sig = new Uint8Array(crypto_sign_BYTES);\n  for (var i = 0; i < sig.length; i++) sig[i] = signedMsg[i];\n  return sig;\n};\n\nnacl.sign.detached.verify = function(msg, sig, publicKey) {\n  checkArrayTypes(msg, sig, publicKey);\n  if (sig.length !== crypto_sign_BYTES)\n    throw new Error('bad signature size');\n  if (publicKey.length !== crypto_sign_PUBLICKEYBYTES)\n    throw new Error('bad public key size');\n  var sm = new Uint8Array(crypto_sign_BYTES + msg.length);\n  var m = new Uint8Array(crypto_sign_BYTES + msg.length);\n  var i;\n  for (i = 0; i < crypto_sign_BYTES; i++) sm[i] = sig[i];\n  for (i = 0; i < msg.length; i++) sm[i+crypto_sign_BYTES] = msg[i];\n  return (crypto_sign_open(m, sm, sm.length, publicKey) >= 0);\n};\n\nnacl.sign.keyPair = function() {\n  var pk = new Uint8Array(crypto_sign_PUBLICKEYBYTES);\n  var sk = new Uint8Array(crypto_sign_SECRETKEYBYTES);\n  crypto_sign_keypair(pk, sk);\n  return {publicKey: pk, secretKey: sk};\n};\n\nnacl.sign.keyPair.fromSecretKey = function(secretKey) {\n  checkArrayTypes(secretKey);\n  if (secretKey.length !== crypto_sign_SECRETKEYBYTES)\n    throw new Error('bad secret key size');\n  var pk = new Uint8Array(crypto_sign_PUBLICKEYBYTES);\n  for (var i = 0; i < pk.length; i++) pk[i] = secretKey[32+i];\n  return {publicKey: pk, secretKey: new Uint8Array(secretKey)};\n};\n\nnacl.sign.keyPair.fromSeed = function(seed) {\n  checkArrayTypes(seed);\n  if (seed.length !== crypto_sign_SEEDBYTES)\n    throw new Error('bad seed size');\n  var pk = new Uint8Array(crypto_sign_PUBLICKEYBYTES);\n  var sk = new Uint8Array(crypto_sign_SECRETKEYBYTES);\n  for (var i = 0; i < 32; i++) sk[i] = seed[i];\n  crypto_sign_keypair(pk, sk, true);\n  return {publicKey: pk, secretKey: sk};\n};\n\nnacl.sign.publicKeyLength = crypto_sign_PUBLICKEYBYTES;\nnacl.sign.secretKeyLength = crypto_sign_SECRETKEYBYTES;\nnacl.sign.seedLength = crypto_sign_SEEDBYTES;\nnacl.sign.signatureLength = crypto_sign_BYTES;\n\nnacl.hash = function(msg) {\n  checkArrayTypes(msg);\n  var h = new Uint8Array(crypto_hash_BYTES);\n  crypto_hash(h, msg, msg.length);\n  return h;\n};\n\nnacl.hash.hashLength = crypto_hash_BYTES;\n\nnacl.verify = function(x, y) {\n  checkArrayTypes(x, y);\n  // Zero length arguments are considered not equal.\n  if (x.length === 0 || y.length === 0) return false;\n  if (x.length !== y.length) return false;\n  return (vn(x, 0, y, 0, x.length) === 0) ? true : false;\n};\n\nnacl.setPRNG = function(fn) {\n  randombytes = fn;\n};\n\n(function() {\n  // Initialize PRNG if environment provides CSPRNG.\n  // If not, methods calling randombytes will throw.\n  var crypto = typeof self !== 'undefined' ? (self.crypto || self.msCrypto) : null;\n  if (crypto && crypto.getRandomValues) {\n    // Browsers.\n    var QUOTA = 65536;\n    nacl.setPRNG(function(x, n) {\n      var i, v = new Uint8Array(n);\n      for (i = 0; i < n; i += QUOTA) {\n        crypto.getRandomValues(v.subarray(i, i + Math.min(n - i, QUOTA)));\n      }\n      for (i = 0; i < n; i++) x[i] = v[i];\n      cleanup(v);\n    });\n  } else if (typeof require !== 'undefined') {\n    // Node.js.\n    crypto = require('crypto');\n    if (crypto && crypto.randomBytes) {\n      nacl.setPRNG(function(x, n) {\n        var i, v = crypto.randomBytes(n);\n        for (i = 0; i < n; i++) x[i] = v[i];\n        cleanup(v);\n      });\n    }\n  }\n})();\n\n})(typeof module !== 'undefined' && module.exports ? module.exports : (self.nacl = self.nacl || {}));\n","/*\n * [js-sha512]{@link https://github.com/emn178/js-sha512}\n *\n * @version 0.8.0\n * @author Chen, Yi-Cyuan [emn178@gmail.com]\n * @copyright Chen, Yi-Cyuan 2014-2018\n * @license MIT\n */\n/*jslint bitwise: true */\n(function () {\n  'use strict';\n\n  var INPUT_ERROR = 'input is invalid type';\n  var FINALIZE_ERROR = 'finalize already called';\n  var WINDOW = typeof window === 'object';\n  var root = WINDOW ? window : {};\n  if (root.JS_SHA512_NO_WINDOW) {\n    WINDOW = false;\n  }\n  var WEB_WORKER = !WINDOW && typeof self === 'object';\n  var NODE_JS = !root.JS_SHA512_NO_NODE_JS && typeof process === 'object' && process.versions && process.versions.node;\n  if (NODE_JS) {\n    root = global;\n  } else if (WEB_WORKER) {\n    root = self;\n  }\n  var COMMON_JS = !root.JS_SHA512_NO_COMMON_JS && typeof module === 'object' && module.exports;\n  var AMD = typeof define === 'function' && define.amd;\n  var ARRAY_BUFFER = !root.JS_SHA512_NO_ARRAY_BUFFER && typeof ArrayBuffer !== 'undefined';\n  var HEX_CHARS = '0123456789abcdef'.split('');\n  var EXTRA = [-2147483648, 8388608, 32768, 128];\n  var SHIFT = [24, 16, 8, 0];\n  var K = [\n    0x428A2F98, 0xD728AE22, 0x71374491, 0x23EF65CD,\n    0xB5C0FBCF, 0xEC4D3B2F, 0xE9B5DBA5, 0x8189DBBC,\n    0x3956C25B, 0xF348B538, 0x59F111F1, 0xB605D019,\n    0x923F82A4, 0xAF194F9B, 0xAB1C5ED5, 0xDA6D8118,\n    0xD807AA98, 0xA3030242, 0x12835B01, 0x45706FBE,\n    0x243185BE, 0x4EE4B28C, 0x550C7DC3, 0xD5FFB4E2,\n    0x72BE5D74, 0xF27B896F, 0x80DEB1FE, 0x3B1696B1,\n    0x9BDC06A7, 0x25C71235, 0xC19BF174, 0xCF692694,\n    0xE49B69C1, 0x9EF14AD2, 0xEFBE4786, 0x384F25E3,\n    0x0FC19DC6, 0x8B8CD5B5, 0x240CA1CC, 0x77AC9C65,\n    0x2DE92C6F, 0x592B0275, 0x4A7484AA, 0x6EA6E483,\n    0x5CB0A9DC, 0xBD41FBD4, 0x76F988DA, 0x831153B5,\n    0x983E5152, 0xEE66DFAB, 0xA831C66D, 0x2DB43210,\n    0xB00327C8, 0x98FB213F, 0xBF597FC7, 0xBEEF0EE4,\n    0xC6E00BF3, 0x3DA88FC2, 0xD5A79147, 0x930AA725,\n    0x06CA6351, 0xE003826F, 0x14292967, 0x0A0E6E70,\n    0x27B70A85, 0x46D22FFC, 0x2E1B2138, 0x5C26C926,\n    0x4D2C6DFC, 0x5AC42AED, 0x53380D13, 0x9D95B3DF,\n    0x650A7354, 0x8BAF63DE, 0x766A0ABB, 0x3C77B2A8,\n    0x81C2C92E, 0x47EDAEE6, 0x92722C85, 0x1482353B,\n    0xA2BFE8A1, 0x4CF10364, 0xA81A664B, 0xBC423001,\n    0xC24B8B70, 0xD0F89791, 0xC76C51A3, 0x0654BE30,\n    0xD192E819, 0xD6EF5218, 0xD6990624, 0x5565A910,\n    0xF40E3585, 0x5771202A, 0x106AA070, 0x32BBD1B8,\n    0x19A4C116, 0xB8D2D0C8, 0x1E376C08, 0x5141AB53,\n    0x2748774C, 0xDF8EEB99, 0x34B0BCB5, 0xE19B48A8,\n    0x391C0CB3, 0xC5C95A63, 0x4ED8AA4A, 0xE3418ACB,\n    0x5B9CCA4F, 0x7763E373, 0x682E6FF3, 0xD6B2B8A3,\n    0x748F82EE, 0x5DEFB2FC, 0x78A5636F, 0x43172F60,\n    0x84C87814, 0xA1F0AB72, 0x8CC70208, 0x1A6439EC,\n    0x90BEFFFA, 0x23631E28, 0xA4506CEB, 0xDE82BDE9,\n    0xBEF9A3F7, 0xB2C67915, 0xC67178F2, 0xE372532B,\n    0xCA273ECE, 0xEA26619C, 0xD186B8C7, 0x21C0C207,\n    0xEADA7DD6, 0xCDE0EB1E, 0xF57D4F7F, 0xEE6ED178,\n    0x06F067AA, 0x72176FBA, 0x0A637DC5, 0xA2C898A6,\n    0x113F9804, 0xBEF90DAE, 0x1B710B35, 0x131C471B,\n    0x28DB77F5, 0x23047D84, 0x32CAAB7B, 0x40C72493,\n    0x3C9EBE0A, 0x15C9BEBC, 0x431D67C4, 0x9C100D4C,\n    0x4CC5D4BE, 0xCB3E42B6, 0x597F299C, 0xFC657E2A,\n    0x5FCB6FAB, 0x3AD6FAEC, 0x6C44198C, 0x4A475817\n  ];\n\n  var OUTPUT_TYPES = ['hex', 'array', 'digest', 'arrayBuffer'];\n\n  var blocks = [];\n\n  if (root.JS_SHA512_NO_NODE_JS || !Array.isArray) {\n    Array.isArray = function (obj) {\n      return Object.prototype.toString.call(obj) === '[object Array]';\n    };\n  }\n\n  if (ARRAY_BUFFER && (root.JS_SHA512_NO_ARRAY_BUFFER_IS_VIEW || !ArrayBuffer.isView)) {\n    ArrayBuffer.isView = function (obj) {\n      return typeof obj === 'object' && obj.buffer && obj.buffer.constructor === ArrayBuffer;\n    };\n  }\n\n  var createOutputMethod = function (outputType, bits) {\n    return function (message) {\n      return new Sha512(bits, true).update(message)[outputType]();\n    };\n  };\n\n  var createMethod = function (bits) {\n    var method = createOutputMethod('hex', bits);\n    method.create = function () {\n      return new Sha512(bits);\n    };\n    method.update = function (message) {\n      return method.create().update(message);\n    };\n    for (var i = 0; i < OUTPUT_TYPES.length; ++i) {\n      var type = OUTPUT_TYPES[i];\n      method[type] = createOutputMethod(type, bits);\n    }\n    return method;\n  };\n\n  var createHmacOutputMethod = function (outputType, bits) {\n    return function (key, message) {\n      return new HmacSha512(key, bits, true).update(message)[outputType]();\n    };\n  };\n\n  var createHmacMethod = function (bits) {\n    var method = createHmacOutputMethod('hex', bits);\n    method.create = function (key) {\n      return new HmacSha512(key, bits);\n    };\n    method.update = function (key, message) {\n      return method.create(key).update(message);\n    };\n    for (var i = 0; i < OUTPUT_TYPES.length; ++i) {\n      var type = OUTPUT_TYPES[i];\n      method[type] = createHmacOutputMethod(type, bits);\n    }\n    return method;\n  };\n\n  function Sha512(bits, sharedMemory) {\n    if (sharedMemory) {\n      blocks[0] = blocks[1] = blocks[2] = blocks[3] = blocks[4] =\n      blocks[5] = blocks[6] = blocks[7] = blocks[8] =\n      blocks[9] = blocks[10] = blocks[11] = blocks[12] =\n      blocks[13] = blocks[14] = blocks[15] = blocks[16] =\n      blocks[17] = blocks[18] = blocks[19] = blocks[20] =\n      blocks[21] = blocks[22] = blocks[23] = blocks[24] =\n      blocks[25] = blocks[26] = blocks[27] = blocks[28] =\n      blocks[29] = blocks[30] = blocks[31] = blocks[32] = 0;\n      this.blocks = blocks;\n    } else {\n      this.blocks = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n    }\n\n    if (bits == 384) {\n      this.h0h = 0xCBBB9D5D;\n      this.h0l = 0xC1059ED8;\n      this.h1h = 0x629A292A;\n      this.h1l = 0x367CD507;\n      this.h2h = 0x9159015A;\n      this.h2l = 0x3070DD17;\n      this.h3h = 0x152FECD8;\n      this.h3l = 0xF70E5939;\n      this.h4h = 0x67332667;\n      this.h4l = 0xFFC00B31;\n      this.h5h = 0x8EB44A87;\n      this.h5l = 0x68581511;\n      this.h6h = 0xDB0C2E0D;\n      this.h6l = 0x64F98FA7;\n      this.h7h = 0x47B5481D;\n      this.h7l = 0xBEFA4FA4;\n    } else if (bits == 256) {\n      this.h0h = 0x22312194;\n      this.h0l = 0xFC2BF72C;\n      this.h1h = 0x9F555FA3;\n      this.h1l = 0xC84C64C2;\n      this.h2h = 0x2393B86B;\n      this.h2l = 0x6F53B151;\n      this.h3h = 0x96387719;\n      this.h3l = 0x5940EABD;\n      this.h4h = 0x96283EE2;\n      this.h4l = 0xA88EFFE3;\n      this.h5h = 0xBE5E1E25;\n      this.h5l = 0x53863992;\n      this.h6h = 0x2B0199FC;\n      this.h6l = 0x2C85B8AA;\n      this.h7h = 0x0EB72DDC;\n      this.h7l = 0x81C52CA2;\n    } else if (bits == 224) {\n      this.h0h = 0x8C3D37C8;\n      this.h0l = 0x19544DA2;\n      this.h1h = 0x73E19966;\n      this.h1l = 0x89DCD4D6;\n      this.h2h = 0x1DFAB7AE;\n      this.h2l = 0x32FF9C82;\n      this.h3h = 0x679DD514;\n      this.h3l = 0x582F9FCF;\n      this.h4h = 0x0F6D2B69;\n      this.h4l = 0x7BD44DA8;\n      this.h5h = 0x77E36F73;\n      this.h5l = 0x04C48942;\n      this.h6h = 0x3F9D85A8;\n      this.h6l = 0x6A1D36C8;\n      this.h7h = 0x1112E6AD;\n      this.h7l = 0x91D692A1;\n    } else { // 512\n      this.h0h = 0x6A09E667;\n      this.h0l = 0xF3BCC908;\n      this.h1h = 0xBB67AE85;\n      this.h1l = 0x84CAA73B;\n      this.h2h = 0x3C6EF372;\n      this.h2l = 0xFE94F82B;\n      this.h3h = 0xA54FF53A;\n      this.h3l = 0x5F1D36F1;\n      this.h4h = 0x510E527F;\n      this.h4l = 0xADE682D1;\n      this.h5h = 0x9B05688C;\n      this.h5l = 0x2B3E6C1F;\n      this.h6h = 0x1F83D9AB;\n      this.h6l = 0xFB41BD6B;\n      this.h7h = 0x5BE0CD19;\n      this.h7l = 0x137E2179;\n    }\n    this.bits = bits;\n\n    this.block = this.start = this.bytes = this.hBytes = 0;\n    this.finalized = this.hashed = false;\n  }\n\n  Sha512.prototype.update = function (message) {\n    if (this.finalized) {\n      throw new Error(FINALIZE_ERROR);\n    }\n    var notString, type = typeof message;\n    if (type !== 'string') {\n      if (type === 'object') {\n        if (message === null) {\n          throw new Error(INPUT_ERROR);\n        } else if (ARRAY_BUFFER && message.constructor === ArrayBuffer) {\n          message = new Uint8Array(message);\n        } else if (!Array.isArray(message)) {\n          if (!ARRAY_BUFFER || !ArrayBuffer.isView(message)) {\n            throw new Error(INPUT_ERROR);\n          }\n        }\n      } else {\n        throw new Error(INPUT_ERROR);\n      }\n      notString = true;\n    }\n    var code, index = 0, i, length = message.length, blocks = this.blocks;\n\n    while (index < length) {\n      if (this.hashed) {\n        this.hashed = false;\n        blocks[0] = this.block;\n        blocks[1] = blocks[2] = blocks[3] = blocks[4] =\n        blocks[5] = blocks[6] = blocks[7] = blocks[8] =\n        blocks[9] = blocks[10] = blocks[11] = blocks[12] =\n        blocks[13] = blocks[14] = blocks[15] = blocks[16] =\n        blocks[17] = blocks[18] = blocks[19] = blocks[20] =\n        blocks[21] = blocks[22] = blocks[23] = blocks[24] =\n        blocks[25] = blocks[26] = blocks[27] = blocks[28] =\n        blocks[29] = blocks[30] = blocks[31] = blocks[32] = 0;\n      }\n\n      if(notString) {\n        for (i = this.start; index < length && i < 128; ++index) {\n          blocks[i >> 2] |= message[index] << SHIFT[i++ & 3];\n        }\n      } else {\n        for (i = this.start; index < length && i < 128; ++index) {\n          code = message.charCodeAt(index);\n          if (code < 0x80) {\n            blocks[i >> 2] |= code << SHIFT[i++ & 3];\n          } else if (code < 0x800) {\n            blocks[i >> 2] |= (0xc0 | (code >> 6)) << SHIFT[i++ & 3];\n            blocks[i >> 2] |= (0x80 | (code & 0x3f)) << SHIFT[i++ & 3];\n          } else if (code < 0xd800 || code >= 0xe000) {\n            blocks[i >> 2] |= (0xe0 | (code >> 12)) << SHIFT[i++ & 3];\n            blocks[i >> 2] |= (0x80 | ((code >> 6) & 0x3f)) << SHIFT[i++ & 3];\n            blocks[i >> 2] |= (0x80 | (code & 0x3f)) << SHIFT[i++ & 3];\n          } else {\n            code = 0x10000 + (((code & 0x3ff) << 10) | (message.charCodeAt(++index) & 0x3ff));\n            blocks[i >> 2] |= (0xf0 | (code >> 18)) << SHIFT[i++ & 3];\n            blocks[i >> 2] |= (0x80 | ((code >> 12) & 0x3f)) << SHIFT[i++ & 3];\n            blocks[i >> 2] |= (0x80 | ((code >> 6) & 0x3f)) << SHIFT[i++ & 3];\n            blocks[i >> 2] |= (0x80 | (code & 0x3f)) << SHIFT[i++ & 3];\n          }\n        }\n      }\n\n      this.lastByteIndex = i;\n      this.bytes += i - this.start;\n      if (i >= 128) {\n        this.block = blocks[32];\n        this.start = i - 128;\n        this.hash();\n        this.hashed = true;\n      } else {\n        this.start = i;\n      }\n    }\n    if (this.bytes > 4294967295) {\n      this.hBytes += this.bytes / 4294967296 << 0;\n      this.bytes = this.bytes % 4294967296;\n    }\n    return this;\n  };\n\n  Sha512.prototype.finalize = function () {\n    if (this.finalized) {\n      return;\n    }\n    this.finalized = true;\n    var blocks = this.blocks, i = this.lastByteIndex;\n    blocks[32] = this.block;\n    blocks[i >> 2] |= EXTRA[i & 3];\n    this.block = blocks[32];\n    if (i >= 112) {\n      if (!this.hashed) {\n        this.hash();\n      }\n      blocks[0] = this.block;\n      blocks[1] = blocks[2] = blocks[3] = blocks[4] =\n      blocks[5] = blocks[6] = blocks[7] = blocks[8] =\n      blocks[9] = blocks[10] = blocks[11] = blocks[12] =\n      blocks[13] = blocks[14] = blocks[15] = blocks[16] =\n      blocks[17] = blocks[18] = blocks[19] = blocks[20] =\n      blocks[21] = blocks[22] = blocks[23] = blocks[24] =\n      blocks[25] = blocks[26] = blocks[27] = blocks[28] =\n      blocks[29] = blocks[30] = blocks[31] = blocks[32] = 0;\n    }\n    blocks[30] = this.hBytes << 3 | this.bytes >>> 29;\n    blocks[31] = this.bytes << 3;\n    this.hash();\n  };\n\n  Sha512.prototype.hash = function () {\n    var h0h = this.h0h, h0l = this.h0l, h1h = this.h1h, h1l = this.h1l,\n      h2h = this.h2h, h2l = this.h2l, h3h = this.h3h, h3l = this.h3l,\n      h4h = this.h4h, h4l = this.h4l, h5h = this.h5h, h5l = this.h5l,\n      h6h = this.h6h, h6l = this.h6l, h7h = this.h7h, h7l = this.h7l,\n      blocks = this.blocks, j, s0h, s0l, s1h, s1l, c1, c2, c3, c4,\n      abh, abl, dah, dal, cdh, cdl, bch, bcl,\n      majh, majl, t1h, t1l, t2h, t2l, chh, chl;\n\n    for (j = 32; j < 160; j += 2) {\n      t1h = blocks[j - 30];\n      t1l = blocks[j - 29];\n      s0h = ((t1h >>> 1) | (t1l << 31)) ^ ((t1h >>> 8) | (t1l << 24)) ^ (t1h >>> 7);\n      s0l = ((t1l >>> 1) | (t1h << 31)) ^ ((t1l >>> 8) | (t1h << 24)) ^ ((t1l >>> 7) | t1h << 25);\n\n      t1h = blocks[j - 4];\n      t1l = blocks[j - 3];\n      s1h = ((t1h >>> 19) | (t1l << 13)) ^ ((t1l >>> 29) | (t1h << 3)) ^ (t1h >>> 6);\n      s1l = ((t1l >>> 19) | (t1h << 13)) ^ ((t1h >>> 29) | (t1l << 3)) ^ ((t1l >>> 6) | t1h << 26);\n\n      t1h = blocks[j - 32];\n      t1l = blocks[j - 31];\n      t2h = blocks[j - 14];\n      t2l = blocks[j - 13];\n\n      c1 = (t2l & 0xFFFF) + (t1l & 0xFFFF) + (s0l & 0xFFFF) + (s1l & 0xFFFF);\n      c2 = (t2l >>> 16) + (t1l >>> 16) + (s0l >>> 16) + (s1l >>> 16) + (c1 >>> 16);\n      c3 = (t2h & 0xFFFF) + (t1h & 0xFFFF) + (s0h & 0xFFFF) + (s1h & 0xFFFF) + (c2 >>> 16);\n      c4 = (t2h >>> 16) + (t1h >>> 16) + (s0h >>> 16) + (s1h >>> 16) + (c3 >>> 16);\n\n      blocks[j] = (c4 << 16) | (c3 & 0xFFFF);\n      blocks[j + 1] = (c2 << 16) | (c1 & 0xFFFF);\n    }\n\n    var ah = h0h, al = h0l, bh = h1h, bl = h1l, ch = h2h, cl = h2l, dh = h3h, dl = h3l, eh = h4h, el = h4l, fh = h5h, fl = h5l, gh = h6h, gl = h6l, hh = h7h, hl = h7l;\n    bch = bh & ch;\n    bcl = bl & cl;\n    for (j = 0; j < 160; j += 8) {\n      s0h = ((ah >>> 28) | (al << 4)) ^ ((al >>> 2) | (ah << 30)) ^ ((al >>> 7) | (ah << 25));\n      s0l = ((al >>> 28) | (ah << 4)) ^ ((ah >>> 2) | (al << 30)) ^ ((ah >>> 7) | (al << 25));\n\n      s1h = ((eh >>> 14) | (el << 18)) ^ ((eh >>> 18) | (el << 14)) ^ ((el >>> 9) | (eh << 23));\n      s1l = ((el >>> 14) | (eh << 18)) ^ ((el >>> 18) | (eh << 14)) ^ ((eh >>> 9) | (el << 23));\n\n      abh = ah & bh;\n      abl = al & bl;\n      majh = abh ^ (ah & ch) ^ bch;\n      majl = abl ^ (al & cl) ^ bcl;\n\n      chh = (eh & fh) ^ (~eh & gh);\n      chl = (el & fl) ^ (~el & gl);\n\n      t1h = blocks[j];\n      t1l = blocks[j + 1];\n      t2h = K[j];\n      t2l = K[j + 1];\n\n      c1 = (t2l & 0xFFFF) + (t1l & 0xFFFF) + (chl & 0xFFFF) + (s1l & 0xFFFF) + (hl & 0xFFFF);\n      c2 = (t2l >>> 16) + (t1l >>> 16) + (chl >>> 16) + (s1l >>> 16) + (hl >>> 16) + (c1 >>> 16);\n      c3 = (t2h & 0xFFFF) + (t1h & 0xFFFF) + (chh & 0xFFFF) + (s1h & 0xFFFF) + (hh & 0xFFFF) + (c2 >>> 16);\n      c4 = (t2h >>> 16) + (t1h >>> 16) + (chh >>> 16) + (s1h >>> 16) + (hh >>> 16) + (c3 >>> 16);\n\n      t1h = (c4 << 16) | (c3 & 0xFFFF);\n      t1l = (c2 << 16) | (c1 & 0xFFFF);\n\n      c1 = (majl & 0xFFFF) + (s0l & 0xFFFF);\n      c2 = (majl >>> 16) + (s0l >>> 16) + (c1 >>> 16);\n      c3 = (majh & 0xFFFF) + (s0h & 0xFFFF) + (c2 >>> 16);\n      c4 = (majh >>> 16) + (s0h >>> 16) + (c3 >>> 16);\n\n      t2h = (c4 << 16) | (c3 & 0xFFFF);\n      t2l = (c2 << 16) | (c1 & 0xFFFF);\n\n      c1 = (dl & 0xFFFF) + (t1l & 0xFFFF);\n      c2 = (dl >>> 16) + (t1l >>> 16) + (c1 >>> 16);\n      c3 = (dh & 0xFFFF) + (t1h & 0xFFFF) + (c2 >>> 16);\n      c4 = (dh >>> 16) + (t1h >>> 16) + (c3 >>> 16);\n\n      hh = (c4 << 16) | (c3 & 0xFFFF);\n      hl = (c2 << 16) | (c1 & 0xFFFF);\n\n      c1 = (t2l & 0xFFFF) + (t1l & 0xFFFF);\n      c2 = (t2l >>> 16) + (t1l >>> 16) + (c1 >>> 16);\n      c3 = (t2h & 0xFFFF) + (t1h & 0xFFFF) + (c2 >>> 16);\n      c4 = (t2h >>> 16) + (t1h >>> 16) + (c3 >>> 16);\n\n      dh = (c4 << 16) | (c3 & 0xFFFF);\n      dl = (c2 << 16) | (c1 & 0xFFFF);\n\n      s0h = ((dh >>> 28) | (dl << 4)) ^ ((dl >>> 2) | (dh << 30)) ^ ((dl >>> 7) | (dh << 25));\n      s0l = ((dl >>> 28) | (dh << 4)) ^ ((dh >>> 2) | (dl << 30)) ^ ((dh >>> 7) | (dl << 25));\n\n      s1h = ((hh >>> 14) | (hl << 18)) ^ ((hh >>> 18) | (hl << 14)) ^ ((hl >>> 9) | (hh << 23));\n      s1l = ((hl >>> 14) | (hh << 18)) ^ ((hl >>> 18) | (hh << 14)) ^ ((hh >>> 9) | (hl << 23));\n\n      dah = dh & ah;\n      dal = dl & al;\n      majh = dah ^ (dh & bh) ^ abh;\n      majl = dal ^ (dl & bl) ^ abl;\n\n      chh = (hh & eh) ^ (~hh & fh);\n      chl = (hl & el) ^ (~hl & fl);\n\n      t1h = blocks[j + 2];\n      t1l = blocks[j + 3];\n      t2h = K[j + 2];\n      t2l = K[j + 3];\n\n      c1 = (t2l & 0xFFFF) + (t1l & 0xFFFF) + (chl & 0xFFFF) + (s1l & 0xFFFF) + (gl & 0xFFFF);\n      c2 = (t2l >>> 16) + (t1l >>> 16) + (chl >>> 16) + (s1l >>> 16) + (gl >>> 16) + (c1 >>> 16);\n      c3 = (t2h & 0xFFFF) + (t1h & 0xFFFF) + (chh & 0xFFFF) + (s1h & 0xFFFF) + (gh & 0xFFFF) + (c2 >>> 16);\n      c4 = (t2h >>> 16) + (t1h >>> 16) + (chh >>> 16) + (s1h >>> 16) + (gh >>> 16) + (c3 >>> 16);\n\n      t1h = (c4 << 16) | (c3 & 0xFFFF);\n      t1l = (c2 << 16) | (c1 & 0xFFFF);\n\n      c1 = (majl & 0xFFFF) + (s0l & 0xFFFF);\n      c2 = (majl >>> 16) + (s0l >>> 16) + (c1 >>> 16);\n      c3 = (majh & 0xFFFF) + (s0h & 0xFFFF) + (c2 >>> 16);\n      c4 = (majh >>> 16) + (s0h >>> 16) + (c3 >>> 16);\n\n      t2h = (c4 << 16) | (c3 & 0xFFFF);\n      t2l = (c2 << 16) | (c1 & 0xFFFF);\n\n      c1 = (cl & 0xFFFF) + (t1l & 0xFFFF);\n      c2 = (cl >>> 16) + (t1l >>> 16) + (c1 >>> 16);\n      c3 = (ch & 0xFFFF) + (t1h & 0xFFFF) + (c2 >>> 16);\n      c4 = (ch >>> 16) + (t1h >>> 16) + (c3 >>> 16);\n\n      gh = (c4 << 16) | (c3 & 0xFFFF);\n      gl = (c2 << 16) | (c1 & 0xFFFF);\n\n      c1 = (t2l & 0xFFFF) + (t1l & 0xFFFF);\n      c2 = (t2l >>> 16) + (t1l >>> 16) + (c1 >>> 16);\n      c3 = (t2h & 0xFFFF) + (t1h & 0xFFFF) + (c2 >>> 16);\n      c4 = (t2h >>> 16) + (t1h >>> 16) + (c3 >>> 16);\n\n      ch = (c4 << 16) | (c3 & 0xFFFF);\n      cl = (c2 << 16) | (c1 & 0xFFFF);\n\n      s0h = ((ch >>> 28) | (cl << 4)) ^ ((cl >>> 2) | (ch << 30)) ^ ((cl >>> 7) | (ch << 25));\n      s0l = ((cl >>> 28) | (ch << 4)) ^ ((ch >>> 2) | (cl << 30)) ^ ((ch >>> 7) | (cl << 25));\n\n      s1h = ((gh >>> 14) | (gl << 18)) ^ ((gh >>> 18) | (gl << 14)) ^ ((gl >>> 9) | (gh << 23));\n      s1l = ((gl >>> 14) | (gh << 18)) ^ ((gl >>> 18) | (gh << 14)) ^ ((gh >>> 9) | (gl << 23));\n\n      cdh = ch & dh;\n      cdl = cl & dl;\n      majh = cdh ^ (ch & ah) ^ dah;\n      majl = cdl ^ (cl & al) ^ dal;\n\n      chh = (gh & hh) ^ (~gh & eh);\n      chl = (gl & hl) ^ (~gl & el);\n\n      t1h = blocks[j + 4];\n      t1l = blocks[j + 5];\n      t2h = K[j + 4];\n      t2l = K[j + 5];\n\n      c1 = (t2l & 0xFFFF) + (t1l & 0xFFFF) + (chl & 0xFFFF) + (s1l & 0xFFFF) + (fl & 0xFFFF);\n      c2 = (t2l >>> 16) + (t1l >>> 16) + (chl >>> 16) + (s1l >>> 16) + (fl >>> 16) + (c1 >>> 16);\n      c3 = (t2h & 0xFFFF) + (t1h & 0xFFFF) + (chh & 0xFFFF) + (s1h & 0xFFFF) + (fh & 0xFFFF) + (c2 >>> 16);\n      c4 = (t2h >>> 16) + (t1h >>> 16) + (chh >>> 16) + (s1h >>> 16) + (fh >>> 16) + (c3 >>> 16);\n\n      t1h = (c4 << 16) | (c3 & 0xFFFF);\n      t1l = (c2 << 16) | (c1 & 0xFFFF);\n\n      c1 = (majl & 0xFFFF) + (s0l & 0xFFFF);\n      c2 = (majl >>> 16) + (s0l >>> 16) + (c1 >>> 16);\n      c3 = (majh & 0xFFFF) + (s0h & 0xFFFF) + (c2 >>> 16);\n      c4 = (majh >>> 16) + (s0h >>> 16) + (c3 >>> 16);\n\n      t2h = (c4 << 16) | (c3 & 0xFFFF);\n      t2l = (c2 << 16) | (c1 & 0xFFFF);\n\n      c1 = (bl & 0xFFFF) + (t1l & 0xFFFF);\n      c2 = (bl >>> 16) + (t1l >>> 16) + (c1 >>> 16);\n      c3 = (bh & 0xFFFF) + (t1h & 0xFFFF) + (c2 >>> 16);\n      c4 = (bh >>> 16) + (t1h >>> 16) + (c3 >>> 16);\n\n      fh = (c4 << 16) | (c3 & 0xFFFF);\n      fl = (c2 << 16) | (c1 & 0xFFFF);\n\n      c1 = (t2l & 0xFFFF) + (t1l & 0xFFFF);\n      c2 = (t2l >>> 16) + (t1l >>> 16) + (c1 >>> 16);\n      c3 = (t2h & 0xFFFF) + (t1h & 0xFFFF) + (c2 >>> 16);\n      c4 = (t2h >>> 16) + (t1h >>> 16) + (c3 >>> 16);\n\n      bh = (c4 << 16) | (c3 & 0xFFFF);\n      bl = (c2 << 16) | (c1 & 0xFFFF);\n\n      s0h = ((bh >>> 28) | (bl << 4)) ^ ((bl >>> 2) | (bh << 30)) ^ ((bl >>> 7) | (bh << 25));\n      s0l = ((bl >>> 28) | (bh << 4)) ^ ((bh >>> 2) | (bl << 30)) ^ ((bh >>> 7) | (bl << 25));\n\n      s1h = ((fh >>> 14) | (fl << 18)) ^ ((fh >>> 18) | (fl << 14)) ^ ((fl >>> 9) | (fh << 23));\n      s1l = ((fl >>> 14) | (fh << 18)) ^ ((fl >>> 18) | (fh << 14)) ^ ((fh >>> 9) | (fl << 23));\n\n      bch = bh & ch;\n      bcl = bl & cl;\n      majh = bch ^ (bh & dh) ^ cdh;\n      majl = bcl ^ (bl & dl) ^ cdl;\n\n      chh = (fh & gh) ^ (~fh & hh);\n      chl = (fl & gl) ^ (~fl & hl);\n\n      t1h = blocks[j + 6];\n      t1l = blocks[j + 7];\n      t2h = K[j + 6];\n      t2l = K[j + 7];\n\n      c1 = (t2l & 0xFFFF) + (t1l & 0xFFFF) + (chl & 0xFFFF) + (s1l & 0xFFFF) + (el & 0xFFFF);\n      c2 = (t2l >>> 16) + (t1l >>> 16) + (chl >>> 16) + (s1l >>> 16) + (el >>> 16) + (c1 >>> 16);\n      c3 = (t2h & 0xFFFF) + (t1h & 0xFFFF) + (chh & 0xFFFF) + (s1h & 0xFFFF) + (eh & 0xFFFF) + (c2 >>> 16);\n      c4 = (t2h >>> 16) + (t1h >>> 16) + (chh >>> 16) + (s1h >>> 16) + (eh >>> 16) + (c3 >>> 16);\n\n      t1h = (c4 << 16) | (c3 & 0xFFFF);\n      t1l = (c2 << 16) | (c1 & 0xFFFF);\n\n      c1 = (majl & 0xFFFF) + (s0l & 0xFFFF);\n      c2 = (majl >>> 16) + (s0l >>> 16) + (c1 >>> 16);\n      c3 = (majh & 0xFFFF) + (s0h & 0xFFFF) + (c2 >>> 16);\n      c4 = (majh >>> 16) + (s0h >>> 16) + (c3 >>> 16);\n\n      t2h = (c4 << 16) | (c3 & 0xFFFF);\n      t2l = (c2 << 16) | (c1 & 0xFFFF);\n\n      c1 = (al & 0xFFFF) + (t1l & 0xFFFF);\n      c2 = (al >>> 16) + (t1l >>> 16) + (c1 >>> 16);\n      c3 = (ah & 0xFFFF) + (t1h & 0xFFFF) + (c2 >>> 16);\n      c4 = (ah >>> 16) + (t1h >>> 16) + (c3 >>> 16);\n\n      eh = (c4 << 16) | (c3 & 0xFFFF);\n      el = (c2 << 16) | (c1 & 0xFFFF);\n\n      c1 = (t2l & 0xFFFF) + (t1l & 0xFFFF);\n      c2 = (t2l >>> 16) + (t1l >>> 16) + (c1 >>> 16);\n      c3 = (t2h & 0xFFFF) + (t1h & 0xFFFF) + (c2 >>> 16);\n      c4 = (t2h >>> 16) + (t1h >>> 16) + (c3 >>> 16);\n\n      ah = (c4 << 16) | (c3 & 0xFFFF);\n      al = (c2 << 16) | (c1 & 0xFFFF);\n    }\n\n    c1 = (h0l & 0xFFFF) + (al & 0xFFFF);\n    c2 = (h0l >>> 16) + (al >>> 16) + (c1 >>> 16);\n    c3 = (h0h & 0xFFFF) + (ah & 0xFFFF) + (c2 >>> 16);\n    c4 = (h0h >>> 16) + (ah >>> 16) + (c3 >>> 16);\n\n    this.h0h = (c4 << 16) | (c3 & 0xFFFF);\n    this.h0l = (c2 << 16) | (c1 & 0xFFFF);\n\n    c1 = (h1l & 0xFFFF) + (bl & 0xFFFF);\n    c2 = (h1l >>> 16) + (bl >>> 16) + (c1 >>> 16);\n    c3 = (h1h & 0xFFFF) + (bh & 0xFFFF) + (c2 >>> 16);\n    c4 = (h1h >>> 16) + (bh >>> 16) + (c3 >>> 16);\n\n    this.h1h = (c4 << 16) | (c3 & 0xFFFF);\n    this.h1l = (c2 << 16) | (c1 & 0xFFFF);\n\n    c1 = (h2l & 0xFFFF) + (cl & 0xFFFF);\n    c2 = (h2l >>> 16) + (cl >>> 16) + (c1 >>> 16);\n    c3 = (h2h & 0xFFFF) + (ch & 0xFFFF) + (c2 >>> 16);\n    c4 = (h2h >>> 16) + (ch >>> 16) + (c3 >>> 16);\n\n    this.h2h = (c4 << 16) | (c3 & 0xFFFF);\n    this.h2l = (c2 << 16) | (c1 & 0xFFFF);\n\n    c1 = (h3l & 0xFFFF) + (dl & 0xFFFF);\n    c2 = (h3l >>> 16) + (dl >>> 16) + (c1 >>> 16);\n    c3 = (h3h & 0xFFFF) + (dh & 0xFFFF) + (c2 >>> 16);\n    c4 = (h3h >>> 16) + (dh >>> 16) + (c3 >>> 16);\n\n    this.h3h = (c4 << 16) | (c3 & 0xFFFF);\n    this.h3l = (c2 << 16) | (c1 & 0xFFFF);\n\n    c1 = (h4l & 0xFFFF) + (el & 0xFFFF);\n    c2 = (h4l >>> 16) + (el >>> 16) + (c1 >>> 16);\n    c3 = (h4h & 0xFFFF) + (eh & 0xFFFF) + (c2 >>> 16);\n    c4 = (h4h >>> 16) + (eh >>> 16) + (c3 >>> 16);\n\n    this.h4h = (c4 << 16) | (c3 & 0xFFFF);\n    this.h4l = (c2 << 16) | (c1 & 0xFFFF);\n\n    c1 = (h5l & 0xFFFF) + (fl & 0xFFFF);\n    c2 = (h5l >>> 16) + (fl >>> 16) + (c1 >>> 16);\n    c3 = (h5h & 0xFFFF) + (fh & 0xFFFF) + (c2 >>> 16);\n    c4 = (h5h >>> 16) + (fh >>> 16) + (c3 >>> 16);\n\n    this.h5h = (c4 << 16) | (c3 & 0xFFFF);\n    this.h5l = (c2 << 16) | (c1 & 0xFFFF);\n\n    c1 = (h6l & 0xFFFF) + (gl & 0xFFFF);\n    c2 = (h6l >>> 16) + (gl >>> 16) + (c1 >>> 16);\n    c3 = (h6h & 0xFFFF) + (gh & 0xFFFF) + (c2 >>> 16);\n    c4 = (h6h >>> 16) + (gh >>> 16) + (c3 >>> 16);\n\n    this.h6h = (c4 << 16) | (c3 & 0xFFFF);\n    this.h6l = (c2 << 16) | (c1 & 0xFFFF);\n\n    c1 = (h7l & 0xFFFF) + (hl & 0xFFFF);\n    c2 = (h7l >>> 16) + (hl >>> 16) + (c1 >>> 16);\n    c3 = (h7h & 0xFFFF) + (hh & 0xFFFF) + (c2 >>> 16);\n    c4 = (h7h >>> 16) + (hh >>> 16) + (c3 >>> 16);\n\n    this.h7h = (c4 << 16) | (c3 & 0xFFFF);\n    this.h7l = (c2 << 16) | (c1 & 0xFFFF);\n  };\n\n  Sha512.prototype.hex = function () {\n    this.finalize();\n\n    var h0h = this.h0h, h0l = this.h0l, h1h = this.h1h, h1l = this.h1l,\n      h2h = this.h2h, h2l = this.h2l, h3h = this.h3h, h3l = this.h3l,\n      h4h = this.h4h, h4l = this.h4l, h5h = this.h5h, h5l = this.h5l,\n      h6h = this.h6h, h6l = this.h6l, h7h = this.h7h, h7l = this.h7l,\n      bits = this.bits;\n\n    var hex = HEX_CHARS[(h0h >> 28) & 0x0F] + HEX_CHARS[(h0h >> 24) & 0x0F] +\n      HEX_CHARS[(h0h >> 20) & 0x0F] + HEX_CHARS[(h0h >> 16) & 0x0F] +\n      HEX_CHARS[(h0h >> 12) & 0x0F] + HEX_CHARS[(h0h >> 8) & 0x0F] +\n      HEX_CHARS[(h0h >> 4) & 0x0F] + HEX_CHARS[h0h & 0x0F] +\n      HEX_CHARS[(h0l >> 28) & 0x0F] + HEX_CHARS[(h0l >> 24) & 0x0F] +\n      HEX_CHARS[(h0l >> 20) & 0x0F] + HEX_CHARS[(h0l >> 16) & 0x0F] +\n      HEX_CHARS[(h0l >> 12) & 0x0F] + HEX_CHARS[(h0l >> 8) & 0x0F] +\n      HEX_CHARS[(h0l >> 4) & 0x0F] + HEX_CHARS[h0l & 0x0F] +\n      HEX_CHARS[(h1h >> 28) & 0x0F] + HEX_CHARS[(h1h >> 24) & 0x0F] +\n      HEX_CHARS[(h1h >> 20) & 0x0F] + HEX_CHARS[(h1h >> 16) & 0x0F] +\n      HEX_CHARS[(h1h >> 12) & 0x0F] + HEX_CHARS[(h1h >> 8) & 0x0F] +\n      HEX_CHARS[(h1h >> 4) & 0x0F] + HEX_CHARS[h1h & 0x0F] +\n      HEX_CHARS[(h1l >> 28) & 0x0F] + HEX_CHARS[(h1l >> 24) & 0x0F] +\n      HEX_CHARS[(h1l >> 20) & 0x0F] + HEX_CHARS[(h1l >> 16) & 0x0F] +\n      HEX_CHARS[(h1l >> 12) & 0x0F] + HEX_CHARS[(h1l >> 8) & 0x0F] +\n      HEX_CHARS[(h1l >> 4) & 0x0F] + HEX_CHARS[h1l & 0x0F] +\n      HEX_CHARS[(h2h >> 28) & 0x0F] + HEX_CHARS[(h2h >> 24) & 0x0F] +\n      HEX_CHARS[(h2h >> 20) & 0x0F] + HEX_CHARS[(h2h >> 16) & 0x0F] +\n      HEX_CHARS[(h2h >> 12) & 0x0F] + HEX_CHARS[(h2h >> 8) & 0x0F] +\n      HEX_CHARS[(h2h >> 4) & 0x0F] + HEX_CHARS[h2h & 0x0F] +\n      HEX_CHARS[(h2l >> 28) & 0x0F] + HEX_CHARS[(h2l >> 24) & 0x0F] +\n      HEX_CHARS[(h2l >> 20) & 0x0F] + HEX_CHARS[(h2l >> 16) & 0x0F] +\n      HEX_CHARS[(h2l >> 12) & 0x0F] + HEX_CHARS[(h2l >> 8) & 0x0F] +\n      HEX_CHARS[(h2l >> 4) & 0x0F] + HEX_CHARS[h2l & 0x0F] +\n      HEX_CHARS[(h3h >> 28) & 0x0F] + HEX_CHARS[(h3h >> 24) & 0x0F] +\n      HEX_CHARS[(h3h >> 20) & 0x0F] + HEX_CHARS[(h3h >> 16) & 0x0F] +\n      HEX_CHARS[(h3h >> 12) & 0x0F] + HEX_CHARS[(h3h >> 8) & 0x0F] +\n      HEX_CHARS[(h3h >> 4) & 0x0F] + HEX_CHARS[h3h & 0x0F];\n    if (bits >= 256) {\n      hex += HEX_CHARS[(h3l >> 28) & 0x0F] + HEX_CHARS[(h3l >> 24) & 0x0F] +\n        HEX_CHARS[(h3l >> 20) & 0x0F] + HEX_CHARS[(h3l >> 16) & 0x0F] +\n        HEX_CHARS[(h3l >> 12) & 0x0F] + HEX_CHARS[(h3l >> 8) & 0x0F] +\n        HEX_CHARS[(h3l >> 4) & 0x0F] + HEX_CHARS[h3l & 0x0F];\n    }\n    if (bits >= 384) {\n      hex += HEX_CHARS[(h4h >> 28) & 0x0F] + HEX_CHARS[(h4h >> 24) & 0x0F] +\n        HEX_CHARS[(h4h >> 20) & 0x0F] + HEX_CHARS[(h4h >> 16) & 0x0F] +\n        HEX_CHARS[(h4h >> 12) & 0x0F] + HEX_CHARS[(h4h >> 8) & 0x0F] +\n        HEX_CHARS[(h4h >> 4) & 0x0F] + HEX_CHARS[h4h & 0x0F] +\n        HEX_CHARS[(h4l >> 28) & 0x0F] + HEX_CHARS[(h4l >> 24) & 0x0F] +\n        HEX_CHARS[(h4l >> 20) & 0x0F] + HEX_CHARS[(h4l >> 16) & 0x0F] +\n        HEX_CHARS[(h4l >> 12) & 0x0F] + HEX_CHARS[(h4l >> 8) & 0x0F] +\n        HEX_CHARS[(h4l >> 4) & 0x0F] + HEX_CHARS[h4l & 0x0F] +\n        HEX_CHARS[(h5h >> 28) & 0x0F] + HEX_CHARS[(h5h >> 24) & 0x0F] +\n        HEX_CHARS[(h5h >> 20) & 0x0F] + HEX_CHARS[(h5h >> 16) & 0x0F] +\n        HEX_CHARS[(h5h >> 12) & 0x0F] + HEX_CHARS[(h5h >> 8) & 0x0F] +\n        HEX_CHARS[(h5h >> 4) & 0x0F] + HEX_CHARS[h5h & 0x0F] +\n        HEX_CHARS[(h5l >> 28) & 0x0F] + HEX_CHARS[(h5l >> 24) & 0x0F] +\n        HEX_CHARS[(h5l >> 20) & 0x0F] + HEX_CHARS[(h5l >> 16) & 0x0F] +\n        HEX_CHARS[(h5l >> 12) & 0x0F] + HEX_CHARS[(h5l >> 8) & 0x0F] +\n        HEX_CHARS[(h5l >> 4) & 0x0F] + HEX_CHARS[h5l & 0x0F];\n    }\n    if (bits == 512) {\n      hex += HEX_CHARS[(h6h >> 28) & 0x0F] + HEX_CHARS[(h6h >> 24) & 0x0F] +\n        HEX_CHARS[(h6h >> 20) & 0x0F] + HEX_CHARS[(h6h >> 16) & 0x0F] +\n        HEX_CHARS[(h6h >> 12) & 0x0F] + HEX_CHARS[(h6h >> 8) & 0x0F] +\n        HEX_CHARS[(h6h >> 4) & 0x0F] + HEX_CHARS[h6h & 0x0F] +\n        HEX_CHARS[(h6l >> 28) & 0x0F] + HEX_CHARS[(h6l >> 24) & 0x0F] +\n        HEX_CHARS[(h6l >> 20) & 0x0F] + HEX_CHARS[(h6l >> 16) & 0x0F] +\n        HEX_CHARS[(h6l >> 12) & 0x0F] + HEX_CHARS[(h6l >> 8) & 0x0F] +\n        HEX_CHARS[(h6l >> 4) & 0x0F] + HEX_CHARS[h6l & 0x0F] +\n        HEX_CHARS[(h7h >> 28) & 0x0F] + HEX_CHARS[(h7h >> 24) & 0x0F] +\n        HEX_CHARS[(h7h >> 20) & 0x0F] + HEX_CHARS[(h7h >> 16) & 0x0F] +\n        HEX_CHARS[(h7h >> 12) & 0x0F] + HEX_CHARS[(h7h >> 8) & 0x0F] +\n        HEX_CHARS[(h7h >> 4) & 0x0F] + HEX_CHARS[h7h & 0x0F] +\n        HEX_CHARS[(h7l >> 28) & 0x0F] + HEX_CHARS[(h7l >> 24) & 0x0F] +\n        HEX_CHARS[(h7l >> 20) & 0x0F] + HEX_CHARS[(h7l >> 16) & 0x0F] +\n        HEX_CHARS[(h7l >> 12) & 0x0F] + HEX_CHARS[(h7l >> 8) & 0x0F] +\n        HEX_CHARS[(h7l >> 4) & 0x0F] + HEX_CHARS[h7l & 0x0F];\n    }\n    return hex;\n  };\n\n  Sha512.prototype.toString = Sha512.prototype.hex;\n\n  Sha512.prototype.digest = function () {\n    this.finalize();\n\n    var h0h = this.h0h, h0l = this.h0l, h1h = this.h1h, h1l = this.h1l,\n      h2h = this.h2h, h2l = this.h2l, h3h = this.h3h, h3l = this.h3l,\n      h4h = this.h4h, h4l = this.h4l, h5h = this.h5h, h5l = this.h5l,\n      h6h = this.h6h, h6l = this.h6l, h7h = this.h7h, h7l = this.h7l,\n      bits = this.bits;\n\n    var arr = [\n      (h0h >> 24) & 0xFF, (h0h >> 16) & 0xFF, (h0h >> 8) & 0xFF, h0h & 0xFF,\n      (h0l >> 24) & 0xFF, (h0l >> 16) & 0xFF, (h0l >> 8) & 0xFF, h0l & 0xFF,\n      (h1h >> 24) & 0xFF, (h1h >> 16) & 0xFF, (h1h >> 8) & 0xFF, h1h & 0xFF,\n      (h1l >> 24) & 0xFF, (h1l >> 16) & 0xFF, (h1l >> 8) & 0xFF, h1l & 0xFF,\n      (h2h >> 24) & 0xFF, (h2h >> 16) & 0xFF, (h2h >> 8) & 0xFF, h2h & 0xFF,\n      (h2l >> 24) & 0xFF, (h2l >> 16) & 0xFF, (h2l >> 8) & 0xFF, h2l & 0xFF,\n      (h3h >> 24) & 0xFF, (h3h >> 16) & 0xFF, (h3h >> 8) & 0xFF, h3h & 0xFF\n    ];\n\n    if (bits >= 256) {\n      arr.push((h3l >> 24) & 0xFF, (h3l >> 16) & 0xFF, (h3l >> 8) & 0xFF, h3l & 0xFF);\n    }\n    if (bits >= 384) {\n      arr.push(\n        (h4h >> 24) & 0xFF, (h4h >> 16) & 0xFF, (h4h >> 8) & 0xFF, h4h & 0xFF,\n        (h4l >> 24) & 0xFF, (h4l >> 16) & 0xFF, (h4l >> 8) & 0xFF, h4l & 0xFF,\n        (h5h >> 24) & 0xFF, (h5h >> 16) & 0xFF, (h5h >> 8) & 0xFF, h5h & 0xFF,\n        (h5l >> 24) & 0xFF, (h5l >> 16) & 0xFF, (h5l >> 8) & 0xFF, h5l & 0xFF\n      );\n    }\n    if (bits == 512) {\n      arr.push(\n        (h6h >> 24) & 0xFF, (h6h >> 16) & 0xFF, (h6h >> 8) & 0xFF, h6h & 0xFF,\n        (h6l >> 24) & 0xFF, (h6l >> 16) & 0xFF, (h6l >> 8) & 0xFF, h6l & 0xFF,\n        (h7h >> 24) & 0xFF, (h7h >> 16) & 0xFF, (h7h >> 8) & 0xFF, h7h & 0xFF,\n        (h7l >> 24) & 0xFF, (h7l >> 16) & 0xFF, (h7l >> 8) & 0xFF, h7l & 0xFF\n      );\n    }\n    return arr;\n  };\n\n  Sha512.prototype.array = Sha512.prototype.digest;\n\n  Sha512.prototype.arrayBuffer = function () {\n    this.finalize();\n\n    var bits = this.bits;\n    var buffer = new ArrayBuffer(bits / 8);\n    var dataView = new DataView(buffer);\n    dataView.setUint32(0, this.h0h);\n    dataView.setUint32(4, this.h0l);\n    dataView.setUint32(8, this.h1h);\n    dataView.setUint32(12, this.h1l);\n    dataView.setUint32(16, this.h2h);\n    dataView.setUint32(20, this.h2l);\n    dataView.setUint32(24, this.h3h);\n\n    if (bits >= 256) {\n      dataView.setUint32(28, this.h3l);\n    }\n    if (bits >= 384) {\n      dataView.setUint32(32, this.h4h);\n      dataView.setUint32(36, this.h4l);\n      dataView.setUint32(40, this.h5h);\n      dataView.setUint32(44, this.h5l);\n    }\n    if (bits == 512) {\n      dataView.setUint32(48, this.h6h);\n      dataView.setUint32(52, this.h6l);\n      dataView.setUint32(56, this.h7h);\n      dataView.setUint32(60, this.h7l);\n    }\n    return buffer;\n  };\n\n  Sha512.prototype.clone = function () {\n    var hash = new Sha512(this.bits, false);\n    this.copyTo(hash);\n    return hash;\n  };\n\n  Sha512.prototype.copyTo = function (hash) {\n    var i = 0, attrs = [\n      'h0h', 'h0l', 'h1h', 'h1l', 'h2h', 'h2l', 'h3h', 'h3l', 'h4h', 'h4l', 'h5h', 'h5l', 'h6h', 'h6l', 'h7h', 'h7l',\n      'start', 'bytes', 'hBytes', 'finalized', 'hashed', 'lastByteIndex'\n    ];\n    for (i = 0; i < attrs.length; ++i) {\n      hash[attrs[i]] = this[attrs[i]];\n    }\n    for (i = 0; i < this.blocks.length; ++i) {\n      hash.blocks[i] = this.blocks[i];\n    }\n  };\n\n  function HmacSha512(key, bits, sharedMemory) {\n    var notString, type = typeof key;\n    if (type !== 'string') {\n      if (type === 'object') {\n        if (key === null) {\n          throw new Error(INPUT_ERROR);\n        } else if (ARRAY_BUFFER && key.constructor === ArrayBuffer) {\n          key = new Uint8Array(key);\n        } else if (!Array.isArray(key)) {\n          if (!ARRAY_BUFFER || !ArrayBuffer.isView(key)) {\n            throw new Error(INPUT_ERROR);\n          }\n        }\n      } else {\n        throw new Error(INPUT_ERROR);\n      }\n      notString = true;\n    }\n    var length = key.length;\n    if (!notString) {\n      var bytes = [], length = key.length, index = 0, code;\n      for (var i = 0; i < length; ++i) {\n        code = key.charCodeAt(i);\n        if (code < 0x80) {\n          bytes[index++] = code;\n        } else if (code < 0x800) {\n          bytes[index++] = (0xc0 | (code >> 6));\n          bytes[index++] = (0x80 | (code & 0x3f));\n        } else if (code < 0xd800 || code >= 0xe000) {\n          bytes[index++] = (0xe0 | (code >> 12));\n          bytes[index++] = (0x80 | ((code >> 6) & 0x3f));\n          bytes[index++] = (0x80 | (code & 0x3f));\n        } else {\n          code = 0x10000 + (((code & 0x3ff) << 10) | (key.charCodeAt(++i) & 0x3ff));\n          bytes[index++] = (0xf0 | (code >> 18));\n          bytes[index++] = (0x80 | ((code >> 12) & 0x3f));\n          bytes[index++] = (0x80 | ((code >> 6) & 0x3f));\n          bytes[index++] = (0x80 | (code & 0x3f));\n        }\n      }\n      key = bytes;\n    }\n\n    if (key.length > 128) {\n      key = (new Sha512(bits, true)).update(key).array();\n    }\n\n    var oKeyPad = [], iKeyPad = [];\n    for (var i = 0; i < 128; ++i) {\n      var b = key[i] || 0;\n      oKeyPad[i] = 0x5c ^ b;\n      iKeyPad[i] = 0x36 ^ b;\n    }\n\n    Sha512.call(this, bits, sharedMemory);\n\n    this.update(iKeyPad);\n    this.oKeyPad = oKeyPad;\n    this.inner = true;\n    this.sharedMemory = sharedMemory;\n  }\n  HmacSha512.prototype = new Sha512();\n\n  HmacSha512.prototype.finalize = function () {\n    Sha512.prototype.finalize.call(this);\n    if (this.inner) {\n      this.inner = false;\n      var innerHash = this.array();\n      Sha512.call(this, this.bits, this.sharedMemory);\n      this.update(this.oKeyPad);\n      this.update(innerHash);\n      Sha512.prototype.finalize.call(this);\n    }\n  };\n\n  HmacSha512.prototype.clone = function () {\n    var hash = new HmacSha512([], this.bits, false);\n    this.copyTo(hash);\n    hash.inner = this.inner;\n    for (var i = 0; i < this.oKeyPad.length; ++i) {\n      hash.oKeyPad[i] = this.oKeyPad[i];\n    }\n    return hash;\n  };\n\n  var exports = createMethod(512);\n  exports.sha512 = exports;\n  exports.sha384 = createMethod(384);\n  exports.sha512_256 = createMethod(256);\n  exports.sha512_224 = createMethod(224);\n  exports.sha512.hmac = createHmacMethod(512);\n  exports.sha384.hmac = createHmacMethod(384);\n  exports.sha512_256.hmac = createHmacMethod(256);\n  exports.sha512_224.hmac = createHmacMethod(224);\n\n  if (COMMON_JS) {\n    module.exports = exports;\n  } else {\n    root.sha512 = exports.sha512;\n    root.sha384 = exports.sha384;\n    root.sha512_256 = exports.sha512_256;\n    root.sha512_224 = exports.sha512_224;\n    if (AMD) {\n      define(function () {\n        return exports;\n      });\n    }\n  }\n})();\n","import nacl from 'tweetnacl';\nimport sha512 from 'js-sha512';\n\nexport function genericHash(arr: sha512.Message) {\n  return sha512.sha512_256.array(arr);\n}\n\nexport function randomBytes(length: number) {\n  return nacl.randomBytes(length);\n}\n\nexport function keyPairFromSeed(seed: Uint8Array) {\n  return nacl.sign.keyPair.fromSeed(seed);\n}\n\nexport function keyPair() {\n  const seed = randomBytes(nacl.box.secretKeyLength);\n  return keyPairFromSeed(seed);\n}\n\nexport function isValidSignatureLength(len: number) {\n  return len === nacl.sign.signatureLength;\n}\n\nexport function keyPairFromSecretKey(sk: Uint8Array) {\n  return nacl.sign.keyPair.fromSecretKey(sk);\n}\n\nexport function sign(msg: Uint8Array, secretKey: Uint8Array) {\n  return nacl.sign.detached(msg, secretKey);\n}\n\nexport function bytesEqual(a: Uint8Array, b: Uint8Array) {\n  return nacl.verify(a, b);\n}\n\nexport function verify(\n  message: Uint8Array,\n  signature: Uint8Array,\n  verifyKey: Uint8Array\n) {\n  return nacl.sign.detached.verify(message, signature, verifyKey);\n}\n\n// constants\nexport const PUBLIC_KEY_LENGTH = nacl.sign.publicKeyLength;\nexport const SECRET_KEY_LENGTH = nacl.sign.secretKeyLength;\nexport const HASH_BYTES_LENGTH = 32;\nexport const SEED_BTYES_LENGTH = 32;\n","/*\n * [hi-base32]{@link https://github.com/emn178/hi-base32}\n *\n * @version 0.5.0\n * @author Chen, Yi-Cyuan [emn178@gmail.com]\n * @copyright Chen, Yi-Cyuan 2015-2018\n * @license MIT\n */\n/*jslint bitwise: true */\n(function () {\n  'use strict';\n\n  var root = typeof window === 'object' ? window : {};\n  var NODE_JS = !root.HI_BASE32_NO_NODE_JS && typeof process === 'object' && process.versions && process.versions.node;\n  if (NODE_JS) {\n    root = global;\n  }\n  var COMMON_JS = !root.HI_BASE32_NO_COMMON_JS && typeof module === 'object' && module.exports;\n  var AMD = typeof define === 'function' && define.amd;\n  var BASE32_ENCODE_CHAR = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ234567'.split('');\n  var BASE32_DECODE_CHAR = {\n    'A': 0, 'B': 1, 'C': 2, 'D': 3, 'E': 4, 'F': 5, 'G': 6, 'H': 7, 'I': 8,\n    'J': 9, 'K': 10, 'L': 11, 'M': 12, 'N': 13, 'O': 14, 'P': 15, 'Q': 16,\n    'R': 17, 'S': 18, 'T': 19, 'U': 20, 'V': 21, 'W': 22, 'X': 23, 'Y': 24,\n    'Z': 25, '2': 26, '3': 27, '4': 28, '5': 29, '6': 30, '7': 31\n  };\n\n  var blocks = [0, 0, 0, 0, 0, 0, 0, 0];\n\n  var throwInvalidUtf8 = function (position, partial) {\n    if (partial.length > 10) {\n      partial = '...' + partial.substr(-10);\n    }\n    var err = new Error('Decoded data is not valid UTF-8.'\n      + ' Maybe try base32.decode.asBytes()?'\n      + ' Partial data after reading ' + position + ' bytes: ' + partial + ' <-');\n    err.position = position;\n    throw err;\n  };\n\n  var toUtf8String = function (bytes) {\n    var str = '', length = bytes.length, i = 0, followingChars = 0, b, c;\n    while (i < length) {\n      b = bytes[i++];\n      if (b <= 0x7F) {\n        str += String.fromCharCode(b);\n        continue;\n      } else if (b > 0xBF && b <= 0xDF) {\n        c = b & 0x1F;\n        followingChars = 1;\n      } else if (b <= 0xEF) {\n        c = b & 0x0F;\n        followingChars = 2;\n      } else if (b <= 0xF7) {\n        c = b & 0x07;\n        followingChars = 3;\n      } else {\n        throwInvalidUtf8(i, str);\n      }\n\n      for (var j = 0; j < followingChars; ++j) {\n        b = bytes[i++];\n        if (b < 0x80 || b > 0xBF) {\n          throwInvalidUtf8(i, str);\n        }\n        c <<= 6;\n        c += b & 0x3F;\n      }\n      if (c >= 0xD800 && c <= 0xDFFF) {\n        throwInvalidUtf8(i, str);\n      }\n      if (c > 0x10FFFF) {\n        throwInvalidUtf8(i, str);\n      }\n\n      if (c <= 0xFFFF) {\n        str += String.fromCharCode(c);\n      } else {\n        c -= 0x10000;\n        str += String.fromCharCode((c >> 10) + 0xD800);\n        str += String.fromCharCode((c & 0x3FF) + 0xDC00);\n      }\n    }\n    return str;\n  };\n\n  var decodeAsBytes = function (base32Str) {\n    if (base32Str === '') {\n      return [];\n    } else if (!/^[A-Z2-7=]+$/.test(base32Str)) {\n      throw new Error('Invalid base32 characters');\n    }\n    base32Str = base32Str.replace(/=/g, '');\n    var v1, v2, v3, v4, v5, v6, v7, v8, bytes = [], index = 0, length = base32Str.length;\n\n    // 4 char to 3 bytes\n    for (var i = 0, count = length >> 3 << 3; i < count;) {\n      v1 = BASE32_DECODE_CHAR[base32Str.charAt(i++)];\n      v2 = BASE32_DECODE_CHAR[base32Str.charAt(i++)];\n      v3 = BASE32_DECODE_CHAR[base32Str.charAt(i++)];\n      v4 = BASE32_DECODE_CHAR[base32Str.charAt(i++)];\n      v5 = BASE32_DECODE_CHAR[base32Str.charAt(i++)];\n      v6 = BASE32_DECODE_CHAR[base32Str.charAt(i++)];\n      v7 = BASE32_DECODE_CHAR[base32Str.charAt(i++)];\n      v8 = BASE32_DECODE_CHAR[base32Str.charAt(i++)];\n      bytes[index++] = (v1 << 3 | v2 >>> 2) & 255;\n      bytes[index++] = (v2 << 6 | v3 << 1 | v4 >>> 4) & 255;\n      bytes[index++] = (v4 << 4 | v5 >>> 1) & 255;\n      bytes[index++] = (v5 << 7 | v6 << 2 | v7 >>> 3) & 255;\n      bytes[index++] = (v7 << 5 | v8) & 255;\n    }\n\n    // remain bytes\n    var remain = length - count;\n    if (remain === 2) {\n      v1 = BASE32_DECODE_CHAR[base32Str.charAt(i++)];\n      v2 = BASE32_DECODE_CHAR[base32Str.charAt(i++)];\n      bytes[index++] = (v1 << 3 | v2 >>> 2) & 255;\n    } else if (remain === 4) {\n      v1 = BASE32_DECODE_CHAR[base32Str.charAt(i++)];\n      v2 = BASE32_DECODE_CHAR[base32Str.charAt(i++)];\n      v3 = BASE32_DECODE_CHAR[base32Str.charAt(i++)];\n      v4 = BASE32_DECODE_CHAR[base32Str.charAt(i++)];\n      bytes[index++] = (v1 << 3 | v2 >>> 2) & 255;\n      bytes[index++] = (v2 << 6 | v3 << 1 | v4 >>> 4) & 255;\n    } else if (remain === 5) {\n      v1 = BASE32_DECODE_CHAR[base32Str.charAt(i++)];\n      v2 = BASE32_DECODE_CHAR[base32Str.charAt(i++)];\n      v3 = BASE32_DECODE_CHAR[base32Str.charAt(i++)];\n      v4 = BASE32_DECODE_CHAR[base32Str.charAt(i++)];\n      v5 = BASE32_DECODE_CHAR[base32Str.charAt(i++)];\n      bytes[index++] = (v1 << 3 | v2 >>> 2) & 255;\n      bytes[index++] = (v2 << 6 | v3 << 1 | v4 >>> 4) & 255;\n      bytes[index++] = (v4 << 4 | v5 >>> 1) & 255;\n    } else if (remain === 7) {\n      v1 = BASE32_DECODE_CHAR[base32Str.charAt(i++)];\n      v2 = BASE32_DECODE_CHAR[base32Str.charAt(i++)];\n      v3 = BASE32_DECODE_CHAR[base32Str.charAt(i++)];\n      v4 = BASE32_DECODE_CHAR[base32Str.charAt(i++)];\n      v5 = BASE32_DECODE_CHAR[base32Str.charAt(i++)];\n      v6 = BASE32_DECODE_CHAR[base32Str.charAt(i++)];\n      v7 = BASE32_DECODE_CHAR[base32Str.charAt(i++)];\n      bytes[index++] = (v1 << 3 | v2 >>> 2) & 255;\n      bytes[index++] = (v2 << 6 | v3 << 1 | v4 >>> 4) & 255;\n      bytes[index++] = (v4 << 4 | v5 >>> 1) & 255;\n      bytes[index++] = (v5 << 7 | v6 << 2 | v7 >>> 3) & 255;\n    }\n    return bytes;\n  };\n\n  var encodeAscii = function (str) {\n    var v1, v2, v3, v4, v5, base32Str = '', length = str.length;\n    for (var i = 0, count = parseInt(length / 5) * 5; i < count;) {\n      v1 = str.charCodeAt(i++);\n      v2 = str.charCodeAt(i++);\n      v3 = str.charCodeAt(i++);\n      v4 = str.charCodeAt(i++);\n      v5 = str.charCodeAt(i++);\n      base32Str += BASE32_ENCODE_CHAR[v1 >>> 3] +\n        BASE32_ENCODE_CHAR[(v1 << 2 | v2 >>> 6) & 31] +\n        BASE32_ENCODE_CHAR[(v2 >>> 1) & 31] +\n        BASE32_ENCODE_CHAR[(v2 << 4 | v3 >>> 4) & 31] +\n        BASE32_ENCODE_CHAR[(v3 << 1 | v4 >>> 7) & 31] +\n        BASE32_ENCODE_CHAR[(v4 >>> 2) & 31] +\n        BASE32_ENCODE_CHAR[(v4 << 3 | v5 >>> 5) & 31] +\n        BASE32_ENCODE_CHAR[v5 & 31];\n    }\n\n    // remain char\n    var remain = length - count;\n    if (remain === 1) {\n      v1 = str.charCodeAt(i);\n      base32Str += BASE32_ENCODE_CHAR[v1 >>> 3] +\n        BASE32_ENCODE_CHAR[(v1 << 2) & 31] +\n        '======';\n    } else if (remain === 2) {\n      v1 = str.charCodeAt(i++);\n      v2 = str.charCodeAt(i);\n      base32Str += BASE32_ENCODE_CHAR[v1 >>> 3] +\n        BASE32_ENCODE_CHAR[(v1 << 2 | v2 >>> 6) & 31] +\n        BASE32_ENCODE_CHAR[(v2 >>> 1) & 31] +\n        BASE32_ENCODE_CHAR[(v2 << 4) & 31] +\n        '====';\n    } else if (remain === 3) {\n      v1 = str.charCodeAt(i++);\n      v2 = str.charCodeAt(i++);\n      v3 = str.charCodeAt(i);\n      base32Str += BASE32_ENCODE_CHAR[v1 >>> 3] +\n        BASE32_ENCODE_CHAR[(v1 << 2 | v2 >>> 6) & 31] +\n        BASE32_ENCODE_CHAR[(v2 >>> 1) & 31] +\n        BASE32_ENCODE_CHAR[(v2 << 4 | v3 >>> 4) & 31] +\n        BASE32_ENCODE_CHAR[(v3 << 1) & 31] +\n        '===';\n    } else if (remain === 4) {\n      v1 = str.charCodeAt(i++);\n      v2 = str.charCodeAt(i++);\n      v3 = str.charCodeAt(i++);\n      v4 = str.charCodeAt(i);\n      base32Str += BASE32_ENCODE_CHAR[v1 >>> 3] +\n        BASE32_ENCODE_CHAR[(v1 << 2 | v2 >>> 6) & 31] +\n        BASE32_ENCODE_CHAR[(v2 >>> 1) & 31] +\n        BASE32_ENCODE_CHAR[(v2 << 4 | v3 >>> 4) & 31] +\n        BASE32_ENCODE_CHAR[(v3 << 1 | v4 >>> 7) & 31] +\n        BASE32_ENCODE_CHAR[(v4 >>> 2) & 31] +\n        BASE32_ENCODE_CHAR[(v4 << 3) & 31] +\n        '=';\n    }\n    return base32Str;\n  };\n\n  var encodeUtf8 = function (str) {\n    var v1, v2, v3, v4, v5, code, end = false, base32Str = '',\n      index = 0, i, start = 0, bytes = 0, length = str.length;\n      if (str === '') {\n        return base32Str;\n      }\n    do {\n      blocks[0] = blocks[5];\n      blocks[1] = blocks[6];\n      blocks[2] = blocks[7];\n      for (i = start; index < length && i < 5; ++index) {\n        code = str.charCodeAt(index);\n        if (code < 0x80) {\n          blocks[i++] = code;\n        } else if (code < 0x800) {\n          blocks[i++] = 0xc0 | (code >> 6);\n          blocks[i++] = 0x80 | (code & 0x3f);\n        } else if (code < 0xd800 || code >= 0xe000) {\n          blocks[i++] = 0xe0 | (code >> 12);\n          blocks[i++] = 0x80 | ((code >> 6) & 0x3f);\n          blocks[i++] = 0x80 | (code & 0x3f);\n        } else {\n          code = 0x10000 + (((code & 0x3ff) << 10) | (str.charCodeAt(++index) & 0x3ff));\n          blocks[i++] = 0xf0 | (code >> 18);\n          blocks[i++] = 0x80 | ((code >> 12) & 0x3f);\n          blocks[i++] = 0x80 | ((code >> 6) & 0x3f);\n          blocks[i++] = 0x80 | (code & 0x3f);\n        }\n      }\n      bytes += i - start;\n      start = i - 5;\n      if (index === length) {\n        ++index;\n      }\n      if (index > length && i < 6) {\n        end = true;\n      }\n      v1 = blocks[0];\n      if (i > 4) {\n        v2 = blocks[1];\n        v3 = blocks[2];\n        v4 = blocks[3];\n        v5 = blocks[4];\n        base32Str += BASE32_ENCODE_CHAR[v1 >>> 3] +\n          BASE32_ENCODE_CHAR[(v1 << 2 | v2 >>> 6) & 31] +\n          BASE32_ENCODE_CHAR[(v2 >>> 1) & 31] +\n          BASE32_ENCODE_CHAR[(v2 << 4 | v3 >>> 4) & 31] +\n          BASE32_ENCODE_CHAR[(v3 << 1 | v4 >>> 7) & 31] +\n          BASE32_ENCODE_CHAR[(v4 >>> 2) & 31] +\n          BASE32_ENCODE_CHAR[(v4 << 3 | v5 >>> 5) & 31] +\n          BASE32_ENCODE_CHAR[v5 & 31];\n      } else if (i === 1) {\n        base32Str += BASE32_ENCODE_CHAR[v1 >>> 3] +\n          BASE32_ENCODE_CHAR[(v1 << 2) & 31] +\n          '======';\n      } else if (i === 2) {\n        v2 = blocks[1];\n        base32Str += BASE32_ENCODE_CHAR[v1 >>> 3] +\n          BASE32_ENCODE_CHAR[(v1 << 2 | v2 >>> 6) & 31] +\n          BASE32_ENCODE_CHAR[(v2 >>> 1) & 31] +\n          BASE32_ENCODE_CHAR[(v2 << 4) & 31] +\n          '====';\n      } else if (i === 3) {\n        v2 = blocks[1];\n        v3 = blocks[2];\n        base32Str += BASE32_ENCODE_CHAR[v1 >>> 3] +\n          BASE32_ENCODE_CHAR[(v1 << 2 | v2 >>> 6) & 31] +\n          BASE32_ENCODE_CHAR[(v2 >>> 1) & 31] +\n          BASE32_ENCODE_CHAR[(v2 << 4 | v3 >>> 4) & 31] +\n          BASE32_ENCODE_CHAR[(v3 << 1) & 31] +\n          '===';\n      } else {\n        v2 = blocks[1];\n        v3 = blocks[2];\n        v4 = blocks[3];\n        base32Str += BASE32_ENCODE_CHAR[v1 >>> 3] +\n          BASE32_ENCODE_CHAR[(v1 << 2 | v2 >>> 6) & 31] +\n          BASE32_ENCODE_CHAR[(v2 >>> 1) & 31] +\n          BASE32_ENCODE_CHAR[(v2 << 4 | v3 >>> 4) & 31] +\n          BASE32_ENCODE_CHAR[(v3 << 1 | v4 >>> 7) & 31] +\n          BASE32_ENCODE_CHAR[(v4 >>> 2) & 31] +\n          BASE32_ENCODE_CHAR[(v4 << 3) & 31] +\n          '=';\n      }\n    } while (!end);\n    return base32Str;\n  };\n\n  var encodeBytes = function (bytes) {\n    var v1, v2, v3, v4, v5, base32Str = '', length = bytes.length;\n    for (var i = 0, count = parseInt(length / 5) * 5; i < count;) {\n      v1 = bytes[i++];\n      v2 = bytes[i++];\n      v3 = bytes[i++];\n      v4 = bytes[i++];\n      v5 = bytes[i++];\n      base32Str += BASE32_ENCODE_CHAR[v1 >>> 3] +\n        BASE32_ENCODE_CHAR[(v1 << 2 | v2 >>> 6) & 31] +\n        BASE32_ENCODE_CHAR[(v2 >>> 1) & 31] +\n        BASE32_ENCODE_CHAR[(v2 << 4 | v3 >>> 4) & 31] +\n        BASE32_ENCODE_CHAR[(v3 << 1 | v4 >>> 7) & 31] +\n        BASE32_ENCODE_CHAR[(v4 >>> 2) & 31] +\n        BASE32_ENCODE_CHAR[(v4 << 3 | v5 >>> 5) & 31] +\n        BASE32_ENCODE_CHAR[v5 & 31];\n    }\n\n    // remain char\n    var remain = length - count;\n    if (remain === 1) {\n      v1 = bytes[i];\n      base32Str += BASE32_ENCODE_CHAR[v1 >>> 3] +\n        BASE32_ENCODE_CHAR[(v1 << 2) & 31] +\n        '======';\n    } else if (remain === 2) {\n      v1 = bytes[i++];\n      v2 = bytes[i];\n      base32Str += BASE32_ENCODE_CHAR[v1 >>> 3] +\n        BASE32_ENCODE_CHAR[(v1 << 2 | v2 >>> 6) & 31] +\n        BASE32_ENCODE_CHAR[(v2 >>> 1) & 31] +\n        BASE32_ENCODE_CHAR[(v2 << 4) & 31] +\n        '====';\n    } else if (remain === 3) {\n      v1 = bytes[i++];\n      v2 = bytes[i++];\n      v3 = bytes[i];\n      base32Str += BASE32_ENCODE_CHAR[v1 >>> 3] +\n        BASE32_ENCODE_CHAR[(v1 << 2 | v2 >>> 6) & 31] +\n        BASE32_ENCODE_CHAR[(v2 >>> 1) & 31] +\n        BASE32_ENCODE_CHAR[(v2 << 4 | v3 >>> 4) & 31] +\n        BASE32_ENCODE_CHAR[(v3 << 1) & 31] +\n        '===';\n    } else if (remain === 4) {\n      v1 = bytes[i++];\n      v2 = bytes[i++];\n      v3 = bytes[i++];\n      v4 = bytes[i];\n      base32Str += BASE32_ENCODE_CHAR[v1 >>> 3] +\n        BASE32_ENCODE_CHAR[(v1 << 2 | v2 >>> 6) & 31] +\n        BASE32_ENCODE_CHAR[(v2 >>> 1) & 31] +\n        BASE32_ENCODE_CHAR[(v2 << 4 | v3 >>> 4) & 31] +\n        BASE32_ENCODE_CHAR[(v3 << 1 | v4 >>> 7) & 31] +\n        BASE32_ENCODE_CHAR[(v4 >>> 2) & 31] +\n        BASE32_ENCODE_CHAR[(v4 << 3) & 31] +\n        '=';\n    }\n    return base32Str;\n  };\n\n  var encode = function (input, asciiOnly) {\n    var notString = typeof(input) !== 'string';\n    if (notString && input.constructor === ArrayBuffer) {\n      input = new Uint8Array(input);\n    }\n    if (notString) {\n      return encodeBytes(input);\n    } else if (asciiOnly) {\n      return encodeAscii(input);\n    } else {\n      return encodeUtf8(input);\n    }\n  };\n\n  var decode = function (base32Str, asciiOnly) {\n    if (!asciiOnly) {\n      return toUtf8String(decodeAsBytes(base32Str));\n    }\n    if (base32Str === '') {\n      return '';\n    } else if (!/^[A-Z2-7=]+$/.test(base32Str)) {\n      throw new Error('Invalid base32 characters');\n    }\n    var v1, v2, v3, v4, v5, v6, v7, v8, str = '', length = base32Str.indexOf('=');\n    if (length === -1) {\n      length = base32Str.length;\n    }\n\n    // 8 char to 5 bytes\n    for (var i = 0, count = length >> 3 << 3; i < count;) {\n      v1 = BASE32_DECODE_CHAR[base32Str.charAt(i++)];\n      v2 = BASE32_DECODE_CHAR[base32Str.charAt(i++)];\n      v3 = BASE32_DECODE_CHAR[base32Str.charAt(i++)];\n      v4 = BASE32_DECODE_CHAR[base32Str.charAt(i++)];\n      v5 = BASE32_DECODE_CHAR[base32Str.charAt(i++)];\n      v6 = BASE32_DECODE_CHAR[base32Str.charAt(i++)];\n      v7 = BASE32_DECODE_CHAR[base32Str.charAt(i++)];\n      v8 = BASE32_DECODE_CHAR[base32Str.charAt(i++)];\n      str += String.fromCharCode((v1 << 3 | v2 >>> 2) & 255) +\n        String.fromCharCode((v2 << 6 | v3 << 1 | v4 >>> 4) & 255) +\n        String.fromCharCode((v4 << 4 | v5 >>> 1) & 255) +\n        String.fromCharCode((v5 << 7 | v6 << 2 | v7 >>> 3) & 255) +\n        String.fromCharCode((v7 << 5 | v8) & 255);\n    }\n\n    // remain bytes\n    var remain = length - count;\n    if (remain === 2) {\n      v1 = BASE32_DECODE_CHAR[base32Str.charAt(i++)];\n      v2 = BASE32_DECODE_CHAR[base32Str.charAt(i++)];\n      str += String.fromCharCode((v1 << 3 | v2 >>> 2) & 255);\n    } else if (remain === 4) {\n      v1 = BASE32_DECODE_CHAR[base32Str.charAt(i++)];\n      v2 = BASE32_DECODE_CHAR[base32Str.charAt(i++)];\n      v3 = BASE32_DECODE_CHAR[base32Str.charAt(i++)];\n      v4 = BASE32_DECODE_CHAR[base32Str.charAt(i++)];\n      str += String.fromCharCode((v1 << 3 | v2 >>> 2) & 255) +\n        String.fromCharCode((v2 << 6 | v3 << 1 | v4 >>> 4) & 255);\n    } else if (remain === 5) {\n      v1 = BASE32_DECODE_CHAR[base32Str.charAt(i++)];\n      v2 = BASE32_DECODE_CHAR[base32Str.charAt(i++)];\n      v3 = BASE32_DECODE_CHAR[base32Str.charAt(i++)];\n      v4 = BASE32_DECODE_CHAR[base32Str.charAt(i++)];\n      v5 = BASE32_DECODE_CHAR[base32Str.charAt(i++)];\n      str += String.fromCharCode((v1 << 3 | v2 >>> 2) & 255) +\n        String.fromCharCode((v2 << 6 | v3 << 1 | v4 >>> 4) & 255) +\n        String.fromCharCode((v4 << 4 | v5 >>> 1) & 255);\n    } else if (remain === 7) {\n      v1 = BASE32_DECODE_CHAR[base32Str.charAt(i++)];\n      v2 = BASE32_DECODE_CHAR[base32Str.charAt(i++)];\n      v3 = BASE32_DECODE_CHAR[base32Str.charAt(i++)];\n      v4 = BASE32_DECODE_CHAR[base32Str.charAt(i++)];\n      v5 = BASE32_DECODE_CHAR[base32Str.charAt(i++)];\n      v6 = BASE32_DECODE_CHAR[base32Str.charAt(i++)];\n      v7 = BASE32_DECODE_CHAR[base32Str.charAt(i++)];\n      str += String.fromCharCode((v1 << 3 | v2 >>> 2) & 255) +\n        String.fromCharCode((v2 << 6 | v3 << 1 | v4 >>> 4) & 255) +\n        String.fromCharCode((v4 << 4 | v5 >>> 1) & 255) +\n        String.fromCharCode((v5 << 7 | v6 << 2 | v7 >>> 3) & 255);\n    }\n    return str;\n  };\n\n  var exports = {\n    encode: encode,\n    decode: decode\n  };\n  decode.asBytes = decodeAsBytes;\n\n  if (COMMON_JS) {\n    module.exports = exports;\n  } else {\n    root.base32 = exports;\n    if (AMD) {\n      define(function() {\n        return exports;\n      });\n    }\n  }\n})();\n",";(function (globalObject) {\r\n  'use strict';\r\n\r\n/*\r\n *      bignumber.js v9.1.1\r\n *      A JavaScript library for arbitrary-precision arithmetic.\r\n *      https://github.com/MikeMcl/bignumber.js\r\n *      Copyright (c) 2022 Michael Mclaughlin <M8ch88l@gmail.com>\r\n *      MIT Licensed.\r\n *\r\n *      BigNumber.prototype methods     |  BigNumber methods\r\n *                                      |\r\n *      absoluteValue            abs    |  clone\r\n *      comparedTo                      |  config               set\r\n *      decimalPlaces            dp     |      DECIMAL_PLACES\r\n *      dividedBy                div    |      ROUNDING_MODE\r\n *      dividedToIntegerBy       idiv   |      EXPONENTIAL_AT\r\n *      exponentiatedBy          pow    |      RANGE\r\n *      integerValue                    |      CRYPTO\r\n *      isEqualTo                eq     |      MODULO_MODE\r\n *      isFinite                        |      POW_PRECISION\r\n *      isGreaterThan            gt     |      FORMAT\r\n *      isGreaterThanOrEqualTo   gte    |      ALPHABET\r\n *      isInteger                       |  isBigNumber\r\n *      isLessThan               lt     |  maximum              max\r\n *      isLessThanOrEqualTo      lte    |  minimum              min\r\n *      isNaN                           |  random\r\n *      isNegative                      |  sum\r\n *      isPositive                      |\r\n *      isZero                          |\r\n *      minus                           |\r\n *      modulo                   mod    |\r\n *      multipliedBy             times  |\r\n *      negated                         |\r\n *      plus                            |\r\n *      precision                sd     |\r\n *      shiftedBy                       |\r\n *      squareRoot               sqrt   |\r\n *      toExponential                   |\r\n *      toFixed                         |\r\n *      toFormat                        |\r\n *      toFraction                      |\r\n *      toJSON                          |\r\n *      toNumber                        |\r\n *      toPrecision                     |\r\n *      toString                        |\r\n *      valueOf                         |\r\n *\r\n */\r\n\r\n\r\n  var BigNumber,\r\n    isNumeric = /^-?(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:e[+-]?\\d+)?$/i,\r\n    mathceil = Math.ceil,\r\n    mathfloor = Math.floor,\r\n\r\n    bignumberError = '[BigNumber Error] ',\r\n    tooManyDigits = bignumberError + 'Number primitive has more than 15 significant digits: ',\r\n\r\n    BASE = 1e14,\r\n    LOG_BASE = 14,\r\n    MAX_SAFE_INTEGER = 0x1fffffffffffff,         // 2^53 - 1\r\n    // MAX_INT32 = 0x7fffffff,                   // 2^31 - 1\r\n    POWS_TEN = [1, 10, 100, 1e3, 1e4, 1e5, 1e6, 1e7, 1e8, 1e9, 1e10, 1e11, 1e12, 1e13],\r\n    SQRT_BASE = 1e7,\r\n\r\n    // EDITABLE\r\n    // The limit on the value of DECIMAL_PLACES, TO_EXP_NEG, TO_EXP_POS, MIN_EXP, MAX_EXP, and\r\n    // the arguments to toExponential, toFixed, toFormat, and toPrecision.\r\n    MAX = 1E9;                                   // 0 to MAX_INT32\r\n\r\n\r\n  /*\r\n   * Create and return a BigNumber constructor.\r\n   */\r\n  function clone(configObject) {\r\n    var div, convertBase, parseNumeric,\r\n      P = BigNumber.prototype = { constructor: BigNumber, toString: null, valueOf: null },\r\n      ONE = new BigNumber(1),\r\n\r\n\r\n      //----------------------------- EDITABLE CONFIG DEFAULTS -------------------------------\r\n\r\n\r\n      // The default values below must be integers within the inclusive ranges stated.\r\n      // The values can also be changed at run-time using BigNumber.set.\r\n\r\n      // The maximum number of decimal places for operations involving division.\r\n      DECIMAL_PLACES = 20,                     // 0 to MAX\r\n\r\n      // The rounding mode used when rounding to the above decimal places, and when using\r\n      // toExponential, toFixed, toFormat and toPrecision, and round (default value).\r\n      // UP         0 Away from zero.\r\n      // DOWN       1 Towards zero.\r\n      // CEIL       2 Towards +Infinity.\r\n      // FLOOR      3 Towards -Infinity.\r\n      // HALF_UP    4 Towards nearest neighbour. If equidistant, up.\r\n      // HALF_DOWN  5 Towards nearest neighbour. If equidistant, down.\r\n      // HALF_EVEN  6 Towards nearest neighbour. If equidistant, towards even neighbour.\r\n      // HALF_CEIL  7 Towards nearest neighbour. If equidistant, towards +Infinity.\r\n      // HALF_FLOOR 8 Towards nearest neighbour. If equidistant, towards -Infinity.\r\n      ROUNDING_MODE = 4,                       // 0 to 8\r\n\r\n      // EXPONENTIAL_AT : [TO_EXP_NEG , TO_EXP_POS]\r\n\r\n      // The exponent value at and beneath which toString returns exponential notation.\r\n      // Number type: -7\r\n      TO_EXP_NEG = -7,                         // 0 to -MAX\r\n\r\n      // The exponent value at and above which toString returns exponential notation.\r\n      // Number type: 21\r\n      TO_EXP_POS = 21,                         // 0 to MAX\r\n\r\n      // RANGE : [MIN_EXP, MAX_EXP]\r\n\r\n      // The minimum exponent value, beneath which underflow to zero occurs.\r\n      // Number type: -324  (5e-324)\r\n      MIN_EXP = -1e7,                          // -1 to -MAX\r\n\r\n      // The maximum exponent value, above which overflow to Infinity occurs.\r\n      // Number type:  308  (1.7976931348623157e+308)\r\n      // For MAX_EXP > 1e7, e.g. new BigNumber('1e100000000').plus(1) may be slow.\r\n      MAX_EXP = 1e7,                           // 1 to MAX\r\n\r\n      // Whether to use cryptographically-secure random number generation, if available.\r\n      CRYPTO = false,                          // true or false\r\n\r\n      // The modulo mode used when calculating the modulus: a mod n.\r\n      // The quotient (q = a / n) is calculated according to the corresponding rounding mode.\r\n      // The remainder (r) is calculated as: r = a - n * q.\r\n      //\r\n      // UP        0 The remainder is positive if the dividend is negative, else is negative.\r\n      // DOWN      1 The remainder has the same sign as the dividend.\r\n      //             This modulo mode is commonly known as 'truncated division' and is\r\n      //             equivalent to (a % n) in JavaScript.\r\n      // FLOOR     3 The remainder has the same sign as the divisor (Python %).\r\n      // HALF_EVEN 6 This modulo mode implements the IEEE 754 remainder function.\r\n      // EUCLID    9 Euclidian division. q = sign(n) * floor(a / abs(n)).\r\n      //             The remainder is always positive.\r\n      //\r\n      // The truncated division, floored division, Euclidian division and IEEE 754 remainder\r\n      // modes are commonly used for the modulus operation.\r\n      // Although the other rounding modes can also be used, they may not give useful results.\r\n      MODULO_MODE = 1,                         // 0 to 9\r\n\r\n      // The maximum number of significant digits of the result of the exponentiatedBy operation.\r\n      // If POW_PRECISION is 0, there will be unlimited significant digits.\r\n      POW_PRECISION = 0,                       // 0 to MAX\r\n\r\n      // The format specification used by the BigNumber.prototype.toFormat method.\r\n      FORMAT = {\r\n        prefix: '',\r\n        groupSize: 3,\r\n        secondaryGroupSize: 0,\r\n        groupSeparator: ',',\r\n        decimalSeparator: '.',\r\n        fractionGroupSize: 0,\r\n        fractionGroupSeparator: '\\xA0',        // non-breaking space\r\n        suffix: ''\r\n      },\r\n\r\n      // The alphabet used for base conversion. It must be at least 2 characters long, with no '+',\r\n      // '-', '.', whitespace, or repeated character.\r\n      // '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ$_'\r\n      ALPHABET = '0123456789abcdefghijklmnopqrstuvwxyz',\r\n      alphabetHasNormalDecimalDigits = true;\r\n\r\n\r\n    //------------------------------------------------------------------------------------------\r\n\r\n\r\n    // CONSTRUCTOR\r\n\r\n\r\n    /*\r\n     * The BigNumber constructor and exported function.\r\n     * Create and return a new instance of a BigNumber object.\r\n     *\r\n     * v {number|string|BigNumber} A numeric value.\r\n     * [b] {number} The base of v. Integer, 2 to ALPHABET.length inclusive.\r\n     */\r\n    function BigNumber(v, b) {\r\n      var alphabet, c, caseChanged, e, i, isNum, len, str,\r\n        x = this;\r\n\r\n      // Enable constructor call without `new`.\r\n      if (!(x instanceof BigNumber)) return new BigNumber(v, b);\r\n\r\n      if (b == null) {\r\n\r\n        if (v && v._isBigNumber === true) {\r\n          x.s = v.s;\r\n\r\n          if (!v.c || v.e > MAX_EXP) {\r\n            x.c = x.e = null;\r\n          } else if (v.e < MIN_EXP) {\r\n            x.c = [x.e = 0];\r\n          } else {\r\n            x.e = v.e;\r\n            x.c = v.c.slice();\r\n          }\r\n\r\n          return;\r\n        }\r\n\r\n        if ((isNum = typeof v == 'number') && v * 0 == 0) {\r\n\r\n          // Use `1 / n` to handle minus zero also.\r\n          x.s = 1 / v < 0 ? (v = -v, -1) : 1;\r\n\r\n          // Fast path for integers, where n < 2147483648 (2**31).\r\n          if (v === ~~v) {\r\n            for (e = 0, i = v; i >= 10; i /= 10, e++);\r\n\r\n            if (e > MAX_EXP) {\r\n              x.c = x.e = null;\r\n            } else {\r\n              x.e = e;\r\n              x.c = [v];\r\n            }\r\n\r\n            return;\r\n          }\r\n\r\n          str = String(v);\r\n        } else {\r\n\r\n          if (!isNumeric.test(str = String(v))) return parseNumeric(x, str, isNum);\r\n\r\n          x.s = str.charCodeAt(0) == 45 ? (str = str.slice(1), -1) : 1;\r\n        }\r\n\r\n        // Decimal point?\r\n        if ((e = str.indexOf('.')) > -1) str = str.replace('.', '');\r\n\r\n        // Exponential form?\r\n        if ((i = str.search(/e/i)) > 0) {\r\n\r\n          // Determine exponent.\r\n          if (e < 0) e = i;\r\n          e += +str.slice(i + 1);\r\n          str = str.substring(0, i);\r\n        } else if (e < 0) {\r\n\r\n          // Integer.\r\n          e = str.length;\r\n        }\r\n\r\n      } else {\r\n\r\n        // '[BigNumber Error] Base {not a primitive number|not an integer|out of range}: {b}'\r\n        intCheck(b, 2, ALPHABET.length, 'Base');\r\n\r\n        // Allow exponential notation to be used with base 10 argument, while\r\n        // also rounding to DECIMAL_PLACES as with other bases.\r\n        if (b == 10 && alphabetHasNormalDecimalDigits) {\r\n          x = new BigNumber(v);\r\n          return round(x, DECIMAL_PLACES + x.e + 1, ROUNDING_MODE);\r\n        }\r\n\r\n        str = String(v);\r\n\r\n        if (isNum = typeof v == 'number') {\r\n\r\n          // Avoid potential interpretation of Infinity and NaN as base 44+ values.\r\n          if (v * 0 != 0) return parseNumeric(x, str, isNum, b);\r\n\r\n          x.s = 1 / v < 0 ? (str = str.slice(1), -1) : 1;\r\n\r\n          // '[BigNumber Error] Number primitive has more than 15 significant digits: {n}'\r\n          if (BigNumber.DEBUG && str.replace(/^0\\.0*|\\./, '').length > 15) {\r\n            throw Error\r\n             (tooManyDigits + v);\r\n          }\r\n        } else {\r\n          x.s = str.charCodeAt(0) === 45 ? (str = str.slice(1), -1) : 1;\r\n        }\r\n\r\n        alphabet = ALPHABET.slice(0, b);\r\n        e = i = 0;\r\n\r\n        // Check that str is a valid base b number.\r\n        // Don't use RegExp, so alphabet can contain special characters.\r\n        for (len = str.length; i < len; i++) {\r\n          if (alphabet.indexOf(c = str.charAt(i)) < 0) {\r\n            if (c == '.') {\r\n\r\n              // If '.' is not the first character and it has not be found before.\r\n              if (i > e) {\r\n                e = len;\r\n                continue;\r\n              }\r\n            } else if (!caseChanged) {\r\n\r\n              // Allow e.g. hexadecimal 'FF' as well as 'ff'.\r\n              if (str == str.toUpperCase() && (str = str.toLowerCase()) ||\r\n                  str == str.toLowerCase() && (str = str.toUpperCase())) {\r\n                caseChanged = true;\r\n                i = -1;\r\n                e = 0;\r\n                continue;\r\n              }\r\n            }\r\n\r\n            return parseNumeric(x, String(v), isNum, b);\r\n          }\r\n        }\r\n\r\n        // Prevent later check for length on converted number.\r\n        isNum = false;\r\n        str = convertBase(str, b, 10, x.s);\r\n\r\n        // Decimal point?\r\n        if ((e = str.indexOf('.')) > -1) str = str.replace('.', '');\r\n        else e = str.length;\r\n      }\r\n\r\n      // Determine leading zeros.\r\n      for (i = 0; str.charCodeAt(i) === 48; i++);\r\n\r\n      // Determine trailing zeros.\r\n      for (len = str.length; str.charCodeAt(--len) === 48;);\r\n\r\n      if (str = str.slice(i, ++len)) {\r\n        len -= i;\r\n\r\n        // '[BigNumber Error] Number primitive has more than 15 significant digits: {n}'\r\n        if (isNum && BigNumber.DEBUG &&\r\n          len > 15 && (v > MAX_SAFE_INTEGER || v !== mathfloor(v))) {\r\n            throw Error\r\n             (tooManyDigits + (x.s * v));\r\n        }\r\n\r\n         // Overflow?\r\n        if ((e = e - i - 1) > MAX_EXP) {\r\n\r\n          // Infinity.\r\n          x.c = x.e = null;\r\n\r\n        // Underflow?\r\n        } else if (e < MIN_EXP) {\r\n\r\n          // Zero.\r\n          x.c = [x.e = 0];\r\n        } else {\r\n          x.e = e;\r\n          x.c = [];\r\n\r\n          // Transform base\r\n\r\n          // e is the base 10 exponent.\r\n          // i is where to slice str to get the first element of the coefficient array.\r\n          i = (e + 1) % LOG_BASE;\r\n          if (e < 0) i += LOG_BASE;  // i < 1\r\n\r\n          if (i < len) {\r\n            if (i) x.c.push(+str.slice(0, i));\r\n\r\n            for (len -= LOG_BASE; i < len;) {\r\n              x.c.push(+str.slice(i, i += LOG_BASE));\r\n            }\r\n\r\n            i = LOG_BASE - (str = str.slice(i)).length;\r\n          } else {\r\n            i -= len;\r\n          }\r\n\r\n          for (; i--; str += '0');\r\n          x.c.push(+str);\r\n        }\r\n      } else {\r\n\r\n        // Zero.\r\n        x.c = [x.e = 0];\r\n      }\r\n    }\r\n\r\n\r\n    // CONSTRUCTOR PROPERTIES\r\n\r\n\r\n    BigNumber.clone = clone;\r\n\r\n    BigNumber.ROUND_UP = 0;\r\n    BigNumber.ROUND_DOWN = 1;\r\n    BigNumber.ROUND_CEIL = 2;\r\n    BigNumber.ROUND_FLOOR = 3;\r\n    BigNumber.ROUND_HALF_UP = 4;\r\n    BigNumber.ROUND_HALF_DOWN = 5;\r\n    BigNumber.ROUND_HALF_EVEN = 6;\r\n    BigNumber.ROUND_HALF_CEIL = 7;\r\n    BigNumber.ROUND_HALF_FLOOR = 8;\r\n    BigNumber.EUCLID = 9;\r\n\r\n\r\n    /*\r\n     * Configure infrequently-changing library-wide settings.\r\n     *\r\n     * Accept an object with the following optional properties (if the value of a property is\r\n     * a number, it must be an integer within the inclusive range stated):\r\n     *\r\n     *   DECIMAL_PLACES   {number}           0 to MAX\r\n     *   ROUNDING_MODE    {number}           0 to 8\r\n     *   EXPONENTIAL_AT   {number|number[]}  -MAX to MAX  or  [-MAX to 0, 0 to MAX]\r\n     *   RANGE            {number|number[]}  -MAX to MAX (not zero)  or  [-MAX to -1, 1 to MAX]\r\n     *   CRYPTO           {boolean}          true or false\r\n     *   MODULO_MODE      {number}           0 to 9\r\n     *   POW_PRECISION       {number}           0 to MAX\r\n     *   ALPHABET         {string}           A string of two or more unique characters which does\r\n     *                                       not contain '.'.\r\n     *   FORMAT           {object}           An object with some of the following properties:\r\n     *     prefix                 {string}\r\n     *     groupSize              {number}\r\n     *     secondaryGroupSize     {number}\r\n     *     groupSeparator         {string}\r\n     *     decimalSeparator       {string}\r\n     *     fractionGroupSize      {number}\r\n     *     fractionGroupSeparator {string}\r\n     *     suffix                 {string}\r\n     *\r\n     * (The values assigned to the above FORMAT object properties are not checked for validity.)\r\n     *\r\n     * E.g.\r\n     * BigNumber.config({ DECIMAL_PLACES : 20, ROUNDING_MODE : 4 })\r\n     *\r\n     * Ignore properties/parameters set to null or undefined, except for ALPHABET.\r\n     *\r\n     * Return an object with the properties current values.\r\n     */\r\n    BigNumber.config = BigNumber.set = function (obj) {\r\n      var p, v;\r\n\r\n      if (obj != null) {\r\n\r\n        if (typeof obj == 'object') {\r\n\r\n          // DECIMAL_PLACES {number} Integer, 0 to MAX inclusive.\r\n          // '[BigNumber Error] DECIMAL_PLACES {not a primitive number|not an integer|out of range}: {v}'\r\n          if (obj.hasOwnProperty(p = 'DECIMAL_PLACES')) {\r\n            v = obj[p];\r\n            intCheck(v, 0, MAX, p);\r\n            DECIMAL_PLACES = v;\r\n          }\r\n\r\n          // ROUNDING_MODE {number} Integer, 0 to 8 inclusive.\r\n          // '[BigNumber Error] ROUNDING_MODE {not a primitive number|not an integer|out of range}: {v}'\r\n          if (obj.hasOwnProperty(p = 'ROUNDING_MODE')) {\r\n            v = obj[p];\r\n            intCheck(v, 0, 8, p);\r\n            ROUNDING_MODE = v;\r\n          }\r\n\r\n          // EXPONENTIAL_AT {number|number[]}\r\n          // Integer, -MAX to MAX inclusive or\r\n          // [integer -MAX to 0 inclusive, 0 to MAX inclusive].\r\n          // '[BigNumber Error] EXPONENTIAL_AT {not a primitive number|not an integer|out of range}: {v}'\r\n          if (obj.hasOwnProperty(p = 'EXPONENTIAL_AT')) {\r\n            v = obj[p];\r\n            if (v && v.pop) {\r\n              intCheck(v[0], -MAX, 0, p);\r\n              intCheck(v[1], 0, MAX, p);\r\n              TO_EXP_NEG = v[0];\r\n              TO_EXP_POS = v[1];\r\n            } else {\r\n              intCheck(v, -MAX, MAX, p);\r\n              TO_EXP_NEG = -(TO_EXP_POS = v < 0 ? -v : v);\r\n            }\r\n          }\r\n\r\n          // RANGE {number|number[]} Non-zero integer, -MAX to MAX inclusive or\r\n          // [integer -MAX to -1 inclusive, integer 1 to MAX inclusive].\r\n          // '[BigNumber Error] RANGE {not a primitive number|not an integer|out of range|cannot be zero}: {v}'\r\n          if (obj.hasOwnProperty(p = 'RANGE')) {\r\n            v = obj[p];\r\n            if (v && v.pop) {\r\n              intCheck(v[0], -MAX, -1, p);\r\n              intCheck(v[1], 1, MAX, p);\r\n              MIN_EXP = v[0];\r\n              MAX_EXP = v[1];\r\n            } else {\r\n              intCheck(v, -MAX, MAX, p);\r\n              if (v) {\r\n                MIN_EXP = -(MAX_EXP = v < 0 ? -v : v);\r\n              } else {\r\n                throw Error\r\n                 (bignumberError + p + ' cannot be zero: ' + v);\r\n              }\r\n            }\r\n          }\r\n\r\n          // CRYPTO {boolean} true or false.\r\n          // '[BigNumber Error] CRYPTO not true or false: {v}'\r\n          // '[BigNumber Error] crypto unavailable'\r\n          if (obj.hasOwnProperty(p = 'CRYPTO')) {\r\n            v = obj[p];\r\n            if (v === !!v) {\r\n              if (v) {\r\n                if (typeof crypto != 'undefined' && crypto &&\r\n                 (crypto.getRandomValues || crypto.randomBytes)) {\r\n                  CRYPTO = v;\r\n                } else {\r\n                  CRYPTO = !v;\r\n                  throw Error\r\n                   (bignumberError + 'crypto unavailable');\r\n                }\r\n              } else {\r\n                CRYPTO = v;\r\n              }\r\n            } else {\r\n              throw Error\r\n               (bignumberError + p + ' not true or false: ' + v);\r\n            }\r\n          }\r\n\r\n          // MODULO_MODE {number} Integer, 0 to 9 inclusive.\r\n          // '[BigNumber Error] MODULO_MODE {not a primitive number|not an integer|out of range}: {v}'\r\n          if (obj.hasOwnProperty(p = 'MODULO_MODE')) {\r\n            v = obj[p];\r\n            intCheck(v, 0, 9, p);\r\n            MODULO_MODE = v;\r\n          }\r\n\r\n          // POW_PRECISION {number} Integer, 0 to MAX inclusive.\r\n          // '[BigNumber Error] POW_PRECISION {not a primitive number|not an integer|out of range}: {v}'\r\n          if (obj.hasOwnProperty(p = 'POW_PRECISION')) {\r\n            v = obj[p];\r\n            intCheck(v, 0, MAX, p);\r\n            POW_PRECISION = v;\r\n          }\r\n\r\n          // FORMAT {object}\r\n          // '[BigNumber Error] FORMAT not an object: {v}'\r\n          if (obj.hasOwnProperty(p = 'FORMAT')) {\r\n            v = obj[p];\r\n            if (typeof v == 'object') FORMAT = v;\r\n            else throw Error\r\n             (bignumberError + p + ' not an object: ' + v);\r\n          }\r\n\r\n          // ALPHABET {string}\r\n          // '[BigNumber Error] ALPHABET invalid: {v}'\r\n          if (obj.hasOwnProperty(p = 'ALPHABET')) {\r\n            v = obj[p];\r\n\r\n            // Disallow if less than two characters,\r\n            // or if it contains '+', '-', '.', whitespace, or a repeated character.\r\n            if (typeof v == 'string' && !/^.?$|[+\\-.\\s]|(.).*\\1/.test(v)) {\r\n              alphabetHasNormalDecimalDigits = v.slice(0, 10) == '0123456789';\r\n              ALPHABET = v;\r\n            } else {\r\n              throw Error\r\n               (bignumberError + p + ' invalid: ' + v);\r\n            }\r\n          }\r\n\r\n        } else {\r\n\r\n          // '[BigNumber Error] Object expected: {v}'\r\n          throw Error\r\n           (bignumberError + 'Object expected: ' + obj);\r\n        }\r\n      }\r\n\r\n      return {\r\n        DECIMAL_PLACES: DECIMAL_PLACES,\r\n        ROUNDING_MODE: ROUNDING_MODE,\r\n        EXPONENTIAL_AT: [TO_EXP_NEG, TO_EXP_POS],\r\n        RANGE: [MIN_EXP, MAX_EXP],\r\n        CRYPTO: CRYPTO,\r\n        MODULO_MODE: MODULO_MODE,\r\n        POW_PRECISION: POW_PRECISION,\r\n        FORMAT: FORMAT,\r\n        ALPHABET: ALPHABET\r\n      };\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if v is a BigNumber instance, otherwise return false.\r\n     *\r\n     * If BigNumber.DEBUG is true, throw if a BigNumber instance is not well-formed.\r\n     *\r\n     * v {any}\r\n     *\r\n     * '[BigNumber Error] Invalid BigNumber: {v}'\r\n     */\r\n    BigNumber.isBigNumber = function (v) {\r\n      if (!v || v._isBigNumber !== true) return false;\r\n      if (!BigNumber.DEBUG) return true;\r\n\r\n      var i, n,\r\n        c = v.c,\r\n        e = v.e,\r\n        s = v.s;\r\n\r\n      out: if ({}.toString.call(c) == '[object Array]') {\r\n\r\n        if ((s === 1 || s === -1) && e >= -MAX && e <= MAX && e === mathfloor(e)) {\r\n\r\n          // If the first element is zero, the BigNumber value must be zero.\r\n          if (c[0] === 0) {\r\n            if (e === 0 && c.length === 1) return true;\r\n            break out;\r\n          }\r\n\r\n          // Calculate number of digits that c[0] should have, based on the exponent.\r\n          i = (e + 1) % LOG_BASE;\r\n          if (i < 1) i += LOG_BASE;\r\n\r\n          // Calculate number of digits of c[0].\r\n          //if (Math.ceil(Math.log(c[0] + 1) / Math.LN10) == i) {\r\n          if (String(c[0]).length == i) {\r\n\r\n            for (i = 0; i < c.length; i++) {\r\n              n = c[i];\r\n              if (n < 0 || n >= BASE || n !== mathfloor(n)) break out;\r\n            }\r\n\r\n            // Last element cannot be zero, unless it is the only element.\r\n            if (n !== 0) return true;\r\n          }\r\n        }\r\n\r\n      // Infinity/NaN\r\n      } else if (c === null && e === null && (s === null || s === 1 || s === -1)) {\r\n        return true;\r\n      }\r\n\r\n      throw Error\r\n        (bignumberError + 'Invalid BigNumber: ' + v);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a new BigNumber whose value is the maximum of the arguments.\r\n     *\r\n     * arguments {number|string|BigNumber}\r\n     */\r\n    BigNumber.maximum = BigNumber.max = function () {\r\n      return maxOrMin(arguments, P.lt);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a new BigNumber whose value is the minimum of the arguments.\r\n     *\r\n     * arguments {number|string|BigNumber}\r\n     */\r\n    BigNumber.minimum = BigNumber.min = function () {\r\n      return maxOrMin(arguments, P.gt);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a new BigNumber with a random value equal to or greater than 0 and less than 1,\r\n     * and with dp, or DECIMAL_PLACES if dp is omitted, decimal places (or less if trailing\r\n     * zeros are produced).\r\n     *\r\n     * [dp] {number} Decimal places. Integer, 0 to MAX inclusive.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp}'\r\n     * '[BigNumber Error] crypto unavailable'\r\n     */\r\n    BigNumber.random = (function () {\r\n      var pow2_53 = 0x20000000000000;\r\n\r\n      // Return a 53 bit integer n, where 0 <= n < 9007199254740992.\r\n      // Check if Math.random() produces more than 32 bits of randomness.\r\n      // If it does, assume at least 53 bits are produced, otherwise assume at least 30 bits.\r\n      // 0x40000000 is 2^30, 0x800000 is 2^23, 0x1fffff is 2^21 - 1.\r\n      var random53bitInt = (Math.random() * pow2_53) & 0x1fffff\r\n       ? function () { return mathfloor(Math.random() * pow2_53); }\r\n       : function () { return ((Math.random() * 0x40000000 | 0) * 0x800000) +\r\n         (Math.random() * 0x800000 | 0); };\r\n\r\n      return function (dp) {\r\n        var a, b, e, k, v,\r\n          i = 0,\r\n          c = [],\r\n          rand = new BigNumber(ONE);\r\n\r\n        if (dp == null) dp = DECIMAL_PLACES;\r\n        else intCheck(dp, 0, MAX);\r\n\r\n        k = mathceil(dp / LOG_BASE);\r\n\r\n        if (CRYPTO) {\r\n\r\n          // Browsers supporting crypto.getRandomValues.\r\n          if (crypto.getRandomValues) {\r\n\r\n            a = crypto.getRandomValues(new Uint32Array(k *= 2));\r\n\r\n            for (; i < k;) {\r\n\r\n              // 53 bits:\r\n              // ((Math.pow(2, 32) - 1) * Math.pow(2, 21)).toString(2)\r\n              // 11111 11111111 11111111 11111111 11100000 00000000 00000000\r\n              // ((Math.pow(2, 32) - 1) >>> 11).toString(2)\r\n              //                                     11111 11111111 11111111\r\n              // 0x20000 is 2^21.\r\n              v = a[i] * 0x20000 + (a[i + 1] >>> 11);\r\n\r\n              // Rejection sampling:\r\n              // 0 <= v < 9007199254740992\r\n              // Probability that v >= 9e15, is\r\n              // 7199254740992 / 9007199254740992 ~= 0.0008, i.e. 1 in 1251\r\n              if (v >= 9e15) {\r\n                b = crypto.getRandomValues(new Uint32Array(2));\r\n                a[i] = b[0];\r\n                a[i + 1] = b[1];\r\n              } else {\r\n\r\n                // 0 <= v <= 8999999999999999\r\n                // 0 <= (v % 1e14) <= 99999999999999\r\n                c.push(v % 1e14);\r\n                i += 2;\r\n              }\r\n            }\r\n            i = k / 2;\r\n\r\n          // Node.js supporting crypto.randomBytes.\r\n          } else if (crypto.randomBytes) {\r\n\r\n            // buffer\r\n            a = crypto.randomBytes(k *= 7);\r\n\r\n            for (; i < k;) {\r\n\r\n              // 0x1000000000000 is 2^48, 0x10000000000 is 2^40\r\n              // 0x100000000 is 2^32, 0x1000000 is 2^24\r\n              // 11111 11111111 11111111 11111111 11111111 11111111 11111111\r\n              // 0 <= v < 9007199254740992\r\n              v = ((a[i] & 31) * 0x1000000000000) + (a[i + 1] * 0x10000000000) +\r\n                 (a[i + 2] * 0x100000000) + (a[i + 3] * 0x1000000) +\r\n                 (a[i + 4] << 16) + (a[i + 5] << 8) + a[i + 6];\r\n\r\n              if (v >= 9e15) {\r\n                crypto.randomBytes(7).copy(a, i);\r\n              } else {\r\n\r\n                // 0 <= (v % 1e14) <= 99999999999999\r\n                c.push(v % 1e14);\r\n                i += 7;\r\n              }\r\n            }\r\n            i = k / 7;\r\n          } else {\r\n            CRYPTO = false;\r\n            throw Error\r\n             (bignumberError + 'crypto unavailable');\r\n          }\r\n        }\r\n\r\n        // Use Math.random.\r\n        if (!CRYPTO) {\r\n\r\n          for (; i < k;) {\r\n            v = random53bitInt();\r\n            if (v < 9e15) c[i++] = v % 1e14;\r\n          }\r\n        }\r\n\r\n        k = c[--i];\r\n        dp %= LOG_BASE;\r\n\r\n        // Convert trailing digits to zeros according to dp.\r\n        if (k && dp) {\r\n          v = POWS_TEN[LOG_BASE - dp];\r\n          c[i] = mathfloor(k / v) * v;\r\n        }\r\n\r\n        // Remove trailing elements which are zero.\r\n        for (; c[i] === 0; c.pop(), i--);\r\n\r\n        // Zero?\r\n        if (i < 0) {\r\n          c = [e = 0];\r\n        } else {\r\n\r\n          // Remove leading elements which are zero and adjust exponent accordingly.\r\n          for (e = -1 ; c[0] === 0; c.splice(0, 1), e -= LOG_BASE);\r\n\r\n          // Count the digits of the first element of c to determine leading zeros, and...\r\n          for (i = 1, v = c[0]; v >= 10; v /= 10, i++);\r\n\r\n          // adjust the exponent accordingly.\r\n          if (i < LOG_BASE) e -= LOG_BASE - i;\r\n        }\r\n\r\n        rand.e = e;\r\n        rand.c = c;\r\n        return rand;\r\n      };\r\n    })();\r\n\r\n\r\n    /*\r\n     * Return a BigNumber whose value is the sum of the arguments.\r\n     *\r\n     * arguments {number|string|BigNumber}\r\n     */\r\n    BigNumber.sum = function () {\r\n      var i = 1,\r\n        args = arguments,\r\n        sum = new BigNumber(args[0]);\r\n      for (; i < args.length;) sum = sum.plus(args[i++]);\r\n      return sum;\r\n    };\r\n\r\n\r\n    // PRIVATE FUNCTIONS\r\n\r\n\r\n    // Called by BigNumber and BigNumber.prototype.toString.\r\n    convertBase = (function () {\r\n      var decimal = '0123456789';\r\n\r\n      /*\r\n       * Convert string of baseIn to an array of numbers of baseOut.\r\n       * Eg. toBaseOut('255', 10, 16) returns [15, 15].\r\n       * Eg. toBaseOut('ff', 16, 10) returns [2, 5, 5].\r\n       */\r\n      function toBaseOut(str, baseIn, baseOut, alphabet) {\r\n        var j,\r\n          arr = [0],\r\n          arrL,\r\n          i = 0,\r\n          len = str.length;\r\n\r\n        for (; i < len;) {\r\n          for (arrL = arr.length; arrL--; arr[arrL] *= baseIn);\r\n\r\n          arr[0] += alphabet.indexOf(str.charAt(i++));\r\n\r\n          for (j = 0; j < arr.length; j++) {\r\n\r\n            if (arr[j] > baseOut - 1) {\r\n              if (arr[j + 1] == null) arr[j + 1] = 0;\r\n              arr[j + 1] += arr[j] / baseOut | 0;\r\n              arr[j] %= baseOut;\r\n            }\r\n          }\r\n        }\r\n\r\n        return arr.reverse();\r\n      }\r\n\r\n      // Convert a numeric string of baseIn to a numeric string of baseOut.\r\n      // If the caller is toString, we are converting from base 10 to baseOut.\r\n      // If the caller is BigNumber, we are converting from baseIn to base 10.\r\n      return function (str, baseIn, baseOut, sign, callerIsToString) {\r\n        var alphabet, d, e, k, r, x, xc, y,\r\n          i = str.indexOf('.'),\r\n          dp = DECIMAL_PLACES,\r\n          rm = ROUNDING_MODE;\r\n\r\n        // Non-integer.\r\n        if (i >= 0) {\r\n          k = POW_PRECISION;\r\n\r\n          // Unlimited precision.\r\n          POW_PRECISION = 0;\r\n          str = str.replace('.', '');\r\n          y = new BigNumber(baseIn);\r\n          x = y.pow(str.length - i);\r\n          POW_PRECISION = k;\r\n\r\n          // Convert str as if an integer, then restore the fraction part by dividing the\r\n          // result by its base raised to a power.\r\n\r\n          y.c = toBaseOut(toFixedPoint(coeffToString(x.c), x.e, '0'),\r\n           10, baseOut, decimal);\r\n          y.e = y.c.length;\r\n        }\r\n\r\n        // Convert the number as integer.\r\n\r\n        xc = toBaseOut(str, baseIn, baseOut, callerIsToString\r\n         ? (alphabet = ALPHABET, decimal)\r\n         : (alphabet = decimal, ALPHABET));\r\n\r\n        // xc now represents str as an integer and converted to baseOut. e is the exponent.\r\n        e = k = xc.length;\r\n\r\n        // Remove trailing zeros.\r\n        for (; xc[--k] == 0; xc.pop());\r\n\r\n        // Zero?\r\n        if (!xc[0]) return alphabet.charAt(0);\r\n\r\n        // Does str represent an integer? If so, no need for the division.\r\n        if (i < 0) {\r\n          --e;\r\n        } else {\r\n          x.c = xc;\r\n          x.e = e;\r\n\r\n          // The sign is needed for correct rounding.\r\n          x.s = sign;\r\n          x = div(x, y, dp, rm, baseOut);\r\n          xc = x.c;\r\n          r = x.r;\r\n          e = x.e;\r\n        }\r\n\r\n        // xc now represents str converted to baseOut.\r\n\r\n        // THe index of the rounding digit.\r\n        d = e + dp + 1;\r\n\r\n        // The rounding digit: the digit to the right of the digit that may be rounded up.\r\n        i = xc[d];\r\n\r\n        // Look at the rounding digits and mode to determine whether to round up.\r\n\r\n        k = baseOut / 2;\r\n        r = r || d < 0 || xc[d + 1] != null;\r\n\r\n        r = rm < 4 ? (i != null || r) && (rm == 0 || rm == (x.s < 0 ? 3 : 2))\r\n              : i > k || i == k &&(rm == 4 || r || rm == 6 && xc[d - 1] & 1 ||\r\n               rm == (x.s < 0 ? 8 : 7));\r\n\r\n        // If the index of the rounding digit is not greater than zero, or xc represents\r\n        // zero, then the result of the base conversion is zero or, if rounding up, a value\r\n        // such as 0.00001.\r\n        if (d < 1 || !xc[0]) {\r\n\r\n          // 1^-dp or 0\r\n          str = r ? toFixedPoint(alphabet.charAt(1), -dp, alphabet.charAt(0)) : alphabet.charAt(0);\r\n        } else {\r\n\r\n          // Truncate xc to the required number of decimal places.\r\n          xc.length = d;\r\n\r\n          // Round up?\r\n          if (r) {\r\n\r\n            // Rounding up may mean the previous digit has to be rounded up and so on.\r\n            for (--baseOut; ++xc[--d] > baseOut;) {\r\n              xc[d] = 0;\r\n\r\n              if (!d) {\r\n                ++e;\r\n                xc = [1].concat(xc);\r\n              }\r\n            }\r\n          }\r\n\r\n          // Determine trailing zeros.\r\n          for (k = xc.length; !xc[--k];);\r\n\r\n          // E.g. [4, 11, 15] becomes 4bf.\r\n          for (i = 0, str = ''; i <= k; str += alphabet.charAt(xc[i++]));\r\n\r\n          // Add leading zeros, decimal point and trailing zeros as required.\r\n          str = toFixedPoint(str, e, alphabet.charAt(0));\r\n        }\r\n\r\n        // The caller will add the sign.\r\n        return str;\r\n      };\r\n    })();\r\n\r\n\r\n    // Perform division in the specified base. Called by div and convertBase.\r\n    div = (function () {\r\n\r\n      // Assume non-zero x and k.\r\n      function multiply(x, k, base) {\r\n        var m, temp, xlo, xhi,\r\n          carry = 0,\r\n          i = x.length,\r\n          klo = k % SQRT_BASE,\r\n          khi = k / SQRT_BASE | 0;\r\n\r\n        for (x = x.slice(); i--;) {\r\n          xlo = x[i] % SQRT_BASE;\r\n          xhi = x[i] / SQRT_BASE | 0;\r\n          m = khi * xlo + xhi * klo;\r\n          temp = klo * xlo + ((m % SQRT_BASE) * SQRT_BASE) + carry;\r\n          carry = (temp / base | 0) + (m / SQRT_BASE | 0) + khi * xhi;\r\n          x[i] = temp % base;\r\n        }\r\n\r\n        if (carry) x = [carry].concat(x);\r\n\r\n        return x;\r\n      }\r\n\r\n      function compare(a, b, aL, bL) {\r\n        var i, cmp;\r\n\r\n        if (aL != bL) {\r\n          cmp = aL > bL ? 1 : -1;\r\n        } else {\r\n\r\n          for (i = cmp = 0; i < aL; i++) {\r\n\r\n            if (a[i] != b[i]) {\r\n              cmp = a[i] > b[i] ? 1 : -1;\r\n              break;\r\n            }\r\n          }\r\n        }\r\n\r\n        return cmp;\r\n      }\r\n\r\n      function subtract(a, b, aL, base) {\r\n        var i = 0;\r\n\r\n        // Subtract b from a.\r\n        for (; aL--;) {\r\n          a[aL] -= i;\r\n          i = a[aL] < b[aL] ? 1 : 0;\r\n          a[aL] = i * base + a[aL] - b[aL];\r\n        }\r\n\r\n        // Remove leading zeros.\r\n        for (; !a[0] && a.length > 1; a.splice(0, 1));\r\n      }\r\n\r\n      // x: dividend, y: divisor.\r\n      return function (x, y, dp, rm, base) {\r\n        var cmp, e, i, more, n, prod, prodL, q, qc, rem, remL, rem0, xi, xL, yc0,\r\n          yL, yz,\r\n          s = x.s == y.s ? 1 : -1,\r\n          xc = x.c,\r\n          yc = y.c;\r\n\r\n        // Either NaN, Infinity or 0?\r\n        if (!xc || !xc[0] || !yc || !yc[0]) {\r\n\r\n          return new BigNumber(\r\n\r\n           // Return NaN if either NaN, or both Infinity or 0.\r\n           !x.s || !y.s || (xc ? yc && xc[0] == yc[0] : !yc) ? NaN :\r\n\r\n            // Return ±0 if x is ±0 or y is ±Infinity, or return ±Infinity as y is ±0.\r\n            xc && xc[0] == 0 || !yc ? s * 0 : s / 0\r\n         );\r\n        }\r\n\r\n        q = new BigNumber(s);\r\n        qc = q.c = [];\r\n        e = x.e - y.e;\r\n        s = dp + e + 1;\r\n\r\n        if (!base) {\r\n          base = BASE;\r\n          e = bitFloor(x.e / LOG_BASE) - bitFloor(y.e / LOG_BASE);\r\n          s = s / LOG_BASE | 0;\r\n        }\r\n\r\n        // Result exponent may be one less then the current value of e.\r\n        // The coefficients of the BigNumbers from convertBase may have trailing zeros.\r\n        for (i = 0; yc[i] == (xc[i] || 0); i++);\r\n\r\n        if (yc[i] > (xc[i] || 0)) e--;\r\n\r\n        if (s < 0) {\r\n          qc.push(1);\r\n          more = true;\r\n        } else {\r\n          xL = xc.length;\r\n          yL = yc.length;\r\n          i = 0;\r\n          s += 2;\r\n\r\n          // Normalise xc and yc so highest order digit of yc is >= base / 2.\r\n\r\n          n = mathfloor(base / (yc[0] + 1));\r\n\r\n          // Not necessary, but to handle odd bases where yc[0] == (base / 2) - 1.\r\n          // if (n > 1 || n++ == 1 && yc[0] < base / 2) {\r\n          if (n > 1) {\r\n            yc = multiply(yc, n, base);\r\n            xc = multiply(xc, n, base);\r\n            yL = yc.length;\r\n            xL = xc.length;\r\n          }\r\n\r\n          xi = yL;\r\n          rem = xc.slice(0, yL);\r\n          remL = rem.length;\r\n\r\n          // Add zeros to make remainder as long as divisor.\r\n          for (; remL < yL; rem[remL++] = 0);\r\n          yz = yc.slice();\r\n          yz = [0].concat(yz);\r\n          yc0 = yc[0];\r\n          if (yc[1] >= base / 2) yc0++;\r\n          // Not necessary, but to prevent trial digit n > base, when using base 3.\r\n          // else if (base == 3 && yc0 == 1) yc0 = 1 + 1e-15;\r\n\r\n          do {\r\n            n = 0;\r\n\r\n            // Compare divisor and remainder.\r\n            cmp = compare(yc, rem, yL, remL);\r\n\r\n            // If divisor < remainder.\r\n            if (cmp < 0) {\r\n\r\n              // Calculate trial digit, n.\r\n\r\n              rem0 = rem[0];\r\n              if (yL != remL) rem0 = rem0 * base + (rem[1] || 0);\r\n\r\n              // n is how many times the divisor goes into the current remainder.\r\n              n = mathfloor(rem0 / yc0);\r\n\r\n              //  Algorithm:\r\n              //  product = divisor multiplied by trial digit (n).\r\n              //  Compare product and remainder.\r\n              //  If product is greater than remainder:\r\n              //    Subtract divisor from product, decrement trial digit.\r\n              //  Subtract product from remainder.\r\n              //  If product was less than remainder at the last compare:\r\n              //    Compare new remainder and divisor.\r\n              //    If remainder is greater than divisor:\r\n              //      Subtract divisor from remainder, increment trial digit.\r\n\r\n              if (n > 1) {\r\n\r\n                // n may be > base only when base is 3.\r\n                if (n >= base) n = base - 1;\r\n\r\n                // product = divisor * trial digit.\r\n                prod = multiply(yc, n, base);\r\n                prodL = prod.length;\r\n                remL = rem.length;\r\n\r\n                // Compare product and remainder.\r\n                // If product > remainder then trial digit n too high.\r\n                // n is 1 too high about 5% of the time, and is not known to have\r\n                // ever been more than 1 too high.\r\n                while (compare(prod, rem, prodL, remL) == 1) {\r\n                  n--;\r\n\r\n                  // Subtract divisor from product.\r\n                  subtract(prod, yL < prodL ? yz : yc, prodL, base);\r\n                  prodL = prod.length;\r\n                  cmp = 1;\r\n                }\r\n              } else {\r\n\r\n                // n is 0 or 1, cmp is -1.\r\n                // If n is 0, there is no need to compare yc and rem again below,\r\n                // so change cmp to 1 to avoid it.\r\n                // If n is 1, leave cmp as -1, so yc and rem are compared again.\r\n                if (n == 0) {\r\n\r\n                  // divisor < remainder, so n must be at least 1.\r\n                  cmp = n = 1;\r\n                }\r\n\r\n                // product = divisor\r\n                prod = yc.slice();\r\n                prodL = prod.length;\r\n              }\r\n\r\n              if (prodL < remL) prod = [0].concat(prod);\r\n\r\n              // Subtract product from remainder.\r\n              subtract(rem, prod, remL, base);\r\n              remL = rem.length;\r\n\r\n               // If product was < remainder.\r\n              if (cmp == -1) {\r\n\r\n                // Compare divisor and new remainder.\r\n                // If divisor < new remainder, subtract divisor from remainder.\r\n                // Trial digit n too low.\r\n                // n is 1 too low about 5% of the time, and very rarely 2 too low.\r\n                while (compare(yc, rem, yL, remL) < 1) {\r\n                  n++;\r\n\r\n                  // Subtract divisor from remainder.\r\n                  subtract(rem, yL < remL ? yz : yc, remL, base);\r\n                  remL = rem.length;\r\n                }\r\n              }\r\n            } else if (cmp === 0) {\r\n              n++;\r\n              rem = [0];\r\n            } // else cmp === 1 and n will be 0\r\n\r\n            // Add the next digit, n, to the result array.\r\n            qc[i++] = n;\r\n\r\n            // Update the remainder.\r\n            if (rem[0]) {\r\n              rem[remL++] = xc[xi] || 0;\r\n            } else {\r\n              rem = [xc[xi]];\r\n              remL = 1;\r\n            }\r\n          } while ((xi++ < xL || rem[0] != null) && s--);\r\n\r\n          more = rem[0] != null;\r\n\r\n          // Leading zero?\r\n          if (!qc[0]) qc.splice(0, 1);\r\n        }\r\n\r\n        if (base == BASE) {\r\n\r\n          // To calculate q.e, first get the number of digits of qc[0].\r\n          for (i = 1, s = qc[0]; s >= 10; s /= 10, i++);\r\n\r\n          round(q, dp + (q.e = i + e * LOG_BASE - 1) + 1, rm, more);\r\n\r\n        // Caller is convertBase.\r\n        } else {\r\n          q.e = e;\r\n          q.r = +more;\r\n        }\r\n\r\n        return q;\r\n      };\r\n    })();\r\n\r\n\r\n    /*\r\n     * Return a string representing the value of BigNumber n in fixed-point or exponential\r\n     * notation rounded to the specified decimal places or significant digits.\r\n     *\r\n     * n: a BigNumber.\r\n     * i: the index of the last digit required (i.e. the digit that may be rounded up).\r\n     * rm: the rounding mode.\r\n     * id: 1 (toExponential) or 2 (toPrecision).\r\n     */\r\n    function format(n, i, rm, id) {\r\n      var c0, e, ne, len, str;\r\n\r\n      if (rm == null) rm = ROUNDING_MODE;\r\n      else intCheck(rm, 0, 8);\r\n\r\n      if (!n.c) return n.toString();\r\n\r\n      c0 = n.c[0];\r\n      ne = n.e;\r\n\r\n      if (i == null) {\r\n        str = coeffToString(n.c);\r\n        str = id == 1 || id == 2 && (ne <= TO_EXP_NEG || ne >= TO_EXP_POS)\r\n         ? toExponential(str, ne)\r\n         : toFixedPoint(str, ne, '0');\r\n      } else {\r\n        n = round(new BigNumber(n), i, rm);\r\n\r\n        // n.e may have changed if the value was rounded up.\r\n        e = n.e;\r\n\r\n        str = coeffToString(n.c);\r\n        len = str.length;\r\n\r\n        // toPrecision returns exponential notation if the number of significant digits\r\n        // specified is less than the number of digits necessary to represent the integer\r\n        // part of the value in fixed-point notation.\r\n\r\n        // Exponential notation.\r\n        if (id == 1 || id == 2 && (i <= e || e <= TO_EXP_NEG)) {\r\n\r\n          // Append zeros?\r\n          for (; len < i; str += '0', len++);\r\n          str = toExponential(str, e);\r\n\r\n        // Fixed-point notation.\r\n        } else {\r\n          i -= ne;\r\n          str = toFixedPoint(str, e, '0');\r\n\r\n          // Append zeros?\r\n          if (e + 1 > len) {\r\n            if (--i > 0) for (str += '.'; i--; str += '0');\r\n          } else {\r\n            i += e - len;\r\n            if (i > 0) {\r\n              if (e + 1 == len) str += '.';\r\n              for (; i--; str += '0');\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      return n.s < 0 && c0 ? '-' + str : str;\r\n    }\r\n\r\n\r\n    // Handle BigNumber.max and BigNumber.min.\r\n    function maxOrMin(args, method) {\r\n      var n,\r\n        i = 1,\r\n        m = new BigNumber(args[0]);\r\n\r\n      for (; i < args.length; i++) {\r\n        n = new BigNumber(args[i]);\r\n\r\n        // If any number is NaN, return NaN.\r\n        if (!n.s) {\r\n          m = n;\r\n          break;\r\n        } else if (method.call(m, n)) {\r\n          m = n;\r\n        }\r\n      }\r\n\r\n      return m;\r\n    }\r\n\r\n\r\n    /*\r\n     * Strip trailing zeros, calculate base 10 exponent and check against MIN_EXP and MAX_EXP.\r\n     * Called by minus, plus and times.\r\n     */\r\n    function normalise(n, c, e) {\r\n      var i = 1,\r\n        j = c.length;\r\n\r\n       // Remove trailing zeros.\r\n      for (; !c[--j]; c.pop());\r\n\r\n      // Calculate the base 10 exponent. First get the number of digits of c[0].\r\n      for (j = c[0]; j >= 10; j /= 10, i++);\r\n\r\n      // Overflow?\r\n      if ((e = i + e * LOG_BASE - 1) > MAX_EXP) {\r\n\r\n        // Infinity.\r\n        n.c = n.e = null;\r\n\r\n      // Underflow?\r\n      } else if (e < MIN_EXP) {\r\n\r\n        // Zero.\r\n        n.c = [n.e = 0];\r\n      } else {\r\n        n.e = e;\r\n        n.c = c;\r\n      }\r\n\r\n      return n;\r\n    }\r\n\r\n\r\n    // Handle values that fail the validity test in BigNumber.\r\n    parseNumeric = (function () {\r\n      var basePrefix = /^(-?)0([xbo])(?=\\w[\\w.]*$)/i,\r\n        dotAfter = /^([^.]+)\\.$/,\r\n        dotBefore = /^\\.([^.]+)$/,\r\n        isInfinityOrNaN = /^-?(Infinity|NaN)$/,\r\n        whitespaceOrPlus = /^\\s*\\+(?=[\\w.])|^\\s+|\\s+$/g;\r\n\r\n      return function (x, str, isNum, b) {\r\n        var base,\r\n          s = isNum ? str : str.replace(whitespaceOrPlus, '');\r\n\r\n        // No exception on ±Infinity or NaN.\r\n        if (isInfinityOrNaN.test(s)) {\r\n          x.s = isNaN(s) ? null : s < 0 ? -1 : 1;\r\n        } else {\r\n          if (!isNum) {\r\n\r\n            // basePrefix = /^(-?)0([xbo])(?=\\w[\\w.]*$)/i\r\n            s = s.replace(basePrefix, function (m, p1, p2) {\r\n              base = (p2 = p2.toLowerCase()) == 'x' ? 16 : p2 == 'b' ? 2 : 8;\r\n              return !b || b == base ? p1 : m;\r\n            });\r\n\r\n            if (b) {\r\n              base = b;\r\n\r\n              // E.g. '1.' to '1', '.1' to '0.1'\r\n              s = s.replace(dotAfter, '$1').replace(dotBefore, '0.$1');\r\n            }\r\n\r\n            if (str != s) return new BigNumber(s, base);\r\n          }\r\n\r\n          // '[BigNumber Error] Not a number: {n}'\r\n          // '[BigNumber Error] Not a base {b} number: {n}'\r\n          if (BigNumber.DEBUG) {\r\n            throw Error\r\n              (bignumberError + 'Not a' + (b ? ' base ' + b : '') + ' number: ' + str);\r\n          }\r\n\r\n          // NaN\r\n          x.s = null;\r\n        }\r\n\r\n        x.c = x.e = null;\r\n      }\r\n    })();\r\n\r\n\r\n    /*\r\n     * Round x to sd significant digits using rounding mode rm. Check for over/under-flow.\r\n     * If r is truthy, it is known that there are more digits after the rounding digit.\r\n     */\r\n    function round(x, sd, rm, r) {\r\n      var d, i, j, k, n, ni, rd,\r\n        xc = x.c,\r\n        pows10 = POWS_TEN;\r\n\r\n      // if x is not Infinity or NaN...\r\n      if (xc) {\r\n\r\n        // rd is the rounding digit, i.e. the digit after the digit that may be rounded up.\r\n        // n is a base 1e14 number, the value of the element of array x.c containing rd.\r\n        // ni is the index of n within x.c.\r\n        // d is the number of digits of n.\r\n        // i is the index of rd within n including leading zeros.\r\n        // j is the actual index of rd within n (if < 0, rd is a leading zero).\r\n        out: {\r\n\r\n          // Get the number of digits of the first element of xc.\r\n          for (d = 1, k = xc[0]; k >= 10; k /= 10, d++);\r\n          i = sd - d;\r\n\r\n          // If the rounding digit is in the first element of xc...\r\n          if (i < 0) {\r\n            i += LOG_BASE;\r\n            j = sd;\r\n            n = xc[ni = 0];\r\n\r\n            // Get the rounding digit at index j of n.\r\n            rd = n / pows10[d - j - 1] % 10 | 0;\r\n          } else {\r\n            ni = mathceil((i + 1) / LOG_BASE);\r\n\r\n            if (ni >= xc.length) {\r\n\r\n              if (r) {\r\n\r\n                // Needed by sqrt.\r\n                for (; xc.length <= ni; xc.push(0));\r\n                n = rd = 0;\r\n                d = 1;\r\n                i %= LOG_BASE;\r\n                j = i - LOG_BASE + 1;\r\n              } else {\r\n                break out;\r\n              }\r\n            } else {\r\n              n = k = xc[ni];\r\n\r\n              // Get the number of digits of n.\r\n              for (d = 1; k >= 10; k /= 10, d++);\r\n\r\n              // Get the index of rd within n.\r\n              i %= LOG_BASE;\r\n\r\n              // Get the index of rd within n, adjusted for leading zeros.\r\n              // The number of leading zeros of n is given by LOG_BASE - d.\r\n              j = i - LOG_BASE + d;\r\n\r\n              // Get the rounding digit at index j of n.\r\n              rd = j < 0 ? 0 : n / pows10[d - j - 1] % 10 | 0;\r\n            }\r\n          }\r\n\r\n          r = r || sd < 0 ||\r\n\r\n          // Are there any non-zero digits after the rounding digit?\r\n          // The expression  n % pows10[d - j - 1]  returns all digits of n to the right\r\n          // of the digit at j, e.g. if n is 908714 and j is 2, the expression gives 714.\r\n           xc[ni + 1] != null || (j < 0 ? n : n % pows10[d - j - 1]);\r\n\r\n          r = rm < 4\r\n           ? (rd || r) && (rm == 0 || rm == (x.s < 0 ? 3 : 2))\r\n           : rd > 5 || rd == 5 && (rm == 4 || r || rm == 6 &&\r\n\r\n            // Check whether the digit to the left of the rounding digit is odd.\r\n            ((i > 0 ? j > 0 ? n / pows10[d - j] : 0 : xc[ni - 1]) % 10) & 1 ||\r\n             rm == (x.s < 0 ? 8 : 7));\r\n\r\n          if (sd < 1 || !xc[0]) {\r\n            xc.length = 0;\r\n\r\n            if (r) {\r\n\r\n              // Convert sd to decimal places.\r\n              sd -= x.e + 1;\r\n\r\n              // 1, 0.1, 0.01, 0.001, 0.0001 etc.\r\n              xc[0] = pows10[(LOG_BASE - sd % LOG_BASE) % LOG_BASE];\r\n              x.e = -sd || 0;\r\n            } else {\r\n\r\n              // Zero.\r\n              xc[0] = x.e = 0;\r\n            }\r\n\r\n            return x;\r\n          }\r\n\r\n          // Remove excess digits.\r\n          if (i == 0) {\r\n            xc.length = ni;\r\n            k = 1;\r\n            ni--;\r\n          } else {\r\n            xc.length = ni + 1;\r\n            k = pows10[LOG_BASE - i];\r\n\r\n            // E.g. 56700 becomes 56000 if 7 is the rounding digit.\r\n            // j > 0 means i > number of leading zeros of n.\r\n            xc[ni] = j > 0 ? mathfloor(n / pows10[d - j] % pows10[j]) * k : 0;\r\n          }\r\n\r\n          // Round up?\r\n          if (r) {\r\n\r\n            for (; ;) {\r\n\r\n              // If the digit to be rounded up is in the first element of xc...\r\n              if (ni == 0) {\r\n\r\n                // i will be the length of xc[0] before k is added.\r\n                for (i = 1, j = xc[0]; j >= 10; j /= 10, i++);\r\n                j = xc[0] += k;\r\n                for (k = 1; j >= 10; j /= 10, k++);\r\n\r\n                // if i != k the length has increased.\r\n                if (i != k) {\r\n                  x.e++;\r\n                  if (xc[0] == BASE) xc[0] = 1;\r\n                }\r\n\r\n                break;\r\n              } else {\r\n                xc[ni] += k;\r\n                if (xc[ni] != BASE) break;\r\n                xc[ni--] = 0;\r\n                k = 1;\r\n              }\r\n            }\r\n          }\r\n\r\n          // Remove trailing zeros.\r\n          for (i = xc.length; xc[--i] === 0; xc.pop());\r\n        }\r\n\r\n        // Overflow? Infinity.\r\n        if (x.e > MAX_EXP) {\r\n          x.c = x.e = null;\r\n\r\n        // Underflow? Zero.\r\n        } else if (x.e < MIN_EXP) {\r\n          x.c = [x.e = 0];\r\n        }\r\n      }\r\n\r\n      return x;\r\n    }\r\n\r\n\r\n    function valueOf(n) {\r\n      var str,\r\n        e = n.e;\r\n\r\n      if (e === null) return n.toString();\r\n\r\n      str = coeffToString(n.c);\r\n\r\n      str = e <= TO_EXP_NEG || e >= TO_EXP_POS\r\n        ? toExponential(str, e)\r\n        : toFixedPoint(str, e, '0');\r\n\r\n      return n.s < 0 ? '-' + str : str;\r\n    }\r\n\r\n\r\n    // PROTOTYPE/INSTANCE METHODS\r\n\r\n\r\n    /*\r\n     * Return a new BigNumber whose value is the absolute value of this BigNumber.\r\n     */\r\n    P.absoluteValue = P.abs = function () {\r\n      var x = new BigNumber(this);\r\n      if (x.s < 0) x.s = 1;\r\n      return x;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return\r\n     *   1 if the value of this BigNumber is greater than the value of BigNumber(y, b),\r\n     *   -1 if the value of this BigNumber is less than the value of BigNumber(y, b),\r\n     *   0 if they have the same value,\r\n     *   or null if the value of either is NaN.\r\n     */\r\n    P.comparedTo = function (y, b) {\r\n      return compare(this, new BigNumber(y, b));\r\n    };\r\n\r\n\r\n    /*\r\n     * If dp is undefined or null or true or false, return the number of decimal places of the\r\n     * value of this BigNumber, or null if the value of this BigNumber is ±Infinity or NaN.\r\n     *\r\n     * Otherwise, if dp is a number, return a new BigNumber whose value is the value of this\r\n     * BigNumber rounded to a maximum of dp decimal places using rounding mode rm, or\r\n     * ROUNDING_MODE if rm is omitted.\r\n     *\r\n     * [dp] {number} Decimal places: integer, 0 to MAX inclusive.\r\n     * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp|rm}'\r\n     */\r\n    P.decimalPlaces = P.dp = function (dp, rm) {\r\n      var c, n, v,\r\n        x = this;\r\n\r\n      if (dp != null) {\r\n        intCheck(dp, 0, MAX);\r\n        if (rm == null) rm = ROUNDING_MODE;\r\n        else intCheck(rm, 0, 8);\r\n\r\n        return round(new BigNumber(x), dp + x.e + 1, rm);\r\n      }\r\n\r\n      if (!(c = x.c)) return null;\r\n      n = ((v = c.length - 1) - bitFloor(this.e / LOG_BASE)) * LOG_BASE;\r\n\r\n      // Subtract the number of trailing zeros of the last number.\r\n      if (v = c[v]) for (; v % 10 == 0; v /= 10, n--);\r\n      if (n < 0) n = 0;\r\n\r\n      return n;\r\n    };\r\n\r\n\r\n    /*\r\n     *  n / 0 = I\r\n     *  n / N = N\r\n     *  n / I = 0\r\n     *  0 / n = 0\r\n     *  0 / 0 = N\r\n     *  0 / N = N\r\n     *  0 / I = 0\r\n     *  N / n = N\r\n     *  N / 0 = N\r\n     *  N / N = N\r\n     *  N / I = N\r\n     *  I / n = I\r\n     *  I / 0 = I\r\n     *  I / N = N\r\n     *  I / I = N\r\n     *\r\n     * Return a new BigNumber whose value is the value of this BigNumber divided by the value of\r\n     * BigNumber(y, b), rounded according to DECIMAL_PLACES and ROUNDING_MODE.\r\n     */\r\n    P.dividedBy = P.div = function (y, b) {\r\n      return div(this, new BigNumber(y, b), DECIMAL_PLACES, ROUNDING_MODE);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a new BigNumber whose value is the integer part of dividing the value of this\r\n     * BigNumber by the value of BigNumber(y, b).\r\n     */\r\n    P.dividedToIntegerBy = P.idiv = function (y, b) {\r\n      return div(this, new BigNumber(y, b), 0, 1);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a BigNumber whose value is the value of this BigNumber exponentiated by n.\r\n     *\r\n     * If m is present, return the result modulo m.\r\n     * If n is negative round according to DECIMAL_PLACES and ROUNDING_MODE.\r\n     * If POW_PRECISION is non-zero and m is not present, round to POW_PRECISION using ROUNDING_MODE.\r\n     *\r\n     * The modular power operation works efficiently when x, n, and m are integers, otherwise it\r\n     * is equivalent to calculating x.exponentiatedBy(n).modulo(m) with a POW_PRECISION of 0.\r\n     *\r\n     * n {number|string|BigNumber} The exponent. An integer.\r\n     * [m] {number|string|BigNumber} The modulus.\r\n     *\r\n     * '[BigNumber Error] Exponent not an integer: {n}'\r\n     */\r\n    P.exponentiatedBy = P.pow = function (n, m) {\r\n      var half, isModExp, i, k, more, nIsBig, nIsNeg, nIsOdd, y,\r\n        x = this;\r\n\r\n      n = new BigNumber(n);\r\n\r\n      // Allow NaN and ±Infinity, but not other non-integers.\r\n      if (n.c && !n.isInteger()) {\r\n        throw Error\r\n          (bignumberError + 'Exponent not an integer: ' + valueOf(n));\r\n      }\r\n\r\n      if (m != null) m = new BigNumber(m);\r\n\r\n      // Exponent of MAX_SAFE_INTEGER is 15.\r\n      nIsBig = n.e > 14;\r\n\r\n      // If x is NaN, ±Infinity, ±0 or ±1, or n is ±Infinity, NaN or ±0.\r\n      if (!x.c || !x.c[0] || x.c[0] == 1 && !x.e && x.c.length == 1 || !n.c || !n.c[0]) {\r\n\r\n        // The sign of the result of pow when x is negative depends on the evenness of n.\r\n        // If +n overflows to ±Infinity, the evenness of n would be not be known.\r\n        y = new BigNumber(Math.pow(+valueOf(x), nIsBig ? n.s * (2 - isOdd(n)) : +valueOf(n)));\r\n        return m ? y.mod(m) : y;\r\n      }\r\n\r\n      nIsNeg = n.s < 0;\r\n\r\n      if (m) {\r\n\r\n        // x % m returns NaN if abs(m) is zero, or m is NaN.\r\n        if (m.c ? !m.c[0] : !m.s) return new BigNumber(NaN);\r\n\r\n        isModExp = !nIsNeg && x.isInteger() && m.isInteger();\r\n\r\n        if (isModExp) x = x.mod(m);\r\n\r\n      // Overflow to ±Infinity: >=2**1e10 or >=1.0000024**1e15.\r\n      // Underflow to ±0: <=0.79**1e10 or <=0.9999975**1e15.\r\n      } else if (n.e > 9 && (x.e > 0 || x.e < -1 || (x.e == 0\r\n        // [1, 240000000]\r\n        ? x.c[0] > 1 || nIsBig && x.c[1] >= 24e7\r\n        // [80000000000000]  [99999750000000]\r\n        : x.c[0] < 8e13 || nIsBig && x.c[0] <= 9999975e7))) {\r\n\r\n        // If x is negative and n is odd, k = -0, else k = 0.\r\n        k = x.s < 0 && isOdd(n) ? -0 : 0;\r\n\r\n        // If x >= 1, k = ±Infinity.\r\n        if (x.e > -1) k = 1 / k;\r\n\r\n        // If n is negative return ±0, else return ±Infinity.\r\n        return new BigNumber(nIsNeg ? 1 / k : k);\r\n\r\n      } else if (POW_PRECISION) {\r\n\r\n        // Truncating each coefficient array to a length of k after each multiplication\r\n        // equates to truncating significant digits to POW_PRECISION + [28, 41],\r\n        // i.e. there will be a minimum of 28 guard digits retained.\r\n        k = mathceil(POW_PRECISION / LOG_BASE + 2);\r\n      }\r\n\r\n      if (nIsBig) {\r\n        half = new BigNumber(0.5);\r\n        if (nIsNeg) n.s = 1;\r\n        nIsOdd = isOdd(n);\r\n      } else {\r\n        i = Math.abs(+valueOf(n));\r\n        nIsOdd = i % 2;\r\n      }\r\n\r\n      y = new BigNumber(ONE);\r\n\r\n      // Performs 54 loop iterations for n of 9007199254740991.\r\n      for (; ;) {\r\n\r\n        if (nIsOdd) {\r\n          y = y.times(x);\r\n          if (!y.c) break;\r\n\r\n          if (k) {\r\n            if (y.c.length > k) y.c.length = k;\r\n          } else if (isModExp) {\r\n            y = y.mod(m);    //y = y.minus(div(y, m, 0, MODULO_MODE).times(m));\r\n          }\r\n        }\r\n\r\n        if (i) {\r\n          i = mathfloor(i / 2);\r\n          if (i === 0) break;\r\n          nIsOdd = i % 2;\r\n        } else {\r\n          n = n.times(half);\r\n          round(n, n.e + 1, 1);\r\n\r\n          if (n.e > 14) {\r\n            nIsOdd = isOdd(n);\r\n          } else {\r\n            i = +valueOf(n);\r\n            if (i === 0) break;\r\n            nIsOdd = i % 2;\r\n          }\r\n        }\r\n\r\n        x = x.times(x);\r\n\r\n        if (k) {\r\n          if (x.c && x.c.length > k) x.c.length = k;\r\n        } else if (isModExp) {\r\n          x = x.mod(m);    //x = x.minus(div(x, m, 0, MODULO_MODE).times(m));\r\n        }\r\n      }\r\n\r\n      if (isModExp) return y;\r\n      if (nIsNeg) y = ONE.div(y);\r\n\r\n      return m ? y.mod(m) : k ? round(y, POW_PRECISION, ROUNDING_MODE, more) : y;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a new BigNumber whose value is the value of this BigNumber rounded to an integer\r\n     * using rounding mode rm, or ROUNDING_MODE if rm is omitted.\r\n     *\r\n     * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {rm}'\r\n     */\r\n    P.integerValue = function (rm) {\r\n      var n = new BigNumber(this);\r\n      if (rm == null) rm = ROUNDING_MODE;\r\n      else intCheck(rm, 0, 8);\r\n      return round(n, n.e + 1, rm);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is equal to the value of BigNumber(y, b),\r\n     * otherwise return false.\r\n     */\r\n    P.isEqualTo = P.eq = function (y, b) {\r\n      return compare(this, new BigNumber(y, b)) === 0;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is a finite number, otherwise return false.\r\n     */\r\n    P.isFinite = function () {\r\n      return !!this.c;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is greater than the value of BigNumber(y, b),\r\n     * otherwise return false.\r\n     */\r\n    P.isGreaterThan = P.gt = function (y, b) {\r\n      return compare(this, new BigNumber(y, b)) > 0;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is greater than or equal to the value of\r\n     * BigNumber(y, b), otherwise return false.\r\n     */\r\n    P.isGreaterThanOrEqualTo = P.gte = function (y, b) {\r\n      return (b = compare(this, new BigNumber(y, b))) === 1 || b === 0;\r\n\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is an integer, otherwise return false.\r\n     */\r\n    P.isInteger = function () {\r\n      return !!this.c && bitFloor(this.e / LOG_BASE) > this.c.length - 2;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is less than the value of BigNumber(y, b),\r\n     * otherwise return false.\r\n     */\r\n    P.isLessThan = P.lt = function (y, b) {\r\n      return compare(this, new BigNumber(y, b)) < 0;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is less than or equal to the value of\r\n     * BigNumber(y, b), otherwise return false.\r\n     */\r\n    P.isLessThanOrEqualTo = P.lte = function (y, b) {\r\n      return (b = compare(this, new BigNumber(y, b))) === -1 || b === 0;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is NaN, otherwise return false.\r\n     */\r\n    P.isNaN = function () {\r\n      return !this.s;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is negative, otherwise return false.\r\n     */\r\n    P.isNegative = function () {\r\n      return this.s < 0;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is positive, otherwise return false.\r\n     */\r\n    P.isPositive = function () {\r\n      return this.s > 0;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is 0 or -0, otherwise return false.\r\n     */\r\n    P.isZero = function () {\r\n      return !!this.c && this.c[0] == 0;\r\n    };\r\n\r\n\r\n    /*\r\n     *  n - 0 = n\r\n     *  n - N = N\r\n     *  n - I = -I\r\n     *  0 - n = -n\r\n     *  0 - 0 = 0\r\n     *  0 - N = N\r\n     *  0 - I = -I\r\n     *  N - n = N\r\n     *  N - 0 = N\r\n     *  N - N = N\r\n     *  N - I = N\r\n     *  I - n = I\r\n     *  I - 0 = I\r\n     *  I - N = N\r\n     *  I - I = N\r\n     *\r\n     * Return a new BigNumber whose value is the value of this BigNumber minus the value of\r\n     * BigNumber(y, b).\r\n     */\r\n    P.minus = function (y, b) {\r\n      var i, j, t, xLTy,\r\n        x = this,\r\n        a = x.s;\r\n\r\n      y = new BigNumber(y, b);\r\n      b = y.s;\r\n\r\n      // Either NaN?\r\n      if (!a || !b) return new BigNumber(NaN);\r\n\r\n      // Signs differ?\r\n      if (a != b) {\r\n        y.s = -b;\r\n        return x.plus(y);\r\n      }\r\n\r\n      var xe = x.e / LOG_BASE,\r\n        ye = y.e / LOG_BASE,\r\n        xc = x.c,\r\n        yc = y.c;\r\n\r\n      if (!xe || !ye) {\r\n\r\n        // Either Infinity?\r\n        if (!xc || !yc) return xc ? (y.s = -b, y) : new BigNumber(yc ? x : NaN);\r\n\r\n        // Either zero?\r\n        if (!xc[0] || !yc[0]) {\r\n\r\n          // Return y if y is non-zero, x if x is non-zero, or zero if both are zero.\r\n          return yc[0] ? (y.s = -b, y) : new BigNumber(xc[0] ? x :\r\n\r\n           // IEEE 754 (2008) 6.3: n - n = -0 when rounding to -Infinity\r\n           ROUNDING_MODE == 3 ? -0 : 0);\r\n        }\r\n      }\r\n\r\n      xe = bitFloor(xe);\r\n      ye = bitFloor(ye);\r\n      xc = xc.slice();\r\n\r\n      // Determine which is the bigger number.\r\n      if (a = xe - ye) {\r\n\r\n        if (xLTy = a < 0) {\r\n          a = -a;\r\n          t = xc;\r\n        } else {\r\n          ye = xe;\r\n          t = yc;\r\n        }\r\n\r\n        t.reverse();\r\n\r\n        // Prepend zeros to equalise exponents.\r\n        for (b = a; b--; t.push(0));\r\n        t.reverse();\r\n      } else {\r\n\r\n        // Exponents equal. Check digit by digit.\r\n        j = (xLTy = (a = xc.length) < (b = yc.length)) ? a : b;\r\n\r\n        for (a = b = 0; b < j; b++) {\r\n\r\n          if (xc[b] != yc[b]) {\r\n            xLTy = xc[b] < yc[b];\r\n            break;\r\n          }\r\n        }\r\n      }\r\n\r\n      // x < y? Point xc to the array of the bigger number.\r\n      if (xLTy) {\r\n        t = xc;\r\n        xc = yc;\r\n        yc = t;\r\n        y.s = -y.s;\r\n      }\r\n\r\n      b = (j = yc.length) - (i = xc.length);\r\n\r\n      // Append zeros to xc if shorter.\r\n      // No need to add zeros to yc if shorter as subtract only needs to start at yc.length.\r\n      if (b > 0) for (; b--; xc[i++] = 0);\r\n      b = BASE - 1;\r\n\r\n      // Subtract yc from xc.\r\n      for (; j > a;) {\r\n\r\n        if (xc[--j] < yc[j]) {\r\n          for (i = j; i && !xc[--i]; xc[i] = b);\r\n          --xc[i];\r\n          xc[j] += BASE;\r\n        }\r\n\r\n        xc[j] -= yc[j];\r\n      }\r\n\r\n      // Remove leading zeros and adjust exponent accordingly.\r\n      for (; xc[0] == 0; xc.splice(0, 1), --ye);\r\n\r\n      // Zero?\r\n      if (!xc[0]) {\r\n\r\n        // Following IEEE 754 (2008) 6.3,\r\n        // n - n = +0  but  n - n = -0  when rounding towards -Infinity.\r\n        y.s = ROUNDING_MODE == 3 ? -1 : 1;\r\n        y.c = [y.e = 0];\r\n        return y;\r\n      }\r\n\r\n      // No need to check for Infinity as +x - +y != Infinity && -x - -y != Infinity\r\n      // for finite x and y.\r\n      return normalise(y, xc, ye);\r\n    };\r\n\r\n\r\n    /*\r\n     *   n % 0 =  N\r\n     *   n % N =  N\r\n     *   n % I =  n\r\n     *   0 % n =  0\r\n     *  -0 % n = -0\r\n     *   0 % 0 =  N\r\n     *   0 % N =  N\r\n     *   0 % I =  0\r\n     *   N % n =  N\r\n     *   N % 0 =  N\r\n     *   N % N =  N\r\n     *   N % I =  N\r\n     *   I % n =  N\r\n     *   I % 0 =  N\r\n     *   I % N =  N\r\n     *   I % I =  N\r\n     *\r\n     * Return a new BigNumber whose value is the value of this BigNumber modulo the value of\r\n     * BigNumber(y, b). The result depends on the value of MODULO_MODE.\r\n     */\r\n    P.modulo = P.mod = function (y, b) {\r\n      var q, s,\r\n        x = this;\r\n\r\n      y = new BigNumber(y, b);\r\n\r\n      // Return NaN if x is Infinity or NaN, or y is NaN or zero.\r\n      if (!x.c || !y.s || y.c && !y.c[0]) {\r\n        return new BigNumber(NaN);\r\n\r\n      // Return x if y is Infinity or x is zero.\r\n      } else if (!y.c || x.c && !x.c[0]) {\r\n        return new BigNumber(x);\r\n      }\r\n\r\n      if (MODULO_MODE == 9) {\r\n\r\n        // Euclidian division: q = sign(y) * floor(x / abs(y))\r\n        // r = x - qy    where  0 <= r < abs(y)\r\n        s = y.s;\r\n        y.s = 1;\r\n        q = div(x, y, 0, 3);\r\n        y.s = s;\r\n        q.s *= s;\r\n      } else {\r\n        q = div(x, y, 0, MODULO_MODE);\r\n      }\r\n\r\n      y = x.minus(q.times(y));\r\n\r\n      // To match JavaScript %, ensure sign of zero is sign of dividend.\r\n      if (!y.c[0] && MODULO_MODE == 1) y.s = x.s;\r\n\r\n      return y;\r\n    };\r\n\r\n\r\n    /*\r\n     *  n * 0 = 0\r\n     *  n * N = N\r\n     *  n * I = I\r\n     *  0 * n = 0\r\n     *  0 * 0 = 0\r\n     *  0 * N = N\r\n     *  0 * I = N\r\n     *  N * n = N\r\n     *  N * 0 = N\r\n     *  N * N = N\r\n     *  N * I = N\r\n     *  I * n = I\r\n     *  I * 0 = N\r\n     *  I * N = N\r\n     *  I * I = I\r\n     *\r\n     * Return a new BigNumber whose value is the value of this BigNumber multiplied by the value\r\n     * of BigNumber(y, b).\r\n     */\r\n    P.multipliedBy = P.times = function (y, b) {\r\n      var c, e, i, j, k, m, xcL, xlo, xhi, ycL, ylo, yhi, zc,\r\n        base, sqrtBase,\r\n        x = this,\r\n        xc = x.c,\r\n        yc = (y = new BigNumber(y, b)).c;\r\n\r\n      // Either NaN, ±Infinity or ±0?\r\n      if (!xc || !yc || !xc[0] || !yc[0]) {\r\n\r\n        // Return NaN if either is NaN, or one is 0 and the other is Infinity.\r\n        if (!x.s || !y.s || xc && !xc[0] && !yc || yc && !yc[0] && !xc) {\r\n          y.c = y.e = y.s = null;\r\n        } else {\r\n          y.s *= x.s;\r\n\r\n          // Return ±Infinity if either is ±Infinity.\r\n          if (!xc || !yc) {\r\n            y.c = y.e = null;\r\n\r\n          // Return ±0 if either is ±0.\r\n          } else {\r\n            y.c = [0];\r\n            y.e = 0;\r\n          }\r\n        }\r\n\r\n        return y;\r\n      }\r\n\r\n      e = bitFloor(x.e / LOG_BASE) + bitFloor(y.e / LOG_BASE);\r\n      y.s *= x.s;\r\n      xcL = xc.length;\r\n      ycL = yc.length;\r\n\r\n      // Ensure xc points to longer array and xcL to its length.\r\n      if (xcL < ycL) {\r\n        zc = xc;\r\n        xc = yc;\r\n        yc = zc;\r\n        i = xcL;\r\n        xcL = ycL;\r\n        ycL = i;\r\n      }\r\n\r\n      // Initialise the result array with zeros.\r\n      for (i = xcL + ycL, zc = []; i--; zc.push(0));\r\n\r\n      base = BASE;\r\n      sqrtBase = SQRT_BASE;\r\n\r\n      for (i = ycL; --i >= 0;) {\r\n        c = 0;\r\n        ylo = yc[i] % sqrtBase;\r\n        yhi = yc[i] / sqrtBase | 0;\r\n\r\n        for (k = xcL, j = i + k; j > i;) {\r\n          xlo = xc[--k] % sqrtBase;\r\n          xhi = xc[k] / sqrtBase | 0;\r\n          m = yhi * xlo + xhi * ylo;\r\n          xlo = ylo * xlo + ((m % sqrtBase) * sqrtBase) + zc[j] + c;\r\n          c = (xlo / base | 0) + (m / sqrtBase | 0) + yhi * xhi;\r\n          zc[j--] = xlo % base;\r\n        }\r\n\r\n        zc[j] = c;\r\n      }\r\n\r\n      if (c) {\r\n        ++e;\r\n      } else {\r\n        zc.splice(0, 1);\r\n      }\r\n\r\n      return normalise(y, zc, e);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a new BigNumber whose value is the value of this BigNumber negated,\r\n     * i.e. multiplied by -1.\r\n     */\r\n    P.negated = function () {\r\n      var x = new BigNumber(this);\r\n      x.s = -x.s || null;\r\n      return x;\r\n    };\r\n\r\n\r\n    /*\r\n     *  n + 0 = n\r\n     *  n + N = N\r\n     *  n + I = I\r\n     *  0 + n = n\r\n     *  0 + 0 = 0\r\n     *  0 + N = N\r\n     *  0 + I = I\r\n     *  N + n = N\r\n     *  N + 0 = N\r\n     *  N + N = N\r\n     *  N + I = N\r\n     *  I + n = I\r\n     *  I + 0 = I\r\n     *  I + N = N\r\n     *  I + I = I\r\n     *\r\n     * Return a new BigNumber whose value is the value of this BigNumber plus the value of\r\n     * BigNumber(y, b).\r\n     */\r\n    P.plus = function (y, b) {\r\n      var t,\r\n        x = this,\r\n        a = x.s;\r\n\r\n      y = new BigNumber(y, b);\r\n      b = y.s;\r\n\r\n      // Either NaN?\r\n      if (!a || !b) return new BigNumber(NaN);\r\n\r\n      // Signs differ?\r\n       if (a != b) {\r\n        y.s = -b;\r\n        return x.minus(y);\r\n      }\r\n\r\n      var xe = x.e / LOG_BASE,\r\n        ye = y.e / LOG_BASE,\r\n        xc = x.c,\r\n        yc = y.c;\r\n\r\n      if (!xe || !ye) {\r\n\r\n        // Return ±Infinity if either ±Infinity.\r\n        if (!xc || !yc) return new BigNumber(a / 0);\r\n\r\n        // Either zero?\r\n        // Return y if y is non-zero, x if x is non-zero, or zero if both are zero.\r\n        if (!xc[0] || !yc[0]) return yc[0] ? y : new BigNumber(xc[0] ? x : a * 0);\r\n      }\r\n\r\n      xe = bitFloor(xe);\r\n      ye = bitFloor(ye);\r\n      xc = xc.slice();\r\n\r\n      // Prepend zeros to equalise exponents. Faster to use reverse then do unshifts.\r\n      if (a = xe - ye) {\r\n        if (a > 0) {\r\n          ye = xe;\r\n          t = yc;\r\n        } else {\r\n          a = -a;\r\n          t = xc;\r\n        }\r\n\r\n        t.reverse();\r\n        for (; a--; t.push(0));\r\n        t.reverse();\r\n      }\r\n\r\n      a = xc.length;\r\n      b = yc.length;\r\n\r\n      // Point xc to the longer array, and b to the shorter length.\r\n      if (a - b < 0) {\r\n        t = yc;\r\n        yc = xc;\r\n        xc = t;\r\n        b = a;\r\n      }\r\n\r\n      // Only start adding at yc.length - 1 as the further digits of xc can be ignored.\r\n      for (a = 0; b;) {\r\n        a = (xc[--b] = xc[b] + yc[b] + a) / BASE | 0;\r\n        xc[b] = BASE === xc[b] ? 0 : xc[b] % BASE;\r\n      }\r\n\r\n      if (a) {\r\n        xc = [a].concat(xc);\r\n        ++ye;\r\n      }\r\n\r\n      // No need to check for zero, as +x + +y != 0 && -x + -y != 0\r\n      // ye = MAX_EXP + 1 possible\r\n      return normalise(y, xc, ye);\r\n    };\r\n\r\n\r\n    /*\r\n     * If sd is undefined or null or true or false, return the number of significant digits of\r\n     * the value of this BigNumber, or null if the value of this BigNumber is ±Infinity or NaN.\r\n     * If sd is true include integer-part trailing zeros in the count.\r\n     *\r\n     * Otherwise, if sd is a number, return a new BigNumber whose value is the value of this\r\n     * BigNumber rounded to a maximum of sd significant digits using rounding mode rm, or\r\n     * ROUNDING_MODE if rm is omitted.\r\n     *\r\n     * sd {number|boolean} number: significant digits: integer, 1 to MAX inclusive.\r\n     *                     boolean: whether to count integer-part trailing zeros: true or false.\r\n     * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {sd|rm}'\r\n     */\r\n    P.precision = P.sd = function (sd, rm) {\r\n      var c, n, v,\r\n        x = this;\r\n\r\n      if (sd != null && sd !== !!sd) {\r\n        intCheck(sd, 1, MAX);\r\n        if (rm == null) rm = ROUNDING_MODE;\r\n        else intCheck(rm, 0, 8);\r\n\r\n        return round(new BigNumber(x), sd, rm);\r\n      }\r\n\r\n      if (!(c = x.c)) return null;\r\n      v = c.length - 1;\r\n      n = v * LOG_BASE + 1;\r\n\r\n      if (v = c[v]) {\r\n\r\n        // Subtract the number of trailing zeros of the last element.\r\n        for (; v % 10 == 0; v /= 10, n--);\r\n\r\n        // Add the number of digits of the first element.\r\n        for (v = c[0]; v >= 10; v /= 10, n++);\r\n      }\r\n\r\n      if (sd && x.e + 1 > n) n = x.e + 1;\r\n\r\n      return n;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a new BigNumber whose value is the value of this BigNumber shifted by k places\r\n     * (powers of 10). Shift to the right if n > 0, and to the left if n < 0.\r\n     *\r\n     * k {number} Integer, -MAX_SAFE_INTEGER to MAX_SAFE_INTEGER inclusive.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {k}'\r\n     */\r\n    P.shiftedBy = function (k) {\r\n      intCheck(k, -MAX_SAFE_INTEGER, MAX_SAFE_INTEGER);\r\n      return this.times('1e' + k);\r\n    };\r\n\r\n\r\n    /*\r\n     *  sqrt(-n) =  N\r\n     *  sqrt(N) =  N\r\n     *  sqrt(-I) =  N\r\n     *  sqrt(I) =  I\r\n     *  sqrt(0) =  0\r\n     *  sqrt(-0) = -0\r\n     *\r\n     * Return a new BigNumber whose value is the square root of the value of this BigNumber,\r\n     * rounded according to DECIMAL_PLACES and ROUNDING_MODE.\r\n     */\r\n    P.squareRoot = P.sqrt = function () {\r\n      var m, n, r, rep, t,\r\n        x = this,\r\n        c = x.c,\r\n        s = x.s,\r\n        e = x.e,\r\n        dp = DECIMAL_PLACES + 4,\r\n        half = new BigNumber('0.5');\r\n\r\n      // Negative/NaN/Infinity/zero?\r\n      if (s !== 1 || !c || !c[0]) {\r\n        return new BigNumber(!s || s < 0 && (!c || c[0]) ? NaN : c ? x : 1 / 0);\r\n      }\r\n\r\n      // Initial estimate.\r\n      s = Math.sqrt(+valueOf(x));\r\n\r\n      // Math.sqrt underflow/overflow?\r\n      // Pass x to Math.sqrt as integer, then adjust the exponent of the result.\r\n      if (s == 0 || s == 1 / 0) {\r\n        n = coeffToString(c);\r\n        if ((n.length + e) % 2 == 0) n += '0';\r\n        s = Math.sqrt(+n);\r\n        e = bitFloor((e + 1) / 2) - (e < 0 || e % 2);\r\n\r\n        if (s == 1 / 0) {\r\n          n = '5e' + e;\r\n        } else {\r\n          n = s.toExponential();\r\n          n = n.slice(0, n.indexOf('e') + 1) + e;\r\n        }\r\n\r\n        r = new BigNumber(n);\r\n      } else {\r\n        r = new BigNumber(s + '');\r\n      }\r\n\r\n      // Check for zero.\r\n      // r could be zero if MIN_EXP is changed after the this value was created.\r\n      // This would cause a division by zero (x/t) and hence Infinity below, which would cause\r\n      // coeffToString to throw.\r\n      if (r.c[0]) {\r\n        e = r.e;\r\n        s = e + dp;\r\n        if (s < 3) s = 0;\r\n\r\n        // Newton-Raphson iteration.\r\n        for (; ;) {\r\n          t = r;\r\n          r = half.times(t.plus(div(x, t, dp, 1)));\r\n\r\n          if (coeffToString(t.c).slice(0, s) === (n = coeffToString(r.c)).slice(0, s)) {\r\n\r\n            // The exponent of r may here be one less than the final result exponent,\r\n            // e.g 0.0009999 (e-4) --> 0.001 (e-3), so adjust s so the rounding digits\r\n            // are indexed correctly.\r\n            if (r.e < e) --s;\r\n            n = n.slice(s - 3, s + 1);\r\n\r\n            // The 4th rounding digit may be in error by -1 so if the 4 rounding digits\r\n            // are 9999 or 4999 (i.e. approaching a rounding boundary) continue the\r\n            // iteration.\r\n            if (n == '9999' || !rep && n == '4999') {\r\n\r\n              // On the first iteration only, check to see if rounding up gives the\r\n              // exact result as the nines may infinitely repeat.\r\n              if (!rep) {\r\n                round(t, t.e + DECIMAL_PLACES + 2, 0);\r\n\r\n                if (t.times(t).eq(x)) {\r\n                  r = t;\r\n                  break;\r\n                }\r\n              }\r\n\r\n              dp += 4;\r\n              s += 4;\r\n              rep = 1;\r\n            } else {\r\n\r\n              // If rounding digits are null, 0{0,4} or 50{0,3}, check for exact\r\n              // result. If not, then there are further digits and m will be truthy.\r\n              if (!+n || !+n.slice(1) && n.charAt(0) == '5') {\r\n\r\n                // Truncate to the first rounding digit.\r\n                round(r, r.e + DECIMAL_PLACES + 2, 1);\r\n                m = !r.times(r).eq(x);\r\n              }\r\n\r\n              break;\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      return round(r, r.e + DECIMAL_PLACES + 1, ROUNDING_MODE, m);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a string representing the value of this BigNumber in exponential notation and\r\n     * rounded using ROUNDING_MODE to dp fixed decimal places.\r\n     *\r\n     * [dp] {number} Decimal places. Integer, 0 to MAX inclusive.\r\n     * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp|rm}'\r\n     */\r\n    P.toExponential = function (dp, rm) {\r\n      if (dp != null) {\r\n        intCheck(dp, 0, MAX);\r\n        dp++;\r\n      }\r\n      return format(this, dp, rm, 1);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a string representing the value of this BigNumber in fixed-point notation rounding\r\n     * to dp fixed decimal places using rounding mode rm, or ROUNDING_MODE if rm is omitted.\r\n     *\r\n     * Note: as with JavaScript's number type, (-0).toFixed(0) is '0',\r\n     * but e.g. (-0.00001).toFixed(0) is '-0'.\r\n     *\r\n     * [dp] {number} Decimal places. Integer, 0 to MAX inclusive.\r\n     * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp|rm}'\r\n     */\r\n    P.toFixed = function (dp, rm) {\r\n      if (dp != null) {\r\n        intCheck(dp, 0, MAX);\r\n        dp = dp + this.e + 1;\r\n      }\r\n      return format(this, dp, rm);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a string representing the value of this BigNumber in fixed-point notation rounded\r\n     * using rm or ROUNDING_MODE to dp decimal places, and formatted according to the properties\r\n     * of the format or FORMAT object (see BigNumber.set).\r\n     *\r\n     * The formatting object may contain some or all of the properties shown below.\r\n     *\r\n     * FORMAT = {\r\n     *   prefix: '',\r\n     *   groupSize: 3,\r\n     *   secondaryGroupSize: 0,\r\n     *   groupSeparator: ',',\r\n     *   decimalSeparator: '.',\r\n     *   fractionGroupSize: 0,\r\n     *   fractionGroupSeparator: '\\xA0',      // non-breaking space\r\n     *   suffix: ''\r\n     * };\r\n     *\r\n     * [dp] {number} Decimal places. Integer, 0 to MAX inclusive.\r\n     * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n     * [format] {object} Formatting options. See FORMAT pbject above.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp|rm}'\r\n     * '[BigNumber Error] Argument not an object: {format}'\r\n     */\r\n    P.toFormat = function (dp, rm, format) {\r\n      var str,\r\n        x = this;\r\n\r\n      if (format == null) {\r\n        if (dp != null && rm && typeof rm == 'object') {\r\n          format = rm;\r\n          rm = null;\r\n        } else if (dp && typeof dp == 'object') {\r\n          format = dp;\r\n          dp = rm = null;\r\n        } else {\r\n          format = FORMAT;\r\n        }\r\n      } else if (typeof format != 'object') {\r\n        throw Error\r\n          (bignumberError + 'Argument not an object: ' + format);\r\n      }\r\n\r\n      str = x.toFixed(dp, rm);\r\n\r\n      if (x.c) {\r\n        var i,\r\n          arr = str.split('.'),\r\n          g1 = +format.groupSize,\r\n          g2 = +format.secondaryGroupSize,\r\n          groupSeparator = format.groupSeparator || '',\r\n          intPart = arr[0],\r\n          fractionPart = arr[1],\r\n          isNeg = x.s < 0,\r\n          intDigits = isNeg ? intPart.slice(1) : intPart,\r\n          len = intDigits.length;\r\n\r\n        if (g2) {\r\n          i = g1;\r\n          g1 = g2;\r\n          g2 = i;\r\n          len -= i;\r\n        }\r\n\r\n        if (g1 > 0 && len > 0) {\r\n          i = len % g1 || g1;\r\n          intPart = intDigits.substr(0, i);\r\n          for (; i < len; i += g1) intPart += groupSeparator + intDigits.substr(i, g1);\r\n          if (g2 > 0) intPart += groupSeparator + intDigits.slice(i);\r\n          if (isNeg) intPart = '-' + intPart;\r\n        }\r\n\r\n        str = fractionPart\r\n         ? intPart + (format.decimalSeparator || '') + ((g2 = +format.fractionGroupSize)\r\n          ? fractionPart.replace(new RegExp('\\\\d{' + g2 + '}\\\\B', 'g'),\r\n           '$&' + (format.fractionGroupSeparator || ''))\r\n          : fractionPart)\r\n         : intPart;\r\n      }\r\n\r\n      return (format.prefix || '') + str + (format.suffix || '');\r\n    };\r\n\r\n\r\n    /*\r\n     * Return an array of two BigNumbers representing the value of this BigNumber as a simple\r\n     * fraction with an integer numerator and an integer denominator.\r\n     * The denominator will be a positive non-zero value less than or equal to the specified\r\n     * maximum denominator. If a maximum denominator is not specified, the denominator will be\r\n     * the lowest value necessary to represent the number exactly.\r\n     *\r\n     * [md] {number|string|BigNumber} Integer >= 1, or Infinity. The maximum denominator.\r\n     *\r\n     * '[BigNumber Error] Argument {not an integer|out of range} : {md}'\r\n     */\r\n    P.toFraction = function (md) {\r\n      var d, d0, d1, d2, e, exp, n, n0, n1, q, r, s,\r\n        x = this,\r\n        xc = x.c;\r\n\r\n      if (md != null) {\r\n        n = new BigNumber(md);\r\n\r\n        // Throw if md is less than one or is not an integer, unless it is Infinity.\r\n        if (!n.isInteger() && (n.c || n.s !== 1) || n.lt(ONE)) {\r\n          throw Error\r\n            (bignumberError + 'Argument ' +\r\n              (n.isInteger() ? 'out of range: ' : 'not an integer: ') + valueOf(n));\r\n        }\r\n      }\r\n\r\n      if (!xc) return new BigNumber(x);\r\n\r\n      d = new BigNumber(ONE);\r\n      n1 = d0 = new BigNumber(ONE);\r\n      d1 = n0 = new BigNumber(ONE);\r\n      s = coeffToString(xc);\r\n\r\n      // Determine initial denominator.\r\n      // d is a power of 10 and the minimum max denominator that specifies the value exactly.\r\n      e = d.e = s.length - x.e - 1;\r\n      d.c[0] = POWS_TEN[(exp = e % LOG_BASE) < 0 ? LOG_BASE + exp : exp];\r\n      md = !md || n.comparedTo(d) > 0 ? (e > 0 ? d : n1) : n;\r\n\r\n      exp = MAX_EXP;\r\n      MAX_EXP = 1 / 0;\r\n      n = new BigNumber(s);\r\n\r\n      // n0 = d1 = 0\r\n      n0.c[0] = 0;\r\n\r\n      for (; ;)  {\r\n        q = div(n, d, 0, 1);\r\n        d2 = d0.plus(q.times(d1));\r\n        if (d2.comparedTo(md) == 1) break;\r\n        d0 = d1;\r\n        d1 = d2;\r\n        n1 = n0.plus(q.times(d2 = n1));\r\n        n0 = d2;\r\n        d = n.minus(q.times(d2 = d));\r\n        n = d2;\r\n      }\r\n\r\n      d2 = div(md.minus(d0), d1, 0, 1);\r\n      n0 = n0.plus(d2.times(n1));\r\n      d0 = d0.plus(d2.times(d1));\r\n      n0.s = n1.s = x.s;\r\n      e = e * 2;\r\n\r\n      // Determine which fraction is closer to x, n0/d0 or n1/d1\r\n      r = div(n1, d1, e, ROUNDING_MODE).minus(x).abs().comparedTo(\r\n          div(n0, d0, e, ROUNDING_MODE).minus(x).abs()) < 1 ? [n1, d1] : [n0, d0];\r\n\r\n      MAX_EXP = exp;\r\n\r\n      return r;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return the value of this BigNumber converted to a number primitive.\r\n     */\r\n    P.toNumber = function () {\r\n      return +valueOf(this);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a string representing the value of this BigNumber rounded to sd significant digits\r\n     * using rounding mode rm or ROUNDING_MODE. If sd is less than the number of digits\r\n     * necessary to represent the integer part of the value in fixed-point notation, then use\r\n     * exponential notation.\r\n     *\r\n     * [sd] {number} Significant digits. Integer, 1 to MAX inclusive.\r\n     * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {sd|rm}'\r\n     */\r\n    P.toPrecision = function (sd, rm) {\r\n      if (sd != null) intCheck(sd, 1, MAX);\r\n      return format(this, sd, rm, 2);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a string representing the value of this BigNumber in base b, or base 10 if b is\r\n     * omitted. If a base is specified, including base 10, round according to DECIMAL_PLACES and\r\n     * ROUNDING_MODE. If a base is not specified, and this BigNumber has a positive exponent\r\n     * that is equal to or greater than TO_EXP_POS, or a negative exponent equal to or less than\r\n     * TO_EXP_NEG, return exponential notation.\r\n     *\r\n     * [b] {number} Integer, 2 to ALPHABET.length inclusive.\r\n     *\r\n     * '[BigNumber Error] Base {not a primitive number|not an integer|out of range}: {b}'\r\n     */\r\n    P.toString = function (b) {\r\n      var str,\r\n        n = this,\r\n        s = n.s,\r\n        e = n.e;\r\n\r\n      // Infinity or NaN?\r\n      if (e === null) {\r\n        if (s) {\r\n          str = 'Infinity';\r\n          if (s < 0) str = '-' + str;\r\n        } else {\r\n          str = 'NaN';\r\n        }\r\n      } else {\r\n        if (b == null) {\r\n          str = e <= TO_EXP_NEG || e >= TO_EXP_POS\r\n           ? toExponential(coeffToString(n.c), e)\r\n           : toFixedPoint(coeffToString(n.c), e, '0');\r\n        } else if (b === 10 && alphabetHasNormalDecimalDigits) {\r\n          n = round(new BigNumber(n), DECIMAL_PLACES + e + 1, ROUNDING_MODE);\r\n          str = toFixedPoint(coeffToString(n.c), n.e, '0');\r\n        } else {\r\n          intCheck(b, 2, ALPHABET.length, 'Base');\r\n          str = convertBase(toFixedPoint(coeffToString(n.c), e, '0'), 10, b, s, true);\r\n        }\r\n\r\n        if (s < 0 && n.c[0]) str = '-' + str;\r\n      }\r\n\r\n      return str;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return as toString, but do not accept a base argument, and include the minus sign for\r\n     * negative zero.\r\n     */\r\n    P.valueOf = P.toJSON = function () {\r\n      return valueOf(this);\r\n    };\r\n\r\n\r\n    P._isBigNumber = true;\r\n\r\n    if (configObject != null) BigNumber.set(configObject);\r\n\r\n    return BigNumber;\r\n  }\r\n\r\n\r\n  // PRIVATE HELPER FUNCTIONS\r\n\r\n  // These functions don't need access to variables,\r\n  // e.g. DECIMAL_PLACES, in the scope of the `clone` function above.\r\n\r\n\r\n  function bitFloor(n) {\r\n    var i = n | 0;\r\n    return n > 0 || n === i ? i : i - 1;\r\n  }\r\n\r\n\r\n  // Return a coefficient array as a string of base 10 digits.\r\n  function coeffToString(a) {\r\n    var s, z,\r\n      i = 1,\r\n      j = a.length,\r\n      r = a[0] + '';\r\n\r\n    for (; i < j;) {\r\n      s = a[i++] + '';\r\n      z = LOG_BASE - s.length;\r\n      for (; z--; s = '0' + s);\r\n      r += s;\r\n    }\r\n\r\n    // Determine trailing zeros.\r\n    for (j = r.length; r.charCodeAt(--j) === 48;);\r\n\r\n    return r.slice(0, j + 1 || 1);\r\n  }\r\n\r\n\r\n  // Compare the value of BigNumbers x and y.\r\n  function compare(x, y) {\r\n    var a, b,\r\n      xc = x.c,\r\n      yc = y.c,\r\n      i = x.s,\r\n      j = y.s,\r\n      k = x.e,\r\n      l = y.e;\r\n\r\n    // Either NaN?\r\n    if (!i || !j) return null;\r\n\r\n    a = xc && !xc[0];\r\n    b = yc && !yc[0];\r\n\r\n    // Either zero?\r\n    if (a || b) return a ? b ? 0 : -j : i;\r\n\r\n    // Signs differ?\r\n    if (i != j) return i;\r\n\r\n    a = i < 0;\r\n    b = k == l;\r\n\r\n    // Either Infinity?\r\n    if (!xc || !yc) return b ? 0 : !xc ^ a ? 1 : -1;\r\n\r\n    // Compare exponents.\r\n    if (!b) return k > l ^ a ? 1 : -1;\r\n\r\n    j = (k = xc.length) < (l = yc.length) ? k : l;\r\n\r\n    // Compare digit by digit.\r\n    for (i = 0; i < j; i++) if (xc[i] != yc[i]) return xc[i] > yc[i] ^ a ? 1 : -1;\r\n\r\n    // Compare lengths.\r\n    return k == l ? 0 : k > l ^ a ? 1 : -1;\r\n  }\r\n\r\n\r\n  /*\r\n   * Check that n is a primitive number, an integer, and in range, otherwise throw.\r\n   */\r\n  function intCheck(n, min, max, name) {\r\n    if (n < min || n > max || n !== mathfloor(n)) {\r\n      throw Error\r\n       (bignumberError + (name || 'Argument') + (typeof n == 'number'\r\n         ? n < min || n > max ? ' out of range: ' : ' not an integer: '\r\n         : ' not a primitive number: ') + String(n));\r\n    }\r\n  }\r\n\r\n\r\n  // Assumes finite n.\r\n  function isOdd(n) {\r\n    var k = n.c.length - 1;\r\n    return bitFloor(n.e / LOG_BASE) == k && n.c[k] % 2 != 0;\r\n  }\r\n\r\n\r\n  function toExponential(str, e) {\r\n    return (str.length > 1 ? str.charAt(0) + '.' + str.slice(1) : str) +\r\n     (e < 0 ? 'e' : 'e+') + e;\r\n  }\r\n\r\n\r\n  function toFixedPoint(str, e, z) {\r\n    var len, zs;\r\n\r\n    // Negative exponent?\r\n    if (e < 0) {\r\n\r\n      // Prepend zeros.\r\n      for (zs = z + '.'; ++e; zs += z);\r\n      str = zs + str;\r\n\r\n    // Positive exponent\r\n    } else {\r\n      len = str.length;\r\n\r\n      // Append zeros.\r\n      if (++e > len) {\r\n        for (zs = z, e -= len; --e; zs += z);\r\n        str += zs;\r\n      } else if (e < len) {\r\n        str = str.slice(0, e) + '.' + str.slice(e);\r\n      }\r\n    }\r\n\r\n    return str;\r\n  }\r\n\r\n\r\n  // EXPORT\r\n\r\n\r\n  BigNumber = clone();\r\n  BigNumber['default'] = BigNumber.BigNumber = BigNumber;\r\n\r\n  // AMD.\r\n  if (typeof define == 'function' && define.amd) {\r\n    define(function () { return BigNumber; });\r\n\r\n  // Node.js and other environments that support module.exports.\r\n  } else if (typeof module != 'undefined' && module.exports) {\r\n    module.exports = BigNumber;\r\n\r\n  // Browser.\r\n  } else {\r\n    if (!globalObject) {\r\n      globalObject = typeof self != 'undefined' && self ? self : window;\r\n    }\r\n\r\n    globalObject.BigNumber = BigNumber;\r\n  }\r\n})(this);\r\n","var BigNumber = require('bignumber.js');\n\n/*\n    json2.js\n    2013-05-26\n\n    Public Domain.\n\n    NO WARRANTY EXPRESSED OR IMPLIED. USE AT YOUR OWN RISK.\n\n    See http://www.JSON.org/js.html\n\n\n    This code should be minified before deployment.\n    See http://javascript.crockford.com/jsmin.html\n\n    USE YOUR OWN COPY. IT IS EXTREMELY UNWISE TO LOAD CODE FROM SERVERS YOU DO\n    NOT CONTROL.\n\n\n    This file creates a global JSON object containing two methods: stringify\n    and parse.\n\n        JSON.stringify(value, replacer, space)\n            value       any JavaScript value, usually an object or array.\n\n            replacer    an optional parameter that determines how object\n                        values are stringified for objects. It can be a\n                        function or an array of strings.\n\n            space       an optional parameter that specifies the indentation\n                        of nested structures. If it is omitted, the text will\n                        be packed without extra whitespace. If it is a number,\n                        it will specify the number of spaces to indent at each\n                        level. If it is a string (such as '\\t' or '&nbsp;'),\n                        it contains the characters used to indent at each level.\n\n            This method produces a JSON text from a JavaScript value.\n\n            When an object value is found, if the object contains a toJSON\n            method, its toJSON method will be called and the result will be\n            stringified. A toJSON method does not serialize: it returns the\n            value represented by the name/value pair that should be serialized,\n            or undefined if nothing should be serialized. The toJSON method\n            will be passed the key associated with the value, and this will be\n            bound to the value\n\n            For example, this would serialize Dates as ISO strings.\n\n                Date.prototype.toJSON = function (key) {\n                    function f(n) {\n                        // Format integers to have at least two digits.\n                        return n < 10 ? '0' + n : n;\n                    }\n\n                    return this.getUTCFullYear()   + '-' +\n                         f(this.getUTCMonth() + 1) + '-' +\n                         f(this.getUTCDate())      + 'T' +\n                         f(this.getUTCHours())     + ':' +\n                         f(this.getUTCMinutes())   + ':' +\n                         f(this.getUTCSeconds())   + 'Z';\n                };\n\n            You can provide an optional replacer method. It will be passed the\n            key and value of each member, with this bound to the containing\n            object. The value that is returned from your method will be\n            serialized. If your method returns undefined, then the member will\n            be excluded from the serialization.\n\n            If the replacer parameter is an array of strings, then it will be\n            used to select the members to be serialized. It filters the results\n            such that only members with keys listed in the replacer array are\n            stringified.\n\n            Values that do not have JSON representations, such as undefined or\n            functions, will not be serialized. Such values in objects will be\n            dropped; in arrays they will be replaced with null. You can use\n            a replacer function to replace those with JSON values.\n            JSON.stringify(undefined) returns undefined.\n\n            The optional space parameter produces a stringification of the\n            value that is filled with line breaks and indentation to make it\n            easier to read.\n\n            If the space parameter is a non-empty string, then that string will\n            be used for indentation. If the space parameter is a number, then\n            the indentation will be that many spaces.\n\n            Example:\n\n            text = JSON.stringify(['e', {pluribus: 'unum'}]);\n            // text is '[\"e\",{\"pluribus\":\"unum\"}]'\n\n\n            text = JSON.stringify(['e', {pluribus: 'unum'}], null, '\\t');\n            // text is '[\\n\\t\"e\",\\n\\t{\\n\\t\\t\"pluribus\": \"unum\"\\n\\t}\\n]'\n\n            text = JSON.stringify([new Date()], function (key, value) {\n                return this[key] instanceof Date ?\n                    'Date(' + this[key] + ')' : value;\n            });\n            // text is '[\"Date(---current time---)\"]'\n\n\n        JSON.parse(text, reviver)\n            This method parses a JSON text to produce an object or array.\n            It can throw a SyntaxError exception.\n\n            The optional reviver parameter is a function that can filter and\n            transform the results. It receives each of the keys and values,\n            and its return value is used instead of the original value.\n            If it returns what it received, then the structure is not modified.\n            If it returns undefined then the member is deleted.\n\n            Example:\n\n            // Parse the text. Values that look like ISO date strings will\n            // be converted to Date objects.\n\n            myData = JSON.parse(text, function (key, value) {\n                var a;\n                if (typeof value === 'string') {\n                    a =\n/^(\\d{4})-(\\d{2})-(\\d{2})T(\\d{2}):(\\d{2}):(\\d{2}(?:\\.\\d*)?)Z$/.exec(value);\n                    if (a) {\n                        return new Date(Date.UTC(+a[1], +a[2] - 1, +a[3], +a[4],\n                            +a[5], +a[6]));\n                    }\n                }\n                return value;\n            });\n\n            myData = JSON.parse('[\"Date(09/09/2001)\"]', function (key, value) {\n                var d;\n                if (typeof value === 'string' &&\n                        value.slice(0, 5) === 'Date(' &&\n                        value.slice(-1) === ')') {\n                    d = new Date(value.slice(5, -1));\n                    if (d) {\n                        return d;\n                    }\n                }\n                return value;\n            });\n\n\n    This is a reference implementation. You are free to copy, modify, or\n    redistribute.\n*/\n\n/*jslint evil: true, regexp: true */\n\n/*members \"\", \"\\b\", \"\\t\", \"\\n\", \"\\f\", \"\\r\", \"\\\"\", JSON, \"\\\\\", apply,\n    call, charCodeAt, getUTCDate, getUTCFullYear, getUTCHours,\n    getUTCMinutes, getUTCMonth, getUTCSeconds, hasOwnProperty, join,\n    lastIndex, length, parse, prototype, push, replace, slice, stringify,\n    test, toJSON, toString, valueOf\n*/\n\n\n// Create a JSON object only if one does not already exist. We create the\n// methods in a closure to avoid creating global variables.\n\nvar JSON = module.exports;\n\n(function () {\n    'use strict';\n\n    function f(n) {\n        // Format integers to have at least two digits.\n        return n < 10 ? '0' + n : n;\n    }\n\n    var cx = /[\\u0000\\u00ad\\u0600-\\u0604\\u070f\\u17b4\\u17b5\\u200c-\\u200f\\u2028-\\u202f\\u2060-\\u206f\\ufeff\\ufff0-\\uffff]/g,\n        escapable = /[\\\\\\\"\\x00-\\x1f\\x7f-\\x9f\\u00ad\\u0600-\\u0604\\u070f\\u17b4\\u17b5\\u200c-\\u200f\\u2028-\\u202f\\u2060-\\u206f\\ufeff\\ufff0-\\uffff]/g,\n        gap,\n        indent,\n        meta = {    // table of character substitutions\n            '\\b': '\\\\b',\n            '\\t': '\\\\t',\n            '\\n': '\\\\n',\n            '\\f': '\\\\f',\n            '\\r': '\\\\r',\n            '\"' : '\\\\\"',\n            '\\\\': '\\\\\\\\'\n        },\n        rep;\n\n\n    function quote(string) {\n\n// If the string contains no control characters, no quote characters, and no\n// backslash characters, then we can safely slap some quotes around it.\n// Otherwise we must also replace the offending characters with safe escape\n// sequences.\n\n        escapable.lastIndex = 0;\n        return escapable.test(string) ? '\"' + string.replace(escapable, function (a) {\n            var c = meta[a];\n            return typeof c === 'string'\n                ? c\n                : '\\\\u' + ('0000' + a.charCodeAt(0).toString(16)).slice(-4);\n        }) + '\"' : '\"' + string + '\"';\n    }\n\n\n    function str(key, holder) {\n\n// Produce a string from holder[key].\n\n        var i,          // The loop counter.\n            k,          // The member key.\n            v,          // The member value.\n            length,\n            mind = gap,\n            partial,\n            value = holder[key],\n            isBigNumber = value != null && (value instanceof BigNumber || BigNumber.isBigNumber(value));\n\n// If the value has a toJSON method, call it to obtain a replacement value.\n\n        if (value && typeof value === 'object' &&\n                typeof value.toJSON === 'function') {\n            value = value.toJSON(key);\n        }\n\n// If we were called with a replacer function, then call the replacer to\n// obtain a replacement value.\n\n        if (typeof rep === 'function') {\n            value = rep.call(holder, key, value);\n        }\n\n// What happens next depends on the value's type.\n\n        switch (typeof value) {\n        case 'string':\n            if (isBigNumber) {\n                return value;\n            } else {\n                return quote(value);\n            }\n\n        case 'number':\n\n// JSON numbers must be finite. Encode non-finite numbers as null.\n\n            return isFinite(value) ? String(value) : 'null';\n\n        case 'boolean':\n        case 'null':\n        case 'bigint':\n\n// If the value is a boolean or null, convert it to a string. Note:\n// typeof null does not produce 'null'. The case is included here in\n// the remote chance that this gets fixed someday.\n\n            return String(value);\n\n// If the type is 'object', we might be dealing with an object or an array or\n// null.\n\n        case 'object':\n\n// Due to a specification blunder in ECMAScript, typeof null is 'object',\n// so watch out for that case.\n\n            if (!value) {\n                return 'null';\n            }\n\n// Make an array to hold the partial results of stringifying this object value.\n\n            gap += indent;\n            partial = [];\n\n// Is the value an array?\n\n            if (Object.prototype.toString.apply(value) === '[object Array]') {\n\n// The value is an array. Stringify every element. Use null as a placeholder\n// for non-JSON values.\n\n                length = value.length;\n                for (i = 0; i < length; i += 1) {\n                    partial[i] = str(i, value) || 'null';\n                }\n\n// Join all of the elements together, separated with commas, and wrap them in\n// brackets.\n\n                v = partial.length === 0\n                    ? '[]'\n                    : gap\n                    ? '[\\n' + gap + partial.join(',\\n' + gap) + '\\n' + mind + ']'\n                    : '[' + partial.join(',') + ']';\n                gap = mind;\n                return v;\n            }\n\n// If the replacer is an array, use it to select the members to be stringified.\n\n            if (rep && typeof rep === 'object') {\n                length = rep.length;\n                for (i = 0; i < length; i += 1) {\n                    if (typeof rep[i] === 'string') {\n                        k = rep[i];\n                        v = str(k, value);\n                        if (v) {\n                            partial.push(quote(k) + (gap ? ': ' : ':') + v);\n                        }\n                    }\n                }\n            } else {\n\n// Otherwise, iterate through all of the keys in the object.\n\n                Object.keys(value).forEach(function(k) {\n                    var v = str(k, value);\n                    if (v) {\n                        partial.push(quote(k) + (gap ? ': ' : ':') + v);\n                    }\n                });\n            }\n\n// Join all of the member texts together, separated with commas,\n// and wrap them in braces.\n\n            v = partial.length === 0\n                ? '{}'\n                : gap\n                ? '{\\n' + gap + partial.join(',\\n' + gap) + '\\n' + mind + '}'\n                : '{' + partial.join(',') + '}';\n            gap = mind;\n            return v;\n        }\n    }\n\n// If the JSON object does not yet have a stringify method, give it one.\n\n    if (typeof JSON.stringify !== 'function') {\n        JSON.stringify = function (value, replacer, space) {\n\n// The stringify method takes a value and an optional replacer, and an optional\n// space parameter, and returns a JSON text. The replacer can be a function\n// that can replace values, or an array of strings that will select the keys.\n// A default replacer method can be provided. Use of the space parameter can\n// produce text that is more easily readable.\n\n            var i;\n            gap = '';\n            indent = '';\n\n// If the space parameter is a number, make an indent string containing that\n// many spaces.\n\n            if (typeof space === 'number') {\n                for (i = 0; i < space; i += 1) {\n                    indent += ' ';\n                }\n\n// If the space parameter is a string, it will be used as the indent string.\n\n            } else if (typeof space === 'string') {\n                indent = space;\n            }\n\n// If there is a replacer, it must be a function or an array.\n// Otherwise, throw an error.\n\n            rep = replacer;\n            if (replacer && typeof replacer !== 'function' &&\n                    (typeof replacer !== 'object' ||\n                    typeof replacer.length !== 'number')) {\n                throw new Error('JSON.stringify');\n            }\n\n// Make a fake root object containing our value under the key of ''.\n// Return the result of stringifying the value.\n\n            return str('', {'': value});\n        };\n    }\n}());\n","var BigNumber = null;\n\n// regexpxs extracted from\n// (c) BSD-3-Clause\n// https://github.com/fastify/secure-json-parse/graphs/contributors and https://github.com/hapijs/bourne/graphs/contributors\n\nconst suspectProtoRx = /(?:_|\\\\u005[Ff])(?:_|\\\\u005[Ff])(?:p|\\\\u0070)(?:r|\\\\u0072)(?:o|\\\\u006[Ff])(?:t|\\\\u0074)(?:o|\\\\u006[Ff])(?:_|\\\\u005[Ff])(?:_|\\\\u005[Ff])/;\nconst suspectConstructorRx = /(?:c|\\\\u0063)(?:o|\\\\u006[Ff])(?:n|\\\\u006[Ee])(?:s|\\\\u0073)(?:t|\\\\u0074)(?:r|\\\\u0072)(?:u|\\\\u0075)(?:c|\\\\u0063)(?:t|\\\\u0074)(?:o|\\\\u006[Ff])(?:r|\\\\u0072)/;\n\n/*\n    json_parse.js\n    2012-06-20\n\n    Public Domain.\n\n    NO WARRANTY EXPRESSED OR IMPLIED. USE AT YOUR OWN RISK.\n\n    This file creates a json_parse function.\n    During create you can (optionally) specify some behavioural switches\n\n        require('json-bigint')(options)\n\n            The optional options parameter holds switches that drive certain\n            aspects of the parsing process:\n            * options.strict = true will warn about duplicate-key usage in the json.\n              The default (strict = false) will silently ignore those and overwrite\n              values for keys that are in duplicate use.\n\n    The resulting function follows this signature:\n        json_parse(text, reviver)\n            This method parses a JSON text to produce an object or array.\n            It can throw a SyntaxError exception.\n\n            The optional reviver parameter is a function that can filter and\n            transform the results. It receives each of the keys and values,\n            and its return value is used instead of the original value.\n            If it returns what it received, then the structure is not modified.\n            If it returns undefined then the member is deleted.\n\n            Example:\n\n            // Parse the text. Values that look like ISO date strings will\n            // be converted to Date objects.\n\n            myData = json_parse(text, function (key, value) {\n                var a;\n                if (typeof value === 'string') {\n                    a =\n/^(\\d{4})-(\\d{2})-(\\d{2})T(\\d{2}):(\\d{2}):(\\d{2}(?:\\.\\d*)?)Z$/.exec(value);\n                    if (a) {\n                        return new Date(Date.UTC(+a[1], +a[2] - 1, +a[3], +a[4],\n                            +a[5], +a[6]));\n                    }\n                }\n                return value;\n            });\n\n    This is a reference implementation. You are free to copy, modify, or\n    redistribute.\n\n    This code should be minified before deployment.\n    See http://javascript.crockford.com/jsmin.html\n\n    USE YOUR OWN COPY. IT IS EXTREMELY UNWISE TO LOAD CODE FROM SERVERS YOU DO\n    NOT CONTROL.\n*/\n\n/*members \"\", \"\\\"\", \"\\/\", \"\\\\\", at, b, call, charAt, f, fromCharCode,\n    hasOwnProperty, message, n, name, prototype, push, r, t, text\n*/\n\nvar json_parse = function (options) {\n  'use strict';\n\n  // This is a function that can parse a JSON text, producing a JavaScript\n  // data structure. It is a simple, recursive descent parser. It does not use\n  // eval or regular expressions, so it can be used as a model for implementing\n  // a JSON parser in other languages.\n\n  // We are defining the function inside of another function to avoid creating\n  // global variables.\n\n  // Default options one can override by passing options to the parse()\n  var _options = {\n    strict: false, // not being strict means do not generate syntax errors for \"duplicate key\"\n    storeAsString: false, // toggles whether the values should be stored as BigNumber (default) or a string\n    alwaysParseAsBig: false, // toggles whether all numbers should be Big\n    useNativeBigInt: false, // toggles whether to use native BigInt instead of bignumber.js\n    protoAction: 'error',\n    constructorAction: 'error',\n  };\n\n  // If there are options, then use them to override the default _options\n  if (options !== undefined && options !== null) {\n    if (options.strict === true) {\n      _options.strict = true;\n    }\n    if (options.storeAsString === true) {\n      _options.storeAsString = true;\n    }\n    _options.alwaysParseAsBig =\n      options.alwaysParseAsBig === true ? options.alwaysParseAsBig : false;\n    _options.useNativeBigInt =\n      options.useNativeBigInt === true ? options.useNativeBigInt : false;\n\n    if (typeof options.constructorAction !== 'undefined') {\n      if (\n        options.constructorAction === 'error' ||\n        options.constructorAction === 'ignore' ||\n        options.constructorAction === 'preserve'\n      ) {\n        _options.constructorAction = options.constructorAction;\n      } else {\n        throw new Error(\n          `Incorrect value for constructorAction option, must be \"error\", \"ignore\" or undefined but passed ${options.constructorAction}`\n        );\n      }\n    }\n\n    if (typeof options.protoAction !== 'undefined') {\n      if (\n        options.protoAction === 'error' ||\n        options.protoAction === 'ignore' ||\n        options.protoAction === 'preserve'\n      ) {\n        _options.protoAction = options.protoAction;\n      } else {\n        throw new Error(\n          `Incorrect value for protoAction option, must be \"error\", \"ignore\" or undefined but passed ${options.protoAction}`\n        );\n      }\n    }\n  }\n\n  var at, // The index of the current character\n    ch, // The current character\n    escapee = {\n      '\"': '\"',\n      '\\\\': '\\\\',\n      '/': '/',\n      b: '\\b',\n      f: '\\f',\n      n: '\\n',\n      r: '\\r',\n      t: '\\t',\n    },\n    text,\n    error = function (m) {\n      // Call error when something is wrong.\n\n      throw {\n        name: 'SyntaxError',\n        message: m,\n        at: at,\n        text: text,\n      };\n    },\n    next = function (c) {\n      // If a c parameter is provided, verify that it matches the current character.\n\n      if (c && c !== ch) {\n        error(\"Expected '\" + c + \"' instead of '\" + ch + \"'\");\n      }\n\n      // Get the next character. When there are no more characters,\n      // return the empty string.\n\n      ch = text.charAt(at);\n      at += 1;\n      return ch;\n    },\n    number = function () {\n      // Parse a number value.\n\n      var number,\n        string = '';\n\n      if (ch === '-') {\n        string = '-';\n        next('-');\n      }\n      while (ch >= '0' && ch <= '9') {\n        string += ch;\n        next();\n      }\n      if (ch === '.') {\n        string += '.';\n        while (next() && ch >= '0' && ch <= '9') {\n          string += ch;\n        }\n      }\n      if (ch === 'e' || ch === 'E') {\n        string += ch;\n        next();\n        if (ch === '-' || ch === '+') {\n          string += ch;\n          next();\n        }\n        while (ch >= '0' && ch <= '9') {\n          string += ch;\n          next();\n        }\n      }\n      number = +string;\n      if (!isFinite(number)) {\n        error('Bad number');\n      } else {\n        if (BigNumber == null) BigNumber = require('bignumber.js');\n        //if (number > 9007199254740992 || number < -9007199254740992)\n        // Bignumber has stricter check: everything with length > 15 digits disallowed\n        if (string.length > 15)\n          return _options.storeAsString\n            ? string\n            : _options.useNativeBigInt\n            ? BigInt(string)\n            : new BigNumber(string);\n        else\n          return !_options.alwaysParseAsBig\n            ? number\n            : _options.useNativeBigInt\n            ? BigInt(number)\n            : new BigNumber(number);\n      }\n    },\n    string = function () {\n      // Parse a string value.\n\n      var hex,\n        i,\n        string = '',\n        uffff;\n\n      // When parsing for string values, we must look for \" and \\ characters.\n\n      if (ch === '\"') {\n        var startAt = at;\n        while (next()) {\n          if (ch === '\"') {\n            if (at - 1 > startAt) string += text.substring(startAt, at - 1);\n            next();\n            return string;\n          }\n          if (ch === '\\\\') {\n            if (at - 1 > startAt) string += text.substring(startAt, at - 1);\n            next();\n            if (ch === 'u') {\n              uffff = 0;\n              for (i = 0; i < 4; i += 1) {\n                hex = parseInt(next(), 16);\n                if (!isFinite(hex)) {\n                  break;\n                }\n                uffff = uffff * 16 + hex;\n              }\n              string += String.fromCharCode(uffff);\n            } else if (typeof escapee[ch] === 'string') {\n              string += escapee[ch];\n            } else {\n              break;\n            }\n            startAt = at;\n          }\n        }\n      }\n      error('Bad string');\n    },\n    white = function () {\n      // Skip whitespace.\n\n      while (ch && ch <= ' ') {\n        next();\n      }\n    },\n    word = function () {\n      // true, false, or null.\n\n      switch (ch) {\n        case 't':\n          next('t');\n          next('r');\n          next('u');\n          next('e');\n          return true;\n        case 'f':\n          next('f');\n          next('a');\n          next('l');\n          next('s');\n          next('e');\n          return false;\n        case 'n':\n          next('n');\n          next('u');\n          next('l');\n          next('l');\n          return null;\n      }\n      error(\"Unexpected '\" + ch + \"'\");\n    },\n    value, // Place holder for the value function.\n    array = function () {\n      // Parse an array value.\n\n      var array = [];\n\n      if (ch === '[') {\n        next('[');\n        white();\n        if (ch === ']') {\n          next(']');\n          return array; // empty array\n        }\n        while (ch) {\n          array.push(value());\n          white();\n          if (ch === ']') {\n            next(']');\n            return array;\n          }\n          next(',');\n          white();\n        }\n      }\n      error('Bad array');\n    },\n    object = function () {\n      // Parse an object value.\n\n      var key,\n        object = Object.create(null);\n\n      if (ch === '{') {\n        next('{');\n        white();\n        if (ch === '}') {\n          next('}');\n          return object; // empty object\n        }\n        while (ch) {\n          key = string();\n          white();\n          next(':');\n          if (\n            _options.strict === true &&\n            Object.hasOwnProperty.call(object, key)\n          ) {\n            error('Duplicate key \"' + key + '\"');\n          }\n\n          if (suspectProtoRx.test(key) === true) {\n            if (_options.protoAction === 'error') {\n              error('Object contains forbidden prototype property');\n            } else if (_options.protoAction === 'ignore') {\n              value();\n            } else {\n              object[key] = value();\n            }\n          } else if (suspectConstructorRx.test(key) === true) {\n            if (_options.constructorAction === 'error') {\n              error('Object contains forbidden constructor property');\n            } else if (_options.constructorAction === 'ignore') {\n              value();\n            } else {\n              object[key] = value();\n            }\n          } else {\n            object[key] = value();\n          }\n\n          white();\n          if (ch === '}') {\n            next('}');\n            return object;\n          }\n          next(',');\n          white();\n        }\n      }\n      error('Bad object');\n    };\n\n  value = function () {\n    // Parse a JSON value. It could be an object, an array, a string, a number,\n    // or a word.\n\n    white();\n    switch (ch) {\n      case '{':\n        return object();\n      case '[':\n        return array();\n      case '\"':\n        return string();\n      case '-':\n        return number();\n      default:\n        return ch >= '0' && ch <= '9' ? number() : word();\n    }\n  };\n\n  // Return the json_parse function. It will have access to all of the above\n  // functions and variables.\n\n  return function (source, reviver) {\n    var result;\n\n    text = source + '';\n    at = 0;\n    ch = ' ';\n    result = value();\n    white();\n    if (ch) {\n      error('Syntax error');\n    }\n\n    // If there is a reviver function, we recursively walk the new structure,\n    // passing each name/value pair to the reviver function for possible\n    // transformation, starting with a temporary root object that holds the result\n    // in an empty key. If there is not a reviver function, we simply return the\n    // result.\n\n    return typeof reviver === 'function'\n      ? (function walk(holder, key) {\n          var k,\n            v,\n            value = holder[key];\n          if (value && typeof value === 'object') {\n            Object.keys(value).forEach(function (k) {\n              v = walk(value, k);\n              if (v !== undefined) {\n                value[k] = v;\n              } else {\n                delete value[k];\n              }\n            });\n          }\n          return reviver.call(holder, key, value);\n        })({ '': result }, '')\n      : result;\n  };\n};\n\nmodule.exports = json_parse;\n","var json_stringify = require('./lib/stringify.js').stringify;\nvar json_parse     = require('./lib/parse.js');\n\nmodule.exports = function(options) {\n    return  {\n        parse: json_parse(options),\n        stringify: json_stringify\n    }\n};\n//create the default method members with no options applied for backwards compatibility\nmodule.exports.parse = json_parse();\nmodule.exports.stringify = json_stringify;\n","/**\n * Configure how integers in JSON response will be decoded.\n */\nenum IntDecoding {\n  /**\n   * All integers will be decoded as Numbers, meaning any values greater than\n   * Number.MAX_SAFE_INTEGER will lose precision.\n   */\n  DEFAULT = 'default',\n\n  /**\n   * All integers will be decoded as Numbers, but if any values are greater than\n   * Number.MAX_SAFE_INTEGER an error will be thrown.\n   */\n  SAFE = 'safe',\n\n  /**\n   * Integers will be decoded as Numbers if they are less than or equal to\n   * Number.MAX_SAFE_INTEGER, otherwise they will be decoded as BigInts.\n   */\n  MIXED = 'mixed',\n\n  /**\n   * All integers will be decoded as BigInts.\n   */\n  BIGINT = 'bigint',\n}\n\nexport default IntDecoding;\n","import JSONbigWithoutConfig from 'json-bigint';\nimport IntDecoding from '../types/intDecoding';\n\nconst JSONbig = JSONbigWithoutConfig({ useNativeBigInt: true, strict: true });\n\nexport interface JSONOptions {\n  intDecoding?: IntDecoding;\n}\n\n/**\n * Parse JSON with additional options.\n * @param str - The JSON string to parse.\n * @param options - Options object to configure how integers in\n *   this request's JSON response will be decoded. Use the `intDecoding`\n *   property with one of the following options:\n *\n *   * \"default\": All integers will be decoded as Numbers, meaning any values greater than\n *     Number.MAX_SAFE_INTEGER will lose precision.\n *   * \"safe\": All integers will be decoded as Numbers, but if any values are greater than\n *     Number.MAX_SAFE_INTEGER an error will be thrown.\n *   * \"mixed\": Integers will be decoded as Numbers if they are less than or equal to\n *     Number.MAX_SAFE_INTEGER, otherwise they will be decoded as BigInts.\n *   * \"bigint\": All integers will be decoded as BigInts.\n *\n *   Defaults to \"default\" if not included.\n */\nexport function parseJSON(str: string, options?: JSONOptions) {\n  const intDecoding =\n    options && options.intDecoding ? options.intDecoding : IntDecoding.DEFAULT;\n  return JSONbig.parse(str, (_, value) => {\n    if (\n      value != null &&\n      typeof value === 'object' &&\n      Object.getPrototypeOf(value) == null\n    ) {\n      // JSONbig.parse objects are created with Object.create(null) and thus have a null prototype\n      // let us remedy that\n      Object.setPrototypeOf(value, Object.prototype);\n    }\n\n    if (typeof value === 'bigint') {\n      if (intDecoding === 'safe' && value > Number.MAX_SAFE_INTEGER) {\n        throw new Error(\n          `Integer exceeds maximum safe integer: ${value.toString()}. Try parsing with a different intDecoding option.`\n        );\n      }\n      if (\n        intDecoding === 'bigint' ||\n        (intDecoding === 'mixed' && value > Number.MAX_SAFE_INTEGER)\n      ) {\n        return value;\n      }\n      // JSONbig.parse converts number to BigInts if they are >= 10**15. This is smaller than\n      // Number.MAX_SAFE_INTEGER, so we can convert some BigInts back to normal numbers.\n      return Number(value);\n    }\n\n    if (typeof value === 'number') {\n      if (intDecoding === 'bigint' && Number.isInteger(value)) {\n        return BigInt(value);\n      }\n    }\n\n    return value;\n  });\n}\n\n/**\n * ArrayEqual takes two arrays and return true if equal, false otherwise\n */\nexport function arrayEqual(a: ArrayLike<any>, b: ArrayLike<any>) {\n  if (a.length !== b.length) {\n    return false;\n  }\n  return Array.from(a).every((val, i) => val === b[i]);\n}\n\n/**\n * ConcatArrays takes n number arrays and returns a joint Uint8Array\n * @param arrs - An arbitrary number of n array-like number list arguments\n * @returns [a,b]\n */\nexport function concatArrays(...arrs: ArrayLike<number>[]) {\n  const size = arrs.reduce((sum, arr) => sum + arr.length, 0);\n  const c = new Uint8Array(size);\n\n  let offset = 0;\n  for (let i = 0; i < arrs.length; i++) {\n    c.set(arrs[i], offset);\n    offset += arrs[i].length;\n  }\n\n  return c;\n}\n\n/**\n * Remove undefined properties from an object\n * @param obj - An object, preferably one with some undefined properties\n * @returns A copy of the object with undefined properties removed\n */\nexport function removeUndefinedProperties(\n  obj: Record<string | number | symbol, any>\n) {\n  const mutableCopy = { ...obj };\n  Object.keys(mutableCopy).forEach((key) => {\n    if (typeof mutableCopy[key] === 'undefined') delete mutableCopy[key];\n  });\n  return mutableCopy;\n}\n\n/**\n * Check whether the environment is Node.js (as opposed to the browser)\n * @returns True if Node.js environment, false otherwise\n */\nexport function isNode() {\n  return (\n    // @ts-ignore\n    typeof process === 'object' &&\n    // @ts-ignore\n    typeof process.versions === 'object' &&\n    // @ts-ignore\n    typeof process.versions.node !== 'undefined'\n  );\n}\n","import { concatArrays } from '../utils/utils';\n\n// NOTE: at the moment we specifically do not use Buffer.writeBigUInt64BE and\n// Buffer.readBigUInt64BE. This is because projects using webpack v4\n// automatically include an old version of the npm `buffer` package (v4.9.2 at\n// the time of writing), and this old version does not have these methods.\n\n/**\n * encodeUint64 converts an integer to its binary representation.\n * @param num - The number to convert. This must be an unsigned integer less than\n *   2^64.\n * @returns An 8-byte typed array containing the big-endian encoding of the input\n *   integer.\n */\nexport function encodeUint64(num: number | bigint) {\n  const isInteger = typeof num === 'bigint' || Number.isInteger(num);\n\n  if (!isInteger || num < 0 || num > BigInt('0xffffffffffffffff')) {\n    throw new Error('Input is not a 64-bit unsigned integer');\n  }\n\n  const encoding = new Uint8Array(8);\n  const view = new DataView(encoding.buffer);\n  view.setBigUint64(0, BigInt(num));\n\n  return encoding;\n}\n\n/**\n * decodeUint64 produces an integer from a binary representation.\n * @param data - An typed array containing the big-endian encoding of an unsigned integer\n *   less than 2^64. This array must be at most 8 bytes long.\n * @param decodingMode - Configure how the integer will be\n *   decoded.\n *\n *   The options are:\n *   * \"safe\": The integer will be decoded as a Number, but if it is greater than\n *     Number.MAX_SAFE_INTEGER an error will be thrown.\n *   * \"mixed\": The integer will be decoded as a Number if it is less than or equal to\n *     Number.MAX_SAFE_INTEGER, otherwise it will be decoded as a BigInt.\n *   * \"bigint\": The integer will always be decoded as a BigInt.\n *\n *   Defaults to \"safe\" if not included.\n * @returns The integer that was encoded in the input data. The return type will\n *   be determined by the parameter decodingMode.\n */\nexport function decodeUint64(data: Uint8Array, decodingMode: 'safe'): number;\nexport function decodeUint64(\n  data: Uint8Array,\n  decodingMode: 'mixed'\n): number | bigint;\nexport function decodeUint64(data: Uint8Array, decodingMode: 'bigint'): bigint;\nexport function decodeUint64(data: any, decodingMode: any = 'safe') {\n  if (\n    decodingMode !== 'safe' &&\n    decodingMode !== 'mixed' &&\n    decodingMode !== 'bigint'\n  ) {\n    throw new Error(`Unknown decodingMode option: ${decodingMode}`);\n  }\n\n  if (data.byteLength === 0 || data.byteLength > 8) {\n    throw new Error(\n      `Data has unacceptable length. Expected length is between 1 and 8, got ${data.byteLength}`\n    );\n  }\n\n  // insert 0s at the beginning if data is smaller than 8 bytes\n  const padding = new Uint8Array(8 - data.byteLength);\n  const encoding = concatArrays(padding, data);\n  const view = new DataView(encoding.buffer);\n\n  const num = view.getBigUint64(0);\n  const isBig = num > BigInt(Number.MAX_SAFE_INTEGER);\n\n  if (decodingMode === 'safe') {\n    if (isBig) {\n      throw new Error(\n        `Integer exceeds maximum safe integer: ${num.toString()}. Try decoding with \"mixed\" or \"safe\" decodingMode.`\n      );\n    }\n    return Number(num);\n  }\n\n  if (decodingMode === 'mixed' && !isBig) {\n    return Number(num);\n  }\n\n  return num;\n}\n","import { Buffer } from 'buffer';\nimport base32 from 'hi-base32';\nimport * as nacl from '../nacl/naclWrappers';\nimport * as utils from '../utils/utils';\nimport { encodeUint64 } from './uint64';\nimport { Address } from '../types/address';\nimport { MultisigMetadata } from '../types/multisig';\n\nconst ALGORAND_ADDRESS_BYTE_LENGTH = 36;\nconst ALGORAND_CHECKSUM_BYTE_LENGTH = 4;\nconst ALGORAND_ADDRESS_LENGTH = 58;\nexport const ALGORAND_ZERO_ADDRESS_STRING =\n  'AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAY5HFKQ';\n\n// Convert \"MultisigAddr\" UTF-8 to byte array\nconst MULTISIG_PREIMG2ADDR_PREFIX = new Uint8Array([\n  77,\n  117,\n  108,\n  116,\n  105,\n  115,\n  105,\n  103,\n  65,\n  100,\n  100,\n  114,\n]);\n\nconst APP_ID_PREFIX = Buffer.from('appID');\n\nexport const MALFORMED_ADDRESS_ERROR_MSG = 'address seems to be malformed';\nexport const CHECKSUM_ADDRESS_ERROR_MSG = 'wrong checksum for address';\nexport const INVALID_MSIG_VERSION_ERROR_MSG = 'invalid multisig version';\nexport const INVALID_MSIG_THRESHOLD_ERROR_MSG = 'bad multisig threshold';\nexport const INVALID_MSIG_PK_ERROR_MSG =\n  'bad multisig public key - wrong length';\nexport const UNEXPECTED_PK_LEN_ERROR_MSG =\n  'nacl public key length is not 32 bytes';\n\n/**\n * decodeAddress takes an Algorand address in string form and decodes it into a Uint8Array.\n * @param address - an Algorand address with checksum.\n * @returns the decoded form of the address's public key and checksum\n */\nexport function decodeAddress(address: string): Address {\n  if (typeof address !== 'string' || address.length !== ALGORAND_ADDRESS_LENGTH)\n    throw new Error(MALFORMED_ADDRESS_ERROR_MSG);\n\n  // try to decode\n  const decoded = base32.decode.asBytes(address.toString());\n  // Sanity check\n  if (decoded.length !== ALGORAND_ADDRESS_BYTE_LENGTH)\n    throw new Error(MALFORMED_ADDRESS_ERROR_MSG);\n\n  // Find publickey and checksum\n  const pk = new Uint8Array(\n    decoded.slice(\n      0,\n      ALGORAND_ADDRESS_BYTE_LENGTH - ALGORAND_CHECKSUM_BYTE_LENGTH\n    )\n  );\n  const cs = new Uint8Array(\n    decoded.slice(nacl.PUBLIC_KEY_LENGTH, ALGORAND_ADDRESS_BYTE_LENGTH)\n  );\n\n  // Compute checksum\n  const checksum = nacl\n    .genericHash(pk)\n    .slice(\n      nacl.HASH_BYTES_LENGTH - ALGORAND_CHECKSUM_BYTE_LENGTH,\n      nacl.HASH_BYTES_LENGTH\n    );\n\n  // Check if the checksum and the address are equal\n  if (!utils.arrayEqual(checksum, cs))\n    throw new Error(CHECKSUM_ADDRESS_ERROR_MSG);\n\n  return { publicKey: pk, checksum: cs };\n}\n\n/**\n * isValidAddress checks if a string is a valid Algorand address.\n * @param address - an Algorand address with checksum.\n * @returns true if valid, false otherwise\n */\nexport function isValidAddress(address: string) {\n  // Try to decode\n  try {\n    decodeAddress(address);\n  } catch (e) {\n    return false;\n  }\n  return true;\n}\n\n/**\n * encodeAddress takes an Algorand address as a Uint8Array and encodes it into a string with checksum.\n * @param address - a raw Algorand address\n * @returns the address and checksum encoded as a string.\n */\nexport function encodeAddress(address: Uint8Array) {\n  // compute checksum\n  const checksum = nacl\n    .genericHash(address)\n    .slice(\n      nacl.PUBLIC_KEY_LENGTH - ALGORAND_CHECKSUM_BYTE_LENGTH,\n      nacl.PUBLIC_KEY_LENGTH\n    );\n  const addr = base32.encode(utils.concatArrays(address, checksum));\n\n  return addr.toString().slice(0, ALGORAND_ADDRESS_LENGTH); // removing the extra '===='\n}\n\n/**\n * fromMultisigPreImg takes multisig parameters and returns a 32 byte typed array public key,\n * representing an address that identifies the \"exact group, version, and public keys\" that are required for signing.\n * Hash(\"MultisigAddr\" || version uint8 || threshold uint8 || PK1 || PK2 || ...)\n * Encoding this output yields a human readable address.\n * @param version - multisig version\n * @param threshold - multisig threshold\n * @param pks - array of typed array public keys\n */\nexport function fromMultisigPreImg({\n  version,\n  threshold,\n  pks,\n}: Omit<MultisigMetadata, 'addrs'> & {\n  pks: Uint8Array[];\n}) {\n  if (version !== 1 || version > 255 || version < 0) {\n    // ^ a tad redundant, but in case in the future version != 1, still check for uint8\n    throw new Error(INVALID_MSIG_VERSION_ERROR_MSG);\n  }\n  if (\n    threshold === 0 ||\n    pks.length === 0 ||\n    threshold > pks.length ||\n    threshold > 255\n  ) {\n    throw new Error(INVALID_MSIG_THRESHOLD_ERROR_MSG);\n  }\n  const pkLen = ALGORAND_ADDRESS_BYTE_LENGTH - ALGORAND_CHECKSUM_BYTE_LENGTH;\n  if (pkLen !== nacl.PUBLIC_KEY_LENGTH) {\n    throw new Error(UNEXPECTED_PK_LEN_ERROR_MSG);\n  }\n  const merged = new Uint8Array(\n    MULTISIG_PREIMG2ADDR_PREFIX.length + 2 + pkLen * pks.length\n  );\n  merged.set(MULTISIG_PREIMG2ADDR_PREFIX, 0);\n  merged.set([version], MULTISIG_PREIMG2ADDR_PREFIX.length);\n  merged.set([threshold], MULTISIG_PREIMG2ADDR_PREFIX.length + 1);\n  for (let i = 0; i < pks.length; i++) {\n    if (pks[i].length !== pkLen) {\n      throw new Error(INVALID_MSIG_PK_ERROR_MSG);\n    }\n    merged.set(pks[i], MULTISIG_PREIMG2ADDR_PREFIX.length + 2 + i * pkLen);\n  }\n  return new Uint8Array(nacl.genericHash(merged));\n}\n\n/**\n * fromMultisigPreImgAddrs takes multisig parameters and returns a human readable Algorand address.\n * This is equivalent to fromMultisigPreImg, but interfaces with encoded addresses.\n * @param version - multisig version\n * @param threshold - multisig threshold\n * @param addrs - array of encoded addresses\n */\nexport function fromMultisigPreImgAddrs({\n  version,\n  threshold,\n  addrs,\n}: {\n  version: number;\n  threshold: number;\n  addrs: string[];\n}) {\n  const pks = addrs.map((addr) => decodeAddress(addr).publicKey);\n  return encodeAddress(fromMultisigPreImg({ version, threshold, pks }));\n}\n\n/**\n * Get the escrow address of an application.\n * @param appID - The ID of the application.\n * @returns The address corresponding to that application's escrow account.\n */\nexport function getApplicationAddress(appID: number | bigint): string {\n  const toBeSigned = utils.concatArrays(APP_ID_PREFIX, encodeUint64(appID));\n  const hash = nacl.genericHash(toBeSigned);\n  return encodeAddress(new Uint8Array(hash));\n}\n","import { Decoder } from \"./Decoder\";\nimport { defaultDecodeOptions, DecodeOptions } from \"./decode\";\nimport { ensureAsyncIterabe, ReadableStreamLike } from \"./utils/stream\";\nimport { SplitUndefined } from \"./context\";\n\nexport async function decodeAsync<ContextType>(\n  streamLike: ReadableStreamLike<ArrayLike<number>>,\n  options: DecodeOptions<SplitUndefined<ContextType>> = defaultDecodeOptions as any,\n): Promise<unknown> {\n  const stream = ensureAsyncIterabe(streamLike);\n\n  const decoder = new Decoder<ContextType>(\n    options.extensionCodec,\n    (options as typeof options & { context: any }).context,\n    options.maxStrLength,\n    options.maxBinLength,\n    options.maxArrayLength,\n    options.maxMapLength,\n    options.maxExtLength,\n  );\n  return decoder.decodeAsync(stream);\n}\n\nexport function decodeArrayStream<ContextType>(\n  streamLike: ReadableStreamLike<ArrayLike<number>>,\n  options: DecodeOptions<SplitUndefined<ContextType>> = defaultDecodeOptions as any,\n) {\n  const stream = ensureAsyncIterabe(streamLike);\n\n  const decoder = new Decoder<ContextType>(\n    options.extensionCodec,\n    (options as typeof options & { context: any }).context,\n    options.maxStrLength,\n    options.maxBinLength,\n    options.maxArrayLength,\n    options.maxMapLength,\n    options.maxExtLength,\n  );\n\n  return decoder.decodeArrayStream(stream);\n}\n\nexport function decodeStream<ContextType>(\n  streamLike: ReadableStreamLike<ArrayLike<number>>,\n  options: DecodeOptions<SplitUndefined<ContextType>> = defaultDecodeOptions as any,\n) {\n  const stream = ensureAsyncIterabe(streamLike);\n\n  const decoder = new Decoder<ContextType>(\n    options.extensionCodec,\n    (options as typeof options & { context: any }).context,\n    options.maxStrLength,\n    options.maxBinLength,\n    options.maxArrayLength,\n    options.maxMapLength,\n    options.maxExtLength,\n  );\n\n  return decoder.decodeStream(stream);\n}\n","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"MessagePack\"] = factory();\n\telse\n\t\troot[\"MessagePack\"] = factory();\n})(this, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","export const TEXT_ENCODING_AVAILABLE =\n  typeof process !== \"undefined\" &&\n  process.env.TEXT_ENCODING !== \"never\" &&\n  typeof TextEncoder !== \"undefined\" &&\n  typeof TextDecoder !== \"undefined\";\n\nexport function utf8Count(str: string): number {\n  const strLength = str.length;\n\n  let byteLength = 0;\n  let pos = 0;\n  while (pos < strLength) {\n    let value = str.charCodeAt(pos++);\n\n    if ((value & 0xffffff80) === 0) {\n      // 1-byte\n      byteLength++;\n      continue;\n    } else if ((value & 0xfffff800) === 0) {\n      // 2-bytes\n      byteLength += 2;\n    } else {\n      // handle surrogate pair\n      if (value >= 0xd800 && value <= 0xdbff) {\n        // high surrogate\n        if (pos < strLength) {\n          const extra = str.charCodeAt(pos);\n          if ((extra & 0xfc00) === 0xdc00) {\n            ++pos;\n            value = ((value & 0x3ff) << 10) + (extra & 0x3ff) + 0x10000;\n          }\n        }\n      }\n\n      if ((value & 0xffff0000) === 0) {\n        // 3-byte\n        byteLength += 3;\n      } else {\n        // 4-byte\n        byteLength += 4;\n      }\n    }\n  }\n  return byteLength;\n}\n\nexport function utf8EncodeJs(str: string, output: Uint8Array, outputOffset: number): void {\n  const strLength = str.length;\n  let offset = outputOffset;\n  let pos = 0;\n  while (pos < strLength) {\n    let value = str.charCodeAt(pos++);\n\n    if ((value & 0xffffff80) === 0) {\n      // 1-byte\n      output[offset++] = value;\n      continue;\n    } else if ((value & 0xfffff800) === 0) {\n      // 2-bytes\n      output[offset++] = ((value >> 6) & 0x1f) | 0xc0;\n    } else {\n      // handle surrogate pair\n      if (value >= 0xd800 && value <= 0xdbff) {\n        // high surrogate\n        if (pos < strLength) {\n          const extra = str.charCodeAt(pos);\n          if ((extra & 0xfc00) === 0xdc00) {\n            ++pos;\n            value = ((value & 0x3ff) << 10) + (extra & 0x3ff) + 0x10000;\n          }\n        }\n      }\n\n      if ((value & 0xffff0000) === 0) {\n        // 3-byte\n        output[offset++] = ((value >> 12) & 0x0f) | 0xe0;\n        output[offset++] = ((value >> 6) & 0x3f) | 0x80;\n      } else {\n        // 4-byte\n        output[offset++] = ((value >> 18) & 0x07) | 0xf0;\n        output[offset++] = ((value >> 12) & 0x3f) | 0x80;\n        output[offset++] = ((value >> 6) & 0x3f) | 0x80;\n      }\n    }\n\n    output[offset++] = (value & 0x3f) | 0x80;\n  }\n}\n\nconst sharedTextEncoder = TEXT_ENCODING_AVAILABLE ? new TextEncoder() : undefined;\nexport const TEXT_ENCODER_THRESHOLD = typeof process !== \"undefined\" && process.env.TEXT_ENCODING !== \"force\" ? 200 : 0;\n\nfunction utf8EncodeTEencode(str: string, output: Uint8Array, outputOffset: number): void {\n  // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n  output.set(sharedTextEncoder!.encode(str), outputOffset);\n}\n\nfunction utf8EncodeTEencodeInto(str: string, output: Uint8Array, outputOffset: number): void {\n  // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n  sharedTextEncoder!.encodeInto(str, output.subarray(outputOffset));\n}\n\nexport const utf8EncodeTE = sharedTextEncoder?.encodeInto ? utf8EncodeTEencodeInto : utf8EncodeTEencode;\n\nconst CHUNK_SIZE = 0x1_000;\n\nexport function utf8DecodeJs(bytes: Uint8Array, inputOffset: number, byteLength: number): string {\n  let offset = inputOffset;\n  const end = offset + byteLength;\n\n  const units: Array<number> = [];\n  let result = \"\";\n  while (offset < end) {\n    const byte1 = bytes[offset++];\n    if ((byte1 & 0x80) === 0) {\n      // 1 byte\n      units.push(byte1);\n    } else if ((byte1 & 0xe0) === 0xc0) {\n      // 2 bytes\n      const byte2 = bytes[offset++] & 0x3f;\n      units.push(((byte1 & 0x1f) << 6) | byte2);\n    } else if ((byte1 & 0xf0) === 0xe0) {\n      // 3 bytes\n      const byte2 = bytes[offset++] & 0x3f;\n      const byte3 = bytes[offset++] & 0x3f;\n      units.push(((byte1 & 0x1f) << 12) | (byte2 << 6) | byte3);\n    } else if ((byte1 & 0xf8) === 0xf0) {\n      // 4 bytes\n      const byte2 = bytes[offset++] & 0x3f;\n      const byte3 = bytes[offset++] & 0x3f;\n      const byte4 = bytes[offset++] & 0x3f;\n      let unit = ((byte1 & 0x07) << 0x12) | (byte2 << 0x0c) | (byte3 << 0x06) | byte4;\n      if (unit > 0xffff) {\n        unit -= 0x10000;\n        units.push(((unit >>> 10) & 0x3ff) | 0xd800);\n        unit = 0xdc00 | (unit & 0x3ff);\n      }\n      units.push(unit);\n    } else {\n      units.push(byte1);\n    }\n\n    if (units.length >= CHUNK_SIZE) {\n      result += String.fromCharCode(...units);\n      units.length = 0;\n    }\n  }\n\n  if (units.length > 0) {\n    result += String.fromCharCode(...units);\n  }\n\n  return result;\n}\n\nconst sharedTextDecoder = TEXT_ENCODING_AVAILABLE ? new TextDecoder() : null;\nexport const TEXT_DECODER_THRESHOLD = typeof process !== \"undefined\" && process.env.TEXT_DECODER !== \"force\" ? 200 : 0;\n\nexport function utf8DecodeTD(bytes: Uint8Array, inputOffset: number, byteLength: number): string {\n  const stringBytes = bytes.subarray(inputOffset, inputOffset + byteLength);\n  // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n  return sharedTextDecoder!.decode(stringBytes);\n}\n","/**\n * ExtData is used to handle Extension Types that are not registered to ExtensionCodec.\n */\nexport class ExtData {\n  constructor(readonly type: number, readonly data: Uint8Array) {}\n}\n","// DataView extension to handle int64 / uint64,\n// where the actual range is 53-bits integer (a.k.a. safe integer)\n\nexport function setUint64(view: DataView, offset: number, value: number): void {\n  const high = value / 0x1_0000_0000;\n  const low = value; // high bits are truncated by DataView\n  view.setUint32(offset, high);\n  view.setUint32(offset + 4, low);\n}\n\nexport function setInt64(view: DataView, offset: number, value: number): void {\n  const high = Math.floor(value / 0x1_0000_0000);\n  const low = value; // high bits are truncated by DataView\n  view.setUint32(offset, high);\n  view.setUint32(offset + 4, low);\n}\n\nexport function setBigInt64(view: DataView, offset: number, value: bigint): void {\n  let high = Number(value / BigInt(0x1_0000_0000));\n  const low = Number(value % BigInt(0x1_0000_0000));\n  if (high < 0 && low !== 0) {\n    // simulate Math.floor for negative high\n    high -= 1;\n  }\n  view.setUint32(offset, high);\n  view.setUint32(offset + 4, low);\n}\n\nexport function getInt64(view: DataView, offset: number) {\n  const high = view.getInt32(offset);\n  const low = view.getUint32(offset + 4);\n\n  const exceeds_min_safe_int =\n    high < Math.floor(Number.MIN_SAFE_INTEGER / 0x1_0000_0000) ||\n    (high === Math.floor(Number.MIN_SAFE_INTEGER / 0x1_0000_0000) && low === 0);\n\n  const exceeds_max_safe_int = high > Math.floor(Number.MAX_SAFE_INTEGER / 0x1_0000_0000);\n\n  if (exceeds_min_safe_int || exceeds_max_safe_int) {\n    return BigInt(high) * BigInt(0x1_0000_0000) + BigInt(low);\n  }\n  return high * 0x1_0000_0000 + low;\n}\n\nexport function getUint64(view: DataView, offset: number) {\n  const high = view.getUint32(offset);\n  const low = view.getUint32(offset + 4);\n\n  const exceeds_max_safe_int = high > Math.floor(Number.MAX_SAFE_INTEGER / 0x1_0000_0000);\n\n  if (exceeds_max_safe_int) {\n    return BigInt(high) * BigInt(0x1_0000_0000) + BigInt(low);\n  }\n  return high * 0x1_0000_0000 + low;\n}\n","// https://github.com/msgpack/msgpack/blob/master/spec.md#timestamp-extension-type\nimport { getInt64, setInt64 } from \"./utils/int\";\n\nexport const EXT_TIMESTAMP = -1;\n\nexport type TimeSpec = {\n  sec: number;\n  nsec: number;\n};\n\nconst TIMESTAMP32_MAX_SEC = 0x100000000 - 1; // 32-bit unsigned int\nconst TIMESTAMP64_MAX_SEC = 0x400000000 - 1; // 34-bit unsigned int\n\nexport function encodeTimeSpecToTimestamp({ sec, nsec }: TimeSpec): Uint8Array {\n  if (sec >= 0 && nsec >= 0 && sec <= TIMESTAMP64_MAX_SEC) {\n    // Here sec >= 0 && nsec >= 0\n    if (nsec === 0 && sec <= TIMESTAMP32_MAX_SEC) {\n      // timestamp 32 = { sec32 (unsigned) }\n      const rv = new Uint8Array(4);\n      const view = new DataView(rv.buffer);\n      view.setUint32(0, sec);\n      return rv;\n    } else {\n      // timestamp 64 = { nsec30 (unsigned), sec34 (unsigned) }\n      const secHigh = sec / 0x100000000;\n      const secLow = sec & 0xffffffff;\n      const rv = new Uint8Array(8);\n      const view = new DataView(rv.buffer);\n      // nsec30 | secHigh2\n      view.setUint32(0, (nsec << 2) | (secHigh & 0x3));\n      // secLow32\n      view.setUint32(4, secLow);\n      return rv;\n    }\n  } else {\n    // timestamp 96 = { nsec32 (unsigned), sec64 (signed) }\n    const rv = new Uint8Array(12);\n    const view = new DataView(rv.buffer);\n    view.setUint32(0, nsec);\n    setInt64(view, 4, sec);\n    return rv;\n  }\n}\n\nexport function encodeDateToTimeSpec(date: Date): TimeSpec {\n  const msec = date.getTime();\n  const sec = Math.floor(msec / 1e3);\n  const nsec = (msec - sec * 1e3) * 1e6;\n\n  // Normalizes { sec, nsec } to ensure nsec is unsigned.\n  const nsecInSec = Math.floor(nsec / 1e9);\n  return {\n    sec: sec + nsecInSec,\n    nsec: nsec - nsecInSec * 1e9,\n  };\n}\n\nexport function encodeTimestampExtension(object: unknown): Uint8Array | null {\n  if (object instanceof Date) {\n    const timeSpec = encodeDateToTimeSpec(object);\n    return encodeTimeSpecToTimestamp(timeSpec);\n  } else {\n    return null;\n  }\n}\n\nexport function decodeTimestampToTimeSpec(data: Uint8Array): TimeSpec {\n  const view = new DataView(data.buffer, data.byteOffset, data.byteLength);\n\n  // data may be 32, 64, or 96 bits\n  switch (data.byteLength) {\n    case 4: {\n      // timestamp 32 = { sec32 }\n      const sec = view.getUint32(0);\n      const nsec = 0;\n      return { sec, nsec };\n    }\n    case 8: {\n      // timestamp 64 = { nsec30, sec34 }\n      const nsec30AndSecHigh2 = view.getUint32(0);\n      const secLow32 = view.getUint32(4);\n      const sec = (nsec30AndSecHigh2 & 0x3) * 0x100000000 + secLow32;\n      const nsec = nsec30AndSecHigh2 >>> 2;\n      return { sec, nsec };\n    }\n    case 12: {\n      // timestamp 96 = { nsec32 (unsigned), sec64 (signed) }\n\n      const sec = getInt64(view, 4) as number;\n      const nsec = view.getUint32(0);\n      return { sec, nsec };\n    }\n    default:\n      throw new Error(`Unrecognized data size for timestamp: ${data.length}`);\n  }\n}\n\nexport function decodeTimestampExtension(data: Uint8Array): Date {\n  const timeSpec = decodeTimestampToTimeSpec(data);\n  return new Date(timeSpec.sec * 1e3 + timeSpec.nsec / 1e6);\n}\n\nexport const timestampExtension = {\n  type: EXT_TIMESTAMP,\n  encode: encodeTimestampExtension,\n  decode: decodeTimestampExtension,\n};\n","// ExtensionCodec to handle MessagePack extensions\n\nimport { ExtData } from \"./ExtData\";\nimport { timestampExtension } from \"./timestamp\";\n\nexport type ExtensionDecoderType<ContextType> = (\n  data: Uint8Array,\n  extensionType: number,\n  context: ContextType,\n) => unknown;\n\nexport type ExtensionEncoderType<ContextType> = (input: unknown, context: ContextType) => Uint8Array | null;\n\n// immutable interfce to ExtensionCodec\nexport type ExtensionCodecType<ContextType> = {\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  __brand?: ContextType;\n  tryToEncode(object: unknown, context: ContextType): ExtData | null;\n  decode(data: Uint8Array, extType: number, context: ContextType): unknown;\n};\n\nexport class ExtensionCodec<ContextType = undefined> implements ExtensionCodecType<ContextType> {\n  public static readonly defaultCodec: ExtensionCodecType<undefined> = new ExtensionCodec();\n\n  // ensures ExtensionCodecType<X> matches ExtensionCodec<X>\n  // this will make type errors a lot more clear\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  __brand?: ContextType;\n\n  // built-in extensions\n  private readonly builtInEncoders: Array<ExtensionEncoderType<ContextType> | undefined | null> = [];\n  private readonly builtInDecoders: Array<ExtensionDecoderType<ContextType> | undefined | null> = [];\n\n  // custom extensions\n  private readonly encoders: Array<ExtensionEncoderType<ContextType> | undefined | null> = [];\n  private readonly decoders: Array<ExtensionDecoderType<ContextType> | undefined | null> = [];\n\n  public constructor() {\n    this.register(timestampExtension);\n  }\n\n  public register({\n    type,\n    encode,\n    decode,\n  }: {\n    type: number;\n    encode: ExtensionEncoderType<ContextType>;\n    decode: ExtensionDecoderType<ContextType>;\n  }): void {\n    if (type >= 0) {\n      // custom extensions\n      this.encoders[type] = encode;\n      this.decoders[type] = decode;\n    } else {\n      // built-in extensions\n      const index = 1 + type;\n      this.builtInEncoders[index] = encode;\n      this.builtInDecoders[index] = decode;\n    }\n  }\n\n  public tryToEncode(object: unknown, context: ContextType): ExtData | null {\n    // built-in extensions\n    for (let i = 0; i < this.builtInEncoders.length; i++) {\n      const encoder = this.builtInEncoders[i];\n      if (encoder != null) {\n        const data = encoder(object, context);\n        if (data != null) {\n          const type = -1 - i;\n          return new ExtData(type, data);\n        }\n      }\n    }\n\n    // custom extensions\n    for (let i = 0; i < this.encoders.length; i++) {\n      const encoder = this.encoders[i];\n      if (encoder != null) {\n        const data = encoder(object, context);\n        if (data != null) {\n          const type = i;\n          return new ExtData(type, data);\n        }\n      }\n    }\n\n    if (object instanceof ExtData) {\n      // to keep ExtData as is\n      return object;\n    }\n    return null;\n  }\n\n  public decode(data: Uint8Array, type: number, context: ContextType): unknown {\n    const decoder = type < 0 ? this.builtInDecoders[-1 - type] : this.decoders[type];\n    if (decoder) {\n      return decoder(data, type, context);\n    } else {\n      // decode() does not fail, returns ExtData instead.\n      return new ExtData(type, data);\n    }\n  }\n}\n","export function ensureUint8Array(buffer: ArrayLike<number> | Uint8Array | ArrayBufferView | ArrayBuffer) {\n  if (buffer instanceof Uint8Array) {\n    return buffer;\n  } else if (ArrayBuffer.isView(buffer)) {\n    return new Uint8Array(buffer.buffer, buffer.byteOffset, buffer.byteLength);\n  } else if (buffer instanceof ArrayBuffer) {\n    return new Uint8Array(buffer);\n  } else {\n    // ArrayLike<number>\n    return Uint8Array.from(buffer);\n  }\n}\n\nexport function createDataView(buffer: ArrayLike<number> | ArrayBufferView | ArrayBuffer): DataView {\n  if (buffer instanceof ArrayBuffer) {\n    return new DataView(buffer);\n  }\n\n  const bufferView = ensureUint8Array(buffer);\n  return new DataView(bufferView.buffer, bufferView.byteOffset, bufferView.byteLength);\n}\n","import { utf8EncodeJs, utf8Count, TEXT_ENCODING_AVAILABLE, TEXT_ENCODER_THRESHOLD, utf8EncodeTE } from \"./utils/utf8\";\nimport { ExtensionCodec, ExtensionCodecType } from \"./ExtensionCodec\";\nimport { setInt64, setUint64, setBigInt64 } from \"./utils/int\";\nimport { ensureUint8Array } from \"./utils/typedArrays\";\nimport { ExtData } from \"./ExtData\";\n\nexport const DEFAULT_MAX_DEPTH = 100;\nexport const DEFAULT_INITIAL_BUFFER_SIZE = 2048;\n\nexport class Encoder<ContextType> {\n  private pos = 0;\n  private view = new DataView(new ArrayBuffer(this.initialBufferSize));\n  private bytes = new Uint8Array(this.view.buffer);\n\n  public constructor(\n    private readonly extensionCodec: ExtensionCodecType<ContextType> = ExtensionCodec.defaultCodec as any,\n    private readonly context: ContextType = undefined as any,\n    private readonly maxDepth = DEFAULT_MAX_DEPTH,\n    private readonly initialBufferSize = DEFAULT_INITIAL_BUFFER_SIZE,\n    private readonly sortKeys = false,\n    private readonly forceFloat32 = false,\n    private readonly ignoreUndefined = false,\n    private readonly forceIntegerToFloat = false,\n  ) {}\n\n  private getUint8Array(): Uint8Array {\n    return this.bytes.subarray(0, this.pos);\n  }\n\n  private reinitializeState() {\n    this.pos = 0;\n  }\n\n  public encode(object: unknown): Uint8Array {\n    this.reinitializeState();\n    this.doEncode(object, 1);\n    return this.getUint8Array();\n  }\n\n  private doEncode(object: unknown, depth: number): void {\n    if (depth > this.maxDepth) {\n      throw new Error(`Too deep objects in depth ${depth}`);\n    }\n\n    if (object == null) {\n      this.encodeNil();\n    } else if (typeof object === \"boolean\") {\n      this.encodeBoolean(object);\n    } else if (typeof object === \"number\") {\n      this.encodeNumber(object);\n    } else if (typeof object === \"string\") {\n      this.encodeString(object);\n    } else if (typeof object === \"bigint\") {\n      this.encodebigint(object);\n    } else {\n      this.encodeObject(object, depth);\n    }\n  }\n\n  private ensureBufferSizeToWrite(sizeToWrite: number) {\n    const requiredSize = this.pos + sizeToWrite;\n\n    if (this.view.byteLength < requiredSize) {\n      this.resizeBuffer(requiredSize * 2);\n    }\n  }\n\n  private resizeBuffer(newSize: number) {\n    const newBuffer = new ArrayBuffer(newSize);\n    const newBytes = new Uint8Array(newBuffer);\n    const newView = new DataView(newBuffer);\n\n    newBytes.set(this.bytes);\n\n    this.view = newView;\n    this.bytes = newBytes;\n  }\n\n  private encodeNil() {\n    this.writeU8(0xc0);\n  }\n\n  private encodeBoolean(object: boolean) {\n    if (object === false) {\n      this.writeU8(0xc2);\n    } else {\n      this.writeU8(0xc3);\n    }\n  }\n  private encodeNumber(object: number) {\n    if (Number.isSafeInteger(object) && !this.forceIntegerToFloat) {\n      if (object >= 0) {\n        if (object < 0x80) {\n          // positive fixint\n          this.writeU8(object);\n        } else if (object < 0x100) {\n          // uint 8\n          this.writeU8(0xcc);\n          this.writeU8(object);\n        } else if (object < 0x10000) {\n          // uint 16\n          this.writeU8(0xcd);\n          this.writeU16(object);\n        } else if (object < 0x100000000) {\n          // uint 32\n          this.writeU8(0xce);\n          this.writeU32(object);\n        } else {\n          // uint 64\n          this.writeU8(0xcf);\n          this.writeU64(object);\n        }\n      } else {\n        if (object >= -0x20) {\n          // nagative fixint\n          this.writeU8(0xe0 | (object + 0x20));\n        } else if (object >= -0x80) {\n          // int 8\n          this.writeU8(0xd0);\n          this.writeI8(object);\n        } else if (object >= -0x8000) {\n          // int 16\n          this.writeU8(0xd1);\n          this.writeI16(object);\n        } else if (object >= -0x80000000) {\n          // int 32\n          this.writeU8(0xd2);\n          this.writeI32(object);\n        } else {\n          // int 64\n          this.writeU8(0xd3);\n          this.writeI64(object);\n        }\n      }\n    } else {\n      // non-integer numbers\n      if (this.forceFloat32) {\n        // float 32\n        this.writeU8(0xca);\n        this.writeF32(object);\n      } else {\n        // float 64\n        this.writeU8(0xcb);\n        this.writeF64(object);\n      }\n    }\n  }\n\n  private encodebigint(object: bigint) {\n    if (object >= BigInt(0)) {\n      if (object < BigInt(0x80)) {\n        // positive fixint\n        this.writeU8(Number(object));\n      } else if (object < BigInt(0x100)) {\n        // uint 8\n        this.writeU8(0xcc);\n        this.writeU8(Number(object));\n      } else if (object < BigInt(0x10000)) {\n        // uint 16\n        this.writeU8(0xcd);\n        this.writeU16(Number(object));\n      } else if (object < BigInt(0x100000000)) {\n        // uint 32\n        this.writeU8(0xce);\n        this.writeU32(Number(object));\n      } else {\n        // uint 64\n        this.writeU8(0xcf);\n        this.writeBig64(object);\n      }\n    } else {\n      if (object >= BigInt(-0x20)) {\n        // nagative fixint\n        this.writeU8(0xe0 | (Number(object) + 0x20));\n      } else if (object >= BigInt(-0x80)) {\n        // int 8\n        this.writeU8(0xd0);\n        this.writeI8(Number(object));\n      } else if (object >= BigInt(-0x8000)) {\n        // int 16\n        this.writeU8(0xd1);\n        this.writeI16(Number(object));\n      } else if (object >= BigInt(-0x80000000)) {\n        // int 32\n        this.writeU8(0xd2);\n        this.writeI32(Number(object));\n      } else {\n        // int 64\n        this.writeU8(0xd3);\n        this.writeBig64(object);\n      }\n    }\n  }\n\n  private writeStringHeader(byteLength: number) {\n    if (byteLength < 32) {\n      // fixstr\n      this.writeU8(0xa0 + byteLength);\n    } else if (byteLength < 0x100) {\n      // str 8\n      this.writeU8(0xd9);\n      this.writeU8(byteLength);\n    } else if (byteLength < 0x10000) {\n      // str 16\n      this.writeU8(0xda);\n      this.writeU16(byteLength);\n    } else if (byteLength < 0x100000000) {\n      // str 32\n      this.writeU8(0xdb);\n      this.writeU32(byteLength);\n    } else {\n      throw new Error(`Too long string: ${byteLength} bytes in UTF-8`);\n    }\n  }\n\n  private encodeString(object: string) {\n    const maxHeaderSize = 1 + 4;\n    const strLength = object.length;\n\n    if (TEXT_ENCODING_AVAILABLE && strLength > TEXT_ENCODER_THRESHOLD) {\n      const byteLength = utf8Count(object);\n      this.ensureBufferSizeToWrite(maxHeaderSize + byteLength);\n      this.writeStringHeader(byteLength);\n      utf8EncodeTE(object, this.bytes, this.pos);\n      this.pos += byteLength;\n    } else {\n      const byteLength = utf8Count(object);\n      this.ensureBufferSizeToWrite(maxHeaderSize + byteLength);\n      this.writeStringHeader(byteLength);\n      utf8EncodeJs(object, this.bytes, this.pos);\n      this.pos += byteLength;\n    }\n  }\n\n  private encodeObject(object: unknown, depth: number) {\n    // try to encode objects with custom codec first of non-primitives\n    const ext = this.extensionCodec.tryToEncode(object, this.context);\n    if (ext != null) {\n      this.encodeExtension(ext);\n    } else if (Array.isArray(object)) {\n      this.encodeArray(object, depth);\n    } else if (ArrayBuffer.isView(object)) {\n      this.encodeBinary(object);\n    } else if (typeof object === \"object\") {\n      this.encodeMap(object as Record<string, unknown>, depth);\n    } else {\n      // symbol, function and other special object come here unless extensionCodec handles them.\n      throw new Error(`Unrecognized object: ${Object.prototype.toString.apply(object)}`);\n    }\n  }\n\n  private encodeBinary(object: ArrayBufferView) {\n    const size = object.byteLength;\n    if (size < 0x100) {\n      // bin 8\n      this.writeU8(0xc4);\n      this.writeU8(size);\n    } else if (size < 0x10000) {\n      // bin 16\n      this.writeU8(0xc5);\n      this.writeU16(size);\n    } else if (size < 0x100000000) {\n      // bin 32\n      this.writeU8(0xc6);\n      this.writeU32(size);\n    } else {\n      throw new Error(`Too large binary: ${size}`);\n    }\n    const bytes = ensureUint8Array(object);\n    this.writeU8a(bytes);\n  }\n\n  private encodeArray(object: Array<unknown>, depth: number) {\n    const size = object.length;\n    if (size < 16) {\n      // fixarray\n      this.writeU8(0x90 + size);\n    } else if (size < 0x10000) {\n      // array 16\n      this.writeU8(0xdc);\n      this.writeU16(size);\n    } else if (size < 0x100000000) {\n      // array 32\n      this.writeU8(0xdd);\n      this.writeU32(size);\n    } else {\n      throw new Error(`Too large array: ${size}`);\n    }\n    for (const item of object) {\n      this.doEncode(item, depth + 1);\n    }\n  }\n\n  private countWithoutUndefined(object: Record<string, unknown>, keys: ReadonlyArray<string>): number {\n    let count = 0;\n\n    for (const key of keys) {\n      if (object[key] !== undefined) {\n        count++;\n      }\n    }\n\n    return count;\n  }\n\n  private encodeMap(object: Record<string, unknown>, depth: number) {\n    const keys = Object.keys(object);\n    if (this.sortKeys) {\n      keys.sort();\n    }\n\n    const size = this.ignoreUndefined ? this.countWithoutUndefined(object, keys) : keys.length;\n\n    if (size < 16) {\n      // fixmap\n      this.writeU8(0x80 + size);\n    } else if (size < 0x10000) {\n      // map 16\n      this.writeU8(0xde);\n      this.writeU16(size);\n    } else if (size < 0x100000000) {\n      // map 32\n      this.writeU8(0xdf);\n      this.writeU32(size);\n    } else {\n      throw new Error(`Too large map object: ${size}`);\n    }\n\n    for (const key of keys) {\n      const value = object[key];\n\n      if (!(this.ignoreUndefined && value === undefined)) {\n        this.encodeString(key);\n        this.doEncode(value, depth + 1);\n      }\n    }\n  }\n\n  private encodeExtension(ext: ExtData) {\n    const size = ext.data.length;\n    if (size === 1) {\n      // fixext 1\n      this.writeU8(0xd4);\n    } else if (size === 2) {\n      // fixext 2\n      this.writeU8(0xd5);\n    } else if (size === 4) {\n      // fixext 4\n      this.writeU8(0xd6);\n    } else if (size === 8) {\n      // fixext 8\n      this.writeU8(0xd7);\n    } else if (size === 16) {\n      // fixext 16\n      this.writeU8(0xd8);\n    } else if (size < 0x100) {\n      // ext 8\n      this.writeU8(0xc7);\n      this.writeU8(size);\n    } else if (size < 0x10000) {\n      // ext 16\n      this.writeU8(0xc8);\n      this.writeU16(size);\n    } else if (size < 0x100000000) {\n      // ext 32\n      this.writeU8(0xc9);\n      this.writeU32(size);\n    } else {\n      throw new Error(`Too large extension object: ${size}`);\n    }\n    this.writeI8(ext.type);\n    this.writeU8a(ext.data);\n  }\n\n  private writeU8(value: number) {\n    this.ensureBufferSizeToWrite(1);\n\n    this.view.setUint8(this.pos, value);\n    this.pos++;\n  }\n\n  private writeU8a(values: ArrayLike<number>) {\n    const size = values.length;\n    this.ensureBufferSizeToWrite(size);\n\n    this.bytes.set(values, this.pos);\n    this.pos += size;\n  }\n\n  private writeI8(value: number) {\n    this.ensureBufferSizeToWrite(1);\n\n    this.view.setInt8(this.pos, value);\n    this.pos++;\n  }\n\n  private writeU16(value: number) {\n    this.ensureBufferSizeToWrite(2);\n\n    this.view.setUint16(this.pos, value);\n    this.pos += 2;\n  }\n\n  private writeI16(value: number) {\n    this.ensureBufferSizeToWrite(2);\n\n    this.view.setInt16(this.pos, value);\n    this.pos += 2;\n  }\n\n  private writeU32(value: number) {\n    this.ensureBufferSizeToWrite(4);\n\n    this.view.setUint32(this.pos, value);\n    this.pos += 4;\n  }\n\n  private writeI32(value: number) {\n    this.ensureBufferSizeToWrite(4);\n\n    this.view.setInt32(this.pos, value);\n    this.pos += 4;\n  }\n\n  private writeF32(value: number) {\n    this.ensureBufferSizeToWrite(4);\n    this.view.setFloat32(this.pos, value);\n    this.pos += 4;\n  }\n\n  private writeF64(value: number) {\n    this.ensureBufferSizeToWrite(8);\n    this.view.setFloat64(this.pos, value);\n    this.pos += 8;\n  }\n\n  private writeU64(value: number) {\n    this.ensureBufferSizeToWrite(8);\n\n    setUint64(this.view, this.pos, value);\n    this.pos += 8;\n  }\n\n  private writeI64(value: number) {\n    this.ensureBufferSizeToWrite(8);\n\n    setInt64(this.view, this.pos, value);\n    this.pos += 8;\n  }\n\n  private writeBig64(value: bigint) {\n    this.ensureBufferSizeToWrite(8);\n\n    setBigInt64(this.view, this.pos, value);\n    this.pos += 8;\n  }\n}\n","import { ExtensionCodecType } from \"./ExtensionCodec\";\nimport { Encoder } from \"./Encoder\";\nimport { ContextOf, SplitUndefined } from \"./context\";\n\nexport type EncodeOptions<ContextType = undefined> = Partial<\n  Readonly<{\n    extensionCodec: ExtensionCodecType<ContextType>;\n    maxDepth: number;\n    initialBufferSize: number;\n    sortKeys: boolean;\n\n    /**\n     * If `true`, non-integer numbers are encoded in float32, not in float64 (the default).\n     *\n     * Only use it if precisions don't matter.\n     */\n    forceFloat32: boolean;\n\n    /**\n     * If `true`, an object property with `undefined` value are ignored.\n     * e.g. `{ foo: undefined }` will be encoded as `{}`, as `JSON.stringify()` does.\n     *\n     * The default is `false`. Note that it needs more time to encode.\n     */\n    ignoreUndefined: boolean;\n\n    /**\n     * If `true`, integer numbers are encoded as floating point,\n     * with the `forceFloat32` option taken into account.\n     *\n     * The default is `false`.\n     */\n    forceIntegerToFloat: boolean;\n  }>\n> &\n  ContextOf<ContextType>;\n\nconst defaultEncodeOptions: EncodeOptions = {};\n\n/**\n * It encodes `value` in the MessagePack format and\n * returns a byte buffer.\n *\n * The returned buffer is a slice of a larger `ArrayBuffer`, so you have to use its `#byteOffset` and `#byteLength` in order to convert it to another typed arrays including NodeJS `Buffer`.\n */\nexport function encode<ContextType>(\n  value: unknown,\n  options: EncodeOptions<SplitUndefined<ContextType>> = defaultEncodeOptions as any,\n): Uint8Array {\n  const encoder = new Encoder<ContextType>(\n    options.extensionCodec,\n    (options as typeof options & { context: any }).context,\n    options.maxDepth,\n    options.initialBufferSize,\n    options.sortKeys,\n    options.forceFloat32,\n    options.ignoreUndefined,\n    options.forceIntegerToFloat,\n  );\n  return encoder.encode(value);\n}\n","export function prettyByte(byte: number): string {\n  return `${byte < 0 ? \"-\" : \"\"}0x${Math.abs(byte).toString(16).padStart(2, \"0\")}`;\n}\n","import { utf8DecodeJs } from \"./utils/utf8\";\n\ninterface KeyCacheRecord {\n  readonly bytes: Uint8Array;\n  readonly value: string;\n}\n\nconst DEFAULT_MAX_KEY_LENGTH = 16;\nconst DEFAULT_MAX_LENGTH_PER_KEY = 16;\n\nexport interface KeyDecoder {\n  canBeCached(byteLength: number): boolean;\n  decode(bytes: Uint8Array, inputOffset: number, byteLength: number): string;\n}\n\nexport class CachedKeyDecoder implements KeyDecoder {\n  hit = 0;\n  miss = 0;\n  private readonly caches: Array<Array<KeyCacheRecord>>;\n\n  constructor(readonly maxKeyLength = DEFAULT_MAX_KEY_LENGTH, readonly maxLengthPerKey = DEFAULT_MAX_LENGTH_PER_KEY) {\n    // avoid `new Array(N)` to create a non-sparse array for performance.\n    this.caches = [];\n    for (let i = 0; i < this.maxKeyLength; i++) {\n      this.caches.push([]);\n    }\n  }\n\n  public canBeCached(byteLength: number) {\n    return byteLength > 0 && byteLength <= this.maxKeyLength;\n  }\n\n  private get(bytes: Uint8Array, inputOffset: number, byteLength: number): string | null {\n    const records = this.caches[byteLength - 1];\n    const recordsLength = records.length;\n\n    FIND_CHUNK: for (let i = 0; i < recordsLength; i++) {\n      const record = records[i];\n      const recordBytes = record.bytes;\n\n      for (let j = 0; j < byteLength; j++) {\n        if (recordBytes[j] !== bytes[inputOffset + j]) {\n          continue FIND_CHUNK;\n        }\n      }\n      return record.value;\n    }\n    return null;\n  }\n\n  private store(bytes: Uint8Array, value: string) {\n    const records = this.caches[bytes.length - 1];\n    const record: KeyCacheRecord = { bytes, value };\n\n    if (records.length >= this.maxLengthPerKey) {\n      // `records` are full!\n      // Set `record` to a randomized position.\n      records[(Math.random() * records.length) | 0] = record;\n    } else {\n      records.push(record);\n    }\n  }\n\n  public decode(bytes: Uint8Array, inputOffset: number, byteLength: number): string {\n    const cachedValue = this.get(bytes, inputOffset, byteLength);\n    if (cachedValue != null) {\n      this.hit++;\n      return cachedValue;\n    }\n    this.miss++;\n\n    const value = utf8DecodeJs(bytes, inputOffset, byteLength);\n    // Ensure to copy a slice of bytes because the byte may be NodeJS Buffer and Buffer#slice() returns a reference to its internal ArrayBuffer.\n    const slicedCopyOfBytes = Uint8Array.prototype.slice.call(bytes, inputOffset, inputOffset + byteLength);\n    this.store(slicedCopyOfBytes, value);\n    return value;\n  }\n}\n","import { prettyByte } from \"./utils/prettyByte\";\nimport { ExtensionCodec, ExtensionCodecType } from \"./ExtensionCodec\";\nimport { getInt64, getUint64 } from \"./utils/int\";\nimport { utf8DecodeJs, TEXT_ENCODING_AVAILABLE, TEXT_DECODER_THRESHOLD, utf8DecodeTD } from \"./utils/utf8\";\nimport { createDataView, ensureUint8Array } from \"./utils/typedArrays\";\nimport { CachedKeyDecoder, KeyDecoder } from \"./CachedKeyDecoder\";\n\nconst enum State {\n  ARRAY,\n  MAP_KEY,\n  MAP_VALUE,\n}\n\ntype MapKeyType = string | number;\n\nconst isValidMapKeyType = (key: unknown): key is MapKeyType => {\n  const keyType = typeof key;\n\n  return keyType === \"string\" || keyType === \"number\";\n};\n\ntype StackMapState = {\n  type: State.MAP_KEY | State.MAP_VALUE;\n  size: number;\n  key: MapKeyType | null;\n  readCount: number;\n  map: Record<string, unknown>;\n};\n\ntype StackArrayState = {\n  type: State.ARRAY;\n  size: number;\n  array: Array<unknown>;\n  position: number;\n};\n\ntype StackState = StackArrayState | StackMapState;\n\nconst HEAD_BYTE_REQUIRED = -1;\n\nconst EMPTY_VIEW = new DataView(new ArrayBuffer(0));\nconst EMPTY_BYTES = new Uint8Array(EMPTY_VIEW.buffer);\n\n// IE11: Hack to support IE11.\n// IE11: Drop this hack and just use RangeError when IE11 is obsolete.\nexport const DataViewIndexOutOfBoundsError: typeof Error = (() => {\n  try {\n    // IE11: The spec says it should throw RangeError,\n    // IE11: but in IE11 it throws TypeError.\n    EMPTY_VIEW.getInt8(0);\n  } catch (e) {\n    return e.constructor;\n  }\n  throw new Error(\"never reached\");\n})();\n\nconst MORE_DATA = new DataViewIndexOutOfBoundsError(\"Insufficient data\");\n\nconst DEFAULT_MAX_LENGTH = 0xffff_ffff; // uint32_max\n\nconst sharedCachedKeyDecoder = new CachedKeyDecoder();\n\nexport class Decoder<ContextType> {\n  private totalPos = 0;\n  private pos = 0;\n\n  private view = EMPTY_VIEW;\n  private bytes = EMPTY_BYTES;\n  private headByte = HEAD_BYTE_REQUIRED;\n  private readonly stack: Array<StackState> = [];\n\n  public constructor(\n    private readonly extensionCodec: ExtensionCodecType<ContextType> = ExtensionCodec.defaultCodec as any,\n    private readonly context: ContextType = undefined as any,\n    private readonly maxStrLength = DEFAULT_MAX_LENGTH,\n    private readonly maxBinLength = DEFAULT_MAX_LENGTH,\n    private readonly maxArrayLength = DEFAULT_MAX_LENGTH,\n    private readonly maxMapLength = DEFAULT_MAX_LENGTH,\n    private readonly maxExtLength = DEFAULT_MAX_LENGTH,\n    private readonly keyDecoder: KeyDecoder | null = sharedCachedKeyDecoder,\n  ) {}\n\n  private reinitializeState() {\n    this.totalPos = 0;\n    this.headByte = HEAD_BYTE_REQUIRED;\n  }\n\n  private setBuffer(buffer: ArrayLike<number> | ArrayBuffer): void {\n    this.bytes = ensureUint8Array(buffer);\n    this.view = createDataView(this.bytes);\n    this.pos = 0;\n  }\n\n  private appendBuffer(buffer: ArrayLike<number>) {\n    if (this.headByte === HEAD_BYTE_REQUIRED && !this.hasRemaining()) {\n      this.setBuffer(buffer);\n    } else {\n      // retried because data is insufficient\n      const remainingData = this.bytes.subarray(this.pos);\n      const newData = ensureUint8Array(buffer);\n      const concated = new Uint8Array(remainingData.length + newData.length);\n      concated.set(remainingData);\n      concated.set(newData, remainingData.length);\n      this.setBuffer(concated);\n    }\n  }\n\n  private hasRemaining(size = 1) {\n    return this.view.byteLength - this.pos >= size;\n  }\n\n  private createNoExtraBytesError(posToShow: number): Error {\n    const { view, pos } = this;\n    return new RangeError(`Extra ${view.byteLength - pos} of ${view.byteLength} byte(s) found at buffer[${posToShow}]`);\n  }\n\n  public decode(buffer: ArrayLike<number> | ArrayBuffer): unknown {\n    this.reinitializeState();\n    this.setBuffer(buffer);\n    return this.doDecodeSingleSync();\n  }\n\n  private doDecodeSingleSync(): unknown {\n    const object = this.doDecodeSync();\n    if (this.hasRemaining()) {\n      throw this.createNoExtraBytesError(this.pos);\n    }\n    return object;\n  }\n\n  public async decodeAsync(stream: AsyncIterable<ArrayLike<number>>): Promise<unknown> {\n    let decoded = false;\n    let object: unknown;\n    for await (const buffer of stream) {\n      if (decoded) {\n        throw this.createNoExtraBytesError(this.totalPos);\n      }\n\n      this.appendBuffer(buffer);\n\n      try {\n        object = this.doDecodeSync();\n        decoded = true;\n      } catch (e) {\n        if (!(e instanceof DataViewIndexOutOfBoundsError)) {\n          throw e; // rethrow\n        }\n        // fallthrough\n      }\n      this.totalPos += this.pos;\n    }\n\n    if (decoded) {\n      if (this.hasRemaining()) {\n        throw this.createNoExtraBytesError(this.totalPos);\n      }\n      return object;\n    }\n\n    const { headByte, pos, totalPos } = this;\n    throw new RangeError(\n      `Insufficient data in parcing ${prettyByte(headByte)} at ${totalPos} (${pos} in the current buffer)`,\n    );\n  }\n\n  public decodeArrayStream(stream: AsyncIterable<ArrayLike<number>>) {\n    return this.decodeMultiAsync(stream, true);\n  }\n\n  public decodeStream(stream: AsyncIterable<ArrayLike<number>>) {\n    return this.decodeMultiAsync(stream, false);\n  }\n\n  private async *decodeMultiAsync(stream: AsyncIterable<ArrayLike<number>>, isArray: boolean) {\n    let isArrayHeaderRequired = isArray;\n    let arrayItemsLeft = -1;\n\n    for await (const buffer of stream) {\n      if (isArray && arrayItemsLeft === 0) {\n        throw this.createNoExtraBytesError(this.totalPos);\n      }\n\n      this.appendBuffer(buffer);\n\n      if (isArrayHeaderRequired) {\n        arrayItemsLeft = this.readArraySize();\n        isArrayHeaderRequired = false;\n        this.complete();\n      }\n\n      try {\n        while (true) {\n          yield this.doDecodeSync();\n          if (--arrayItemsLeft === 0) {\n            break;\n          }\n        }\n      } catch (e) {\n        if (!(e instanceof DataViewIndexOutOfBoundsError)) {\n          throw e; // rethrow\n        }\n        // fallthrough\n      }\n      this.totalPos += this.pos;\n    }\n  }\n\n  private doDecodeSync(): unknown {\n    DECODE: while (true) {\n      const headByte = this.readHeadByte();\n      let object: unknown;\n\n      if (headByte >= 0xe0) {\n        // negative fixint (111x xxxx) 0xe0 - 0xff\n        object = headByte - 0x100;\n      } else if (headByte < 0xc0) {\n        if (headByte < 0x80) {\n          // positive fixint (0xxx xxxx) 0x00 - 0x7f\n          object = headByte;\n        } else if (headByte < 0x90) {\n          // fixmap (1000 xxxx) 0x80 - 0x8f\n          const size = headByte - 0x80;\n          if (size !== 0) {\n            this.pushMapState(size);\n            this.complete();\n            continue DECODE;\n          } else {\n            object = {};\n          }\n        } else if (headByte < 0xa0) {\n          // fixarray (1001 xxxx) 0x90 - 0x9f\n          const size = headByte - 0x90;\n          if (size !== 0) {\n            this.pushArrayState(size);\n            this.complete();\n            continue DECODE;\n          } else {\n            object = [];\n          }\n        } else {\n          // fixstr (101x xxxx) 0xa0 - 0xbf\n          const byteLength = headByte - 0xa0;\n          object = this.decodeUtf8String(byteLength, 0);\n        }\n      } else if (headByte === 0xc0) {\n        // nil\n        object = null;\n      } else if (headByte === 0xc2) {\n        // false\n        object = false;\n      } else if (headByte === 0xc3) {\n        // true\n        object = true;\n      } else if (headByte === 0xca) {\n        // float 32\n        object = this.readF32();\n      } else if (headByte === 0xcb) {\n        // float 64\n        object = this.readF64();\n      } else if (headByte === 0xcc) {\n        // uint 8\n        object = this.readU8();\n      } else if (headByte === 0xcd) {\n        // uint 16\n        object = this.readU16();\n      } else if (headByte === 0xce) {\n        // uint 32\n        object = this.readU32();\n      } else if (headByte === 0xcf) {\n        // uint 64\n        object = this.readU64();\n      } else if (headByte === 0xd0) {\n        // int 8\n        object = this.readI8();\n      } else if (headByte === 0xd1) {\n        // int 16\n        object = this.readI16();\n      } else if (headByte === 0xd2) {\n        // int 32\n        object = this.readI32();\n      } else if (headByte === 0xd3) {\n        // int 64\n        object = this.readI64();\n      } else if (headByte === 0xd9) {\n        // str 8\n        const byteLength = this.lookU8();\n        object = this.decodeUtf8String(byteLength, 1);\n      } else if (headByte === 0xda) {\n        // str 16\n        const byteLength = this.lookU16();\n        object = this.decodeUtf8String(byteLength, 2);\n      } else if (headByte === 0xdb) {\n        // str 32\n        const byteLength = this.lookU32();\n        object = this.decodeUtf8String(byteLength, 4);\n      } else if (headByte === 0xdc) {\n        // array 16\n        const size = this.readU16();\n        if (size !== 0) {\n          this.pushArrayState(size);\n          this.complete();\n          continue DECODE;\n        } else {\n          object = [];\n        }\n      } else if (headByte === 0xdd) {\n        // array 32\n        const size = this.readU32();\n        if (size !== 0) {\n          this.pushArrayState(size);\n          this.complete();\n          continue DECODE;\n        } else {\n          object = [];\n        }\n      } else if (headByte === 0xde) {\n        // map 16\n        const size = this.readU16();\n        if (size !== 0) {\n          this.pushMapState(size);\n          this.complete();\n          continue DECODE;\n        } else {\n          object = {};\n        }\n      } else if (headByte === 0xdf) {\n        // map 32\n        const size = this.readU32();\n        if (size !== 0) {\n          this.pushMapState(size);\n          this.complete();\n          continue DECODE;\n        } else {\n          object = {};\n        }\n      } else if (headByte === 0xc4) {\n        // bin 8\n        const size = this.lookU8();\n        object = this.decodeBinary(size, 1);\n      } else if (headByte === 0xc5) {\n        // bin 16\n        const size = this.lookU16();\n        object = this.decodeBinary(size, 2);\n      } else if (headByte === 0xc6) {\n        // bin 32\n        const size = this.lookU32();\n        object = this.decodeBinary(size, 4);\n      } else if (headByte === 0xd4) {\n        // fixext 1\n        object = this.decodeExtension(1, 0);\n      } else if (headByte === 0xd5) {\n        // fixext 2\n        object = this.decodeExtension(2, 0);\n      } else if (headByte === 0xd6) {\n        // fixext 4\n        object = this.decodeExtension(4, 0);\n      } else if (headByte === 0xd7) {\n        // fixext 8\n        object = this.decodeExtension(8, 0);\n      } else if (headByte === 0xd8) {\n        // fixext 16\n        object = this.decodeExtension(16, 0);\n      } else if (headByte === 0xc7) {\n        // ext 8\n        const size = this.lookU8();\n        object = this.decodeExtension(size, 1);\n      } else if (headByte === 0xc8) {\n        // ext 16\n        const size = this.lookU16();\n        object = this.decodeExtension(size, 2);\n      } else if (headByte === 0xc9) {\n        // ext 32\n        const size = this.lookU32();\n        object = this.decodeExtension(size, 4);\n      } else {\n        throw new Error(`Unrecognized type byte: ${prettyByte(headByte)}`);\n      }\n\n      this.complete();\n\n      const stack = this.stack;\n      while (stack.length > 0) {\n        // arrays and maps\n        const state = stack[stack.length - 1];\n        if (state.type === State.ARRAY) {\n          state.array[state.position] = object;\n          state.position++;\n          if (state.position === state.size) {\n            stack.pop();\n            object = state.array;\n          } else {\n            continue DECODE;\n          }\n        } else if (state.type === State.MAP_KEY) {\n          if (!isValidMapKeyType(object)) {\n            throw new Error(\"The type of key must be string or number but \" + typeof object);\n          }\n\n          state.key = object;\n          state.type = State.MAP_VALUE;\n          continue DECODE;\n        } else {\n          // it must be `state.type === State.MAP_VALUE` here\n\n          // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n          state.map[state.key!] = object;\n          state.readCount++;\n\n          if (state.readCount === state.size) {\n            stack.pop();\n            object = state.map;\n          } else {\n            state.key = null;\n            state.type = State.MAP_KEY;\n            continue DECODE;\n          }\n        }\n      }\n\n      return object;\n    }\n  }\n\n  private readHeadByte(): number {\n    if (this.headByte === HEAD_BYTE_REQUIRED) {\n      this.headByte = this.readU8();\n      // console.log(\"headByte\", prettyByte(this.headByte));\n    }\n\n    return this.headByte;\n  }\n\n  private complete(): void {\n    this.headByte = HEAD_BYTE_REQUIRED;\n  }\n\n  private readArraySize(): number {\n    const headByte = this.readHeadByte();\n\n    switch (headByte) {\n      case 0xdc:\n        return this.readU16();\n      case 0xdd:\n        return this.readU32();\n      default: {\n        if (headByte < 0xa0) {\n          return headByte - 0x90;\n        } else {\n          throw new Error(`Unrecognized array type byte: ${prettyByte(headByte)}`);\n        }\n      }\n    }\n  }\n\n  private pushMapState(size: number) {\n    if (size > this.maxMapLength) {\n      throw new Error(`Max length exceeded: map length (${size}) > maxMapLengthLength (${this.maxMapLength})`);\n    }\n\n    this.stack.push({\n      type: State.MAP_KEY,\n      size,\n      key: null,\n      readCount: 0,\n      map: {},\n    });\n  }\n\n  private pushArrayState(size: number) {\n    if (size > this.maxArrayLength) {\n      throw new Error(`Max length exceeded: array length (${size}) > maxArrayLength (${this.maxArrayLength})`);\n    }\n\n    this.stack.push({\n      type: State.ARRAY,\n      size,\n      array: new Array<unknown>(size),\n      position: 0,\n    });\n  }\n\n  private decodeUtf8String(byteLength: number, headerOffset: number): string {\n    if (byteLength > this.maxStrLength) {\n      throw new Error(`Max length exceeded: UTF-8 byte length (${byteLength}) > maxStrLength (${this.maxStrLength})`);\n    }\n\n    if (this.bytes.byteLength < this.pos + headerOffset + byteLength) {\n      throw MORE_DATA;\n    }\n\n    const offset = this.pos + headerOffset;\n    let object: string;\n    if (this.stateIsMapKey() && this.keyDecoder?.canBeCached(byteLength)) {\n      object = this.keyDecoder.decode(this.bytes, offset, byteLength);\n    } else if (TEXT_ENCODING_AVAILABLE && byteLength > TEXT_DECODER_THRESHOLD) {\n      object = utf8DecodeTD(this.bytes, offset, byteLength);\n    } else {\n      object = utf8DecodeJs(this.bytes, offset, byteLength);\n    }\n    this.pos += headerOffset + byteLength;\n    return object;\n  }\n\n  private stateIsMapKey(): boolean {\n    if (this.stack.length > 0) {\n      const state = this.stack[this.stack.length - 1];\n      return state.type === State.MAP_KEY;\n    }\n    return false;\n  }\n\n  private decodeBinary(byteLength: number, headOffset: number): Uint8Array {\n    if (byteLength > this.maxBinLength) {\n      throw new Error(`Max length exceeded: bin length (${byteLength}) > maxBinLength (${this.maxBinLength})`);\n    }\n\n    if (!this.hasRemaining(byteLength + headOffset)) {\n      throw MORE_DATA;\n    }\n\n    const offset = this.pos + headOffset;\n    const object = this.bytes.subarray(offset, offset + byteLength);\n    this.pos += headOffset + byteLength;\n    return object;\n  }\n\n  private decodeExtension(size: number, headOffset: number): unknown {\n    if (size > this.maxExtLength) {\n      throw new Error(`Max length exceeded: ext length (${size}) > maxExtLength (${this.maxExtLength})`);\n    }\n\n    const extType = this.view.getInt8(this.pos + headOffset);\n    const data = this.decodeBinary(size, headOffset + 1 /* extType */);\n    return this.extensionCodec.decode(data, extType, this.context);\n  }\n\n  private lookU8() {\n    return this.view.getUint8(this.pos);\n  }\n\n  private lookU16() {\n    return this.view.getUint16(this.pos);\n  }\n\n  private lookU32() {\n    return this.view.getUint32(this.pos);\n  }\n\n  private readU8(): number {\n    const value = this.view.getUint8(this.pos);\n    this.pos++;\n    return value;\n  }\n\n  private readI8(): number {\n    const value = this.view.getInt8(this.pos);\n    this.pos++;\n    return value;\n  }\n\n  private readU16(): number {\n    const value = this.view.getUint16(this.pos);\n    this.pos += 2;\n    return value;\n  }\n\n  private readI16(): number {\n    const value = this.view.getInt16(this.pos);\n    this.pos += 2;\n    return value;\n  }\n\n  private readU32(): number {\n    const value = this.view.getUint32(this.pos);\n    this.pos += 4;\n    return value;\n  }\n\n  private readI32(): number {\n    const value = this.view.getInt32(this.pos);\n    this.pos += 4;\n    return value;\n  }\n\n  private readU64(): bigint | number {\n    const value = getUint64(this.view, this.pos);\n    this.pos += 8;\n    return value;\n  }\n\n  private readI64(): bigint | number {\n    const value = getInt64(this.view, this.pos);\n    this.pos += 8;\n    return value;\n  }\n\n  private readF32() {\n    const value = this.view.getFloat32(this.pos);\n    this.pos += 4;\n    return value;\n  }\n\n  private readF64() {\n    const value = this.view.getFloat64(this.pos);\n    this.pos += 8;\n    return value;\n  }\n}\n","import { ExtensionCodecType } from \"./ExtensionCodec\";\nimport { Decoder } from \"./Decoder\";\nimport { ContextOf, SplitUndefined } from \"./context\";\n\nexport type DecodeOptions<ContextType = undefined> = Readonly<\n  Partial<{\n    extensionCodec: ExtensionCodecType<ContextType>;\n\n    /**\n     * Maximum string length.\n     * Default to 4_294_967_295 (UINT32_MAX).\n     */\n    maxStrLength: number;\n    /**\n     * Maximum binary length.\n     * Default to 4_294_967_295 (UINT32_MAX).\n     */\n    maxBinLength: number;\n    /**\n     * Maximum array length.\n     * Default to 4_294_967_295 (UINT32_MAX).\n     */\n    maxArrayLength: number;\n    /**\n     * Maximum map length.\n     * Default to 4_294_967_295 (UINT32_MAX).\n     */\n    maxMapLength: number;\n    /**\n     * Maximum extension length.\n     * Default to 4_294_967_295 (UINT32_MAX).\n     */\n    maxExtLength: number;\n  }>\n> &\n  ContextOf<ContextType>;\n\nexport const defaultDecodeOptions: DecodeOptions = {};\n\n/**\n * It decodes a MessagePack-encoded buffer.\n *\n * This is a synchronous decoding function. See other variants for asynchronous decoding: `decodeAsync()`, `decodeStream()`, `decodeArrayStream()`.\n */\nexport function decode<ContextType>(\n  buffer: ArrayLike<number> | ArrayBuffer,\n  options: DecodeOptions<SplitUndefined<ContextType>> = defaultDecodeOptions as any,\n): unknown {\n  const decoder = new Decoder<ContextType>(\n    options.extensionCodec,\n    (options as typeof options & { context: any }).context,\n    options.maxStrLength,\n    options.maxBinLength,\n    options.maxArrayLength,\n    options.maxMapLength,\n    options.maxExtLength,\n  );\n  return decoder.decode(buffer);\n}\n","// utility for whatwg streams\n\n// The living standard of whatwg streams says\n// ReadableStream is also AsyncIterable, but\n// as of June 2019, no browser implements it.\n// See https://streams.spec.whatwg.org/ for details\nexport type ReadableStreamLike<T> = AsyncIterable<T> | ReadableStream<T>;\n\nexport function isAsyncIterable<T>(object: ReadableStreamLike<T>): object is AsyncIterable<T> {\n  return (object as any)[Symbol.asyncIterator] != null;\n}\n\nfunction assertNonNull<T>(value: T | null | undefined): asserts value is T {\n  if (value == null) {\n    throw new Error(\"Assertion Failure: value must not be null nor undefined\");\n  }\n}\n\nexport async function* asyncIterableFromStream<T>(stream: ReadableStream<T>): AsyncIterable<T> {\n  const reader = stream.getReader();\n\n  try {\n    while (true) {\n      const { done, value } = await reader.read();\n      if (done) {\n        return;\n      }\n      assertNonNull(value);\n      yield value;\n    }\n  } finally {\n    reader.releaseLock();\n  }\n}\n\nexport function ensureAsyncIterabe<T>(streamLike: ReadableStreamLike<T>): AsyncIterable<T> {\n  if (isAsyncIterable(streamLike)) {\n    return streamLike;\n  } else {\n    return asyncIterableFromStream(streamLike);\n  }\n}\n","/**\n * This file is a wrapper of msgpack.js.\n * The wrapper was written in order to ensure correct encoding of Algorand Transaction and other formats.\n * In particular, it matches go-algorand blockchain client, written in go (https://www.github.com/algorand/go-algorand.\n * Algorand's msgpack encoding follows to following rules -\n *  1. Every integer must be encoded to the smallest type possible (0-255-\\>8bit, 256-65535-\\>16bit, etx)\n *  2. All fields names must be sorted\n *  3. All empty and 0 fields should be omitted\n *  4. Every positive number must be encoded as uint\n *  5. Binary blob should be used for binary data and string for strings\n *  */\n\nimport * as msgpack from 'algo-msgpack-with-bigint';\n\n// Errors\nexport const ERROR_CONTAINS_EMPTY_STRING =\n  'The object contains empty or 0 values. First empty or 0 value encountered during encoding: ';\n\n/**\n * containsEmpty returns true if any of the object's values are empty, false otherwise.\n * Empty arrays considered empty\n * @param obj - The object to check\n * @returns \\{true, empty key\\} if contains empty, \\{false, undefined\\} otherwise\n */\nfunction containsEmpty(obj: Record<string | number | symbol, any>) {\n  for (const key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      if (!obj[key] || obj[key].length === 0) {\n        return { containsEmpty: true, firstEmptyKey: key };\n      }\n    }\n  }\n  return { containsEmpty: false, firstEmptyKey: undefined };\n}\n\n/**\n * rawEncode encodes objects using msgpack, regardless of whether there are\n * empty or 0 value fields.\n * @param obj - a dictionary to be encoded. May or may not contain empty or 0 values.\n * @returns msgpack representation of the object\n */\nexport function rawEncode(obj: Record<string | number | symbol, any>) {\n  // enable the canonical option\n  const options = { sortKeys: true };\n  return msgpack.encode(obj, options);\n}\n\n/**\n * encode encodes objects using msgpack\n * @param obj - a dictionary to be encoded. Must not contain empty or 0 values.\n * @returns msgpack representation of the object\n * @throws Error containing ERROR_CONTAINS_EMPTY_STRING if the object contains empty or zero values\n */\nexport function encode(obj: Record<string | number | symbol, any>) {\n  // Check for empty values\n  const emptyCheck = containsEmpty(obj);\n  if (emptyCheck.containsEmpty) {\n    throw new Error(ERROR_CONTAINS_EMPTY_STRING + emptyCheck.firstEmptyKey);\n  }\n\n  // enable the canonical option\n  return rawEncode(obj);\n}\n\nexport function decode(buffer: ArrayLike<number>) {\n  return msgpack.decode(buffer);\n}\n","import { EncodedBoxReference } from './types';\nimport { BoxReference } from './types/transactions/base';\n\nfunction translateBoxReference(\n  reference: BoxReference,\n  foreignApps: number[],\n  appIndex: number\n): EncodedBoxReference {\n  const referenceId = reference.appIndex;\n  const referenceName = reference.name;\n  const isOwnReference = referenceId === 0 || referenceId === appIndex;\n  let index = 0;\n\n  if (foreignApps != null) {\n    // Foreign apps start from index 1; index 0 is its own app ID.\n    index = foreignApps.indexOf(referenceId) + 1;\n  }\n  // Check if the app referenced is itself after checking the foreign apps array.\n  // If index is zero, then the app ID was not found in the foreign apps array\n  // or the foreign apps array was null.\n  if (index === 0 && !isOwnReference) {\n    // Error if the app is trying to reference a foreign app that was not in\n    // its own foreign apps array.\n    throw new Error(`Box ref with appId ${referenceId} not in foreign-apps`);\n  }\n  return { i: index, n: referenceName };\n}\n\n/**\n * translateBoxReferences translates an array of BoxReferences with app IDs\n * into an array of EncodedBoxReferences with foreign indices.\n */\nexport function translateBoxReferences(\n  references: BoxReference[] | undefined,\n  foreignApps: number[],\n  appIndex: number\n): EncodedBoxReference[] {\n  if (references == null) return [];\n  return references.map((bx) =>\n    translateBoxReference(bx, foreignApps, appIndex)\n  );\n}\n","/**\n * Enum for application transaction types.\n *\n * The full list is available at https://developer.algorand.org/docs/reference/transactions/\n */\nexport enum TransactionType {\n  /**\n   * Payment transaction\n   */\n  pay = 'pay',\n\n  /**\n   * Key registration transaction\n   */\n  keyreg = 'keyreg',\n\n  /**\n   * Asset configuration transaction\n   */\n  acfg = 'acfg',\n\n  /**\n   * Asset transfer transaction\n   */\n  axfer = 'axfer',\n\n  /**\n   * Asset freeze transaction\n   */\n  afrz = 'afrz',\n\n  /**\n   * Application transaction\n   */\n  appl = 'appl',\n  /**\n   * State proof transaction\n   */\n  stpf = 'stpf',\n}\n\nexport function isTransactionType(s: string): s is TransactionType {\n  return (\n    s === TransactionType.pay ||\n    s === TransactionType.keyreg ||\n    s === TransactionType.acfg ||\n    s === TransactionType.axfer ||\n    s === TransactionType.afrz ||\n    s === TransactionType.appl ||\n    s === TransactionType.stpf\n  );\n}\n\n/**\n * Enums for application transactions on-transaction-complete behavior\n */\nexport enum OnApplicationComplete {\n  /**\n   * NoOpOC indicates that an application transaction will simply call its\n   * ApprovalProgram\n   */\n  NoOpOC,\n\n  /**\n   * OptInOC indicates that an application transaction will allocate some\n   * LocalState for the application in the sender's account\n   */\n  OptInOC,\n\n  /**\n   * CloseOutOC indicates that an application transaction will deallocate\n   * some LocalState for the application from the user's account\n   */\n  CloseOutOC,\n\n  /**\n   * ClearStateOC is similar to CloseOutOC, but may never fail. This\n   * allows users to reclaim their minimum balance from an application\n   * they no longer wish to opt in to.\n   */\n  ClearStateOC,\n\n  /**\n   * UpdateApplicationOC indicates that an application transaction will\n   * update the ApprovalProgram and ClearStateProgram for the application\n   */\n  UpdateApplicationOC,\n\n  /**\n   * DeleteApplicationOC indicates that an application transaction will\n   * delete the AppParams for the application from the creator's balance\n   * record\n   */\n  DeleteApplicationOC,\n}\n\n/**\n * A dict holding common-to-all-txns arguments\n */\nexport interface SuggestedParams {\n  /**\n   * Set this to true to specify fee as microalgos-per-txn\n   *   If the final calculated fee is lower than the protocol minimum fee, the fee will be increased to match the minimum\n   */\n  flatFee?: boolean;\n\n  /**\n   * Integer fee per byte, in microAlgos. For a flat fee, set flatFee to true\n   */\n  fee: number;\n\n  /**\n   * First protocol round on which this txn is valid\n   */\n  firstRound: number;\n\n  /**\n   * Last protocol round on which this txn is valid\n   */\n  lastRound: number;\n\n  /**\n   * Specifies genesis ID of network in use\n   */\n  genesisID: string;\n\n  /**\n   * Specifies hash genesis block of network in use\n   */\n  genesisHash: string;\n}\n\nexport type SuggestedParamsWithMinFee = SuggestedParams & {\n  /**\n   * Minimum fee (not per byte) required for the transaction to be confirmed\n   */\n  minFee: number;\n};\n\n/**\n * A grouping of the app ID and name of the box in an Uint8Array\n */\nexport interface BoxReference {\n  /**\n   * A unique application index\n   */\n  appIndex: number;\n\n  /**\n   * Name of box to reference\n   */\n  name: Uint8Array;\n}\n\n/**\n * A full list of all available transaction parameters\n *\n * The full documentation is available at:\n * https://developer.algorand.org/docs/reference/transactions/#common-fields-header-and-type\n */\nexport interface TransactionParams {\n  /**\n   * String representation of Algorand address of sender\n   */\n  from: string;\n\n  /**\n   * String representation of Algorand address of recipient\n   */\n  to: string;\n\n  /**\n   * Integer fee per byte, in microAlgos. For a flat fee, set flatFee to true\n   */\n  fee: number;\n\n  /**\n   * Integer amount to send\n   */\n  amount: number | bigint;\n\n  /**\n   * Integer first protocol round on which this txn is valid\n   */\n  firstRound: number;\n\n  /**\n   * Integer last protocol round on which this txn is valid\n   */\n  lastRound: number;\n\n  /**\n   * Arbitrary data for sender to store\n   */\n  note?: Uint8Array;\n\n  /**\n   * Specifies genesis ID of network in use\n   */\n  genesisID: string;\n\n  /**\n   * Specifies hash genesis block of network in use\n   */\n  genesisHash: string;\n\n  /**\n   * Lease a transaction. The sender cannot send another txn with that same lease until the last round of original txn has passed\n   */\n  lease?: Uint8Array;\n\n  /**\n   * Close out remaining account balance to this account\n   */\n  closeRemainderTo?: string;\n\n  /**\n   * Voting key bytes. For key deregistration, leave undefined\n   */\n  voteKey: Uint8Array | string;\n\n  /**\n   *Selection key bytes. For key deregistration, leave undefined\n   */\n  selectionKey: Uint8Array | string;\n\n  /**\n   * State proof key bytes. For key deregistration, leave undefined\n   */\n  stateProofKey: Uint8Array | string;\n\n  /**\n   * First round on which voteKey is valid\n   */\n  voteFirst: number;\n\n  /**\n   * Last round on which voteKey is valid\n   */\n  voteLast: number;\n\n  /**\n   * The dilution fo the 2-level participation key\n   */\n  voteKeyDilution: number;\n\n  /**\n   * Asset index uniquely specifying the asset\n   */\n  assetIndex: number;\n\n  /**\n   * Total supply of the asset\n   */\n  assetTotal: number | bigint;\n\n  /**\n   * Integer number of decimals for asset unit calcuation\n   */\n  assetDecimals: number;\n\n  /**\n   * Whether asset accounts should default to being frozen\n   */\n  assetDefaultFrozen: boolean;\n\n  /**\n   * String representation of Algorand address in charge of reserve, freeze, clawback, destruction, etc.\n   */\n  assetManager?: string;\n\n  /**\n   * String representation of Algorand address representing asset reserve\n   */\n  assetReserve?: string;\n\n  /**\n   * String representation of Algorand address with power to freeze/unfreeze asset holdings\n   */\n  assetFreeze?: string;\n\n  /**\n   * String representation of Algorand address with power to revoke asset holdings\n   */\n  assetClawback?: string;\n\n  /**\n   * Unit name for this asset\n   */\n  assetUnitName?: string;\n  /**\n   * Name for this asset\n   */\n  assetName?: string;\n\n  /**\n   * URL relating to this asset\n   */\n  assetURL?: string;\n\n  /**\n   * Uint8Array or UTF-8 string representation of a hash commitment with respect to the asset. Must be exactly 32 bytes long.\n   */\n  assetMetadataHash?: Uint8Array | string;\n\n  /**\n   * String representation of Algorand address being frozen or unfrozen\n   */\n  freezeAccount: string;\n\n  /**\n   * true if freezeTarget should be frozen, false if freezeTarget should be allowed to transact\n   */\n  freezeState: boolean;\n\n  /**\n   * String representation of Algorand address – if provided, and if \"from\" is\n   * the asset's revocation manager, then deduct from \"revocationTarget\" rather than \"from\"\n   */\n  assetRevocationTarget?: string;\n\n  /**\n   * A unique application index\n   */\n  appIndex: number;\n\n  /**\n   * What application should do once the program has been run\n   */\n  appOnComplete: OnApplicationComplete;\n\n  /**\n   * Restricts number of ints in per-user local state\n   */\n  appLocalInts: number;\n\n  /**\n   * Restricts number of byte slices in per-user local state\n   */\n  appLocalByteSlices: number;\n\n  /**\n   * Restricts number of ints in global state\n   */\n  appGlobalInts: number;\n\n  /**\n   * Restricts number of byte slices in global state\n   */\n  appGlobalByteSlices: number;\n\n  /**\n   * The compiled TEAL that approves a transaction\n   */\n  appApprovalProgram: Uint8Array;\n\n  /**\n   * The compiled TEAL program that runs when clearing state\n   */\n  appClearProgram: Uint8Array;\n\n  /**\n   * Array of Uint8Array, any additional arguments to the application\n   */\n  appArgs?: Uint8Array[];\n\n  /**\n   * Array of Address strings, any additional accounts to supply to the application\n   */\n  appAccounts?: string[];\n\n  /**\n   * Array of int, any other apps used by the application, identified by index\n   */\n  appForeignApps?: number[];\n\n  /**\n   * Array of int, any assets used by the application, identified by index\n   */\n  appForeignAssets?: number[];\n\n  /**\n   * Transaction type\n   */\n  type?: TransactionType;\n\n  /**\n   * Set this to true to specify fee as microalgos-per-txn.\n   *\n   * If the final calculated fee is lower than the protocol minimum fee, the fee will be increased to match the minimum\n   */\n  flatFee?: boolean;\n\n  /**\n   * A dict holding common-to-all-txns arguments\n   */\n  suggestedParams: SuggestedParams;\n\n  /**\n   * String representation of the Algorand address that will be used to authorize all future transactions\n   */\n  reKeyTo?: string;\n\n  /**\n   * Set this value to true to mark this account as nonparticipating.\n   *\n   * All new Algorand accounts are participating by default. This means they earn rewards.\n   */\n  nonParticipation?: boolean;\n\n  /**\n   * Int representing extra pages of memory to rent during an application create transaction.\n   */\n  extraPages?: number;\n\n  /**\n   * A grouping of the app ID and name of the box in an Uint8Array\n   */\n  boxes?: BoxReference[];\n\n  /*\n   * Uint64 identifying a particular configuration of state proofs.\n   */\n  stateProofType?: number | bigint;\n\n  /**\n   * Byte array containing the state proof.\n   */\n  stateProof?: Uint8Array;\n\n  /**\n   * Byte array containing the state proof message.\n   */\n  stateProofMessage?: Uint8Array;\n}\n","import { Buffer } from 'buffer';\nimport base32 from 'hi-base32';\nimport * as address from './encoding/address';\nimport * as encoding from './encoding/encoding';\nimport * as nacl from './nacl/naclWrappers';\nimport * as utils from './utils/utils';\nimport { translateBoxReferences } from './boxStorage';\nimport {\n  OnApplicationComplete,\n  TransactionParams,\n  TransactionType,\n  isTransactionType,\n  BoxReference,\n} from './types/transactions/base';\nimport AnyTransaction, {\n  MustHaveSuggestedParams,\n  MustHaveSuggestedParamsInline,\n  EncodedTransaction,\n  EncodedSignedTransaction,\n  EncodedMultisig,\n  EncodedLogicSig,\n} from './types/transactions';\nimport { Address } from './types/address';\n\nconst ALGORAND_TRANSACTION_LENGTH = 52;\nexport const ALGORAND_MIN_TX_FEE = 1000; // version v5\nconst ALGORAND_TRANSACTION_LEASE_LENGTH = 32;\nconst ALGORAND_MAX_ASSET_DECIMALS = 19;\nconst NUM_ADDL_BYTES_AFTER_SIGNING = 75; // NUM_ADDL_BYTES_AFTER_SIGNING is the number of bytes added to a txn after signing it\nconst ALGORAND_TRANSACTION_LEASE_LABEL_LENGTH = 5;\nconst ALGORAND_TRANSACTION_ADDRESS_LENGTH = 32;\nconst ALGORAND_TRANSACTION_REKEY_LABEL_LENGTH = 5;\nconst ASSET_METADATA_HASH_LENGTH = 32;\nconst KEYREG_VOTE_KEY_LENGTH = 32;\nconst KEYREG_SELECTION_KEY_LENGTH = 32;\nconst KEYREG_STATE_PROOF_KEY_LENGTH = 64;\n\ntype AnyTransactionWithParams = MustHaveSuggestedParams<AnyTransaction>;\ntype AnyTransactionWithParamsInline = MustHaveSuggestedParamsInline<AnyTransaction>;\n\n/**\n * A modified version of the transaction params. Represents the internal structure that the Transaction class uses\n * to store inputted transaction objects.\n */\n// Omit allows overwriting properties\ninterface TransactionStorageStructure\n  extends Omit<\n    TransactionParams,\n    | 'from'\n    | 'to'\n    | 'genesisHash'\n    | 'closeRemainderTo'\n    | 'voteKey'\n    | 'selectionKey'\n    | 'stateProofKey'\n    | 'assetManager'\n    | 'assetReserve'\n    | 'assetFreeze'\n    | 'assetClawback'\n    | 'assetRevocationTarget'\n    | 'freezeAccount'\n    | 'appAccounts'\n    | 'suggestedParams'\n    | 'reKeyTo'\n  > {\n  from: string | Address;\n  to: string | Address;\n  fee: number;\n  amount: number | bigint;\n  firstRound: number;\n  lastRound: number;\n  note?: Uint8Array;\n  genesisID: string;\n  genesisHash: string | Buffer;\n  lease?: Uint8Array;\n  closeRemainderTo?: string | Address;\n  voteKey: string | Buffer;\n  selectionKey: string | Buffer;\n  stateProofKey: string | Buffer;\n  voteFirst: number;\n  voteLast: number;\n  voteKeyDilution: number;\n  assetIndex: number;\n  assetTotal: number | bigint;\n  assetDecimals: number;\n  assetDefaultFrozen: boolean;\n  assetManager: string | Address;\n  assetReserve: string | Address;\n  assetFreeze: string | Address;\n  assetClawback: string | Address;\n  assetUnitName: string;\n  assetName: string;\n  assetURL: string;\n  assetMetadataHash?: string | Uint8Array;\n  freezeAccount: string | Address;\n  freezeState: boolean;\n  assetRevocationTarget?: string | Address;\n  appIndex: number;\n  appOnComplete: OnApplicationComplete;\n  appLocalInts: number;\n  appLocalByteSlices: number;\n  appGlobalInts: number;\n  appGlobalByteSlices: number;\n  appApprovalProgram: Uint8Array;\n  appClearProgram: Uint8Array;\n  appArgs?: Uint8Array[];\n  appAccounts?: string[] | Address[];\n  appForeignApps?: number[];\n  appForeignAssets?: number[];\n  type?: TransactionType;\n  flatFee: boolean;\n  reKeyTo?: string | Address;\n  nonParticipation?: boolean;\n  group?: Buffer;\n  extraPages?: number;\n  boxes?: BoxReference[];\n  stateProofType?: number | bigint;\n  stateProof?: Uint8Array;\n  stateProofMessage?: Uint8Array;\n}\n\nfunction getKeyregKey(\n  input: undefined | string | Uint8Array | Buffer,\n  inputName: string,\n  length: number\n): Buffer | undefined {\n  if (input == null) {\n    return undefined;\n  }\n\n  let inputAsBuffer: Buffer | undefined;\n\n  if (typeof input === 'string') {\n    inputAsBuffer = Buffer.from(input, 'base64');\n  } else if (input.constructor === Uint8Array) {\n    inputAsBuffer = Buffer.from(input);\n  } else if (Buffer.isBuffer(input)) {\n    inputAsBuffer = input;\n  }\n\n  if (inputAsBuffer == null || inputAsBuffer.byteLength !== length) {\n    throw Error(\n      `${inputName} must be a ${length} byte Uint8Array or Buffer or base64 string.`\n    );\n  }\n\n  return inputAsBuffer;\n}\n\n/**\n * Transaction enables construction of Algorand transactions\n * */\nexport class Transaction implements TransactionStorageStructure {\n  name = 'Transaction';\n  tag = Buffer.from('TX');\n\n  // Implement transaction params\n  from: Address;\n  to: Address;\n  fee: number;\n  amount: number | bigint;\n  firstRound: number;\n  lastRound: number;\n  note?: Uint8Array;\n  genesisID: string;\n  genesisHash: Buffer;\n  lease?: Uint8Array;\n  closeRemainderTo?: Address;\n  voteKey: Buffer;\n  selectionKey: Buffer;\n  stateProofKey: Buffer;\n  voteFirst: number;\n  voteLast: number;\n  voteKeyDilution: number;\n  assetIndex: number;\n  assetTotal: number | bigint;\n  assetDecimals: number;\n  assetDefaultFrozen: boolean;\n  assetManager: Address;\n  assetReserve: Address;\n  assetFreeze: Address;\n  assetClawback: Address;\n  assetUnitName: string;\n  assetName: string;\n  assetURL: string;\n  assetMetadataHash?: Uint8Array;\n  freezeAccount: Address;\n  freezeState: boolean;\n  assetRevocationTarget?: Address;\n  appIndex: number;\n  appOnComplete: OnApplicationComplete;\n  appLocalInts: number;\n  appLocalByteSlices: number;\n  appGlobalInts: number;\n  appGlobalByteSlices: number;\n  appApprovalProgram: Uint8Array;\n  appClearProgram: Uint8Array;\n  appArgs?: Uint8Array[];\n  appAccounts?: Address[];\n  appForeignApps?: number[];\n  appForeignAssets?: number[];\n  boxes?: BoxReference[];\n  type?: TransactionType;\n  flatFee: boolean;\n  reKeyTo?: Address;\n  nonParticipation?: boolean;\n  group?: Buffer;\n  extraPages?: number;\n  stateProofType?: number | bigint;\n  stateProof?: Uint8Array;\n  stateProofMessage?: Uint8Array;\n\n  constructor({ ...transaction }: AnyTransaction) {\n    // Populate defaults\n    /* eslint-disable no-param-reassign */\n    const defaults: Partial<TransactionParams> = {\n      type: TransactionType.pay,\n      flatFee: false,\n      nonParticipation: false,\n    };\n    // Default type\n    if (typeof transaction.type === 'undefined') {\n      transaction.type = defaults.type;\n    }\n    // Default flatFee\n    if (\n      typeof (transaction as AnyTransactionWithParamsInline).flatFee ===\n      'undefined'\n    ) {\n      (transaction as AnyTransactionWithParamsInline).flatFee =\n        defaults.flatFee;\n    }\n    // Default nonParticipation\n    if (\n      transaction.type === TransactionType.keyreg &&\n      typeof transaction.voteKey !== 'undefined' &&\n      typeof transaction.nonParticipation === 'undefined'\n    ) {\n      transaction.nonParticipation = defaults.nonParticipation;\n    }\n    /* eslint-enable no-param-reassign */\n\n    // Move suggested parameters from its object to inline\n    if (\n      (transaction as AnyTransactionWithParams).suggestedParams !== undefined\n    ) {\n      // Create a temporary reference to the transaction object that has params inline and also as a suggested params object\n      //   - Helpful for moving params from named object to inline\n      const reference = transaction as AnyTransactionWithParams &\n        AnyTransactionWithParamsInline;\n      reference.genesisHash = reference.suggestedParams.genesisHash;\n      reference.fee = reference.suggestedParams.fee;\n      if (reference.suggestedParams.flatFee !== undefined)\n        reference.flatFee = reference.suggestedParams.flatFee;\n      reference.firstRound = reference.suggestedParams.firstRound;\n      reference.lastRound = reference.suggestedParams.lastRound;\n      reference.genesisID = reference.suggestedParams.genesisID;\n    }\n\n    // At this point all suggestedParams have been moved to be inline, so we can reassign the transaction object type\n    // to one which is more useful as we prepare properties for storing\n    const txn = transaction as TransactionStorageStructure;\n\n    txn.from = address.decodeAddress(txn.from as string);\n    if (txn.to !== undefined) txn.to = address.decodeAddress(txn.to as string);\n    if (txn.closeRemainderTo !== undefined)\n      txn.closeRemainderTo = address.decodeAddress(\n        txn.closeRemainderTo as string\n      );\n    if (txn.assetManager !== undefined)\n      txn.assetManager = address.decodeAddress(txn.assetManager as string);\n    if (txn.assetReserve !== undefined)\n      txn.assetReserve = address.decodeAddress(txn.assetReserve as string);\n    if (txn.assetFreeze !== undefined)\n      txn.assetFreeze = address.decodeAddress(txn.assetFreeze as string);\n    if (txn.assetClawback !== undefined)\n      txn.assetClawback = address.decodeAddress(txn.assetClawback as string);\n    if (txn.assetRevocationTarget !== undefined)\n      txn.assetRevocationTarget = address.decodeAddress(\n        txn.assetRevocationTarget as string\n      );\n    if (txn.freezeAccount !== undefined)\n      txn.freezeAccount = address.decodeAddress(txn.freezeAccount as string);\n    if (txn.reKeyTo !== undefined)\n      txn.reKeyTo = address.decodeAddress(txn.reKeyTo as string);\n    if (txn.genesisHash === undefined)\n      throw Error('genesis hash must be specified and in a base64 string.');\n\n    txn.genesisHash = Buffer.from(txn.genesisHash as string, 'base64');\n\n    if (\n      txn.amount !== undefined &&\n      (!(\n        Number.isSafeInteger(txn.amount) ||\n        (typeof txn.amount === 'bigint' &&\n          txn.amount <= BigInt('0xffffffffffffffff'))\n      ) ||\n        txn.amount < 0)\n    )\n      throw Error(\n        'Amount must be a positive number and smaller than 2^64-1. If the number is larger than 2^53-1, use bigint.'\n      );\n    if (!Number.isSafeInteger(txn.fee) || txn.fee < 0)\n      throw Error('fee must be a positive number and smaller than 2^53-1');\n    if (!Number.isSafeInteger(txn.firstRound) || txn.firstRound < 0)\n      throw Error('firstRound must be a positive number');\n    if (!Number.isSafeInteger(txn.lastRound) || txn.lastRound < 0)\n      throw Error('lastRound must be a positive number');\n    if (\n      txn.extraPages !== undefined &&\n      (!Number.isInteger(txn.extraPages) ||\n        txn.extraPages < 0 ||\n        txn.extraPages > 3)\n    )\n      throw Error('extraPages must be an Integer between and including 0 to 3');\n    if (\n      txn.assetTotal !== undefined &&\n      (!(\n        Number.isSafeInteger(txn.assetTotal) ||\n        (typeof txn.assetTotal === 'bigint' &&\n          txn.assetTotal <= BigInt('0xffffffffffffffff'))\n      ) ||\n        txn.assetTotal < 0)\n    )\n      throw Error(\n        'Total asset issuance must be a positive number and smaller than 2^64-1. If the number is larger than 2^53-1, use bigint.'\n      );\n    if (\n      txn.assetDecimals !== undefined &&\n      (!Number.isSafeInteger(txn.assetDecimals) ||\n        txn.assetDecimals < 0 ||\n        txn.assetDecimals > ALGORAND_MAX_ASSET_DECIMALS)\n    )\n      throw Error(\n        `assetDecimals must be a positive number and smaller than ${ALGORAND_MAX_ASSET_DECIMALS.toString()}`\n      );\n    if (\n      txn.assetIndex !== undefined &&\n      (!Number.isSafeInteger(txn.assetIndex) || txn.assetIndex < 0)\n    )\n      throw Error(\n        'Asset index must be a positive number and smaller than 2^53-1'\n      );\n    if (\n      txn.appIndex !== undefined &&\n      (!Number.isSafeInteger(txn.appIndex) || txn.appIndex < 0)\n    )\n      throw Error(\n        'Application index must be a positive number and smaller than 2^53-1'\n      );\n    if (\n      txn.appLocalInts !== undefined &&\n      (!Number.isSafeInteger(txn.appLocalInts) || txn.appLocalInts < 0)\n    )\n      throw Error(\n        'Application local ints count must be a positive number and smaller than 2^53-1'\n      );\n    if (\n      txn.appLocalByteSlices !== undefined &&\n      (!Number.isSafeInteger(txn.appLocalByteSlices) ||\n        txn.appLocalByteSlices < 0)\n    )\n      throw Error(\n        'Application local byte slices count must be a positive number and smaller than 2^53-1'\n      );\n    if (\n      txn.appGlobalInts !== undefined &&\n      (!Number.isSafeInteger(txn.appGlobalInts) || txn.appGlobalInts < 0)\n    )\n      throw Error(\n        'Application global ints count must be a positive number and smaller than 2^53-1'\n      );\n    if (\n      txn.appGlobalByteSlices !== undefined &&\n      (!Number.isSafeInteger(txn.appGlobalByteSlices) ||\n        txn.appGlobalByteSlices < 0)\n    )\n      throw Error(\n        'Application global byte slices count must be a positive number and smaller than 2^53-1'\n      );\n    if (txn.appApprovalProgram !== undefined) {\n      if (txn.appApprovalProgram.constructor !== Uint8Array)\n        throw Error('appApprovalProgram must be a Uint8Array.');\n    }\n    if (txn.appClearProgram !== undefined) {\n      if (txn.appClearProgram.constructor !== Uint8Array)\n        throw Error('appClearProgram must be a Uint8Array.');\n    }\n    if (txn.appArgs !== undefined) {\n      if (!Array.isArray(txn.appArgs))\n        throw Error('appArgs must be an Array of Uint8Array.');\n      txn.appArgs = txn.appArgs.slice();\n      txn.appArgs.forEach((arg) => {\n        if (arg.constructor !== Uint8Array)\n          throw Error('each element of AppArgs must be a Uint8Array.');\n      });\n    } else {\n      txn.appArgs = [];\n    }\n    if (txn.appAccounts !== undefined) {\n      if (!Array.isArray(txn.appAccounts))\n        throw Error('appAccounts must be an Array of addresses.');\n      txn.appAccounts = txn.appAccounts.map((addressAsString) =>\n        address.decodeAddress(addressAsString)\n      );\n    }\n    if (txn.appForeignApps !== undefined) {\n      if (!Array.isArray(txn.appForeignApps))\n        throw Error('appForeignApps must be an Array of integers.');\n      txn.appForeignApps = txn.appForeignApps.slice();\n      txn.appForeignApps.forEach((foreignAppIndex) => {\n        if (!Number.isSafeInteger(foreignAppIndex) || foreignAppIndex < 0)\n          throw Error(\n            'each foreign application index must be a positive number and smaller than 2^53-1'\n          );\n      });\n    }\n    if (txn.appForeignAssets !== undefined) {\n      if (!Array.isArray(txn.appForeignAssets))\n        throw Error('appForeignAssets must be an Array of integers.');\n      txn.appForeignAssets = txn.appForeignAssets.slice();\n      txn.appForeignAssets.forEach((foreignAssetIndex) => {\n        if (!Number.isSafeInteger(foreignAssetIndex) || foreignAssetIndex < 0)\n          throw Error(\n            'each foreign asset index must be a positive number and smaller than 2^53-1'\n          );\n      });\n    }\n    if (txn.boxes !== undefined) {\n      if (!Array.isArray(txn.boxes))\n        throw Error('boxes must be an Array of BoxReference.');\n      txn.boxes = txn.boxes.slice();\n      txn.boxes.forEach((box) => {\n        if (\n          !Number.isSafeInteger(box.appIndex) ||\n          box.name.constructor !== Uint8Array\n        )\n          throw Error(\n            'box app index must be a number and name must be an Uint8Array.'\n          );\n      });\n    }\n    if (\n      txn.assetMetadataHash !== undefined &&\n      txn.assetMetadataHash.length !== 0\n    ) {\n      if (typeof txn.assetMetadataHash === 'string') {\n        txn.assetMetadataHash = new Uint8Array(\n          Buffer.from(txn.assetMetadataHash)\n        );\n      }\n\n      if (\n        txn.assetMetadataHash.constructor !== Uint8Array ||\n        txn.assetMetadataHash.byteLength !== ASSET_METADATA_HASH_LENGTH\n      ) {\n        throw Error(\n          `assetMetadataHash must be a ${ASSET_METADATA_HASH_LENGTH} byte Uint8Array or string.`\n        );\n      }\n\n      if (txn.assetMetadataHash.every((value) => value === 0)) {\n        // if hash contains all 0s, omit it\n        txn.assetMetadataHash = undefined;\n      }\n    } else {\n      txn.assetMetadataHash = undefined;\n    }\n    if (txn.note !== undefined) {\n      if (txn.note.constructor !== Uint8Array)\n        throw Error('note must be a Uint8Array.');\n    } else {\n      txn.note = new Uint8Array(0);\n    }\n    if (txn.lease !== undefined) {\n      if (txn.lease.constructor !== Uint8Array)\n        throw Error('lease must be a Uint8Array.');\n      if (txn.lease.length !== ALGORAND_TRANSACTION_LEASE_LENGTH)\n        throw Error(\n          `lease must be of length ${ALGORAND_TRANSACTION_LEASE_LENGTH.toString()}.`\n        );\n      if (txn.lease.every((value) => value === 0)) {\n        // if lease contains all 0s, omit it\n        txn.lease = new Uint8Array(0);\n      }\n    } else {\n      txn.lease = new Uint8Array(0);\n    }\n    txn.voteKey = getKeyregKey(txn.voteKey, 'voteKey', KEYREG_VOTE_KEY_LENGTH);\n    txn.selectionKey = getKeyregKey(\n      txn.selectionKey,\n      'selectionKey',\n      KEYREG_SELECTION_KEY_LENGTH\n    );\n    txn.stateProofKey = getKeyregKey(\n      txn.stateProofKey,\n      'stateProofKey',\n      KEYREG_STATE_PROOF_KEY_LENGTH\n    );\n    // Checking non-participation key registration\n    if (\n      txn.nonParticipation &&\n      (txn.voteKey ||\n        txn.selectionKey ||\n        txn.voteFirst ||\n        txn.stateProofKey ||\n        txn.voteLast ||\n        txn.voteKeyDilution)\n    ) {\n      throw new Error(\n        'nonParticipation is true but participation params are present.'\n      );\n    }\n    // Checking online key registration\n    if (\n      !txn.nonParticipation &&\n      (txn.voteKey ||\n        txn.selectionKey ||\n        txn.stateProofKey ||\n        txn.voteFirst ||\n        txn.voteLast ||\n        txn.voteKeyDilution) &&\n      !(\n        txn.voteKey &&\n        txn.selectionKey &&\n        txn.voteFirst &&\n        txn.voteLast &&\n        txn.voteKeyDilution\n      )\n      // stateProofKey not included here for backwards compatibility\n    ) {\n      throw new Error(\n        'online key registration missing at least one of the following fields: ' +\n          'voteKey, selectionKey, voteFirst, voteLast, voteKeyDilution'\n      );\n    }\n    // The last option is an offline key registration where all the fields\n    // nonParticipation, voteKey, selectionKey, voteFirst, voteLast, voteKeyDilution\n    // are all undefined/false\n\n    // Remove unwanted properties and store transaction on instance\n    delete ((txn as unknown) as AnyTransactionWithParams).suggestedParams;\n    Object.assign(this, utils.removeUndefinedProperties(txn));\n\n    // Modify Fee\n    if (!txn.flatFee) {\n      this.fee *= this.estimateSize();\n      // If suggested fee too small and will be rejected, set to min tx fee\n      if (this.fee < ALGORAND_MIN_TX_FEE) {\n        this.fee = ALGORAND_MIN_TX_FEE;\n      }\n    }\n\n    // say we are aware of groups\n    this.group = undefined;\n\n    // stpf fields\n    if (\n      txn.stateProofType !== undefined &&\n      (!Number.isSafeInteger(txn.stateProofType) || txn.stateProofType < 0)\n    )\n      throw Error(\n        'State Proof type must be a positive number and smaller than 2^53-1'\n      );\n    if (txn.stateProofMessage !== undefined) {\n      if (txn.stateProofMessage.constructor !== Uint8Array)\n        throw Error('stateProofMessage must be a Uint8Array.');\n    } else {\n      txn.stateProofMessage = new Uint8Array(0);\n    }\n    if (txn.stateProof !== undefined) {\n      if (txn.stateProof.constructor !== Uint8Array)\n        throw Error('stateProof must be a Uint8Array.');\n    } else {\n      txn.stateProof = new Uint8Array(0);\n    }\n  }\n\n  // eslint-disable-next-line camelcase\n  get_obj_for_encoding() {\n    if (this.type === 'pay') {\n      const txn: EncodedTransaction = {\n        amt: this.amount,\n        fee: this.fee,\n        fv: this.firstRound,\n        lv: this.lastRound,\n        note: Buffer.from(this.note),\n        snd: Buffer.from(this.from.publicKey),\n        type: 'pay',\n        gen: this.genesisID,\n        gh: this.genesisHash,\n        lx: Buffer.from(this.lease),\n        grp: this.group,\n      };\n\n      // parse close address\n      if (\n        this.closeRemainderTo !== undefined &&\n        address.encodeAddress(this.closeRemainderTo.publicKey) !==\n          address.ALGORAND_ZERO_ADDRESS_STRING\n      ) {\n        txn.close = Buffer.from(this.closeRemainderTo.publicKey);\n      }\n      if (this.reKeyTo !== undefined) {\n        txn.rekey = Buffer.from(this.reKeyTo.publicKey);\n      }\n      // allowed zero values\n      if (this.to !== undefined) txn.rcv = Buffer.from(this.to.publicKey);\n      if (!txn.note.length) delete txn.note;\n      if (!txn.amt) delete txn.amt;\n      if (!txn.fee) delete txn.fee;\n      if (!txn.fv) delete txn.fv;\n      if (!txn.gen) delete txn.gen;\n      if (txn.grp === undefined) delete txn.grp;\n      if (!txn.lx.length) delete txn.lx;\n      if (!txn.rekey) delete txn.rekey;\n      return txn;\n    }\n    if (this.type === 'keyreg') {\n      const txn: EncodedTransaction = {\n        fee: this.fee,\n        fv: this.firstRound,\n        lv: this.lastRound,\n        note: Buffer.from(this.note),\n        snd: Buffer.from(this.from.publicKey),\n        type: this.type,\n        gen: this.genesisID,\n        gh: this.genesisHash,\n        lx: Buffer.from(this.lease),\n        grp: this.group,\n        votekey: this.voteKey,\n        selkey: this.selectionKey,\n        sprfkey: this.stateProofKey,\n        votefst: this.voteFirst,\n        votelst: this.voteLast,\n        votekd: this.voteKeyDilution,\n      };\n      // allowed zero values\n      if (!txn.note.length) delete txn.note;\n      if (!txn.lx.length) delete txn.lx;\n      if (!txn.fee) delete txn.fee;\n      if (!txn.fv) delete txn.fv;\n      if (!txn.gen) delete txn.gen;\n      if (txn.grp === undefined) delete txn.grp;\n      if (this.reKeyTo !== undefined) {\n        txn.rekey = Buffer.from(this.reKeyTo.publicKey);\n      }\n      if (this.nonParticipation) {\n        txn.nonpart = true;\n      }\n      if (!txn.selkey) delete txn.selkey;\n      if (!txn.votekey) delete txn.votekey;\n      if (!txn.sprfkey) delete txn.sprfkey;\n      if (!txn.votefst) delete txn.votefst;\n      if (!txn.votelst) delete txn.votelst;\n      if (!txn.votekd) delete txn.votekd;\n      return txn;\n    }\n    if (this.type === 'acfg') {\n      // asset creation, or asset reconfigure, or asset destruction\n      const txn: EncodedTransaction = {\n        fee: this.fee,\n        fv: this.firstRound,\n        lv: this.lastRound,\n        note: Buffer.from(this.note),\n        snd: Buffer.from(this.from.publicKey),\n        type: this.type,\n        gen: this.genesisID,\n        gh: this.genesisHash,\n        lx: Buffer.from(this.lease),\n        grp: this.group,\n        caid: this.assetIndex,\n        apar: {\n          t: this.assetTotal,\n          df: this.assetDefaultFrozen,\n          dc: this.assetDecimals,\n        },\n      };\n      if (this.assetManager !== undefined)\n        txn.apar.m = Buffer.from(this.assetManager.publicKey);\n      if (this.assetReserve !== undefined)\n        txn.apar.r = Buffer.from(this.assetReserve.publicKey);\n      if (this.assetFreeze !== undefined)\n        txn.apar.f = Buffer.from(this.assetFreeze.publicKey);\n      if (this.assetClawback !== undefined)\n        txn.apar.c = Buffer.from(this.assetClawback.publicKey);\n      if (this.assetName !== undefined) txn.apar.an = this.assetName;\n      if (this.assetUnitName !== undefined) txn.apar.un = this.assetUnitName;\n      if (this.assetURL !== undefined) txn.apar.au = this.assetURL;\n      if (this.assetMetadataHash !== undefined)\n        txn.apar.am = Buffer.from(this.assetMetadataHash);\n\n      // allowed zero values\n      if (!txn.note.length) delete txn.note;\n      if (!txn.lx.length) delete txn.lx;\n      if (!txn.amt) delete txn.amt;\n      if (!txn.fee) delete txn.fee;\n      if (!txn.fv) delete txn.fv;\n      if (!txn.gen) delete txn.gen;\n      if (this.reKeyTo !== undefined) {\n        txn.rekey = Buffer.from(this.reKeyTo.publicKey);\n      }\n\n      if (!txn.caid) delete txn.caid;\n      if (\n        !txn.apar.t &&\n        !txn.apar.un &&\n        !txn.apar.an &&\n        !txn.apar.df &&\n        !txn.apar.m &&\n        !txn.apar.r &&\n        !txn.apar.f &&\n        !txn.apar.c &&\n        !txn.apar.au &&\n        !txn.apar.am &&\n        !txn.apar.dc\n      ) {\n        delete txn.apar;\n      } else {\n        if (!txn.apar.t) delete txn.apar.t;\n        if (!txn.apar.dc) delete txn.apar.dc;\n        if (!txn.apar.un) delete txn.apar.un;\n        if (!txn.apar.an) delete txn.apar.an;\n        if (!txn.apar.df) delete txn.apar.df;\n        if (!txn.apar.m) delete txn.apar.m;\n        if (!txn.apar.r) delete txn.apar.r;\n        if (!txn.apar.f) delete txn.apar.f;\n        if (!txn.apar.c) delete txn.apar.c;\n        if (!txn.apar.au) delete txn.apar.au;\n        if (!txn.apar.am) delete txn.apar.am;\n      }\n      if (txn.grp === undefined) delete txn.grp;\n\n      return txn;\n    }\n    if (this.type === 'axfer') {\n      // asset transfer, acceptance, revocation, mint, or burn\n      const txn: EncodedTransaction = {\n        aamt: this.amount,\n        fee: this.fee,\n        fv: this.firstRound,\n        lv: this.lastRound,\n        note: Buffer.from(this.note),\n        snd: Buffer.from(this.from.publicKey),\n        arcv: Buffer.from(this.to.publicKey),\n        type: this.type,\n        gen: this.genesisID,\n        gh: this.genesisHash,\n        lx: Buffer.from(this.lease),\n        grp: this.group,\n        xaid: this.assetIndex,\n      };\n      if (this.closeRemainderTo !== undefined)\n        txn.aclose = Buffer.from(this.closeRemainderTo.publicKey);\n      if (this.assetRevocationTarget !== undefined)\n        txn.asnd = Buffer.from(this.assetRevocationTarget.publicKey);\n      // allowed zero values\n      if (!txn.note.length) delete txn.note;\n      if (!txn.lx.length) delete txn.lx;\n      if (!txn.aamt) delete txn.aamt;\n      if (!txn.amt) delete txn.amt;\n      if (!txn.fee) delete txn.fee;\n      if (!txn.fv) delete txn.fv;\n      if (!txn.gen) delete txn.gen;\n      if (txn.grp === undefined) delete txn.grp;\n      if (!txn.aclose) delete txn.aclose;\n      if (!txn.asnd) delete txn.asnd;\n      if (!txn.rekey) delete txn.rekey;\n      if (this.reKeyTo !== undefined) {\n        txn.rekey = Buffer.from(this.reKeyTo.publicKey);\n      }\n      return txn;\n    }\n    if (this.type === 'afrz') {\n      // asset freeze or unfreeze\n      const txn: EncodedTransaction = {\n        fee: this.fee,\n        fv: this.firstRound,\n        lv: this.lastRound,\n        note: Buffer.from(this.note),\n        snd: Buffer.from(this.from.publicKey),\n        type: this.type,\n        gen: this.genesisID,\n        gh: this.genesisHash,\n        lx: Buffer.from(this.lease),\n        grp: this.group,\n        faid: this.assetIndex,\n        afrz: this.freezeState,\n      };\n      if (this.freezeAccount !== undefined)\n        txn.fadd = Buffer.from(this.freezeAccount.publicKey);\n      // allowed zero values\n      if (!txn.note.length) delete txn.note;\n      if (!txn.lx.length) delete txn.lx;\n      if (!txn.amt) delete txn.amt;\n      if (!txn.fee) delete txn.fee;\n      if (!txn.fv) delete txn.fv;\n      if (!txn.gen) delete txn.gen;\n      if (!txn.afrz) delete txn.afrz;\n      if (txn.grp === undefined) delete txn.grp;\n      if (this.reKeyTo !== undefined) {\n        txn.rekey = Buffer.from(this.reKeyTo.publicKey);\n      }\n      return txn;\n    }\n    if (this.type === 'appl') {\n      // application call of some kind\n      const txn: EncodedTransaction = {\n        fee: this.fee,\n        fv: this.firstRound,\n        lv: this.lastRound,\n        note: Buffer.from(this.note),\n        snd: Buffer.from(this.from.publicKey),\n        type: this.type,\n        gen: this.genesisID,\n        gh: this.genesisHash,\n        lx: Buffer.from(this.lease),\n        grp: this.group,\n        apid: this.appIndex,\n        apan: this.appOnComplete,\n        apls: {\n          nui: this.appLocalInts,\n          nbs: this.appLocalByteSlices,\n        },\n        apgs: {\n          nui: this.appGlobalInts,\n          nbs: this.appGlobalByteSlices,\n        },\n        apfa: this.appForeignApps,\n        apas: this.appForeignAssets,\n        apep: this.extraPages,\n        apbx: translateBoxReferences(\n          this.boxes,\n          this.appForeignApps,\n          this.appIndex\n        ),\n      };\n      if (this.reKeyTo !== undefined) {\n        txn.rekey = Buffer.from(this.reKeyTo.publicKey);\n      }\n      if (this.appApprovalProgram !== undefined) {\n        txn.apap = Buffer.from(this.appApprovalProgram);\n      }\n      if (this.appClearProgram !== undefined) {\n        txn.apsu = Buffer.from(this.appClearProgram);\n      }\n      if (this.appArgs !== undefined) {\n        txn.apaa = this.appArgs.map((arg) => Buffer.from(arg));\n      }\n      if (this.appAccounts !== undefined) {\n        txn.apat = this.appAccounts.map((decodedAddress) =>\n          Buffer.from(decodedAddress.publicKey)\n        );\n      }\n      // allowed zero values\n      if (!txn.note.length) delete txn.note;\n      if (!txn.lx.length) delete txn.lx;\n      if (!txn.amt) delete txn.amt;\n      if (!txn.fee) delete txn.fee;\n      if (!txn.fv) delete txn.fv;\n      if (!txn.gen) delete txn.gen;\n      if (!txn.apid) delete txn.apid;\n      if (!txn.apls.nui) delete txn.apls.nui;\n      if (!txn.apls.nbs) delete txn.apls.nbs;\n      if (!txn.apls.nui && !txn.apls.nbs) delete txn.apls;\n      if (!txn.apgs.nui) delete txn.apgs.nui;\n      if (!txn.apgs.nbs) delete txn.apgs.nbs;\n      if (!txn.apaa || !txn.apaa.length) delete txn.apaa;\n      if (!txn.apgs.nui && !txn.apgs.nbs) delete txn.apgs;\n      if (!txn.apap) delete txn.apap;\n      if (!txn.apsu) delete txn.apsu;\n      if (!txn.apan) delete txn.apan;\n      if (!txn.apfa || !txn.apfa.length) delete txn.apfa;\n      if (!txn.apas || !txn.apas.length) delete txn.apas;\n      for (const box of txn.apbx) {\n        if (!box.i) delete box.i;\n        if (!box.n || !box.n.length) delete box.n;\n      }\n      if (!txn.apbx || !txn.apbx.length) delete txn.apbx;\n      if (!txn.apat || !txn.apat.length) delete txn.apat;\n      if (!txn.apep) delete txn.apep;\n      if (txn.grp === undefined) delete txn.grp;\n      return txn;\n    }\n    if (this.type === 'stpf') {\n      // state proof txn\n      const txn: EncodedTransaction = {\n        fee: this.fee,\n        fv: this.firstRound,\n        lv: this.lastRound,\n        note: Buffer.from(this.note),\n        snd: Buffer.from(this.from.publicKey),\n        type: this.type,\n        gen: this.genesisID,\n        gh: this.genesisHash,\n        lx: Buffer.from(this.lease),\n        sptype: this.stateProofType,\n        spmsg: Buffer.from(this.stateProofMessage),\n        sp: Buffer.from(this.stateProof),\n      };\n      // allowed zero values\n      if (!txn.sptype) delete txn.sptype;\n      if (!txn.note.length) delete txn.note;\n      if (!txn.lx.length) delete txn.lx;\n      if (!txn.amt) delete txn.amt;\n      if (!txn.fee) delete txn.fee;\n      if (!txn.fv) delete txn.fv;\n      if (!txn.gen) delete txn.gen;\n      if (!txn.apid) delete txn.apid;\n      if (!txn.apaa || !txn.apaa.length) delete txn.apaa;\n      if (!txn.apap) delete txn.apap;\n      if (!txn.apsu) delete txn.apsu;\n      if (!txn.apan) delete txn.apan;\n      if (!txn.apfa || !txn.apfa.length) delete txn.apfa;\n      if (!txn.apas || !txn.apas.length) delete txn.apas;\n      if (!txn.apat || !txn.apat.length) delete txn.apat;\n      if (!txn.apep) delete txn.apep;\n      if (txn.grp === undefined) delete txn.grp;\n      return txn;\n    }\n\n    return undefined;\n  }\n\n  // eslint-disable-next-line camelcase\n  static from_obj_for_encoding(txnForEnc: EncodedTransaction): Transaction {\n    const txn = Object.create(this.prototype) as Transaction;\n    txn.name = 'Transaction';\n    txn.tag = Buffer.from('TX');\n\n    txn.genesisID = txnForEnc.gen;\n    txn.genesisHash = Buffer.from(txnForEnc.gh);\n    if (!isTransactionType(txnForEnc.type)) {\n      throw new Error(`Unrecognized transaction type: ${txnForEnc.type}`);\n    }\n    txn.type = txnForEnc.type;\n    txn.fee = txnForEnc.fee;\n    txn.firstRound = txnForEnc.fv;\n    txn.lastRound = txnForEnc.lv;\n    txn.note = new Uint8Array(txnForEnc.note);\n    txn.lease = new Uint8Array(txnForEnc.lx);\n    txn.from = address.decodeAddress(\n      address.encodeAddress(new Uint8Array(txnForEnc.snd))\n    );\n    if (txnForEnc.grp !== undefined) txn.group = Buffer.from(txnForEnc.grp);\n    if (txnForEnc.rekey !== undefined)\n      txn.reKeyTo = address.decodeAddress(\n        address.encodeAddress(new Uint8Array(txnForEnc.rekey))\n      );\n\n    if (txnForEnc.type === 'pay') {\n      txn.amount = txnForEnc.amt;\n      txn.to = address.decodeAddress(\n        address.encodeAddress(new Uint8Array(txnForEnc.rcv))\n      );\n      if (txnForEnc.close !== undefined)\n        txn.closeRemainderTo = address.decodeAddress(\n          address.encodeAddress(txnForEnc.close)\n        );\n    } else if (txnForEnc.type === 'keyreg') {\n      if (txnForEnc.votekey !== undefined) {\n        txn.voteKey = Buffer.from(txnForEnc.votekey);\n      }\n      if (txnForEnc.selkey !== undefined) {\n        txn.selectionKey = Buffer.from(txnForEnc.selkey);\n      }\n      if (txnForEnc.sprfkey !== undefined) {\n        txn.stateProofKey = Buffer.from(txnForEnc.sprfkey);\n      }\n      if (txnForEnc.votekd !== undefined) {\n        txn.voteKeyDilution = txnForEnc.votekd;\n      }\n      if (txnForEnc.votefst !== undefined) {\n        txn.voteFirst = txnForEnc.votefst;\n      }\n      if (txnForEnc.votelst !== undefined) {\n        txn.voteLast = txnForEnc.votelst;\n      }\n      if (txnForEnc.nonpart !== undefined) {\n        txn.nonParticipation = txnForEnc.nonpart;\n      }\n    } else if (txnForEnc.type === 'acfg') {\n      // asset creation, or asset reconfigure, or asset destruction\n      if (txnForEnc.caid !== undefined) {\n        txn.assetIndex = txnForEnc.caid;\n      }\n      if (txnForEnc.apar !== undefined) {\n        txn.assetTotal = txnForEnc.apar.t;\n        txn.assetDefaultFrozen = txnForEnc.apar.df;\n        if (txnForEnc.apar.dc !== undefined)\n          txn.assetDecimals = txnForEnc.apar.dc;\n        if (txnForEnc.apar.m !== undefined)\n          txn.assetManager = address.decodeAddress(\n            address.encodeAddress(new Uint8Array(txnForEnc.apar.m))\n          );\n        if (txnForEnc.apar.r !== undefined)\n          txn.assetReserve = address.decodeAddress(\n            address.encodeAddress(new Uint8Array(txnForEnc.apar.r))\n          );\n        if (txnForEnc.apar.f !== undefined)\n          txn.assetFreeze = address.decodeAddress(\n            address.encodeAddress(new Uint8Array(txnForEnc.apar.f))\n          );\n        if (txnForEnc.apar.c !== undefined)\n          txn.assetClawback = address.decodeAddress(\n            address.encodeAddress(new Uint8Array(txnForEnc.apar.c))\n          );\n        if (txnForEnc.apar.un !== undefined)\n          txn.assetUnitName = txnForEnc.apar.un;\n        if (txnForEnc.apar.an !== undefined) txn.assetName = txnForEnc.apar.an;\n        if (txnForEnc.apar.au !== undefined) txn.assetURL = txnForEnc.apar.au;\n        if (txnForEnc.apar.am !== undefined)\n          txn.assetMetadataHash = txnForEnc.apar.am;\n      }\n    } else if (txnForEnc.type === 'axfer') {\n      // asset transfer, acceptance, revocation, mint, or burn\n      if (txnForEnc.xaid !== undefined) {\n        txn.assetIndex = txnForEnc.xaid;\n      }\n      if (txnForEnc.aamt !== undefined) txn.amount = txnForEnc.aamt;\n      if (txnForEnc.aclose !== undefined) {\n        txn.closeRemainderTo = address.decodeAddress(\n          address.encodeAddress(new Uint8Array(txnForEnc.aclose))\n        );\n      }\n      if (txnForEnc.asnd !== undefined) {\n        txn.assetRevocationTarget = address.decodeAddress(\n          address.encodeAddress(new Uint8Array(txnForEnc.asnd))\n        );\n      }\n      txn.to = address.decodeAddress(\n        address.encodeAddress(new Uint8Array(txnForEnc.arcv))\n      );\n    } else if (txnForEnc.type === 'afrz') {\n      if (txnForEnc.afrz !== undefined) {\n        txn.freezeState = txnForEnc.afrz;\n      }\n      if (txnForEnc.faid !== undefined) {\n        txn.assetIndex = txnForEnc.faid;\n      }\n      txn.freezeAccount = address.decodeAddress(\n        address.encodeAddress(new Uint8Array(txnForEnc.fadd))\n      );\n    } else if (txnForEnc.type === 'appl') {\n      if (txnForEnc.apid !== undefined) {\n        txn.appIndex = txnForEnc.apid;\n      }\n      if (txnForEnc.apan !== undefined) {\n        txn.appOnComplete = txnForEnc.apan;\n      }\n      if (txnForEnc.apls !== undefined) {\n        if (txnForEnc.apls.nui !== undefined)\n          txn.appLocalInts = txnForEnc.apls.nui;\n        if (txnForEnc.apls.nbs !== undefined)\n          txn.appLocalByteSlices = txnForEnc.apls.nbs;\n      }\n      if (txnForEnc.apgs !== undefined) {\n        if (txnForEnc.apgs.nui !== undefined)\n          txn.appGlobalInts = txnForEnc.apgs.nui;\n        if (txnForEnc.apgs.nbs !== undefined)\n          txn.appGlobalByteSlices = txnForEnc.apgs.nbs;\n      }\n      if (txnForEnc.apep !== undefined) {\n        txn.extraPages = txnForEnc.apep;\n      }\n      if (txnForEnc.apap !== undefined) {\n        txn.appApprovalProgram = new Uint8Array(txnForEnc.apap);\n      }\n      if (txnForEnc.apsu !== undefined) {\n        txn.appClearProgram = new Uint8Array(txnForEnc.apsu);\n      }\n      if (txnForEnc.apaa !== undefined) {\n        txn.appArgs = txnForEnc.apaa.map((arg) => new Uint8Array(arg));\n      }\n      if (txnForEnc.apat !== undefined) {\n        txn.appAccounts = txnForEnc.apat.map((addressBytes) =>\n          address.decodeAddress(\n            address.encodeAddress(new Uint8Array(addressBytes))\n          )\n        );\n      }\n      if (txnForEnc.apfa !== undefined) {\n        txn.appForeignApps = txnForEnc.apfa;\n      }\n      if (txnForEnc.apas !== undefined) {\n        txn.appForeignAssets = txnForEnc.apas;\n      }\n      if (txnForEnc.apbx !== undefined) {\n        txn.boxes = txnForEnc.apbx.map((box) => ({\n          // We return 0 for the app ID so that it's guaranteed translateBoxReferences will\n          // translate the app index back to 0. If we instead returned the called app ID,\n          // translateBoxReferences would translate the app index to a nonzero value if the called\n          // app is also in the foreign app array.\n          appIndex: box.i ? txn.appForeignApps[box.i - 1] : 0,\n          name: box.n,\n        }));\n      }\n    } else if (txnForEnc.type === 'stpf') {\n      if (txnForEnc.sptype !== undefined) {\n        txn.stateProofType = txnForEnc.sptype;\n      }\n      if (txnForEnc.sp !== undefined) {\n        txn.stateProof = txnForEnc.sp;\n      }\n      if (txnForEnc.spmsg !== undefined) {\n        txn.stateProofMessage = txnForEnc.spmsg;\n      }\n    }\n    return txn;\n  }\n\n  estimateSize() {\n    return this.toByte().length + NUM_ADDL_BYTES_AFTER_SIGNING;\n  }\n\n  bytesToSign() {\n    const encodedMsg = this.toByte();\n    return Buffer.from(utils.concatArrays(this.tag, encodedMsg));\n  }\n\n  toByte() {\n    return encoding.encode(this.get_obj_for_encoding());\n  }\n\n  // returns the raw signature\n  rawSignTxn(sk: Uint8Array) {\n    const toBeSigned = this.bytesToSign();\n    const sig = nacl.sign(toBeSigned, sk);\n    return Buffer.from(sig);\n  }\n\n  signTxn(sk: Uint8Array) {\n    // construct signed message\n    const sTxn: EncodedSignedTransaction = {\n      sig: this.rawSignTxn(sk),\n      txn: this.get_obj_for_encoding(),\n    };\n    // add AuthAddr if signing with a different key than From indicates\n    const keypair = nacl.keyPairFromSecretKey(sk);\n    const pubKeyFromSk = keypair.publicKey;\n    if (\n      address.encodeAddress(pubKeyFromSk) !==\n      address.encodeAddress(this.from.publicKey)\n    ) {\n      sTxn.sgnr = Buffer.from(pubKeyFromSk);\n    }\n    return new Uint8Array(encoding.encode(sTxn));\n  }\n\n  attachSignature(signerAddr: string, signature: Uint8Array) {\n    if (!nacl.isValidSignatureLength(signature.length)) {\n      throw new Error('Invalid signature length');\n    }\n    const sTxn: EncodedSignedTransaction = {\n      sig: Buffer.from(signature),\n      txn: this.get_obj_for_encoding(),\n    };\n    // add AuthAddr if signing with a different key than From indicates\n    if (signerAddr !== address.encodeAddress(this.from.publicKey)) {\n      const signerPublicKey = address.decodeAddress(signerAddr).publicKey;\n      sTxn.sgnr = Buffer.from(signerPublicKey);\n    }\n    return new Uint8Array(encoding.encode(sTxn));\n  }\n\n  rawTxID() {\n    const enMsg = this.toByte();\n    const gh = Buffer.from(utils.concatArrays(this.tag, enMsg));\n    return Buffer.from(nacl.genericHash(gh));\n  }\n\n  txID() {\n    const hash = this.rawTxID();\n    return base32.encode(hash).slice(0, ALGORAND_TRANSACTION_LENGTH);\n  }\n\n  // add a lease to a transaction not yet having\n  // supply feePerByte to increment fee accordingly\n  addLease(lease: Uint8Array, feePerByte = 0) {\n    let mutableLease: Uint8Array;\n\n    if (lease !== undefined) {\n      if (lease.constructor !== Uint8Array)\n        throw Error('lease must be a Uint8Array.');\n      if (lease.length !== ALGORAND_TRANSACTION_LEASE_LENGTH)\n        throw Error(\n          `lease must be of length ${ALGORAND_TRANSACTION_LEASE_LENGTH.toString()}.`\n        );\n\n      mutableLease = new Uint8Array(lease);\n    } else {\n      mutableLease = new Uint8Array(0);\n    }\n    this.lease = mutableLease;\n    if (feePerByte !== 0) {\n      this.fee +=\n        (ALGORAND_TRANSACTION_LEASE_LABEL_LENGTH +\n          ALGORAND_TRANSACTION_LEASE_LENGTH) *\n        feePerByte;\n    }\n  }\n\n  // add the rekey-to field to a transaction not yet having it\n  // supply feePerByte to increment fee accordingly\n  addRekey(reKeyTo: string, feePerByte = 0) {\n    if (reKeyTo !== undefined) {\n      this.reKeyTo = address.decodeAddress(reKeyTo);\n    }\n    if (feePerByte !== 0) {\n      this.fee +=\n        (ALGORAND_TRANSACTION_REKEY_LABEL_LENGTH +\n          ALGORAND_TRANSACTION_ADDRESS_LENGTH) *\n        feePerByte;\n    }\n  }\n\n  // build display dict for prettyPrint and toString\n  // eslint-disable-next-line no-underscore-dangle\n  _getDictForDisplay() {\n    const forPrinting: TransactionStorageStructure & Record<string, any> = {\n      ...this,\n    };\n    forPrinting.tag = forPrinting.tag.toString();\n    forPrinting.from = address.encodeAddress(\n      (forPrinting.from as Address).publicKey\n    );\n    if (forPrinting.to !== undefined)\n      forPrinting.to = address.encodeAddress(\n        (forPrinting.to as Address).publicKey\n      );\n    // things that need fixing:\n    if (forPrinting.freezeAccount !== undefined)\n      forPrinting.freezeAccount = address.encodeAddress(\n        (forPrinting.freezeAccount as Address).publicKey\n      );\n    if (forPrinting.closeRemainderTo !== undefined)\n      forPrinting.closeRemainderTo = address.encodeAddress(\n        (forPrinting.closeRemainderTo as Address).publicKey\n      );\n    if (forPrinting.assetManager !== undefined)\n      forPrinting.assetManager = address.encodeAddress(\n        (forPrinting.assetManager as Address).publicKey\n      );\n    if (forPrinting.assetReserve !== undefined)\n      forPrinting.assetReserve = address.encodeAddress(\n        (forPrinting.assetReserve as Address).publicKey\n      );\n    if (forPrinting.assetFreeze !== undefined)\n      forPrinting.assetFreeze = address.encodeAddress(\n        (forPrinting.assetFreeze as Address).publicKey\n      );\n    if (forPrinting.assetClawback !== undefined)\n      forPrinting.assetClawback = address.encodeAddress(\n        (forPrinting.assetClawback as Address).publicKey\n      );\n    if (forPrinting.assetRevocationTarget !== undefined)\n      forPrinting.assetRevocationTarget = address.encodeAddress(\n        (forPrinting.assetRevocationTarget as Address).publicKey\n      );\n    if (forPrinting.reKeyTo !== undefined)\n      forPrinting.reKeyTo = address.encodeAddress(\n        (forPrinting.reKeyTo as Address).publicKey\n      );\n    forPrinting.genesisHash = forPrinting.genesisHash.toString('base64');\n    return forPrinting;\n  }\n\n  // pretty print the transaction to console\n  prettyPrint() {\n    // eslint-disable-next-line no-underscore-dangle,no-console\n    console.log(this._getDictForDisplay());\n  }\n\n  // get string representation\n  toString() {\n    // eslint-disable-next-line no-underscore-dangle\n    return JSON.stringify(this._getDictForDisplay());\n  }\n}\n\n/**\n * encodeUnsignedSimulateTransaction takes a txnBuilder.Transaction object,\n * converts it into a SignedTransaction-like object, and converts it to a Buffer.\n *\n * Note: this function should only be used to simulate unsigned transactions.\n *\n * @param transactionObject - Transaction object to simulate.\n */\nexport function encodeUnsignedSimulateTransaction(\n  transactionObject: Transaction\n) {\n  const objToEncode: EncodedSignedTransaction = {\n    txn: transactionObject.get_obj_for_encoding(),\n  };\n  return encoding.encode(objToEncode);\n}\n\n/**\n * encodeUnsignedTransaction takes a completed txnBuilder.Transaction object, such as from the makeFoo\n * family of transactions, and converts it to a Buffer\n * @param transactionObject - the completed Transaction object\n */\nexport function encodeUnsignedTransaction(transactionObject: Transaction) {\n  const objToEncode = transactionObject.get_obj_for_encoding();\n  return encoding.encode(objToEncode);\n}\n\n/**\n * decodeUnsignedTransaction takes a Buffer (as if from encodeUnsignedTransaction) and converts it to a txnBuilder.Transaction object\n * @param transactionBuffer - the Uint8Array containing a transaction\n */\nexport function decodeUnsignedTransaction(\n  transactionBuffer: ArrayLike<number>\n) {\n  const partlyDecodedObject = encoding.decode(\n    transactionBuffer\n  ) as EncodedTransaction;\n  return Transaction.from_obj_for_encoding(partlyDecodedObject);\n}\n\n/**\n * Object representing a transaction with a signature\n */\nexport interface SignedTransaction {\n  /**\n   * Transaction signature\n   */\n  sig?: Buffer;\n\n  /**\n   * The transaction that was signed\n   */\n  txn: Transaction;\n\n  /**\n   * Multisig structure\n   */\n  msig?: EncodedMultisig;\n\n  /**\n   * Logic signature\n   */\n  lsig?: EncodedLogicSig;\n\n  /**\n   * The signer, if signing with a different key than the Transaction type `from` property indicates\n   */\n  sgnr?: Buffer;\n}\n\n/**\n * decodeSignedTransaction takes a Buffer (from transaction.signTxn) and converts it to an object\n * containing the Transaction (txn), the signature (sig), and the auth-addr field if applicable (sgnr)\n * @param transactionBuffer - the Uint8Array containing a transaction\n * @returns containing a Transaction, the signature, and possibly an auth-addr field\n */\nexport function decodeSignedTransaction(\n  transactionBuffer: Uint8Array\n): SignedTransaction {\n  const stxnDecoded = encoding.decode(\n    transactionBuffer\n  ) as EncodedSignedTransaction;\n  const stxn: SignedTransaction = {\n    ...stxnDecoded,\n    txn: Transaction.from_obj_for_encoding(stxnDecoded.txn),\n  };\n  return stxn;\n}\n\n/**\n * Either a valid transaction object or an instance of the Transaction class\n */\nexport type TransactionLike = AnyTransaction | Transaction;\n\nexport function instantiateTxnIfNeeded(transactionLike: TransactionLike) {\n  return transactionLike instanceof Transaction\n    ? transactionLike\n    : new Transaction(transactionLike);\n}\n\nexport default Transaction;\n","import { Buffer } from 'buffer';\nimport * as address from './encoding/address';\nimport * as encoding from './encoding/encoding';\nimport * as nacl from './nacl/naclWrappers';\nimport * as utils from './utils/utils';\nimport { Address } from './types/address';\n\ninterface BidStorageStructure {\n  bidderKey: Address;\n  bidAmount: number;\n  bidID: number;\n  auctionKey: Address;\n  auctionID: number;\n  maxPrice: number;\n}\n\nexport type BidOptions = Omit<\n  BidStorageStructure,\n  'bidderKey' | 'auctionKey'\n> & {\n  bidderKey: string;\n  auctionKey: string;\n};\n\n/**\n * Bid enables construction of Algorand Auctions Bids\n * */\nexport default class Bid implements BidStorageStructure {\n  name = 'Bid';\n  tag = Buffer.from([97, 66]); // \"aB\"\n\n  bidderKey: Address;\n  bidAmount: number;\n  bidID: number;\n  auctionKey: Address;\n  auctionID: number;\n  maxPrice: number;\n\n  constructor({\n    bidderKey,\n    bidAmount,\n    bidID,\n    auctionKey,\n    auctionID,\n    maxPrice,\n  }: BidOptions) {\n    const decodedBidderKey = address.decodeAddress(bidderKey);\n    const decodedAuctionKey = address.decodeAddress(auctionKey);\n\n    if (!Number.isSafeInteger(bidAmount) || bidAmount < 0)\n      throw Error('Bid amount must be positive and 2^53-1');\n    if (!Number.isSafeInteger(bidID) || bidID < 0)\n      throw Error('BidID must be positive and 2^53-1');\n    if (!Number.isSafeInteger(auctionID) || auctionID < 0)\n      throw Error('auctionID must be positive');\n\n    Object.assign(this, {\n      bidderKey: decodedBidderKey,\n      bidAmount,\n      bidID,\n      auctionKey: decodedAuctionKey,\n      auctionID,\n      maxPrice,\n    });\n  }\n\n  // eslint-disable-next-line camelcase\n  get_obj_for_encoding() {\n    return {\n      bidder: Buffer.from(this.bidderKey.publicKey),\n      cur: this.bidAmount,\n      price: this.maxPrice,\n      id: this.bidID,\n      auc: Buffer.from(this.auctionKey.publicKey),\n      aid: this.auctionID,\n    };\n  }\n\n  signBid(sk: Uint8Array) {\n    const encodedMsg = encoding.encode(this.get_obj_for_encoding());\n    const toBeSigned = Buffer.from(utils.concatArrays(this.tag, encodedMsg));\n    const sig = nacl.sign(toBeSigned, sk);\n\n    // construct signed message\n    const sBid = {\n      sig: Buffer.from(sig),\n      bid: this.get_obj_for_encoding(),\n    };\n\n    const note = {\n      t: 'b',\n      b: sBid,\n    };\n    return new Uint8Array(encoding.encode(note));\n  }\n}\n","const MICROALGOS_TO_ALGOS_RATIO = 1e6;\nexport const INVALID_MICROALGOS_ERROR_MSG =\n  'Microalgos should be positive and less than 2^53 - 1.';\n\n/**\n * microalgosToAlgos converts microalgos to algos\n * @param microalgos - number\n * @returns number\n */\nexport function microalgosToAlgos(microalgos: number) {\n  if (microalgos < 0 || !Number.isSafeInteger(microalgos)) {\n    throw new Error(INVALID_MICROALGOS_ERROR_MSG);\n  }\n  return microalgos / MICROALGOS_TO_ALGOS_RATIO;\n}\n\n/**\n * algosToMicroalgos converts algos to microalgos\n * @param algos - number\n * @returns number\n */\nexport function algosToMicroalgos(algos: number) {\n  const microalgos = algos * MICROALGOS_TO_ALGOS_RATIO;\n  return Math.round(microalgos);\n}\n","var global = typeof self !== 'undefined' ? self : this;\nvar __self__ = (function () {\nfunction F() {\nthis.fetch = false;\nthis.DOMException = global.DOMException\n}\nF.prototype = global;\nreturn new F();\n})();\n(function(self) {\n\nvar irrelevant = (function (exports) {\n\n  var support = {\n    searchParams: 'URLSearchParams' in self,\n    iterable: 'Symbol' in self && 'iterator' in Symbol,\n    blob:\n      'FileReader' in self &&\n      'Blob' in self &&\n      (function() {\n        try {\n          new Blob();\n          return true\n        } catch (e) {\n          return false\n        }\n      })(),\n    formData: 'FormData' in self,\n    arrayBuffer: 'ArrayBuffer' in self\n  };\n\n  function isDataView(obj) {\n    return obj && DataView.prototype.isPrototypeOf(obj)\n  }\n\n  if (support.arrayBuffer) {\n    var viewClasses = [\n      '[object Int8Array]',\n      '[object Uint8Array]',\n      '[object Uint8ClampedArray]',\n      '[object Int16Array]',\n      '[object Uint16Array]',\n      '[object Int32Array]',\n      '[object Uint32Array]',\n      '[object Float32Array]',\n      '[object Float64Array]'\n    ];\n\n    var isArrayBufferView =\n      ArrayBuffer.isView ||\n      function(obj) {\n        return obj && viewClasses.indexOf(Object.prototype.toString.call(obj)) > -1\n      };\n  }\n\n  function normalizeName(name) {\n    if (typeof name !== 'string') {\n      name = String(name);\n    }\n    if (/[^a-z0-9\\-#$%&'*+.^_`|~]/i.test(name)) {\n      throw new TypeError('Invalid character in header field name')\n    }\n    return name.toLowerCase()\n  }\n\n  function normalizeValue(value) {\n    if (typeof value !== 'string') {\n      value = String(value);\n    }\n    return value\n  }\n\n  // Build a destructive iterator for the value list\n  function iteratorFor(items) {\n    var iterator = {\n      next: function() {\n        var value = items.shift();\n        return {done: value === undefined, value: value}\n      }\n    };\n\n    if (support.iterable) {\n      iterator[Symbol.iterator] = function() {\n        return iterator\n      };\n    }\n\n    return iterator\n  }\n\n  function Headers(headers) {\n    this.map = {};\n\n    if (headers instanceof Headers) {\n      headers.forEach(function(value, name) {\n        this.append(name, value);\n      }, this);\n    } else if (Array.isArray(headers)) {\n      headers.forEach(function(header) {\n        this.append(header[0], header[1]);\n      }, this);\n    } else if (headers) {\n      Object.getOwnPropertyNames(headers).forEach(function(name) {\n        this.append(name, headers[name]);\n      }, this);\n    }\n  }\n\n  Headers.prototype.append = function(name, value) {\n    name = normalizeName(name);\n    value = normalizeValue(value);\n    var oldValue = this.map[name];\n    this.map[name] = oldValue ? oldValue + ', ' + value : value;\n  };\n\n  Headers.prototype['delete'] = function(name) {\n    delete this.map[normalizeName(name)];\n  };\n\n  Headers.prototype.get = function(name) {\n    name = normalizeName(name);\n    return this.has(name) ? this.map[name] : null\n  };\n\n  Headers.prototype.has = function(name) {\n    return this.map.hasOwnProperty(normalizeName(name))\n  };\n\n  Headers.prototype.set = function(name, value) {\n    this.map[normalizeName(name)] = normalizeValue(value);\n  };\n\n  Headers.prototype.forEach = function(callback, thisArg) {\n    for (var name in this.map) {\n      if (this.map.hasOwnProperty(name)) {\n        callback.call(thisArg, this.map[name], name, this);\n      }\n    }\n  };\n\n  Headers.prototype.keys = function() {\n    var items = [];\n    this.forEach(function(value, name) {\n      items.push(name);\n    });\n    return iteratorFor(items)\n  };\n\n  Headers.prototype.values = function() {\n    var items = [];\n    this.forEach(function(value) {\n      items.push(value);\n    });\n    return iteratorFor(items)\n  };\n\n  Headers.prototype.entries = function() {\n    var items = [];\n    this.forEach(function(value, name) {\n      items.push([name, value]);\n    });\n    return iteratorFor(items)\n  };\n\n  if (support.iterable) {\n    Headers.prototype[Symbol.iterator] = Headers.prototype.entries;\n  }\n\n  function consumed(body) {\n    if (body.bodyUsed) {\n      return Promise.reject(new TypeError('Already read'))\n    }\n    body.bodyUsed = true;\n  }\n\n  function fileReaderReady(reader) {\n    return new Promise(function(resolve, reject) {\n      reader.onload = function() {\n        resolve(reader.result);\n      };\n      reader.onerror = function() {\n        reject(reader.error);\n      };\n    })\n  }\n\n  function readBlobAsArrayBuffer(blob) {\n    var reader = new FileReader();\n    var promise = fileReaderReady(reader);\n    reader.readAsArrayBuffer(blob);\n    return promise\n  }\n\n  function readBlobAsText(blob) {\n    var reader = new FileReader();\n    var promise = fileReaderReady(reader);\n    reader.readAsText(blob);\n    return promise\n  }\n\n  function readArrayBufferAsText(buf) {\n    var view = new Uint8Array(buf);\n    var chars = new Array(view.length);\n\n    for (var i = 0; i < view.length; i++) {\n      chars[i] = String.fromCharCode(view[i]);\n    }\n    return chars.join('')\n  }\n\n  function bufferClone(buf) {\n    if (buf.slice) {\n      return buf.slice(0)\n    } else {\n      var view = new Uint8Array(buf.byteLength);\n      view.set(new Uint8Array(buf));\n      return view.buffer\n    }\n  }\n\n  function Body() {\n    this.bodyUsed = false;\n\n    this._initBody = function(body) {\n      this._bodyInit = body;\n      if (!body) {\n        this._bodyText = '';\n      } else if (typeof body === 'string') {\n        this._bodyText = body;\n      } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {\n        this._bodyBlob = body;\n      } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {\n        this._bodyFormData = body;\n      } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n        this._bodyText = body.toString();\n      } else if (support.arrayBuffer && support.blob && isDataView(body)) {\n        this._bodyArrayBuffer = bufferClone(body.buffer);\n        // IE 10-11 can't handle a DataView body.\n        this._bodyInit = new Blob([this._bodyArrayBuffer]);\n      } else if (support.arrayBuffer && (ArrayBuffer.prototype.isPrototypeOf(body) || isArrayBufferView(body))) {\n        this._bodyArrayBuffer = bufferClone(body);\n      } else {\n        this._bodyText = body = Object.prototype.toString.call(body);\n      }\n\n      if (!this.headers.get('content-type')) {\n        if (typeof body === 'string') {\n          this.headers.set('content-type', 'text/plain;charset=UTF-8');\n        } else if (this._bodyBlob && this._bodyBlob.type) {\n          this.headers.set('content-type', this._bodyBlob.type);\n        } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n          this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8');\n        }\n      }\n    };\n\n    if (support.blob) {\n      this.blob = function() {\n        var rejected = consumed(this);\n        if (rejected) {\n          return rejected\n        }\n\n        if (this._bodyBlob) {\n          return Promise.resolve(this._bodyBlob)\n        } else if (this._bodyArrayBuffer) {\n          return Promise.resolve(new Blob([this._bodyArrayBuffer]))\n        } else if (this._bodyFormData) {\n          throw new Error('could not read FormData body as blob')\n        } else {\n          return Promise.resolve(new Blob([this._bodyText]))\n        }\n      };\n\n      this.arrayBuffer = function() {\n        if (this._bodyArrayBuffer) {\n          return consumed(this) || Promise.resolve(this._bodyArrayBuffer)\n        } else {\n          return this.blob().then(readBlobAsArrayBuffer)\n        }\n      };\n    }\n\n    this.text = function() {\n      var rejected = consumed(this);\n      if (rejected) {\n        return rejected\n      }\n\n      if (this._bodyBlob) {\n        return readBlobAsText(this._bodyBlob)\n      } else if (this._bodyArrayBuffer) {\n        return Promise.resolve(readArrayBufferAsText(this._bodyArrayBuffer))\n      } else if (this._bodyFormData) {\n        throw new Error('could not read FormData body as text')\n      } else {\n        return Promise.resolve(this._bodyText)\n      }\n    };\n\n    if (support.formData) {\n      this.formData = function() {\n        return this.text().then(decode)\n      };\n    }\n\n    this.json = function() {\n      return this.text().then(JSON.parse)\n    };\n\n    return this\n  }\n\n  // HTTP methods whose capitalization should be normalized\n  var methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT'];\n\n  function normalizeMethod(method) {\n    var upcased = method.toUpperCase();\n    return methods.indexOf(upcased) > -1 ? upcased : method\n  }\n\n  function Request(input, options) {\n    options = options || {};\n    var body = options.body;\n\n    if (input instanceof Request) {\n      if (input.bodyUsed) {\n        throw new TypeError('Already read')\n      }\n      this.url = input.url;\n      this.credentials = input.credentials;\n      if (!options.headers) {\n        this.headers = new Headers(input.headers);\n      }\n      this.method = input.method;\n      this.mode = input.mode;\n      this.signal = input.signal;\n      if (!body && input._bodyInit != null) {\n        body = input._bodyInit;\n        input.bodyUsed = true;\n      }\n    } else {\n      this.url = String(input);\n    }\n\n    this.credentials = options.credentials || this.credentials || 'same-origin';\n    if (options.headers || !this.headers) {\n      this.headers = new Headers(options.headers);\n    }\n    this.method = normalizeMethod(options.method || this.method || 'GET');\n    this.mode = options.mode || this.mode || null;\n    this.signal = options.signal || this.signal;\n    this.referrer = null;\n\n    if ((this.method === 'GET' || this.method === 'HEAD') && body) {\n      throw new TypeError('Body not allowed for GET or HEAD requests')\n    }\n    this._initBody(body);\n  }\n\n  Request.prototype.clone = function() {\n    return new Request(this, {body: this._bodyInit})\n  };\n\n  function decode(body) {\n    var form = new FormData();\n    body\n      .trim()\n      .split('&')\n      .forEach(function(bytes) {\n        if (bytes) {\n          var split = bytes.split('=');\n          var name = split.shift().replace(/\\+/g, ' ');\n          var value = split.join('=').replace(/\\+/g, ' ');\n          form.append(decodeURIComponent(name), decodeURIComponent(value));\n        }\n      });\n    return form\n  }\n\n  function parseHeaders(rawHeaders) {\n    var headers = new Headers();\n    // Replace instances of \\r\\n and \\n followed by at least one space or horizontal tab with a space\n    // https://tools.ietf.org/html/rfc7230#section-3.2\n    var preProcessedHeaders = rawHeaders.replace(/\\r?\\n[\\t ]+/g, ' ');\n    preProcessedHeaders.split(/\\r?\\n/).forEach(function(line) {\n      var parts = line.split(':');\n      var key = parts.shift().trim();\n      if (key) {\n        var value = parts.join(':').trim();\n        headers.append(key, value);\n      }\n    });\n    return headers\n  }\n\n  Body.call(Request.prototype);\n\n  function Response(bodyInit, options) {\n    if (!options) {\n      options = {};\n    }\n\n    this.type = 'default';\n    this.status = options.status === undefined ? 200 : options.status;\n    this.ok = this.status >= 200 && this.status < 300;\n    this.statusText = 'statusText' in options ? options.statusText : 'OK';\n    this.headers = new Headers(options.headers);\n    this.url = options.url || '';\n    this._initBody(bodyInit);\n  }\n\n  Body.call(Response.prototype);\n\n  Response.prototype.clone = function() {\n    return new Response(this._bodyInit, {\n      status: this.status,\n      statusText: this.statusText,\n      headers: new Headers(this.headers),\n      url: this.url\n    })\n  };\n\n  Response.error = function() {\n    var response = new Response(null, {status: 0, statusText: ''});\n    response.type = 'error';\n    return response\n  };\n\n  var redirectStatuses = [301, 302, 303, 307, 308];\n\n  Response.redirect = function(url, status) {\n    if (redirectStatuses.indexOf(status) === -1) {\n      throw new RangeError('Invalid status code')\n    }\n\n    return new Response(null, {status: status, headers: {location: url}})\n  };\n\n  exports.DOMException = self.DOMException;\n  try {\n    new exports.DOMException();\n  } catch (err) {\n    exports.DOMException = function(message, name) {\n      this.message = message;\n      this.name = name;\n      var error = Error(message);\n      this.stack = error.stack;\n    };\n    exports.DOMException.prototype = Object.create(Error.prototype);\n    exports.DOMException.prototype.constructor = exports.DOMException;\n  }\n\n  function fetch(input, init) {\n    return new Promise(function(resolve, reject) {\n      var request = new Request(input, init);\n\n      if (request.signal && request.signal.aborted) {\n        return reject(new exports.DOMException('Aborted', 'AbortError'))\n      }\n\n      var xhr = new XMLHttpRequest();\n\n      function abortXhr() {\n        xhr.abort();\n      }\n\n      xhr.onload = function() {\n        var options = {\n          status: xhr.status,\n          statusText: xhr.statusText,\n          headers: parseHeaders(xhr.getAllResponseHeaders() || '')\n        };\n        options.url = 'responseURL' in xhr ? xhr.responseURL : options.headers.get('X-Request-URL');\n        var body = 'response' in xhr ? xhr.response : xhr.responseText;\n        resolve(new Response(body, options));\n      };\n\n      xhr.onerror = function() {\n        reject(new TypeError('Network request failed'));\n      };\n\n      xhr.ontimeout = function() {\n        reject(new TypeError('Network request failed'));\n      };\n\n      xhr.onabort = function() {\n        reject(new exports.DOMException('Aborted', 'AbortError'));\n      };\n\n      xhr.open(request.method, request.url, true);\n\n      if (request.credentials === 'include') {\n        xhr.withCredentials = true;\n      } else if (request.credentials === 'omit') {\n        xhr.withCredentials = false;\n      }\n\n      if ('responseType' in xhr && support.blob) {\n        xhr.responseType = 'blob';\n      }\n\n      request.headers.forEach(function(value, name) {\n        xhr.setRequestHeader(name, value);\n      });\n\n      if (request.signal) {\n        request.signal.addEventListener('abort', abortXhr);\n\n        xhr.onreadystatechange = function() {\n          // DONE (success or failure)\n          if (xhr.readyState === 4) {\n            request.signal.removeEventListener('abort', abortXhr);\n          }\n        };\n      }\n\n      xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit);\n    })\n  }\n\n  fetch.polyfill = true;\n\n  if (!self.fetch) {\n    self.fetch = fetch;\n    self.Headers = Headers;\n    self.Request = Request;\n    self.Response = Response;\n  }\n\n  exports.Headers = Headers;\n  exports.Request = Request;\n  exports.Response = Response;\n  exports.fetch = fetch;\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n  return exports;\n\n})({});\n})(__self__);\n__self__.fetch.ponyfill = true;\n// Remove \"polyfill\" property added by whatwg-fetch\ndelete __self__.fetch.polyfill;\n// Choose between native implementation (global) or custom implementation (__self__)\n// var ctx = global.fetch ? global : __self__;\nvar ctx = __self__; // this line disable service worker support temporarily\nexports = ctx.fetch // To enable: import fetch from 'cross-fetch'\nexports.default = ctx.fetch // For TypeScript consumers without esModuleInterop.\nexports.fetch = ctx.fetch // To enable: import {fetch} from 'cross-fetch'\nexports.Headers = ctx.Headers\nexports.Request = ctx.Request\nexports.Response = ctx.Response\nmodule.exports = exports\n","import { Buffer } from 'buffer';\nimport { fetch, Response, Headers } from 'cross-fetch';\nimport {\n  BaseHTTPClient,\n  BaseHTTPClientResponse,\n  BaseHTTPClientError,\n  Query,\n} from './baseHTTPClient';\n\nexport interface AlgodTokenHeader {\n  'X-Algo-API-Token': string;\n}\n\nexport interface IndexerTokenHeader {\n  'X-Indexer-API-Token': string;\n}\n\nexport interface KMDTokenHeader {\n  'X-KMD-API-Token': string;\n}\n\nexport interface CustomTokenHeader {\n  [headerName: string]: string;\n}\n\nclass URLTokenBaseHTTPError extends Error implements BaseHTTPClientError {\n  constructor(message: string, public response: BaseHTTPClientResponse) {\n    super(message);\n    this.name = 'URLTokenBaseHTTPError';\n    this.response = response;\n  }\n}\n\nexport type TokenHeader =\n  | AlgodTokenHeader\n  | IndexerTokenHeader\n  | KMDTokenHeader\n  | CustomTokenHeader;\n\n/**\n * Implementation of BaseHTTPClient that uses a URL and a token\n * and make the REST queries using fetch.\n * This is the default implementation of BaseHTTPClient.\n */\nexport class URLTokenBaseHTTPClient implements BaseHTTPClient {\n  private readonly baseURL: URL;\n  private readonly tokenHeader: TokenHeader;\n\n  constructor(\n    tokenHeader: TokenHeader,\n    baseServer: string,\n    port?: string | number,\n    private defaultHeaders: Record<string, any> = {}\n  ) {\n    // Append a trailing slash so we can use relative paths. Without the trailing\n    // slash, the last path segment will be replaced by the relative path. See\n    // usage in `addressWithPath`.\n    const fixedBaseServer = baseServer.endsWith('/')\n      ? baseServer\n      : `${baseServer}/`;\n    const baseServerURL = new URL(fixedBaseServer);\n    if (typeof port !== 'undefined') {\n      baseServerURL.port = port.toString();\n    }\n\n    if (baseServerURL.protocol.length === 0) {\n      throw new Error('Invalid base server URL, protocol must be defined.');\n    }\n\n    this.baseURL = baseServerURL;\n    this.tokenHeader = tokenHeader;\n  }\n\n  /**\n   * Compute the URL for a path relative to the instance's address\n   * @param relativePath - A path string\n   * @param query - An optional key-value object of query parameters to add to the URL. If the\n   *   relativePath already has query parameters on it, the additional parameters defined here will\n   *   be added to the URL without modifying those (unless a key collision occurs).\n   * @returns A URL string\n   */\n  private getURL(relativePath: string, query?: Query<string>): string {\n    let fixedRelativePath: string;\n    if (relativePath.startsWith('./')) {\n      fixedRelativePath = relativePath;\n    } else if (relativePath.startsWith('/')) {\n      fixedRelativePath = `.${relativePath}`;\n    } else {\n      fixedRelativePath = `./${relativePath}`;\n    }\n    const address = new URL(fixedRelativePath, this.baseURL);\n    if (query) {\n      for (const [key, value] of Object.entries(query)) {\n        address.searchParams.set(key, value);\n      }\n    }\n    return address.toString();\n  }\n\n  private static formatFetchResponseHeaders(\n    headers: Headers\n  ): Record<string, string> {\n    const headersObj: Record<string, string> = {};\n    headers.forEach((key, value) => {\n      headersObj[key] = value;\n    });\n    return headersObj;\n  }\n\n  private static async checkHttpError(res: Response) {\n    if (res.ok) {\n      return;\n    }\n\n    let body: Uint8Array | null = null;\n    let bodyErrorMessage: string | null = null;\n\n    try {\n      body = new Uint8Array(await res.arrayBuffer());\n      const decoded: Record<string, any> = JSON.parse(\n        Buffer.from(body).toString()\n      );\n      if (decoded.message) {\n        bodyErrorMessage = decoded.message;\n      }\n    } catch (_) {\n      // ignore any error that happened while we are parsing the error response\n    }\n\n    let message = `Network request error. Received status ${res.status} (${res.statusText})`;\n    if (bodyErrorMessage) {\n      message += `: ${bodyErrorMessage}`;\n    }\n\n    throw new URLTokenBaseHTTPError(message, {\n      body,\n      status: res.status,\n      headers: URLTokenBaseHTTPClient.formatFetchResponseHeaders(res.headers),\n    });\n  }\n\n  private static async formatFetchResponse(\n    res: Response\n  ): Promise<BaseHTTPClientResponse> {\n    await this.checkHttpError(res);\n    return {\n      body: new Uint8Array(await res.arrayBuffer()),\n      status: res.status,\n      headers: URLTokenBaseHTTPClient.formatFetchResponseHeaders(res.headers),\n    };\n  }\n\n  async get(\n    relativePath: string,\n    query?: Query<string>,\n    requestHeaders: Record<string, string> = {}\n  ): Promise<BaseHTTPClientResponse> {\n    // Expand headers for use in fetch\n    const headers = {\n      ...this.tokenHeader,\n      ...this.defaultHeaders,\n      ...requestHeaders,\n    };\n\n    const res = await fetch(this.getURL(relativePath, query), {\n      mode: 'cors',\n      headers,\n    });\n\n    return URLTokenBaseHTTPClient.formatFetchResponse(res);\n  }\n\n  async post(\n    relativePath: string,\n    data: Uint8Array,\n    query?: Query<string>,\n    requestHeaders: Record<string, string> = {}\n  ): Promise<BaseHTTPClientResponse> {\n    // Expand headers for use in fetch\n    const headers = {\n      ...this.tokenHeader,\n      ...this.defaultHeaders,\n      ...requestHeaders,\n    };\n\n    const res = await fetch(this.getURL(relativePath, query), {\n      method: 'POST',\n      mode: 'cors',\n      body: data,\n      headers,\n    });\n\n    return URLTokenBaseHTTPClient.formatFetchResponse(res);\n  }\n\n  async delete(\n    relativePath: string,\n    data: Uint8Array,\n    query?: Query<string>,\n    requestHeaders: Record<string, string> = {}\n  ): Promise<BaseHTTPClientResponse> {\n    // Expand headers for use in fetch\n    const headers = {\n      ...this.tokenHeader,\n      ...this.defaultHeaders,\n      ...requestHeaders,\n    };\n\n    const res = await fetch(this.getURL(relativePath, query), {\n      method: 'DELETE',\n      mode: 'cors',\n      body: data,\n      headers,\n    });\n\n    return URLTokenBaseHTTPClient.formatFetchResponse(res);\n  }\n}\n","import { Buffer } from 'buffer';\nimport * as utils from '../utils/utils';\nimport {\n  BaseHTTPClient,\n  BaseHTTPClientResponse,\n  Query,\n} from './baseHTTPClient';\nimport { TokenHeader, URLTokenBaseHTTPClient } from './urlTokenBaseHTTPClient';\n\ninterface ErrorWithAdditionalInfo extends Error {\n  rawResponse: string | null;\n  statusCode: number;\n}\n\nexport interface HTTPClientResponse {\n  body: Uint8Array | any; // when content-type=JSON, body is a JSON object, otherwise it's a Uint8Array\n  text?: string;\n  headers: Record<string, string>;\n  status: number;\n  ok: boolean;\n}\n\n/**\n * Remove falsy values or values with a length of 0 from an object.\n */\nfunction removeFalsyOrEmpty(obj: Record<string, any>) {\n  for (const key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      // eslint-disable-next-line no-param-reassign\n      if (!obj[key] || obj[key].length === 0) delete obj[key];\n    }\n  }\n  return obj;\n}\n\n/**\n * Create a new object with lower-case keys\n * See https://codereview.stackexchange.com/a/162418\n * Used to ensure all headers are lower-case and to work more easily with them\n */\nfunction tolowerCaseKeys(o: object): object {\n  /* eslint-disable no-param-reassign,no-return-assign,no-sequences */\n  return Object.keys(o).reduce((c, k) => ((c[k.toLowerCase()] = o[k]), c), {});\n  /* eslint-enable no-param-reassign,no-return-assign,no-sequences */\n}\n\n/**\n * getAcceptFormat returns the correct Accept header depending on the\n * requested format.\n */\nfunction getAcceptFormat(\n  query?: Query<'msgpack' | 'json'>\n): 'application/msgpack' | 'application/json' {\n  if (\n    query !== undefined &&\n    Object.prototype.hasOwnProperty.call(query, 'format')\n  ) {\n    switch (query.format) {\n      case 'msgpack':\n        return 'application/msgpack';\n      case 'json':\n      default:\n        return 'application/json';\n    }\n  } else return 'application/json';\n}\n\n/**\n * HTTPClient is a wrapper around a BaseHTTPClient\n * It takes care of setting the proper \"Accept\" header and of\n * decoding the JSON outputs.\n */\nexport default class HTTPClient {\n  private bc: BaseHTTPClient;\n\n  /**\n   * Construct an HTTPClient from a BaseHTTPClient\n   * @param bc - the BaseHTTPClient used\n   */\n  constructor(bc: BaseHTTPClient);\n  /**\n   * Construct an HTTPClient from a URL (baseServer+port) and a token\n   */\n  constructor(\n    tokenHeader: TokenHeader,\n    baseServer: string,\n    port?: string | number,\n    defaultHeaders?: Record<string, string>\n  );\n\n  constructor(\n    bcOrTokenHeader: BaseHTTPClient | TokenHeader,\n    baseServer?: string,\n    port?: string | number,\n    defaultHeaders: Record<string, string> = {}\n  ) {\n    if (baseServer !== undefined) {\n      this.bc = new URLTokenBaseHTTPClient(\n        bcOrTokenHeader as TokenHeader,\n        baseServer,\n        port,\n        defaultHeaders\n      );\n    } else {\n      this.bc = bcOrTokenHeader as BaseHTTPClient;\n    }\n  }\n\n  /**\n   * Parse JSON using either the built-in JSON.parse or utils.parseJSON\n   * depending on whether jsonOptions are provided or not\n   *\n   * @param text - JSON data\n   * @param status - Status of the response (used in case parseJSON fails)\n   * @param jsonOptions - Options object to use to decode JSON responses. See\n   *   utils.parseJSON for the options available.\n   */\n  public static parseJSON(\n    text: string,\n    status: number,\n    jsonOptions: utils.JSONOptions = {}\n  ) {\n    try {\n      if (Object.keys(jsonOptions).length === 0) {\n        return text && JSON.parse(text);\n      }\n      return text && utils.parseJSON(text, jsonOptions);\n    } catch (err_) {\n      const err: ErrorWithAdditionalInfo = err_;\n      // return the raw response if the response parsing fails\n      err.rawResponse = text || null;\n      // return the http status code if the response parsing fails\n      err.statusCode = status;\n      throw err;\n    }\n  }\n\n  /**\n   * Serialize the data according to the requestHeaders\n   * Assumes that requestHeaders contain a key \"content-type\"\n   * If the content-type is \"application/json\", data is JSON serialized\n   * Otherwise, data needs to be either an UTF-8 string that is converted to an Uint8Array\n   * or an Uint8Array\n   * @private\n   */\n  private static serializeData(\n    data: object,\n    requestHeaders: Record<string, string>\n  ): Uint8Array {\n    if (!data) {\n      return new Uint8Array(0); // empty Uint8Array\n    }\n    if (requestHeaders['content-type'] === 'application/json') {\n      return new Uint8Array(Buffer.from(JSON.stringify(data)));\n    }\n    if (typeof data === 'string') {\n      return new Uint8Array(Buffer.from(data));\n    }\n    if (data instanceof Uint8Array) {\n      return data;\n    }\n    throw new Error(\n      'provided data is neither a string nor a Uint8Array and content-type is not application/json'\n    );\n  }\n\n  /**\n   * Convert a BaseHTTPClientResponse into a full HTTPClientResponse\n   * Parse the body in\n   * Modifies in place res and return the result\n   */\n  private static prepareResponse(\n    res: BaseHTTPClientResponse,\n    format: 'application/msgpack' | 'application/json',\n    parseBody: boolean,\n    jsonOptions: utils.JSONOptions = {}\n  ): HTTPClientResponse {\n    let { body } = res;\n    let text;\n\n    if (format !== 'application/msgpack') {\n      text = (body && Buffer.from(body).toString()) || '';\n    }\n\n    if (parseBody && format === 'application/json') {\n      body = HTTPClient.parseJSON(text, res.status, jsonOptions);\n    }\n\n    return {\n      ...res,\n      body,\n      text,\n      ok: Math.trunc(res.status / 100) === 2,\n    };\n  }\n\n  /**\n   * Prepare an error with a response\n   * (the type of errors BaseHTTPClient are supposed to throw)\n   * by adding the status and preparing the internal response\n   * @private\n   */\n  private static prepareResponseError(err) {\n    if (err.response) {\n      // eslint-disable-next-line no-param-reassign\n      err.response = HTTPClient.prepareResponse(\n        err.response,\n        'application/json',\n        true\n      );\n      // eslint-disable-next-line no-param-reassign\n      err.status = err.response.status;\n    }\n    return err;\n  }\n\n  /**\n   * Send a GET request.\n   * @param relativePath - The path of the request.\n   * @param query - An object containing the query parameters of the request.\n   * @param requestHeaders - An object containing additional request headers to use.\n   * @param jsonOptions - Options object to use to decode JSON responses. See\n   *   utils.parseJSON for the options available.\n   * @param parseBody - An optional boolean indicating whether the response body should be parsed\n   *   or not.\n   * @returns Response object.\n   */\n  async get(\n    relativePath: string,\n    query?: Query<any>,\n    requestHeaders: Record<string, string> = {},\n    jsonOptions: utils.JSONOptions = {},\n    parseBody: boolean = true\n  ): Promise<HTTPClientResponse> {\n    const format = getAcceptFormat(query);\n    const fullHeaders = { ...requestHeaders, accept: format };\n\n    try {\n      const res = await this.bc.get(\n        relativePath,\n        removeFalsyOrEmpty(query),\n        fullHeaders\n      );\n\n      return HTTPClient.prepareResponse(res, format, parseBody, jsonOptions);\n    } catch (err) {\n      throw HTTPClient.prepareResponseError(err);\n    }\n  }\n\n  /**\n   * Send a POST request.\n   * If no content-type present, adds the header \"content-type: application/json\"\n   * and data is serialized in JSON (if not empty)\n   */\n  async post(\n    relativePath: string,\n    data: any,\n    requestHeaders: Record<string, string> = {},\n    query?: Query<any>,\n    parseBody: boolean = true\n  ): Promise<HTTPClientResponse> {\n    const fullHeaders = {\n      'content-type': 'application/json',\n      ...tolowerCaseKeys(requestHeaders),\n    };\n\n    try {\n      const res = await this.bc.post(\n        relativePath,\n        HTTPClient.serializeData(data, fullHeaders),\n        query,\n        fullHeaders\n      );\n\n      return HTTPClient.prepareResponse(res, 'application/json', parseBody);\n    } catch (err) {\n      throw HTTPClient.prepareResponseError(err);\n    }\n  }\n\n  /**\n   * Send a DELETE request.\n   * If no content-type present, adds the header \"content-type: application/json\"\n   * and data is serialized in JSON (if not empty)\n   */\n  async delete(\n    relativePath: string,\n    data: any,\n    requestHeaders: Record<string, string> = {},\n    parseBody: boolean = true\n  ) {\n    const fullHeaders = {\n      'content-type': 'application/json',\n      ...tolowerCaseKeys(requestHeaders),\n    };\n\n    const res = await this.bc.delete(\n      relativePath,\n      HTTPClient.serializeData(data, fullHeaders),\n      undefined,\n      fullHeaders\n    );\n\n    return HTTPClient.prepareResponse(res, 'application/json', parseBody);\n  }\n}\n","import HTTPClient from '../client';\nimport IntDecoding from '../../types/intDecoding';\nimport { BaseHTTPClient } from '../baseHTTPClient';\nimport { TokenHeader } from '../urlTokenBaseHTTPClient';\n\nexport type TokenHeaderIdentifier =\n  | 'X-Indexer-API-Token'\n  | 'X-KMD-API-Token'\n  | 'X-Algo-API-Token'\n  | string;\n\n/**\n * Convert a token string to a token header\n * @param token - The token string\n * @param headerIdentifier - An identifier for the token header\n */\nfunction convertTokenStringToTokenHeader(\n  token: string = '',\n  headerIdentifier: TokenHeaderIdentifier\n): TokenHeader {\n  const tokenHeader = {};\n  tokenHeader[headerIdentifier] = token;\n  return tokenHeader as TokenHeader;\n}\n\nfunction isBaseHTTPClient(\n  tbc: string | TokenHeader | BaseHTTPClient\n): tbc is BaseHTTPClient {\n  return typeof (tbc as BaseHTTPClient).get === 'function';\n}\n\n/**\n * Abstract service client to encapsulate shared AlgodClient and IndexerClient logic\n */\nexport default abstract class ServiceClient {\n  /** @ignore */\n  c: HTTPClient;\n  /** @ignore */\n  intDecoding: IntDecoding;\n\n  constructor(\n    tokenHeaderIdentifier: TokenHeaderIdentifier,\n    tokenHeaderOrStrOrBaseClient: string | TokenHeader | BaseHTTPClient,\n    baseServer: string,\n    port?: string | number,\n    defaultHeaders: Record<string, any> = {}\n  ) {\n    if (isBaseHTTPClient(tokenHeaderOrStrOrBaseClient)) {\n      // we are using a base client\n      this.c = new HTTPClient(tokenHeaderOrStrOrBaseClient);\n    } else {\n      // Accept token header as string or object\n      // - workaround to allow backwards compatibility for multiple headers\n      let tokenHeader: TokenHeader;\n      if (typeof tokenHeaderOrStrOrBaseClient === 'string') {\n        tokenHeader = convertTokenStringToTokenHeader(\n          tokenHeaderOrStrOrBaseClient,\n          tokenHeaderIdentifier\n        );\n      } else {\n        tokenHeader = tokenHeaderOrStrOrBaseClient;\n      }\n\n      this.c = new HTTPClient(tokenHeader, baseServer, port, defaultHeaders);\n    }\n\n    this.intDecoding = IntDecoding.DEFAULT;\n  }\n\n  /**\n   * Set the default int decoding method for all JSON requests this client creates.\n   * @param method - \\{\"default\" | \"safe\" | \"mixed\" | \"bigint\"\\} method The method to use when parsing the\n   *   response for request. Must be one of \"default\", \"safe\", \"mixed\", or \"bigint\". See\n   *   JSONRequest.setIntDecoding for more details about what each method does.\n   */\n  setIntEncoding(method: IntDecoding) {\n    this.intDecoding = method;\n  }\n\n  /**\n   * Get the default int decoding method for all JSON requests this client creates.\n   */\n  getIntEncoding() {\n    return this.intDecoding;\n  }\n}\n","import { Buffer } from 'buffer';\n\n/**\n * Base class for models\n */\n\n/* eslint-disable no-underscore-dangle,camelcase */\nfunction _is_primitive(val: any): val is string | boolean | number | bigint {\n  /* eslint-enable no-underscore-dangle,camelcase */\n  return (\n    val === undefined ||\n    val == null ||\n    (typeof val !== 'object' && typeof val !== 'function')\n  );\n}\n\n/* eslint-disable no-underscore-dangle,camelcase,no-redeclare,no-unused-vars */\nfunction _get_obj_for_encoding(\n  val: Function,\n  binary: boolean\n): Record<string, any>;\nfunction _get_obj_for_encoding(val: any[], binary: boolean): any[];\nfunction _get_obj_for_encoding(\n  val: Record<string, any>,\n  binary: boolean\n): Record<string, any>;\nfunction _get_obj_for_encoding(val: any, binary: boolean): any {\n  /* eslint-enable no-underscore-dangle,camelcase,no-redeclare,no-unused-vars */\n  let targetPropValue: any;\n\n  if (val instanceof Uint8Array) {\n    targetPropValue = binary ? val : Buffer.from(val).toString('base64');\n  } else if (typeof val.get_obj_for_encoding === 'function') {\n    targetPropValue = val.get_obj_for_encoding(binary);\n  } else if (Array.isArray(val)) {\n    targetPropValue = [];\n    for (const elem of val) {\n      targetPropValue.push(_get_obj_for_encoding(elem, binary));\n    }\n  } else if (typeof val === 'object') {\n    const obj = {};\n    for (const prop of Object.keys(val)) {\n      obj[prop] = _get_obj_for_encoding(val[prop], binary);\n    }\n    targetPropValue = obj;\n  } else if (_is_primitive(val)) {\n    targetPropValue = val;\n  } else {\n    throw new Error(`Unsupported value: ${String(val)}`);\n  }\n  return targetPropValue;\n}\n\nexport default class BaseModel {\n  /* eslint-disable no-underscore-dangle,camelcase */\n  attribute_map: Record<string, string>;\n\n  /**\n   * Get an object ready for encoding to either JSON or msgpack.\n   * @param binary - Use true to indicate that the encoding can handle raw binary objects\n   *   (Uint8Arrays). Use false to indicate that raw binary objects should be converted to base64\n   *   strings. True should be used for objects that will be encoded with msgpack, and false should\n   *   be used for objects that will be encoded with JSON.\n   */\n  get_obj_for_encoding(binary = false) {\n    /* eslint-enable no-underscore-dangle,camelcase */\n    const obj: Record<string, any> = {};\n\n    for (const prop of Object.keys(this.attribute_map)) {\n      const name = this.attribute_map[prop];\n      const value = this[prop];\n\n      if (typeof value !== 'undefined') {\n        obj[name] =\n          value === null ? null : _get_obj_for_encoding(value, binary);\n      }\n    }\n\n    return obj;\n  }\n}\n","/**\n * NOTICE: This file was generated. Editing this file manually is not recommended.\n */\n\n/* eslint-disable no-use-before-define */\nimport { Buffer } from 'buffer';\nimport BaseModel from '../../basemodel';\nimport { EncodedSignedTransaction } from '../../../../types/transactions/encoded';\nimport BlockHeader from '../../../../types/blockHeader';\n\n/**\n * Account information at a given round.\n * Definition:\n * data/basics/userBalance.go : AccountData\n */\nexport class Account extends BaseModel {\n  /**\n   * the account public key\n   */\n  public address: string;\n\n  /**\n   * (algo) total number of MicroAlgos in the account\n   */\n  public amount: number | bigint;\n\n  /**\n   * specifies the amount of MicroAlgos in the account, without the pending rewards.\n   */\n  public amountWithoutPendingRewards: number | bigint;\n\n  /**\n   * MicroAlgo balance required by the account.\n   * The requirement grows based on asset and application usage.\n   */\n  public minBalance: number | bigint;\n\n  /**\n   * amount of MicroAlgos of pending rewards in this account.\n   */\n  public pendingRewards: number | bigint;\n\n  /**\n   * (ern) total rewards of MicroAlgos the account has received, including pending\n   * rewards.\n   */\n  public rewards: number | bigint;\n\n  /**\n   * The round for which this information is relevant.\n   */\n  public round: number | bigint;\n\n  /**\n   * (onl) delegation status of the account's MicroAlgos\n   * * Offline - indicates that the associated account is delegated.\n   * * Online - indicates that the associated account used as part of the delegation\n   * pool.\n   * * NotParticipating - indicates that the associated account is neither a\n   * delegator nor a delegate.\n   */\n  public status: string;\n\n  /**\n   * The count of all applications that have been opted in, equivalent to the count\n   * of application local data (AppLocalState objects) stored in this account.\n   */\n  public totalAppsOptedIn: number | bigint;\n\n  /**\n   * The count of all assets that have been opted in, equivalent to the count of\n   * AssetHolding objects held by this account.\n   */\n  public totalAssetsOptedIn: number | bigint;\n\n  /**\n   * The count of all apps (AppParams objects) created by this account.\n   */\n  public totalCreatedApps: number | bigint;\n\n  /**\n   * The count of all assets (AssetParams objects) created by this account.\n   */\n  public totalCreatedAssets: number | bigint;\n\n  /**\n   * (appl) applications local data stored in this account.\n   * Note the raw object uses `map[int] -> AppLocalState` for this type.\n   */\n  public appsLocalState?: ApplicationLocalState[];\n\n  /**\n   * (teap) the sum of all extra application program pages for this account.\n   */\n  public appsTotalExtraPages?: number | bigint;\n\n  /**\n   * (tsch) stores the sum of all of the local schemas and global schemas in this\n   * account.\n   * Note: the raw account uses `StateSchema` for this type.\n   */\n  public appsTotalSchema?: ApplicationStateSchema;\n\n  /**\n   * (asset) assets held by this account.\n   * Note the raw object uses `map[int] -> AssetHolding` for this type.\n   */\n  public assets?: AssetHolding[];\n\n  /**\n   * (spend) the address against which signing should be checked. If empty, the\n   * address of the current account is used. This field can be updated in any\n   * transaction by setting the RekeyTo field.\n   */\n  public authAddr?: string;\n\n  /**\n   * (appp) parameters of applications created by this account including app global\n   * data.\n   * Note: the raw account uses `map[int] -> AppParams` for this type.\n   */\n  public createdApps?: Application[];\n\n  /**\n   * (apar) parameters of assets created by this account.\n   * Note: the raw account uses `map[int] -> Asset` for this type.\n   */\n  public createdAssets?: Asset[];\n\n  /**\n   * AccountParticipation describes the parameters used by this account in consensus\n   * protocol.\n   */\n  public participation?: AccountParticipation;\n\n  /**\n   * (ebase) used as part of the rewards computation. Only applicable to accounts\n   * which are participating.\n   */\n  public rewardBase?: number | bigint;\n\n  /**\n   * Indicates what type of signature is used by this account, must be one of:\n   * * sig\n   * * msig\n   * * lsig\n   */\n  public sigType?: string;\n\n  /**\n   * (tbxb) The total number of bytes used by this account's app's box keys and\n   * values.\n   */\n  public totalBoxBytes?: number | bigint;\n\n  /**\n   * (tbx) The number of existing boxes created by this account's app.\n   */\n  public totalBoxes?: number | bigint;\n\n  /**\n   * Creates a new `Account` object.\n   * @param address - the account public key\n   * @param amount - (algo) total number of MicroAlgos in the account\n   * @param amountWithoutPendingRewards - specifies the amount of MicroAlgos in the account, without the pending rewards.\n   * @param minBalance - MicroAlgo balance required by the account.\n   * The requirement grows based on asset and application usage.\n   * @param pendingRewards - amount of MicroAlgos of pending rewards in this account.\n   * @param rewards - (ern) total rewards of MicroAlgos the account has received, including pending\n   * rewards.\n   * @param round - The round for which this information is relevant.\n   * @param status - (onl) delegation status of the account's MicroAlgos\n   * * Offline - indicates that the associated account is delegated.\n   * * Online - indicates that the associated account used as part of the delegation\n   * pool.\n   * * NotParticipating - indicates that the associated account is neither a\n   * delegator nor a delegate.\n   * @param totalAppsOptedIn - The count of all applications that have been opted in, equivalent to the count\n   * of application local data (AppLocalState objects) stored in this account.\n   * @param totalAssetsOptedIn - The count of all assets that have been opted in, equivalent to the count of\n   * AssetHolding objects held by this account.\n   * @param totalCreatedApps - The count of all apps (AppParams objects) created by this account.\n   * @param totalCreatedAssets - The count of all assets (AssetParams objects) created by this account.\n   * @param appsLocalState - (appl) applications local data stored in this account.\n   * Note the raw object uses `map[int] -> AppLocalState` for this type.\n   * @param appsTotalExtraPages - (teap) the sum of all extra application program pages for this account.\n   * @param appsTotalSchema - (tsch) stores the sum of all of the local schemas and global schemas in this\n   * account.\n   * Note: the raw account uses `StateSchema` for this type.\n   * @param assets - (asset) assets held by this account.\n   * Note the raw object uses `map[int] -> AssetHolding` for this type.\n   * @param authAddr - (spend) the address against which signing should be checked. If empty, the\n   * address of the current account is used. This field can be updated in any\n   * transaction by setting the RekeyTo field.\n   * @param createdApps - (appp) parameters of applications created by this account including app global\n   * data.\n   * Note: the raw account uses `map[int] -> AppParams` for this type.\n   * @param createdAssets - (apar) parameters of assets created by this account.\n   * Note: the raw account uses `map[int] -> Asset` for this type.\n   * @param participation - AccountParticipation describes the parameters used by this account in consensus\n   * protocol.\n   * @param rewardBase - (ebase) used as part of the rewards computation. Only applicable to accounts\n   * which are participating.\n   * @param sigType - Indicates what type of signature is used by this account, must be one of:\n   * * sig\n   * * msig\n   * * lsig\n   * @param totalBoxBytes - (tbxb) The total number of bytes used by this account's app's box keys and\n   * values.\n   * @param totalBoxes - (tbx) The number of existing boxes created by this account's app.\n   */\n  constructor({\n    address,\n    amount,\n    amountWithoutPendingRewards,\n    minBalance,\n    pendingRewards,\n    rewards,\n    round,\n    status,\n    totalAppsOptedIn,\n    totalAssetsOptedIn,\n    totalCreatedApps,\n    totalCreatedAssets,\n    appsLocalState,\n    appsTotalExtraPages,\n    appsTotalSchema,\n    assets,\n    authAddr,\n    createdApps,\n    createdAssets,\n    participation,\n    rewardBase,\n    sigType,\n    totalBoxBytes,\n    totalBoxes,\n  }: {\n    address: string;\n    amount: number | bigint;\n    amountWithoutPendingRewards: number | bigint;\n    minBalance: number | bigint;\n    pendingRewards: number | bigint;\n    rewards: number | bigint;\n    round: number | bigint;\n    status: string;\n    totalAppsOptedIn: number | bigint;\n    totalAssetsOptedIn: number | bigint;\n    totalCreatedApps: number | bigint;\n    totalCreatedAssets: number | bigint;\n    appsLocalState?: ApplicationLocalState[];\n    appsTotalExtraPages?: number | bigint;\n    appsTotalSchema?: ApplicationStateSchema;\n    assets?: AssetHolding[];\n    authAddr?: string;\n    createdApps?: Application[];\n    createdAssets?: Asset[];\n    participation?: AccountParticipation;\n    rewardBase?: number | bigint;\n    sigType?: string;\n    totalBoxBytes?: number | bigint;\n    totalBoxes?: number | bigint;\n  }) {\n    super();\n    this.address = address;\n    this.amount = amount;\n    this.amountWithoutPendingRewards = amountWithoutPendingRewards;\n    this.minBalance = minBalance;\n    this.pendingRewards = pendingRewards;\n    this.rewards = rewards;\n    this.round = round;\n    this.status = status;\n    this.totalAppsOptedIn = totalAppsOptedIn;\n    this.totalAssetsOptedIn = totalAssetsOptedIn;\n    this.totalCreatedApps = totalCreatedApps;\n    this.totalCreatedAssets = totalCreatedAssets;\n    this.appsLocalState = appsLocalState;\n    this.appsTotalExtraPages = appsTotalExtraPages;\n    this.appsTotalSchema = appsTotalSchema;\n    this.assets = assets;\n    this.authAddr = authAddr;\n    this.createdApps = createdApps;\n    this.createdAssets = createdAssets;\n    this.participation = participation;\n    this.rewardBase = rewardBase;\n    this.sigType = sigType;\n    this.totalBoxBytes = totalBoxBytes;\n    this.totalBoxes = totalBoxes;\n\n    this.attribute_map = {\n      address: 'address',\n      amount: 'amount',\n      amountWithoutPendingRewards: 'amount-without-pending-rewards',\n      minBalance: 'min-balance',\n      pendingRewards: 'pending-rewards',\n      rewards: 'rewards',\n      round: 'round',\n      status: 'status',\n      totalAppsOptedIn: 'total-apps-opted-in',\n      totalAssetsOptedIn: 'total-assets-opted-in',\n      totalCreatedApps: 'total-created-apps',\n      totalCreatedAssets: 'total-created-assets',\n      appsLocalState: 'apps-local-state',\n      appsTotalExtraPages: 'apps-total-extra-pages',\n      appsTotalSchema: 'apps-total-schema',\n      assets: 'assets',\n      authAddr: 'auth-addr',\n      createdApps: 'created-apps',\n      createdAssets: 'created-assets',\n      participation: 'participation',\n      rewardBase: 'reward-base',\n      sigType: 'sig-type',\n      totalBoxBytes: 'total-box-bytes',\n      totalBoxes: 'total-boxes',\n    };\n  }\n\n  // eslint-disable-next-line camelcase\n  static from_obj_for_encoding(data: Record<string, any>): Account {\n    /* eslint-disable dot-notation */\n    if (typeof data['address'] === 'undefined')\n      throw new Error(`Response is missing required field 'address': ${data}`);\n    if (typeof data['amount'] === 'undefined')\n      throw new Error(`Response is missing required field 'amount': ${data}`);\n    if (typeof data['amount-without-pending-rewards'] === 'undefined')\n      throw new Error(\n        `Response is missing required field 'amount-without-pending-rewards': ${data}`\n      );\n    if (typeof data['min-balance'] === 'undefined')\n      throw new Error(\n        `Response is missing required field 'min-balance': ${data}`\n      );\n    if (typeof data['pending-rewards'] === 'undefined')\n      throw new Error(\n        `Response is missing required field 'pending-rewards': ${data}`\n      );\n    if (typeof data['rewards'] === 'undefined')\n      throw new Error(`Response is missing required field 'rewards': ${data}`);\n    if (typeof data['round'] === 'undefined')\n      throw new Error(`Response is missing required field 'round': ${data}`);\n    if (typeof data['status'] === 'undefined')\n      throw new Error(`Response is missing required field 'status': ${data}`);\n    if (typeof data['total-apps-opted-in'] === 'undefined')\n      throw new Error(\n        `Response is missing required field 'total-apps-opted-in': ${data}`\n      );\n    if (typeof data['total-assets-opted-in'] === 'undefined')\n      throw new Error(\n        `Response is missing required field 'total-assets-opted-in': ${data}`\n      );\n    if (typeof data['total-created-apps'] === 'undefined')\n      throw new Error(\n        `Response is missing required field 'total-created-apps': ${data}`\n      );\n    if (typeof data['total-created-assets'] === 'undefined')\n      throw new Error(\n        `Response is missing required field 'total-created-assets': ${data}`\n      );\n    return new Account({\n      address: data['address'],\n      amount: data['amount'],\n      amountWithoutPendingRewards: data['amount-without-pending-rewards'],\n      minBalance: data['min-balance'],\n      pendingRewards: data['pending-rewards'],\n      rewards: data['rewards'],\n      round: data['round'],\n      status: data['status'],\n      totalAppsOptedIn: data['total-apps-opted-in'],\n      totalAssetsOptedIn: data['total-assets-opted-in'],\n      totalCreatedApps: data['total-created-apps'],\n      totalCreatedAssets: data['total-created-assets'],\n      appsLocalState:\n        typeof data['apps-local-state'] !== 'undefined'\n          ? data['apps-local-state'].map(\n              ApplicationLocalState.from_obj_for_encoding\n            )\n          : undefined,\n      appsTotalExtraPages: data['apps-total-extra-pages'],\n      appsTotalSchema:\n        typeof data['apps-total-schema'] !== 'undefined'\n          ? ApplicationStateSchema.from_obj_for_encoding(\n              data['apps-total-schema']\n            )\n          : undefined,\n      assets:\n        typeof data['assets'] !== 'undefined'\n          ? data['assets'].map(AssetHolding.from_obj_for_encoding)\n          : undefined,\n      authAddr: data['auth-addr'],\n      createdApps:\n        typeof data['created-apps'] !== 'undefined'\n          ? data['created-apps'].map(Application.from_obj_for_encoding)\n          : undefined,\n      createdAssets:\n        typeof data['created-assets'] !== 'undefined'\n          ? data['created-assets'].map(Asset.from_obj_for_encoding)\n          : undefined,\n      participation:\n        typeof data['participation'] !== 'undefined'\n          ? AccountParticipation.from_obj_for_encoding(data['participation'])\n          : undefined,\n      rewardBase: data['reward-base'],\n      sigType: data['sig-type'],\n      totalBoxBytes: data['total-box-bytes'],\n      totalBoxes: data['total-boxes'],\n    });\n    /* eslint-enable dot-notation */\n  }\n}\n\n/**\n * AccountApplicationResponse describes the account's application local state and\n * global state (AppLocalState and AppParams, if either exists) for a specific\n * application ID. Global state will only be returned if the provided address is\n * the application's creator.\n */\nexport class AccountApplicationResponse extends BaseModel {\n  /**\n   * The round for which this information is relevant.\n   */\n  public round: number | bigint;\n\n  /**\n   * (appl) the application local data stored in this account.\n   * The raw account uses `AppLocalState` for this type.\n   */\n  public appLocalState?: ApplicationLocalState;\n\n  /**\n   * (appp) parameters of the application created by this account including app\n   * global data.\n   * The raw account uses `AppParams` for this type.\n   */\n  public createdApp?: ApplicationParams;\n\n  /**\n   * Creates a new `AccountApplicationResponse` object.\n   * @param round - The round for which this information is relevant.\n   * @param appLocalState - (appl) the application local data stored in this account.\n   * The raw account uses `AppLocalState` for this type.\n   * @param createdApp - (appp) parameters of the application created by this account including app\n   * global data.\n   * The raw account uses `AppParams` for this type.\n   */\n  constructor({\n    round,\n    appLocalState,\n    createdApp,\n  }: {\n    round: number | bigint;\n    appLocalState?: ApplicationLocalState;\n    createdApp?: ApplicationParams;\n  }) {\n    super();\n    this.round = round;\n    this.appLocalState = appLocalState;\n    this.createdApp = createdApp;\n\n    this.attribute_map = {\n      round: 'round',\n      appLocalState: 'app-local-state',\n      createdApp: 'created-app',\n    };\n  }\n\n  // eslint-disable-next-line camelcase\n  static from_obj_for_encoding(\n    data: Record<string, any>\n  ): AccountApplicationResponse {\n    /* eslint-disable dot-notation */\n    if (typeof data['round'] === 'undefined')\n      throw new Error(`Response is missing required field 'round': ${data}`);\n    return new AccountApplicationResponse({\n      round: data['round'],\n      appLocalState:\n        typeof data['app-local-state'] !== 'undefined'\n          ? ApplicationLocalState.from_obj_for_encoding(data['app-local-state'])\n          : undefined,\n      createdApp:\n        typeof data['created-app'] !== 'undefined'\n          ? ApplicationParams.from_obj_for_encoding(data['created-app'])\n          : undefined,\n    });\n    /* eslint-enable dot-notation */\n  }\n}\n\n/**\n * AccountAssetResponse describes the account's asset holding and asset parameters\n * (if either exist) for a specific asset ID. Asset parameters will only be\n * returned if the provided address is the asset's creator.\n */\nexport class AccountAssetResponse extends BaseModel {\n  /**\n   * The round for which this information is relevant.\n   */\n  public round: number | bigint;\n\n  /**\n   * (asset) Details about the asset held by this account.\n   * The raw account uses `AssetHolding` for this type.\n   */\n  public assetHolding?: AssetHolding;\n\n  /**\n   * (apar) parameters of the asset created by this account.\n   * The raw account uses `AssetParams` for this type.\n   */\n  public createdAsset?: AssetParams;\n\n  /**\n   * Creates a new `AccountAssetResponse` object.\n   * @param round - The round for which this information is relevant.\n   * @param assetHolding - (asset) Details about the asset held by this account.\n   * The raw account uses `AssetHolding` for this type.\n   * @param createdAsset - (apar) parameters of the asset created by this account.\n   * The raw account uses `AssetParams` for this type.\n   */\n  constructor({\n    round,\n    assetHolding,\n    createdAsset,\n  }: {\n    round: number | bigint;\n    assetHolding?: AssetHolding;\n    createdAsset?: AssetParams;\n  }) {\n    super();\n    this.round = round;\n    this.assetHolding = assetHolding;\n    this.createdAsset = createdAsset;\n\n    this.attribute_map = {\n      round: 'round',\n      assetHolding: 'asset-holding',\n      createdAsset: 'created-asset',\n    };\n  }\n\n  // eslint-disable-next-line camelcase\n  static from_obj_for_encoding(\n    data: Record<string, any>\n  ): AccountAssetResponse {\n    /* eslint-disable dot-notation */\n    if (typeof data['round'] === 'undefined')\n      throw new Error(`Response is missing required field 'round': ${data}`);\n    return new AccountAssetResponse({\n      round: data['round'],\n      assetHolding:\n        typeof data['asset-holding'] !== 'undefined'\n          ? AssetHolding.from_obj_for_encoding(data['asset-holding'])\n          : undefined,\n      createdAsset:\n        typeof data['created-asset'] !== 'undefined'\n          ? AssetParams.from_obj_for_encoding(data['created-asset'])\n          : undefined,\n    });\n    /* eslint-enable dot-notation */\n  }\n}\n\n/**\n * AccountParticipation describes the parameters used by this account in consensus\n * protocol.\n */\nexport class AccountParticipation extends BaseModel {\n  /**\n   * (sel) Selection public key (if any) currently registered for this round.\n   */\n  public selectionParticipationKey: Uint8Array;\n\n  /**\n   * (voteFst) First round for which this participation is valid.\n   */\n  public voteFirstValid: number | bigint;\n\n  /**\n   * (voteKD) Number of subkeys in each batch of participation keys.\n   */\n  public voteKeyDilution: number | bigint;\n\n  /**\n   * (voteLst) Last round for which this participation is valid.\n   */\n  public voteLastValid: number | bigint;\n\n  /**\n   * (vote) root participation public key (if any) currently registered for this\n   * round.\n   */\n  public voteParticipationKey: Uint8Array;\n\n  /**\n   * (stprf) Root of the state proof key (if any)\n   */\n  public stateProofKey?: Uint8Array;\n\n  /**\n   * Creates a new `AccountParticipation` object.\n   * @param selectionParticipationKey - (sel) Selection public key (if any) currently registered for this round.\n   * @param voteFirstValid - (voteFst) First round for which this participation is valid.\n   * @param voteKeyDilution - (voteKD) Number of subkeys in each batch of participation keys.\n   * @param voteLastValid - (voteLst) Last round for which this participation is valid.\n   * @param voteParticipationKey - (vote) root participation public key (if any) currently registered for this\n   * round.\n   * @param stateProofKey - (stprf) Root of the state proof key (if any)\n   */\n  constructor({\n    selectionParticipationKey,\n    voteFirstValid,\n    voteKeyDilution,\n    voteLastValid,\n    voteParticipationKey,\n    stateProofKey,\n  }: {\n    selectionParticipationKey: string | Uint8Array;\n    voteFirstValid: number | bigint;\n    voteKeyDilution: number | bigint;\n    voteLastValid: number | bigint;\n    voteParticipationKey: string | Uint8Array;\n    stateProofKey?: string | Uint8Array;\n  }) {\n    super();\n    this.selectionParticipationKey =\n      typeof selectionParticipationKey === 'string'\n        ? new Uint8Array(Buffer.from(selectionParticipationKey, 'base64'))\n        : selectionParticipationKey;\n    this.voteFirstValid = voteFirstValid;\n    this.voteKeyDilution = voteKeyDilution;\n    this.voteLastValid = voteLastValid;\n    this.voteParticipationKey =\n      typeof voteParticipationKey === 'string'\n        ? new Uint8Array(Buffer.from(voteParticipationKey, 'base64'))\n        : voteParticipationKey;\n    this.stateProofKey =\n      typeof stateProofKey === 'string'\n        ? new Uint8Array(Buffer.from(stateProofKey, 'base64'))\n        : stateProofKey;\n\n    this.attribute_map = {\n      selectionParticipationKey: 'selection-participation-key',\n      voteFirstValid: 'vote-first-valid',\n      voteKeyDilution: 'vote-key-dilution',\n      voteLastValid: 'vote-last-valid',\n      voteParticipationKey: 'vote-participation-key',\n      stateProofKey: 'state-proof-key',\n    };\n  }\n\n  // eslint-disable-next-line camelcase\n  static from_obj_for_encoding(\n    data: Record<string, any>\n  ): AccountParticipation {\n    /* eslint-disable dot-notation */\n    if (typeof data['selection-participation-key'] === 'undefined')\n      throw new Error(\n        `Response is missing required field 'selection-participation-key': ${data}`\n      );\n    if (typeof data['vote-first-valid'] === 'undefined')\n      throw new Error(\n        `Response is missing required field 'vote-first-valid': ${data}`\n      );\n    if (typeof data['vote-key-dilution'] === 'undefined')\n      throw new Error(\n        `Response is missing required field 'vote-key-dilution': ${data}`\n      );\n    if (typeof data['vote-last-valid'] === 'undefined')\n      throw new Error(\n        `Response is missing required field 'vote-last-valid': ${data}`\n      );\n    if (typeof data['vote-participation-key'] === 'undefined')\n      throw new Error(\n        `Response is missing required field 'vote-participation-key': ${data}`\n      );\n    return new AccountParticipation({\n      selectionParticipationKey: data['selection-participation-key'],\n      voteFirstValid: data['vote-first-valid'],\n      voteKeyDilution: data['vote-key-dilution'],\n      voteLastValid: data['vote-last-valid'],\n      voteParticipationKey: data['vote-participation-key'],\n      stateProofKey: data['state-proof-key'],\n    });\n    /* eslint-enable dot-notation */\n  }\n}\n\n/**\n * Application state delta.\n */\nexport class AccountStateDelta extends BaseModel {\n  public address: string;\n\n  /**\n   * Application state delta.\n   */\n  public delta: EvalDeltaKeyValue[];\n\n  /**\n   * Creates a new `AccountStateDelta` object.\n   * @param address -\n   * @param delta - Application state delta.\n   */\n  constructor({\n    address,\n    delta,\n  }: {\n    address: string;\n    delta: EvalDeltaKeyValue[];\n  }) {\n    super();\n    this.address = address;\n    this.delta = delta;\n\n    this.attribute_map = {\n      address: 'address',\n      delta: 'delta',\n    };\n  }\n\n  // eslint-disable-next-line camelcase\n  static from_obj_for_encoding(data: Record<string, any>): AccountStateDelta {\n    /* eslint-disable dot-notation */\n    if (typeof data['address'] === 'undefined')\n      throw new Error(`Response is missing required field 'address': ${data}`);\n    if (!Array.isArray(data['delta']))\n      throw new Error(\n        `Response is missing required array field 'delta': ${data}`\n      );\n    return new AccountStateDelta({\n      address: data['address'],\n      delta: data['delta'].map(EvalDeltaKeyValue.from_obj_for_encoding),\n    });\n    /* eslint-enable dot-notation */\n  }\n}\n\n/**\n * Application index and its parameters\n */\nexport class Application extends BaseModel {\n  /**\n   * (appidx) application index.\n   */\n  public id: number | bigint;\n\n  /**\n   * (appparams) application parameters.\n   */\n  public params: ApplicationParams;\n\n  /**\n   * Creates a new `Application` object.\n   * @param id - (appidx) application index.\n   * @param params - (appparams) application parameters.\n   */\n  constructor({\n    id,\n    params,\n  }: {\n    id: number | bigint;\n    params: ApplicationParams;\n  }) {\n    super();\n    this.id = id;\n    this.params = params;\n\n    this.attribute_map = {\n      id: 'id',\n      params: 'params',\n    };\n  }\n\n  // eslint-disable-next-line camelcase\n  static from_obj_for_encoding(data: Record<string, any>): Application {\n    /* eslint-disable dot-notation */\n    if (typeof data['id'] === 'undefined')\n      throw new Error(`Response is missing required field 'id': ${data}`);\n    if (typeof data['params'] === 'undefined')\n      throw new Error(`Response is missing required field 'params': ${data}`);\n    return new Application({\n      id: data['id'],\n      params: ApplicationParams.from_obj_for_encoding(data['params']),\n    });\n    /* eslint-enable dot-notation */\n  }\n}\n\n/**\n * Stores local state associated with an application.\n */\nexport class ApplicationLocalState extends BaseModel {\n  /**\n   * The application which this local state is for.\n   */\n  public id: number | bigint;\n\n  /**\n   * (hsch) schema.\n   */\n  public schema: ApplicationStateSchema;\n\n  /**\n   * (tkv) storage.\n   */\n  public keyValue?: TealKeyValue[];\n\n  /**\n   * Creates a new `ApplicationLocalState` object.\n   * @param id - The application which this local state is for.\n   * @param schema - (hsch) schema.\n   * @param keyValue - (tkv) storage.\n   */\n  constructor({\n    id,\n    schema,\n    keyValue,\n  }: {\n    id: number | bigint;\n    schema: ApplicationStateSchema;\n    keyValue?: TealKeyValue[];\n  }) {\n    super();\n    this.id = id;\n    this.schema = schema;\n    this.keyValue = keyValue;\n\n    this.attribute_map = {\n      id: 'id',\n      schema: 'schema',\n      keyValue: 'key-value',\n    };\n  }\n\n  // eslint-disable-next-line camelcase\n  static from_obj_for_encoding(\n    data: Record<string, any>\n  ): ApplicationLocalState {\n    /* eslint-disable dot-notation */\n    if (typeof data['id'] === 'undefined')\n      throw new Error(`Response is missing required field 'id': ${data}`);\n    if (typeof data['schema'] === 'undefined')\n      throw new Error(`Response is missing required field 'schema': ${data}`);\n    return new ApplicationLocalState({\n      id: data['id'],\n      schema: ApplicationStateSchema.from_obj_for_encoding(data['schema']),\n      keyValue:\n        typeof data['key-value'] !== 'undefined'\n          ? data['key-value'].map(TealKeyValue.from_obj_for_encoding)\n          : undefined,\n    });\n    /* eslint-enable dot-notation */\n  }\n}\n\n/**\n * Stores the global information associated with an application.\n */\nexport class ApplicationParams extends BaseModel {\n  /**\n   * (approv) approval program.\n   */\n  public approvalProgram: Uint8Array;\n\n  /**\n   * (clearp) approval program.\n   */\n  public clearStateProgram: Uint8Array;\n\n  /**\n   * The address that created this application. This is the address where the\n   * parameters and global state for this application can be found.\n   */\n  public creator: string;\n\n  /**\n   * (epp) the amount of extra program pages available to this app.\n   */\n  public extraProgramPages?: number | bigint;\n\n  /**\n   * (gs) global state\n   */\n  public globalState?: TealKeyValue[];\n\n  /**\n   * (gsch) global schema\n   */\n  public globalStateSchema?: ApplicationStateSchema;\n\n  /**\n   * (lsch) local schema\n   */\n  public localStateSchema?: ApplicationStateSchema;\n\n  /**\n   * Creates a new `ApplicationParams` object.\n   * @param approvalProgram - (approv) approval program.\n   * @param clearStateProgram - (clearp) approval program.\n   * @param creator - The address that created this application. This is the address where the\n   * parameters and global state for this application can be found.\n   * @param extraProgramPages - (epp) the amount of extra program pages available to this app.\n   * @param globalState - (gs) global state\n   * @param globalStateSchema - (gsch) global schema\n   * @param localStateSchema - (lsch) local schema\n   */\n  constructor({\n    approvalProgram,\n    clearStateProgram,\n    creator,\n    extraProgramPages,\n    globalState,\n    globalStateSchema,\n    localStateSchema,\n  }: {\n    approvalProgram: string | Uint8Array;\n    clearStateProgram: string | Uint8Array;\n    creator: string;\n    extraProgramPages?: number | bigint;\n    globalState?: TealKeyValue[];\n    globalStateSchema?: ApplicationStateSchema;\n    localStateSchema?: ApplicationStateSchema;\n  }) {\n    super();\n    this.approvalProgram =\n      typeof approvalProgram === 'string'\n        ? new Uint8Array(Buffer.from(approvalProgram, 'base64'))\n        : approvalProgram;\n    this.clearStateProgram =\n      typeof clearStateProgram === 'string'\n        ? new Uint8Array(Buffer.from(clearStateProgram, 'base64'))\n        : clearStateProgram;\n    this.creator = creator;\n    this.extraProgramPages = extraProgramPages;\n    this.globalState = globalState;\n    this.globalStateSchema = globalStateSchema;\n    this.localStateSchema = localStateSchema;\n\n    this.attribute_map = {\n      approvalProgram: 'approval-program',\n      clearStateProgram: 'clear-state-program',\n      creator: 'creator',\n      extraProgramPages: 'extra-program-pages',\n      globalState: 'global-state',\n      globalStateSchema: 'global-state-schema',\n      localStateSchema: 'local-state-schema',\n    };\n  }\n\n  // eslint-disable-next-line camelcase\n  static from_obj_for_encoding(data: Record<string, any>): ApplicationParams {\n    /* eslint-disable dot-notation */\n    if (typeof data['approval-program'] === 'undefined')\n      throw new Error(\n        `Response is missing required field 'approval-program': ${data}`\n      );\n    if (typeof data['clear-state-program'] === 'undefined')\n      throw new Error(\n        `Response is missing required field 'clear-state-program': ${data}`\n      );\n    if (typeof data['creator'] === 'undefined')\n      throw new Error(`Response is missing required field 'creator': ${data}`);\n    return new ApplicationParams({\n      approvalProgram: data['approval-program'],\n      clearStateProgram: data['clear-state-program'],\n      creator: data['creator'],\n      extraProgramPages: data['extra-program-pages'],\n      globalState:\n        typeof data['global-state'] !== 'undefined'\n          ? data['global-state'].map(TealKeyValue.from_obj_for_encoding)\n          : undefined,\n      globalStateSchema:\n        typeof data['global-state-schema'] !== 'undefined'\n          ? ApplicationStateSchema.from_obj_for_encoding(\n              data['global-state-schema']\n            )\n          : undefined,\n      localStateSchema:\n        typeof data['local-state-schema'] !== 'undefined'\n          ? ApplicationStateSchema.from_obj_for_encoding(\n              data['local-state-schema']\n            )\n          : undefined,\n    });\n    /* eslint-enable dot-notation */\n  }\n}\n\n/**\n * Specifies maximums on the number of each type that may be stored.\n */\nexport class ApplicationStateSchema extends BaseModel {\n  /**\n   * (nui) num of uints.\n   */\n  public numUint: number | bigint;\n\n  /**\n   * (nbs) num of byte slices.\n   */\n  public numByteSlice: number | bigint;\n\n  /**\n   * Creates a new `ApplicationStateSchema` object.\n   * @param numUint - (nui) num of uints.\n   * @param numByteSlice - (nbs) num of byte slices.\n   */\n  constructor({\n    numUint,\n    numByteSlice,\n  }: {\n    numUint: number | bigint;\n    numByteSlice: number | bigint;\n  }) {\n    super();\n    this.numUint = numUint;\n    this.numByteSlice = numByteSlice;\n\n    this.attribute_map = {\n      numUint: 'num-uint',\n      numByteSlice: 'num-byte-slice',\n    };\n  }\n\n  // eslint-disable-next-line camelcase\n  static from_obj_for_encoding(\n    data: Record<string, any>\n  ): ApplicationStateSchema {\n    /* eslint-disable dot-notation */\n    if (typeof data['num-uint'] === 'undefined')\n      throw new Error(`Response is missing required field 'num-uint': ${data}`);\n    if (typeof data['num-byte-slice'] === 'undefined')\n      throw new Error(\n        `Response is missing required field 'num-byte-slice': ${data}`\n      );\n    return new ApplicationStateSchema({\n      numUint: data['num-uint'],\n      numByteSlice: data['num-byte-slice'],\n    });\n    /* eslint-enable dot-notation */\n  }\n}\n\n/**\n * Specifies both the unique identifier and the parameters for an asset\n */\nexport class Asset extends BaseModel {\n  /**\n   * unique asset identifier\n   */\n  public index: number | bigint;\n\n  /**\n   * AssetParams specifies the parameters for an asset.\n   * (apar) when part of an AssetConfig transaction.\n   * Definition:\n   * data/transactions/asset.go : AssetParams\n   */\n  public params: AssetParams;\n\n  /**\n   * Creates a new `Asset` object.\n   * @param index - unique asset identifier\n   * @param params - AssetParams specifies the parameters for an asset.\n   * (apar) when part of an AssetConfig transaction.\n   * Definition:\n   * data/transactions/asset.go : AssetParams\n   */\n  constructor({\n    index,\n    params,\n  }: {\n    index: number | bigint;\n    params: AssetParams;\n  }) {\n    super();\n    this.index = index;\n    this.params = params;\n\n    this.attribute_map = {\n      index: 'index',\n      params: 'params',\n    };\n  }\n\n  // eslint-disable-next-line camelcase\n  static from_obj_for_encoding(data: Record<string, any>): Asset {\n    /* eslint-disable dot-notation */\n    if (typeof data['index'] === 'undefined')\n      throw new Error(`Response is missing required field 'index': ${data}`);\n    if (typeof data['params'] === 'undefined')\n      throw new Error(`Response is missing required field 'params': ${data}`);\n    return new Asset({\n      index: data['index'],\n      params: AssetParams.from_obj_for_encoding(data['params']),\n    });\n    /* eslint-enable dot-notation */\n  }\n}\n\n/**\n * Describes an asset held by an account.\n * Definition:\n * data/basics/userBalance.go : AssetHolding\n */\nexport class AssetHolding extends BaseModel {\n  /**\n   * (a) number of units held.\n   */\n  public amount: number | bigint;\n\n  /**\n   * Asset ID of the holding.\n   */\n  public assetId: number | bigint;\n\n  /**\n   * (f) whether or not the holding is frozen.\n   */\n  public isFrozen: boolean;\n\n  /**\n   * Creates a new `AssetHolding` object.\n   * @param amount - (a) number of units held.\n   * @param assetId - Asset ID of the holding.\n   * @param isFrozen - (f) whether or not the holding is frozen.\n   */\n  constructor({\n    amount,\n    assetId,\n    isFrozen,\n  }: {\n    amount: number | bigint;\n    assetId: number | bigint;\n    isFrozen: boolean;\n  }) {\n    super();\n    this.amount = amount;\n    this.assetId = assetId;\n    this.isFrozen = isFrozen;\n\n    this.attribute_map = {\n      amount: 'amount',\n      assetId: 'asset-id',\n      isFrozen: 'is-frozen',\n    };\n  }\n\n  // eslint-disable-next-line camelcase\n  static from_obj_for_encoding(data: Record<string, any>): AssetHolding {\n    /* eslint-disable dot-notation */\n    if (typeof data['amount'] === 'undefined')\n      throw new Error(`Response is missing required field 'amount': ${data}`);\n    if (typeof data['asset-id'] === 'undefined')\n      throw new Error(`Response is missing required field 'asset-id': ${data}`);\n    if (typeof data['is-frozen'] === 'undefined')\n      throw new Error(\n        `Response is missing required field 'is-frozen': ${data}`\n      );\n    return new AssetHolding({\n      amount: data['amount'],\n      assetId: data['asset-id'],\n      isFrozen: data['is-frozen'],\n    });\n    /* eslint-enable dot-notation */\n  }\n}\n\n/**\n * AssetParams specifies the parameters for an asset.\n * (apar) when part of an AssetConfig transaction.\n * Definition:\n * data/transactions/asset.go : AssetParams\n */\nexport class AssetParams extends BaseModel {\n  /**\n   * The address that created this asset. This is the address where the parameters\n   * for this asset can be found, and also the address where unwanted asset units can\n   * be sent in the worst case.\n   */\n  public creator: string;\n\n  /**\n   * (dc) The number of digits to use after the decimal point when displaying this\n   * asset. If 0, the asset is not divisible. If 1, the base unit of the asset is in\n   * tenths. If 2, the base unit of the asset is in hundredths, and so on. This value\n   * must be between 0 and 19 (inclusive).\n   */\n  public decimals: number | bigint;\n\n  /**\n   * (t) The total number of units of this asset.\n   */\n  public total: number | bigint;\n\n  /**\n   * (c) Address of account used to clawback holdings of this asset. If empty,\n   * clawback is not permitted.\n   */\n  public clawback?: string;\n\n  /**\n   * (df) Whether holdings of this asset are frozen by default.\n   */\n  public defaultFrozen?: boolean;\n\n  /**\n   * (f) Address of account used to freeze holdings of this asset. If empty, freezing\n   * is not permitted.\n   */\n  public freeze?: string;\n\n  /**\n   * (m) Address of account used to manage the keys of this asset and to destroy it.\n   */\n  public manager?: string;\n\n  /**\n   * (am) A commitment to some unspecified asset metadata. The format of this\n   * metadata is up to the application.\n   */\n  public metadataHash?: Uint8Array;\n\n  /**\n   * (an) Name of this asset, as supplied by the creator. Included only when the\n   * asset name is composed of printable utf-8 characters.\n   */\n  public name?: string;\n\n  /**\n   * Base64 encoded name of this asset, as supplied by the creator.\n   */\n  public nameB64?: Uint8Array;\n\n  /**\n   * (r) Address of account holding reserve (non-minted) units of this asset.\n   */\n  public reserve?: string;\n\n  /**\n   * (un) Name of a unit of this asset, as supplied by the creator. Included only\n   * when the name of a unit of this asset is composed of printable utf-8 characters.\n   */\n  public unitName?: string;\n\n  /**\n   * Base64 encoded name of a unit of this asset, as supplied by the creator.\n   */\n  public unitNameB64?: Uint8Array;\n\n  /**\n   * (au) URL where more information about the asset can be retrieved. Included only\n   * when the URL is composed of printable utf-8 characters.\n   */\n  public url?: string;\n\n  /**\n   * Base64 encoded URL where more information about the asset can be retrieved.\n   */\n  public urlB64?: Uint8Array;\n\n  /**\n   * Creates a new `AssetParams` object.\n   * @param creator - The address that created this asset. This is the address where the parameters\n   * for this asset can be found, and also the address where unwanted asset units can\n   * be sent in the worst case.\n   * @param decimals - (dc) The number of digits to use after the decimal point when displaying this\n   * asset. If 0, the asset is not divisible. If 1, the base unit of the asset is in\n   * tenths. If 2, the base unit of the asset is in hundredths, and so on. This value\n   * must be between 0 and 19 (inclusive).\n   * @param total - (t) The total number of units of this asset.\n   * @param clawback - (c) Address of account used to clawback holdings of this asset. If empty,\n   * clawback is not permitted.\n   * @param defaultFrozen - (df) Whether holdings of this asset are frozen by default.\n   * @param freeze - (f) Address of account used to freeze holdings of this asset. If empty, freezing\n   * is not permitted.\n   * @param manager - (m) Address of account used to manage the keys of this asset and to destroy it.\n   * @param metadataHash - (am) A commitment to some unspecified asset metadata. The format of this\n   * metadata is up to the application.\n   * @param name - (an) Name of this asset, as supplied by the creator. Included only when the\n   * asset name is composed of printable utf-8 characters.\n   * @param nameB64 - Base64 encoded name of this asset, as supplied by the creator.\n   * @param reserve - (r) Address of account holding reserve (non-minted) units of this asset.\n   * @param unitName - (un) Name of a unit of this asset, as supplied by the creator. Included only\n   * when the name of a unit of this asset is composed of printable utf-8 characters.\n   * @param unitNameB64 - Base64 encoded name of a unit of this asset, as supplied by the creator.\n   * @param url - (au) URL where more information about the asset can be retrieved. Included only\n   * when the URL is composed of printable utf-8 characters.\n   * @param urlB64 - Base64 encoded URL where more information about the asset can be retrieved.\n   */\n  constructor({\n    creator,\n    decimals,\n    total,\n    clawback,\n    defaultFrozen,\n    freeze,\n    manager,\n    metadataHash,\n    name,\n    nameB64,\n    reserve,\n    unitName,\n    unitNameB64,\n    url,\n    urlB64,\n  }: {\n    creator: string;\n    decimals: number | bigint;\n    total: number | bigint;\n    clawback?: string;\n    defaultFrozen?: boolean;\n    freeze?: string;\n    manager?: string;\n    metadataHash?: string | Uint8Array;\n    name?: string;\n    nameB64?: string | Uint8Array;\n    reserve?: string;\n    unitName?: string;\n    unitNameB64?: string | Uint8Array;\n    url?: string;\n    urlB64?: string | Uint8Array;\n  }) {\n    super();\n    this.creator = creator;\n    this.decimals = decimals;\n    this.total = total;\n    this.clawback = clawback;\n    this.defaultFrozen = defaultFrozen;\n    this.freeze = freeze;\n    this.manager = manager;\n    this.metadataHash =\n      typeof metadataHash === 'string'\n        ? new Uint8Array(Buffer.from(metadataHash, 'base64'))\n        : metadataHash;\n    this.name = name;\n    this.nameB64 =\n      typeof nameB64 === 'string'\n        ? new Uint8Array(Buffer.from(nameB64, 'base64'))\n        : nameB64;\n    this.reserve = reserve;\n    this.unitName = unitName;\n    this.unitNameB64 =\n      typeof unitNameB64 === 'string'\n        ? new Uint8Array(Buffer.from(unitNameB64, 'base64'))\n        : unitNameB64;\n    this.url = url;\n    this.urlB64 =\n      typeof urlB64 === 'string'\n        ? new Uint8Array(Buffer.from(urlB64, 'base64'))\n        : urlB64;\n\n    this.attribute_map = {\n      creator: 'creator',\n      decimals: 'decimals',\n      total: 'total',\n      clawback: 'clawback',\n      defaultFrozen: 'default-frozen',\n      freeze: 'freeze',\n      manager: 'manager',\n      metadataHash: 'metadata-hash',\n      name: 'name',\n      nameB64: 'name-b64',\n      reserve: 'reserve',\n      unitName: 'unit-name',\n      unitNameB64: 'unit-name-b64',\n      url: 'url',\n      urlB64: 'url-b64',\n    };\n  }\n\n  // eslint-disable-next-line camelcase\n  static from_obj_for_encoding(data: Record<string, any>): AssetParams {\n    /* eslint-disable dot-notation */\n    if (typeof data['creator'] === 'undefined')\n      throw new Error(`Response is missing required field 'creator': ${data}`);\n    if (typeof data['decimals'] === 'undefined')\n      throw new Error(`Response is missing required field 'decimals': ${data}`);\n    if (typeof data['total'] === 'undefined')\n      throw new Error(`Response is missing required field 'total': ${data}`);\n    return new AssetParams({\n      creator: data['creator'],\n      decimals: data['decimals'],\n      total: data['total'],\n      clawback: data['clawback'],\n      defaultFrozen: data['default-frozen'],\n      freeze: data['freeze'],\n      manager: data['manager'],\n      metadataHash: data['metadata-hash'],\n      name: data['name'],\n      nameB64: data['name-b64'],\n      reserve: data['reserve'],\n      unitName: data['unit-name'],\n      unitNameB64: data['unit-name-b64'],\n      url: data['url'],\n      urlB64: data['url-b64'],\n    });\n    /* eslint-enable dot-notation */\n  }\n}\n\n/**\n * Hash of a block header.\n */\nexport class BlockHashResponse extends BaseModel {\n  /**\n   * Block header hash.\n   */\n  public blockhash: string;\n\n  /**\n   * Creates a new `BlockHashResponse` object.\n   * @param blockhash - Block header hash.\n   */\n  constructor({ blockhash }: { blockhash: string }) {\n    super();\n    this.blockhash = blockhash;\n\n    this.attribute_map = {\n      blockhash: 'blockHash',\n    };\n  }\n\n  // eslint-disable-next-line camelcase\n  static from_obj_for_encoding(data: Record<string, any>): BlockHashResponse {\n    /* eslint-disable dot-notation */\n    if (typeof data['blockHash'] === 'undefined')\n      throw new Error(\n        `Response is missing required field 'blockHash': ${data}`\n      );\n    return new BlockHashResponse({\n      blockhash: data['blockHash'],\n    });\n    /* eslint-enable dot-notation */\n  }\n}\n\n/**\n * Encoded block object.\n */\nexport class BlockResponse extends BaseModel {\n  /**\n   * Block header data.\n   */\n  public block: BlockHeader;\n\n  /**\n   * Optional certificate object. This is only included when the format is set to\n   * message pack.\n   */\n  public cert?: Record<string, any>;\n\n  /**\n   * Creates a new `BlockResponse` object.\n   * @param block - Block header data.\n   * @param cert - Optional certificate object. This is only included when the format is set to\n   * message pack.\n   */\n  constructor({\n    block,\n    cert,\n  }: {\n    block: BlockHeader;\n    cert?: Record<string, any>;\n  }) {\n    super();\n    this.block = block;\n    this.cert = cert;\n\n    this.attribute_map = {\n      block: 'block',\n      cert: 'cert',\n    };\n  }\n\n  // eslint-disable-next-line camelcase\n  static from_obj_for_encoding(data: Record<string, any>): BlockResponse {\n    /* eslint-disable dot-notation */\n    if (typeof data['block'] === 'undefined')\n      throw new Error(`Response is missing required field 'block': ${data}`);\n    return new BlockResponse({\n      block: data['block'],\n      cert: data['cert'],\n    });\n    /* eslint-enable dot-notation */\n  }\n}\n\n/**\n * Box name and its content.\n */\nexport class Box extends BaseModel {\n  /**\n   * (name) box name, base64 encoded\n   */\n  public name: Uint8Array;\n\n  /**\n   * (value) box value, base64 encoded.\n   */\n  public value: Uint8Array;\n\n  /**\n   * Creates a new `Box` object.\n   * @param name - (name) box name, base64 encoded\n   * @param value - (value) box value, base64 encoded.\n   */\n  constructor({\n    name,\n    value,\n  }: {\n    name: string | Uint8Array;\n    value: string | Uint8Array;\n  }) {\n    super();\n    this.name =\n      typeof name === 'string'\n        ? new Uint8Array(Buffer.from(name, 'base64'))\n        : name;\n    this.value =\n      typeof value === 'string'\n        ? new Uint8Array(Buffer.from(value, 'base64'))\n        : value;\n\n    this.attribute_map = {\n      name: 'name',\n      value: 'value',\n    };\n  }\n\n  // eslint-disable-next-line camelcase\n  static from_obj_for_encoding(data: Record<string, any>): Box {\n    /* eslint-disable dot-notation */\n    if (typeof data['name'] === 'undefined')\n      throw new Error(`Response is missing required field 'name': ${data}`);\n    if (typeof data['value'] === 'undefined')\n      throw new Error(`Response is missing required field 'value': ${data}`);\n    return new Box({\n      name: data['name'],\n      value: data['value'],\n    });\n    /* eslint-enable dot-notation */\n  }\n}\n\n/**\n * Box descriptor describes a Box.\n */\nexport class BoxDescriptor extends BaseModel {\n  /**\n   * Base64 encoded box name\n   */\n  public name: Uint8Array;\n\n  /**\n   * Creates a new `BoxDescriptor` object.\n   * @param name - Base64 encoded box name\n   */\n  constructor({ name }: { name: string | Uint8Array }) {\n    super();\n    this.name =\n      typeof name === 'string'\n        ? new Uint8Array(Buffer.from(name, 'base64'))\n        : name;\n\n    this.attribute_map = {\n      name: 'name',\n    };\n  }\n\n  // eslint-disable-next-line camelcase\n  static from_obj_for_encoding(data: Record<string, any>): BoxDescriptor {\n    /* eslint-disable dot-notation */\n    if (typeof data['name'] === 'undefined')\n      throw new Error(`Response is missing required field 'name': ${data}`);\n    return new BoxDescriptor({\n      name: data['name'],\n    });\n    /* eslint-enable dot-notation */\n  }\n}\n\n/**\n * Box names of an application\n */\nexport class BoxesResponse extends BaseModel {\n  public boxes: BoxDescriptor[];\n\n  /**\n   * Creates a new `BoxesResponse` object.\n   * @param boxes -\n   */\n  constructor({ boxes }: { boxes: BoxDescriptor[] }) {\n    super();\n    this.boxes = boxes;\n\n    this.attribute_map = {\n      boxes: 'boxes',\n    };\n  }\n\n  // eslint-disable-next-line camelcase\n  static from_obj_for_encoding(data: Record<string, any>): BoxesResponse {\n    /* eslint-disable dot-notation */\n    if (!Array.isArray(data['boxes']))\n      throw new Error(\n        `Response is missing required array field 'boxes': ${data}`\n      );\n    return new BoxesResponse({\n      boxes: data['boxes'].map(BoxDescriptor.from_obj_for_encoding),\n    });\n    /* eslint-enable dot-notation */\n  }\n}\n\nexport class BuildVersion extends BaseModel {\n  public branch: string;\n\n  public buildNumber: number | bigint;\n\n  public channel: string;\n\n  public commitHash: string;\n\n  public major: number | bigint;\n\n  public minor: number | bigint;\n\n  /**\n   * Creates a new `BuildVersion` object.\n   * @param branch -\n   * @param buildNumber -\n   * @param channel -\n   * @param commitHash -\n   * @param major -\n   * @param minor -\n   */\n  constructor({\n    branch,\n    buildNumber,\n    channel,\n    commitHash,\n    major,\n    minor,\n  }: {\n    branch: string;\n    buildNumber: number | bigint;\n    channel: string;\n    commitHash: string;\n    major: number | bigint;\n    minor: number | bigint;\n  }) {\n    super();\n    this.branch = branch;\n    this.buildNumber = buildNumber;\n    this.channel = channel;\n    this.commitHash = commitHash;\n    this.major = major;\n    this.minor = minor;\n\n    this.attribute_map = {\n      branch: 'branch',\n      buildNumber: 'build_number',\n      channel: 'channel',\n      commitHash: 'commit_hash',\n      major: 'major',\n      minor: 'minor',\n    };\n  }\n\n  // eslint-disable-next-line camelcase\n  static from_obj_for_encoding(data: Record<string, any>): BuildVersion {\n    /* eslint-disable dot-notation */\n    if (typeof data['branch'] === 'undefined')\n      throw new Error(`Response is missing required field 'branch': ${data}`);\n    if (typeof data['build_number'] === 'undefined')\n      throw new Error(\n        `Response is missing required field 'build_number': ${data}`\n      );\n    if (typeof data['channel'] === 'undefined')\n      throw new Error(`Response is missing required field 'channel': ${data}`);\n    if (typeof data['commit_hash'] === 'undefined')\n      throw new Error(\n        `Response is missing required field 'commit_hash': ${data}`\n      );\n    if (typeof data['major'] === 'undefined')\n      throw new Error(`Response is missing required field 'major': ${data}`);\n    if (typeof data['minor'] === 'undefined')\n      throw new Error(`Response is missing required field 'minor': ${data}`);\n    return new BuildVersion({\n      branch: data['branch'],\n      buildNumber: data['build_number'],\n      channel: data['channel'],\n      commitHash: data['commit_hash'],\n      major: data['major'],\n      minor: data['minor'],\n    });\n    /* eslint-enable dot-notation */\n  }\n}\n\n/**\n * Teal compile Result\n */\nexport class CompileResponse extends BaseModel {\n  /**\n   * base32 SHA512_256 of program bytes (Address style)\n   */\n  public hash: string;\n\n  /**\n   * base64 encoded program bytes\n   */\n  public result: string;\n\n  /**\n   * JSON of the source map\n   */\n  public sourcemap?: Record<string, any>;\n\n  /**\n   * Creates a new `CompileResponse` object.\n   * @param hash - base32 SHA512_256 of program bytes (Address style)\n   * @param result - base64 encoded program bytes\n   * @param sourcemap - JSON of the source map\n   */\n  constructor({\n    hash,\n    result,\n    sourcemap,\n  }: {\n    hash: string;\n    result: string;\n    sourcemap?: Record<string, any>;\n  }) {\n    super();\n    this.hash = hash;\n    this.result = result;\n    this.sourcemap = sourcemap;\n\n    this.attribute_map = {\n      hash: 'hash',\n      result: 'result',\n      sourcemap: 'sourcemap',\n    };\n  }\n\n  // eslint-disable-next-line camelcase\n  static from_obj_for_encoding(data: Record<string, any>): CompileResponse {\n    /* eslint-disable dot-notation */\n    if (typeof data['hash'] === 'undefined')\n      throw new Error(`Response is missing required field 'hash': ${data}`);\n    if (typeof data['result'] === 'undefined')\n      throw new Error(`Response is missing required field 'result': ${data}`);\n    return new CompileResponse({\n      hash: data['hash'],\n      result: data['result'],\n      sourcemap: data['sourcemap'],\n    });\n    /* eslint-enable dot-notation */\n  }\n}\n\n/**\n * Teal disassembly Result\n */\nexport class DisassembleResponse extends BaseModel {\n  /**\n   * disassembled Teal code\n   */\n  public result: string;\n\n  /**\n   * Creates a new `DisassembleResponse` object.\n   * @param result - disassembled Teal code\n   */\n  constructor({ result }: { result: string }) {\n    super();\n    this.result = result;\n\n    this.attribute_map = {\n      result: 'result',\n    };\n  }\n\n  // eslint-disable-next-line camelcase\n  static from_obj_for_encoding(data: Record<string, any>): DisassembleResponse {\n    /* eslint-disable dot-notation */\n    if (typeof data['result'] === 'undefined')\n      throw new Error(`Response is missing required field 'result': ${data}`);\n    return new DisassembleResponse({\n      result: data['result'],\n    });\n    /* eslint-enable dot-notation */\n  }\n}\n\n/**\n * Request data type for dryrun endpoint. Given the Transactions and simulated\n * ledger state upload, run TEAL scripts and return debugging information.\n */\nexport class DryrunRequest extends BaseModel {\n  public accounts: Account[];\n\n  public apps: Application[];\n\n  /**\n   * LatestTimestamp is available to some TEAL scripts. Defaults to the latest\n   * confirmed timestamp this algod is attached to.\n   */\n  public latestTimestamp: number | bigint;\n\n  /**\n   * ProtocolVersion specifies a specific version string to operate under, otherwise\n   * whatever the current protocol of the network this algod is running in.\n   */\n  public protocolVersion: string;\n\n  /**\n   * Round is available to some TEAL scripts. Defaults to the current round on the\n   * network this algod is attached to.\n   */\n  public round: number | bigint;\n\n  public sources: DryrunSource[];\n\n  public txns: EncodedSignedTransaction[];\n\n  /**\n   * Creates a new `DryrunRequest` object.\n   * @param accounts -\n   * @param apps -\n   * @param latestTimestamp - LatestTimestamp is available to some TEAL scripts. Defaults to the latest\n   * confirmed timestamp this algod is attached to.\n   * @param protocolVersion - ProtocolVersion specifies a specific version string to operate under, otherwise\n   * whatever the current protocol of the network this algod is running in.\n   * @param round - Round is available to some TEAL scripts. Defaults to the current round on the\n   * network this algod is attached to.\n   * @param sources -\n   * @param txns -\n   */\n  constructor({\n    accounts,\n    apps,\n    latestTimestamp,\n    protocolVersion,\n    round,\n    sources,\n    txns,\n  }: {\n    accounts: Account[];\n    apps: Application[];\n    latestTimestamp: number | bigint;\n    protocolVersion: string;\n    round: number | bigint;\n    sources: DryrunSource[];\n    txns: EncodedSignedTransaction[];\n  }) {\n    super();\n    this.accounts = accounts;\n    this.apps = apps;\n    this.latestTimestamp = latestTimestamp;\n    this.protocolVersion = protocolVersion;\n    this.round = round;\n    this.sources = sources;\n    this.txns = txns;\n\n    this.attribute_map = {\n      accounts: 'accounts',\n      apps: 'apps',\n      latestTimestamp: 'latest-timestamp',\n      protocolVersion: 'protocol-version',\n      round: 'round',\n      sources: 'sources',\n      txns: 'txns',\n    };\n  }\n\n  // eslint-disable-next-line camelcase\n  static from_obj_for_encoding(data: Record<string, any>): DryrunRequest {\n    /* eslint-disable dot-notation */\n    if (!Array.isArray(data['accounts']))\n      throw new Error(\n        `Response is missing required array field 'accounts': ${data}`\n      );\n    if (!Array.isArray(data['apps']))\n      throw new Error(\n        `Response is missing required array field 'apps': ${data}`\n      );\n    if (typeof data['latest-timestamp'] === 'undefined')\n      throw new Error(\n        `Response is missing required field 'latest-timestamp': ${data}`\n      );\n    if (typeof data['protocol-version'] === 'undefined')\n      throw new Error(\n        `Response is missing required field 'protocol-version': ${data}`\n      );\n    if (typeof data['round'] === 'undefined')\n      throw new Error(`Response is missing required field 'round': ${data}`);\n    if (!Array.isArray(data['sources']))\n      throw new Error(\n        `Response is missing required array field 'sources': ${data}`\n      );\n    if (!Array.isArray(data['txns']))\n      throw new Error(\n        `Response is missing required array field 'txns': ${data}`\n      );\n    return new DryrunRequest({\n      accounts: data['accounts'].map(Account.from_obj_for_encoding),\n      apps: data['apps'].map(Application.from_obj_for_encoding),\n      latestTimestamp: data['latest-timestamp'],\n      protocolVersion: data['protocol-version'],\n      round: data['round'],\n      sources: data['sources'].map(DryrunSource.from_obj_for_encoding),\n      txns: data['txns'],\n    });\n    /* eslint-enable dot-notation */\n  }\n}\n\n/**\n * DryrunResponse contains per-txn debug information from a dryrun.\n */\nexport class DryrunResponse extends BaseModel {\n  public error: string;\n\n  /**\n   * Protocol version is the protocol version Dryrun was operated under.\n   */\n  public protocolVersion: string;\n\n  public txns: DryrunTxnResult[];\n\n  /**\n   * Creates a new `DryrunResponse` object.\n   * @param error -\n   * @param protocolVersion - Protocol version is the protocol version Dryrun was operated under.\n   * @param txns -\n   */\n  constructor({\n    error,\n    protocolVersion,\n    txns,\n  }: {\n    error: string;\n    protocolVersion: string;\n    txns: DryrunTxnResult[];\n  }) {\n    super();\n    this.error = error;\n    this.protocolVersion = protocolVersion;\n    this.txns = txns;\n\n    this.attribute_map = {\n      error: 'error',\n      protocolVersion: 'protocol-version',\n      txns: 'txns',\n    };\n  }\n\n  // eslint-disable-next-line camelcase\n  static from_obj_for_encoding(data: Record<string, any>): DryrunResponse {\n    /* eslint-disable dot-notation */\n    if (typeof data['error'] === 'undefined')\n      throw new Error(`Response is missing required field 'error': ${data}`);\n    if (typeof data['protocol-version'] === 'undefined')\n      throw new Error(\n        `Response is missing required field 'protocol-version': ${data}`\n      );\n    if (!Array.isArray(data['txns']))\n      throw new Error(\n        `Response is missing required array field 'txns': ${data}`\n      );\n    return new DryrunResponse({\n      error: data['error'],\n      protocolVersion: data['protocol-version'],\n      txns: data['txns'].map(DryrunTxnResult.from_obj_for_encoding),\n    });\n    /* eslint-enable dot-notation */\n  }\n}\n\n/**\n * DryrunSource is TEAL source text that gets uploaded, compiled, and inserted into\n * transactions or application state.\n */\nexport class DryrunSource extends BaseModel {\n  /**\n   * FieldName is what kind of sources this is. If lsig then it goes into the\n   * transactions[this.TxnIndex].LogicSig. If approv or clearp it goes into the\n   * Approval Program or Clear State Program of application[this.AppIndex].\n   */\n  public fieldName: string;\n\n  public source: string;\n\n  public txnIndex: number | bigint;\n\n  public appIndex: number | bigint;\n\n  /**\n   * Creates a new `DryrunSource` object.\n   * @param fieldName - FieldName is what kind of sources this is. If lsig then it goes into the\n   * transactions[this.TxnIndex].LogicSig. If approv or clearp it goes into the\n   * Approval Program or Clear State Program of application[this.AppIndex].\n   * @param source -\n   * @param txnIndex -\n   * @param appIndex -\n   */\n  constructor({\n    fieldName,\n    source,\n    txnIndex,\n    appIndex,\n  }: {\n    fieldName: string;\n    source: string;\n    txnIndex: number | bigint;\n    appIndex: number | bigint;\n  }) {\n    super();\n    this.fieldName = fieldName;\n    this.source = source;\n    this.txnIndex = txnIndex;\n    this.appIndex = appIndex;\n\n    this.attribute_map = {\n      fieldName: 'field-name',\n      source: 'source',\n      txnIndex: 'txn-index',\n      appIndex: 'app-index',\n    };\n  }\n\n  // eslint-disable-next-line camelcase\n  static from_obj_for_encoding(data: Record<string, any>): DryrunSource {\n    /* eslint-disable dot-notation */\n    if (typeof data['field-name'] === 'undefined')\n      throw new Error(\n        `Response is missing required field 'field-name': ${data}`\n      );\n    if (typeof data['source'] === 'undefined')\n      throw new Error(`Response is missing required field 'source': ${data}`);\n    if (typeof data['txn-index'] === 'undefined')\n      throw new Error(\n        `Response is missing required field 'txn-index': ${data}`\n      );\n    if (typeof data['app-index'] === 'undefined')\n      throw new Error(\n        `Response is missing required field 'app-index': ${data}`\n      );\n    return new DryrunSource({\n      fieldName: data['field-name'],\n      source: data['source'],\n      txnIndex: data['txn-index'],\n      appIndex: data['app-index'],\n    });\n    /* eslint-enable dot-notation */\n  }\n}\n\n/**\n * Stores the TEAL eval step data\n */\nexport class DryrunState extends BaseModel {\n  /**\n   * Line number\n   */\n  public line: number | bigint;\n\n  /**\n   * Program counter\n   */\n  public pc: number | bigint;\n\n  public stack: TealValue[];\n\n  /**\n   * Evaluation error if any\n   */\n  public error?: string;\n\n  public scratch?: TealValue[];\n\n  /**\n   * Creates a new `DryrunState` object.\n   * @param line - Line number\n   * @param pc - Program counter\n   * @param stack -\n   * @param error - Evaluation error if any\n   * @param scratch -\n   */\n  constructor({\n    line,\n    pc,\n    stack,\n    error,\n    scratch,\n  }: {\n    line: number | bigint;\n    pc: number | bigint;\n    stack: TealValue[];\n    error?: string;\n    scratch?: TealValue[];\n  }) {\n    super();\n    this.line = line;\n    this.pc = pc;\n    this.stack = stack;\n    this.error = error;\n    this.scratch = scratch;\n\n    this.attribute_map = {\n      line: 'line',\n      pc: 'pc',\n      stack: 'stack',\n      error: 'error',\n      scratch: 'scratch',\n    };\n  }\n\n  // eslint-disable-next-line camelcase\n  static from_obj_for_encoding(data: Record<string, any>): DryrunState {\n    /* eslint-disable dot-notation */\n    if (typeof data['line'] === 'undefined')\n      throw new Error(`Response is missing required field 'line': ${data}`);\n    if (typeof data['pc'] === 'undefined')\n      throw new Error(`Response is missing required field 'pc': ${data}`);\n    if (!Array.isArray(data['stack']))\n      throw new Error(\n        `Response is missing required array field 'stack': ${data}`\n      );\n    return new DryrunState({\n      line: data['line'],\n      pc: data['pc'],\n      stack: data['stack'].map(TealValue.from_obj_for_encoding),\n      error: data['error'],\n      scratch:\n        typeof data['scratch'] !== 'undefined'\n          ? data['scratch'].map(TealValue.from_obj_for_encoding)\n          : undefined,\n    });\n    /* eslint-enable dot-notation */\n  }\n}\n\n/**\n * DryrunTxnResult contains any LogicSig or ApplicationCall program debug\n * information and state updates from a dryrun.\n */\nexport class DryrunTxnResult extends BaseModel {\n  /**\n   * Disassembled program line by line.\n   */\n  public disassembly: string[];\n\n  public appCallMessages?: string[];\n\n  public appCallTrace?: DryrunState[];\n\n  /**\n   * Budget added during execution of app call transaction.\n   */\n  public budgetAdded?: number | bigint;\n\n  /**\n   * Budget consumed during execution of app call transaction.\n   */\n  public budgetConsumed?: number | bigint;\n\n  /**\n   * Application state delta.\n   */\n  public globalDelta?: EvalDeltaKeyValue[];\n\n  public localDeltas?: AccountStateDelta[];\n\n  /**\n   * Disassembled lsig program line by line.\n   */\n  public logicSigDisassembly?: string[];\n\n  public logicSigMessages?: string[];\n\n  public logicSigTrace?: DryrunState[];\n\n  public logs?: Uint8Array[];\n\n  /**\n   * Creates a new `DryrunTxnResult` object.\n   * @param disassembly - Disassembled program line by line.\n   * @param appCallMessages -\n   * @param appCallTrace -\n   * @param budgetAdded - Budget added during execution of app call transaction.\n   * @param budgetConsumed - Budget consumed during execution of app call transaction.\n   * @param globalDelta - Application state delta.\n   * @param localDeltas -\n   * @param logicSigDisassembly - Disassembled lsig program line by line.\n   * @param logicSigMessages -\n   * @param logicSigTrace -\n   * @param logs -\n   */\n  constructor({\n    disassembly,\n    appCallMessages,\n    appCallTrace,\n    budgetAdded,\n    budgetConsumed,\n    globalDelta,\n    localDeltas,\n    logicSigDisassembly,\n    logicSigMessages,\n    logicSigTrace,\n    logs,\n  }: {\n    disassembly: string[];\n    appCallMessages?: string[];\n    appCallTrace?: DryrunState[];\n    budgetAdded?: number | bigint;\n    budgetConsumed?: number | bigint;\n    globalDelta?: EvalDeltaKeyValue[];\n    localDeltas?: AccountStateDelta[];\n    logicSigDisassembly?: string[];\n    logicSigMessages?: string[];\n    logicSigTrace?: DryrunState[];\n    logs?: Uint8Array[];\n  }) {\n    super();\n    this.disassembly = disassembly;\n    this.appCallMessages = appCallMessages;\n    this.appCallTrace = appCallTrace;\n    this.budgetAdded = budgetAdded;\n    this.budgetConsumed = budgetConsumed;\n    this.globalDelta = globalDelta;\n    this.localDeltas = localDeltas;\n    this.logicSigDisassembly = logicSigDisassembly;\n    this.logicSigMessages = logicSigMessages;\n    this.logicSigTrace = logicSigTrace;\n    this.logs = logs;\n\n    this.attribute_map = {\n      disassembly: 'disassembly',\n      appCallMessages: 'app-call-messages',\n      appCallTrace: 'app-call-trace',\n      budgetAdded: 'budget-added',\n      budgetConsumed: 'budget-consumed',\n      globalDelta: 'global-delta',\n      localDeltas: 'local-deltas',\n      logicSigDisassembly: 'logic-sig-disassembly',\n      logicSigMessages: 'logic-sig-messages',\n      logicSigTrace: 'logic-sig-trace',\n      logs: 'logs',\n    };\n  }\n\n  // eslint-disable-next-line camelcase\n  static from_obj_for_encoding(data: Record<string, any>): DryrunTxnResult {\n    /* eslint-disable dot-notation */\n    if (!Array.isArray(data['disassembly']))\n      throw new Error(\n        `Response is missing required array field 'disassembly': ${data}`\n      );\n    return new DryrunTxnResult({\n      disassembly: data['disassembly'],\n      appCallMessages: data['app-call-messages'],\n      appCallTrace:\n        typeof data['app-call-trace'] !== 'undefined'\n          ? data['app-call-trace'].map(DryrunState.from_obj_for_encoding)\n          : undefined,\n      budgetAdded: data['budget-added'],\n      budgetConsumed: data['budget-consumed'],\n      globalDelta:\n        typeof data['global-delta'] !== 'undefined'\n          ? data['global-delta'].map(EvalDeltaKeyValue.from_obj_for_encoding)\n          : undefined,\n      localDeltas:\n        typeof data['local-deltas'] !== 'undefined'\n          ? data['local-deltas'].map(AccountStateDelta.from_obj_for_encoding)\n          : undefined,\n      logicSigDisassembly: data['logic-sig-disassembly'],\n      logicSigMessages: data['logic-sig-messages'],\n      logicSigTrace:\n        typeof data['logic-sig-trace'] !== 'undefined'\n          ? data['logic-sig-trace'].map(DryrunState.from_obj_for_encoding)\n          : undefined,\n      logs: data['logs'],\n    });\n    /* eslint-enable dot-notation */\n  }\n}\n\n/**\n * An error response with optional data field.\n */\nexport class ErrorResponse extends BaseModel {\n  public message: string;\n\n  public data?: Record<string, any>;\n\n  /**\n   * Creates a new `ErrorResponse` object.\n   * @param message -\n   * @param data -\n   */\n  constructor({\n    message,\n    data,\n  }: {\n    message: string;\n    data?: Record<string, any>;\n  }) {\n    super();\n    this.message = message;\n    this.data = data;\n\n    this.attribute_map = {\n      message: 'message',\n      data: 'data',\n    };\n  }\n\n  // eslint-disable-next-line camelcase\n  static from_obj_for_encoding(data: Record<string, any>): ErrorResponse {\n    /* eslint-disable dot-notation */\n    if (typeof data['message'] === 'undefined')\n      throw new Error(`Response is missing required field 'message': ${data}`);\n    return new ErrorResponse({\n      message: data['message'],\n      data: data['data'],\n    });\n    /* eslint-enable dot-notation */\n  }\n}\n\n/**\n * Represents a TEAL value delta.\n */\nexport class EvalDelta extends BaseModel {\n  /**\n   * (at) delta action.\n   */\n  public action: number | bigint;\n\n  /**\n   * (bs) bytes value.\n   */\n  public bytes?: string;\n\n  /**\n   * (ui) uint value.\n   */\n  public uint?: number | bigint;\n\n  /**\n   * Creates a new `EvalDelta` object.\n   * @param action - (at) delta action.\n   * @param bytes - (bs) bytes value.\n   * @param uint - (ui) uint value.\n   */\n  constructor({\n    action,\n    bytes,\n    uint,\n  }: {\n    action: number | bigint;\n    bytes?: string;\n    uint?: number | bigint;\n  }) {\n    super();\n    this.action = action;\n    this.bytes = bytes;\n    this.uint = uint;\n\n    this.attribute_map = {\n      action: 'action',\n      bytes: 'bytes',\n      uint: 'uint',\n    };\n  }\n\n  // eslint-disable-next-line camelcase\n  static from_obj_for_encoding(data: Record<string, any>): EvalDelta {\n    /* eslint-disable dot-notation */\n    if (typeof data['action'] === 'undefined')\n      throw new Error(`Response is missing required field 'action': ${data}`);\n    return new EvalDelta({\n      action: data['action'],\n      bytes: data['bytes'],\n      uint: data['uint'],\n    });\n    /* eslint-enable dot-notation */\n  }\n}\n\n/**\n * Key-value pairs for StateDelta.\n */\nexport class EvalDeltaKeyValue extends BaseModel {\n  public key: string;\n\n  /**\n   * Represents a TEAL value delta.\n   */\n  public value: EvalDelta;\n\n  /**\n   * Creates a new `EvalDeltaKeyValue` object.\n   * @param key -\n   * @param value - Represents a TEAL value delta.\n   */\n  constructor({ key, value }: { key: string; value: EvalDelta }) {\n    super();\n    this.key = key;\n    this.value = value;\n\n    this.attribute_map = {\n      key: 'key',\n      value: 'value',\n    };\n  }\n\n  // eslint-disable-next-line camelcase\n  static from_obj_for_encoding(data: Record<string, any>): EvalDeltaKeyValue {\n    /* eslint-disable dot-notation */\n    if (typeof data['key'] === 'undefined')\n      throw new Error(`Response is missing required field 'key': ${data}`);\n    if (typeof data['value'] === 'undefined')\n      throw new Error(`Response is missing required field 'value': ${data}`);\n    return new EvalDeltaKeyValue({\n      key: data['key'],\n      value: EvalDelta.from_obj_for_encoding(data['value']),\n    });\n    /* eslint-enable dot-notation */\n  }\n}\n\n/**\n * Response containing the timestamp offset in seconds\n */\nexport class GetBlockTimeStampOffsetResponse extends BaseModel {\n  /**\n   * Timestamp offset in seconds.\n   */\n  public offset: number | bigint;\n\n  /**\n   * Creates a new `GetBlockTimeStampOffsetResponse` object.\n   * @param offset - Timestamp offset in seconds.\n   */\n  constructor({ offset }: { offset: number | bigint }) {\n    super();\n    this.offset = offset;\n\n    this.attribute_map = {\n      offset: 'offset',\n    };\n  }\n\n  // eslint-disable-next-line camelcase\n  static from_obj_for_encoding(\n    data: Record<string, any>\n  ): GetBlockTimeStampOffsetResponse {\n    /* eslint-disable dot-notation */\n    if (typeof data['offset'] === 'undefined')\n      throw new Error(`Response is missing required field 'offset': ${data}`);\n    return new GetBlockTimeStampOffsetResponse({\n      offset: data['offset'],\n    });\n    /* eslint-enable dot-notation */\n  }\n}\n\n/**\n * Response containing the ledger's minimum sync round\n */\nexport class GetSyncRoundResponse extends BaseModel {\n  /**\n   * The minimum sync round for the ledger.\n   */\n  public round: number | bigint;\n\n  /**\n   * Creates a new `GetSyncRoundResponse` object.\n   * @param round - The minimum sync round for the ledger.\n   */\n  constructor({ round }: { round: number | bigint }) {\n    super();\n    this.round = round;\n\n    this.attribute_map = {\n      round: 'round',\n    };\n  }\n\n  // eslint-disable-next-line camelcase\n  static from_obj_for_encoding(\n    data: Record<string, any>\n  ): GetSyncRoundResponse {\n    /* eslint-disable dot-notation */\n    if (typeof data['round'] === 'undefined')\n      throw new Error(`Response is missing required field 'round': ${data}`);\n    return new GetSyncRoundResponse({\n      round: data['round'],\n    });\n    /* eslint-enable dot-notation */\n  }\n}\n\n/**\n * A single Delta containing the key, the previous value and the current value for\n * a single round.\n */\nexport class KvDelta extends BaseModel {\n  /**\n   * The key, base64 encoded.\n   */\n  public key?: Uint8Array;\n\n  /**\n   * The new value of the KV store entry, base64 encoded.\n   */\n  public value?: Uint8Array;\n\n  /**\n   * Creates a new `KvDelta` object.\n   * @param key - The key, base64 encoded.\n   * @param value - The new value of the KV store entry, base64 encoded.\n   */\n  constructor({\n    key,\n    value,\n  }: {\n    key?: string | Uint8Array;\n    value?: string | Uint8Array;\n  }) {\n    super();\n    this.key =\n      typeof key === 'string'\n        ? new Uint8Array(Buffer.from(key, 'base64'))\n        : key;\n    this.value =\n      typeof value === 'string'\n        ? new Uint8Array(Buffer.from(value, 'base64'))\n        : value;\n\n    this.attribute_map = {\n      key: 'key',\n      value: 'value',\n    };\n  }\n\n  // eslint-disable-next-line camelcase\n  static from_obj_for_encoding(data: Record<string, any>): KvDelta {\n    /* eslint-disable dot-notation */\n    return new KvDelta({\n      key: data['key'],\n      value: data['value'],\n    });\n    /* eslint-enable dot-notation */\n  }\n}\n\n/**\n * Proof of membership and position of a light block header.\n */\nexport class LightBlockHeaderProof extends BaseModel {\n  /**\n   * The index of the light block header in the vector commitment tree\n   */\n  public index: number | bigint;\n\n  /**\n   * The encoded proof.\n   */\n  public proof: Uint8Array;\n\n  /**\n   * Represents the depth of the tree that is being proven, i.e. the number of edges\n   * from a leaf to the root.\n   */\n  public treedepth: number | bigint;\n\n  /**\n   * Creates a new `LightBlockHeaderProof` object.\n   * @param index - The index of the light block header in the vector commitment tree\n   * @param proof - The encoded proof.\n   * @param treedepth - Represents the depth of the tree that is being proven, i.e. the number of edges\n   * from a leaf to the root.\n   */\n  constructor({\n    index,\n    proof,\n    treedepth,\n  }: {\n    index: number | bigint;\n    proof: string | Uint8Array;\n    treedepth: number | bigint;\n  }) {\n    super();\n    this.index = index;\n    this.proof =\n      typeof proof === 'string'\n        ? new Uint8Array(Buffer.from(proof, 'base64'))\n        : proof;\n    this.treedepth = treedepth;\n\n    this.attribute_map = {\n      index: 'index',\n      proof: 'proof',\n      treedepth: 'treedepth',\n    };\n  }\n\n  // eslint-disable-next-line camelcase\n  static from_obj_for_encoding(\n    data: Record<string, any>\n  ): LightBlockHeaderProof {\n    /* eslint-disable dot-notation */\n    if (typeof data['index'] === 'undefined')\n      throw new Error(`Response is missing required field 'index': ${data}`);\n    if (typeof data['proof'] === 'undefined')\n      throw new Error(`Response is missing required field 'proof': ${data}`);\n    if (typeof data['treedepth'] === 'undefined')\n      throw new Error(\n        `Response is missing required field 'treedepth': ${data}`\n      );\n    return new LightBlockHeaderProof({\n      index: data['index'],\n      proof: data['proof'],\n      treedepth: data['treedepth'],\n    });\n    /* eslint-enable dot-notation */\n  }\n}\n\n/**\n *\n */\nexport class NodeStatusResponse extends BaseModel {\n  /**\n   * CatchupTime in nanoseconds\n   */\n  public catchupTime: number | bigint;\n\n  /**\n   * LastRound indicates the last round seen\n   */\n  public lastRound: number | bigint;\n\n  /**\n   * LastVersion indicates the last consensus version supported\n   */\n  public lastVersion: string;\n\n  /**\n   * NextVersion of consensus protocol to use\n   */\n  public nextVersion: string;\n\n  /**\n   * NextVersionRound is the round at which the next consensus version will apply\n   */\n  public nextVersionRound: number | bigint;\n\n  /**\n   * NextVersionSupported indicates whether the next consensus version is supported\n   * by this node\n   */\n  public nextVersionSupported: boolean;\n\n  /**\n   * StoppedAtUnsupportedRound indicates that the node does not support the new\n   * rounds and has stopped making progress\n   */\n  public stoppedAtUnsupportedRound: boolean;\n\n  /**\n   * TimeSinceLastRound in nanoseconds\n   */\n  public timeSinceLastRound: number | bigint;\n\n  /**\n   * The current catchpoint that is being caught up to\n   */\n  public catchpoint?: string;\n\n  /**\n   * The number of blocks that have already been obtained by the node as part of the\n   * catchup\n   */\n  public catchpointAcquiredBlocks?: number | bigint;\n\n  /**\n   * The number of accounts from the current catchpoint that have been processed so\n   * far as part of the catchup\n   */\n  public catchpointProcessedAccounts?: number | bigint;\n\n  /**\n   * The number of key-values (KVs) from the current catchpoint that have been\n   * processed so far as part of the catchup\n   */\n  public catchpointProcessedKvs?: number | bigint;\n\n  /**\n   * The total number of accounts included in the current catchpoint\n   */\n  public catchpointTotalAccounts?: number | bigint;\n\n  /**\n   * The total number of blocks that are required to complete the current catchpoint\n   * catchup\n   */\n  public catchpointTotalBlocks?: number | bigint;\n\n  /**\n   * The total number of key-values (KVs) included in the current catchpoint\n   */\n  public catchpointTotalKvs?: number | bigint;\n\n  /**\n   * The number of accounts from the current catchpoint that have been verified so\n   * far as part of the catchup\n   */\n  public catchpointVerifiedAccounts?: number | bigint;\n\n  /**\n   * The number of key-values (KVs) from the current catchpoint that have been\n   * verified so far as part of the catchup\n   */\n  public catchpointVerifiedKvs?: number | bigint;\n\n  /**\n   * The last catchpoint seen by the node\n   */\n  public lastCatchpoint?: string;\n\n  /**\n   * Upgrade delay\n   */\n  public upgradeDelay?: number | bigint;\n\n  /**\n   * Next protocol round\n   */\n  public upgradeNextProtocolVoteBefore?: number | bigint;\n\n  /**\n   * No votes cast for consensus upgrade\n   */\n  public upgradeNoVotes?: number | bigint;\n\n  /**\n   * This node's upgrade vote\n   */\n  public upgradeNodeVote?: boolean;\n\n  /**\n   * Total voting rounds for current upgrade\n   */\n  public upgradeVoteRounds?: number | bigint;\n\n  /**\n   * Total votes cast for consensus upgrade\n   */\n  public upgradeVotes?: number | bigint;\n\n  /**\n   * Yes votes required for consensus upgrade\n   */\n  public upgradeVotesRequired?: number | bigint;\n\n  /**\n   * Yes votes cast for consensus upgrade\n   */\n  public upgradeYesVotes?: number | bigint;\n\n  /**\n   * Creates a new `NodeStatusResponse` object.\n   * @param catchupTime - CatchupTime in nanoseconds\n   * @param lastRound - LastRound indicates the last round seen\n   * @param lastVersion - LastVersion indicates the last consensus version supported\n   * @param nextVersion - NextVersion of consensus protocol to use\n   * @param nextVersionRound - NextVersionRound is the round at which the next consensus version will apply\n   * @param nextVersionSupported - NextVersionSupported indicates whether the next consensus version is supported\n   * by this node\n   * @param stoppedAtUnsupportedRound - StoppedAtUnsupportedRound indicates that the node does not support the new\n   * rounds and has stopped making progress\n   * @param timeSinceLastRound - TimeSinceLastRound in nanoseconds\n   * @param catchpoint - The current catchpoint that is being caught up to\n   * @param catchpointAcquiredBlocks - The number of blocks that have already been obtained by the node as part of the\n   * catchup\n   * @param catchpointProcessedAccounts - The number of accounts from the current catchpoint that have been processed so\n   * far as part of the catchup\n   * @param catchpointProcessedKvs - The number of key-values (KVs) from the current catchpoint that have been\n   * processed so far as part of the catchup\n   * @param catchpointTotalAccounts - The total number of accounts included in the current catchpoint\n   * @param catchpointTotalBlocks - The total number of blocks that are required to complete the current catchpoint\n   * catchup\n   * @param catchpointTotalKvs - The total number of key-values (KVs) included in the current catchpoint\n   * @param catchpointVerifiedAccounts - The number of accounts from the current catchpoint that have been verified so\n   * far as part of the catchup\n   * @param catchpointVerifiedKvs - The number of key-values (KVs) from the current catchpoint that have been\n   * verified so far as part of the catchup\n   * @param lastCatchpoint - The last catchpoint seen by the node\n   * @param upgradeDelay - Upgrade delay\n   * @param upgradeNextProtocolVoteBefore - Next protocol round\n   * @param upgradeNoVotes - No votes cast for consensus upgrade\n   * @param upgradeNodeVote - This node's upgrade vote\n   * @param upgradeVoteRounds - Total voting rounds for current upgrade\n   * @param upgradeVotes - Total votes cast for consensus upgrade\n   * @param upgradeVotesRequired - Yes votes required for consensus upgrade\n   * @param upgradeYesVotes - Yes votes cast for consensus upgrade\n   */\n  constructor({\n    catchupTime,\n    lastRound,\n    lastVersion,\n    nextVersion,\n    nextVersionRound,\n    nextVersionSupported,\n    stoppedAtUnsupportedRound,\n    timeSinceLastRound,\n    catchpoint,\n    catchpointAcquiredBlocks,\n    catchpointProcessedAccounts,\n    catchpointProcessedKvs,\n    catchpointTotalAccounts,\n    catchpointTotalBlocks,\n    catchpointTotalKvs,\n    catchpointVerifiedAccounts,\n    catchpointVerifiedKvs,\n    lastCatchpoint,\n    upgradeDelay,\n    upgradeNextProtocolVoteBefore,\n    upgradeNoVotes,\n    upgradeNodeVote,\n    upgradeVoteRounds,\n    upgradeVotes,\n    upgradeVotesRequired,\n    upgradeYesVotes,\n  }: {\n    catchupTime: number | bigint;\n    lastRound: number | bigint;\n    lastVersion: string;\n    nextVersion: string;\n    nextVersionRound: number | bigint;\n    nextVersionSupported: boolean;\n    stoppedAtUnsupportedRound: boolean;\n    timeSinceLastRound: number | bigint;\n    catchpoint?: string;\n    catchpointAcquiredBlocks?: number | bigint;\n    catchpointProcessedAccounts?: number | bigint;\n    catchpointProcessedKvs?: number | bigint;\n    catchpointTotalAccounts?: number | bigint;\n    catchpointTotalBlocks?: number | bigint;\n    catchpointTotalKvs?: number | bigint;\n    catchpointVerifiedAccounts?: number | bigint;\n    catchpointVerifiedKvs?: number | bigint;\n    lastCatchpoint?: string;\n    upgradeDelay?: number | bigint;\n    upgradeNextProtocolVoteBefore?: number | bigint;\n    upgradeNoVotes?: number | bigint;\n    upgradeNodeVote?: boolean;\n    upgradeVoteRounds?: number | bigint;\n    upgradeVotes?: number | bigint;\n    upgradeVotesRequired?: number | bigint;\n    upgradeYesVotes?: number | bigint;\n  }) {\n    super();\n    this.catchupTime = catchupTime;\n    this.lastRound = lastRound;\n    this.lastVersion = lastVersion;\n    this.nextVersion = nextVersion;\n    this.nextVersionRound = nextVersionRound;\n    this.nextVersionSupported = nextVersionSupported;\n    this.stoppedAtUnsupportedRound = stoppedAtUnsupportedRound;\n    this.timeSinceLastRound = timeSinceLastRound;\n    this.catchpoint = catchpoint;\n    this.catchpointAcquiredBlocks = catchpointAcquiredBlocks;\n    this.catchpointProcessedAccounts = catchpointProcessedAccounts;\n    this.catchpointProcessedKvs = catchpointProcessedKvs;\n    this.catchpointTotalAccounts = catchpointTotalAccounts;\n    this.catchpointTotalBlocks = catchpointTotalBlocks;\n    this.catchpointTotalKvs = catchpointTotalKvs;\n    this.catchpointVerifiedAccounts = catchpointVerifiedAccounts;\n    this.catchpointVerifiedKvs = catchpointVerifiedKvs;\n    this.lastCatchpoint = lastCatchpoint;\n    this.upgradeDelay = upgradeDelay;\n    this.upgradeNextProtocolVoteBefore = upgradeNextProtocolVoteBefore;\n    this.upgradeNoVotes = upgradeNoVotes;\n    this.upgradeNodeVote = upgradeNodeVote;\n    this.upgradeVoteRounds = upgradeVoteRounds;\n    this.upgradeVotes = upgradeVotes;\n    this.upgradeVotesRequired = upgradeVotesRequired;\n    this.upgradeYesVotes = upgradeYesVotes;\n\n    this.attribute_map = {\n      catchupTime: 'catchup-time',\n      lastRound: 'last-round',\n      lastVersion: 'last-version',\n      nextVersion: 'next-version',\n      nextVersionRound: 'next-version-round',\n      nextVersionSupported: 'next-version-supported',\n      stoppedAtUnsupportedRound: 'stopped-at-unsupported-round',\n      timeSinceLastRound: 'time-since-last-round',\n      catchpoint: 'catchpoint',\n      catchpointAcquiredBlocks: 'catchpoint-acquired-blocks',\n      catchpointProcessedAccounts: 'catchpoint-processed-accounts',\n      catchpointProcessedKvs: 'catchpoint-processed-kvs',\n      catchpointTotalAccounts: 'catchpoint-total-accounts',\n      catchpointTotalBlocks: 'catchpoint-total-blocks',\n      catchpointTotalKvs: 'catchpoint-total-kvs',\n      catchpointVerifiedAccounts: 'catchpoint-verified-accounts',\n      catchpointVerifiedKvs: 'catchpoint-verified-kvs',\n      lastCatchpoint: 'last-catchpoint',\n      upgradeDelay: 'upgrade-delay',\n      upgradeNextProtocolVoteBefore: 'upgrade-next-protocol-vote-before',\n      upgradeNoVotes: 'upgrade-no-votes',\n      upgradeNodeVote: 'upgrade-node-vote',\n      upgradeVoteRounds: 'upgrade-vote-rounds',\n      upgradeVotes: 'upgrade-votes',\n      upgradeVotesRequired: 'upgrade-votes-required',\n      upgradeYesVotes: 'upgrade-yes-votes',\n    };\n  }\n\n  // eslint-disable-next-line camelcase\n  static from_obj_for_encoding(data: Record<string, any>): NodeStatusResponse {\n    /* eslint-disable dot-notation */\n    if (typeof data['catchup-time'] === 'undefined')\n      throw new Error(\n        `Response is missing required field 'catchup-time': ${data}`\n      );\n    if (typeof data['last-round'] === 'undefined')\n      throw new Error(\n        `Response is missing required field 'last-round': ${data}`\n      );\n    if (typeof data['last-version'] === 'undefined')\n      throw new Error(\n        `Response is missing required field 'last-version': ${data}`\n      );\n    if (typeof data['next-version'] === 'undefined')\n      throw new Error(\n        `Response is missing required field 'next-version': ${data}`\n      );\n    if (typeof data['next-version-round'] === 'undefined')\n      throw new Error(\n        `Response is missing required field 'next-version-round': ${data}`\n      );\n    if (typeof data['next-version-supported'] === 'undefined')\n      throw new Error(\n        `Response is missing required field 'next-version-supported': ${data}`\n      );\n    if (typeof data['stopped-at-unsupported-round'] === 'undefined')\n      throw new Error(\n        `Response is missing required field 'stopped-at-unsupported-round': ${data}`\n      );\n    if (typeof data['time-since-last-round'] === 'undefined')\n      throw new Error(\n        `Response is missing required field 'time-since-last-round': ${data}`\n      );\n    return new NodeStatusResponse({\n      catchupTime: data['catchup-time'],\n      lastRound: data['last-round'],\n      lastVersion: data['last-version'],\n      nextVersion: data['next-version'],\n      nextVersionRound: data['next-version-round'],\n      nextVersionSupported: data['next-version-supported'],\n      stoppedAtUnsupportedRound: data['stopped-at-unsupported-round'],\n      timeSinceLastRound: data['time-since-last-round'],\n      catchpoint: data['catchpoint'],\n      catchpointAcquiredBlocks: data['catchpoint-acquired-blocks'],\n      catchpointProcessedAccounts: data['catchpoint-processed-accounts'],\n      catchpointProcessedKvs: data['catchpoint-processed-kvs'],\n      catchpointTotalAccounts: data['catchpoint-total-accounts'],\n      catchpointTotalBlocks: data['catchpoint-total-blocks'],\n      catchpointTotalKvs: data['catchpoint-total-kvs'],\n      catchpointVerifiedAccounts: data['catchpoint-verified-accounts'],\n      catchpointVerifiedKvs: data['catchpoint-verified-kvs'],\n      lastCatchpoint: data['last-catchpoint'],\n      upgradeDelay: data['upgrade-delay'],\n      upgradeNextProtocolVoteBefore: data['upgrade-next-protocol-vote-before'],\n      upgradeNoVotes: data['upgrade-no-votes'],\n      upgradeNodeVote: data['upgrade-node-vote'],\n      upgradeVoteRounds: data['upgrade-vote-rounds'],\n      upgradeVotes: data['upgrade-votes'],\n      upgradeVotesRequired: data['upgrade-votes-required'],\n      upgradeYesVotes: data['upgrade-yes-votes'],\n    });\n    /* eslint-enable dot-notation */\n  }\n}\n\n/**\n * Details about a pending transaction. If the transaction was recently confirmed,\n * includes confirmation details like the round and reward details.\n */\nexport class PendingTransactionResponse extends BaseModel {\n  /**\n   * Indicates that the transaction was kicked out of this node's transaction pool\n   * (and specifies why that happened). An empty string indicates the transaction\n   * wasn't kicked out of this node's txpool due to an error.\n   */\n  public poolError: string;\n\n  /**\n   * The raw signed transaction.\n   */\n  public txn: EncodedSignedTransaction;\n\n  /**\n   * The application index if the transaction was found and it created an\n   * application.\n   */\n  public applicationIndex?: number | bigint;\n\n  /**\n   * The number of the asset's unit that were transferred to the close-to address.\n   */\n  public assetClosingAmount?: number | bigint;\n\n  /**\n   * The asset index if the transaction was found and it created an asset.\n   */\n  public assetIndex?: number | bigint;\n\n  /**\n   * Rewards in microalgos applied to the close remainder to account.\n   */\n  public closeRewards?: number | bigint;\n\n  /**\n   * Closing amount for the transaction.\n   */\n  public closingAmount?: number | bigint;\n\n  /**\n   * The round where this transaction was confirmed, if present.\n   */\n  public confirmedRound?: number | bigint;\n\n  /**\n   * Global state key/value changes for the application being executed by this\n   * transaction.\n   */\n  public globalStateDelta?: EvalDeltaKeyValue[];\n\n  /**\n   * Inner transactions produced by application execution.\n   */\n  public innerTxns?: PendingTransactionResponse[];\n\n  /**\n   * Local state key/value changes for the application being executed by this\n   * transaction.\n   */\n  public localStateDelta?: AccountStateDelta[];\n\n  /**\n   * Logs for the application being executed by this transaction.\n   */\n  public logs?: Uint8Array[];\n\n  /**\n   * Rewards in microalgos applied to the receiver account.\n   */\n  public receiverRewards?: number | bigint;\n\n  /**\n   * Rewards in microalgos applied to the sender account.\n   */\n  public senderRewards?: number | bigint;\n\n  /**\n   * Creates a new `PendingTransactionResponse` object.\n   * @param poolError - Indicates that the transaction was kicked out of this node's transaction pool\n   * (and specifies why that happened). An empty string indicates the transaction\n   * wasn't kicked out of this node's txpool due to an error.\n   * @param txn - The raw signed transaction.\n   * @param applicationIndex - The application index if the transaction was found and it created an\n   * application.\n   * @param assetClosingAmount - The number of the asset's unit that were transferred to the close-to address.\n   * @param assetIndex - The asset index if the transaction was found and it created an asset.\n   * @param closeRewards - Rewards in microalgos applied to the close remainder to account.\n   * @param closingAmount - Closing amount for the transaction.\n   * @param confirmedRound - The round where this transaction was confirmed, if present.\n   * @param globalStateDelta - Global state key/value changes for the application being executed by this\n   * transaction.\n   * @param innerTxns - Inner transactions produced by application execution.\n   * @param localStateDelta - Local state key/value changes for the application being executed by this\n   * transaction.\n   * @param logs - Logs for the application being executed by this transaction.\n   * @param receiverRewards - Rewards in microalgos applied to the receiver account.\n   * @param senderRewards - Rewards in microalgos applied to the sender account.\n   */\n  constructor({\n    poolError,\n    txn,\n    applicationIndex,\n    assetClosingAmount,\n    assetIndex,\n    closeRewards,\n    closingAmount,\n    confirmedRound,\n    globalStateDelta,\n    innerTxns,\n    localStateDelta,\n    logs,\n    receiverRewards,\n    senderRewards,\n  }: {\n    poolError: string;\n    txn: EncodedSignedTransaction;\n    applicationIndex?: number | bigint;\n    assetClosingAmount?: number | bigint;\n    assetIndex?: number | bigint;\n    closeRewards?: number | bigint;\n    closingAmount?: number | bigint;\n    confirmedRound?: number | bigint;\n    globalStateDelta?: EvalDeltaKeyValue[];\n    innerTxns?: PendingTransactionResponse[];\n    localStateDelta?: AccountStateDelta[];\n    logs?: Uint8Array[];\n    receiverRewards?: number | bigint;\n    senderRewards?: number | bigint;\n  }) {\n    super();\n    this.poolError = poolError;\n    this.txn = txn;\n    this.applicationIndex = applicationIndex;\n    this.assetClosingAmount = assetClosingAmount;\n    this.assetIndex = assetIndex;\n    this.closeRewards = closeRewards;\n    this.closingAmount = closingAmount;\n    this.confirmedRound = confirmedRound;\n    this.globalStateDelta = globalStateDelta;\n    this.innerTxns = innerTxns;\n    this.localStateDelta = localStateDelta;\n    this.logs = logs;\n    this.receiverRewards = receiverRewards;\n    this.senderRewards = senderRewards;\n\n    this.attribute_map = {\n      poolError: 'pool-error',\n      txn: 'txn',\n      applicationIndex: 'application-index',\n      assetClosingAmount: 'asset-closing-amount',\n      assetIndex: 'asset-index',\n      closeRewards: 'close-rewards',\n      closingAmount: 'closing-amount',\n      confirmedRound: 'confirmed-round',\n      globalStateDelta: 'global-state-delta',\n      innerTxns: 'inner-txns',\n      localStateDelta: 'local-state-delta',\n      logs: 'logs',\n      receiverRewards: 'receiver-rewards',\n      senderRewards: 'sender-rewards',\n    };\n  }\n\n  // eslint-disable-next-line camelcase\n  static from_obj_for_encoding(\n    data: Record<string, any>\n  ): PendingTransactionResponse {\n    /* eslint-disable dot-notation */\n    if (typeof data['pool-error'] === 'undefined')\n      throw new Error(\n        `Response is missing required field 'pool-error': ${data}`\n      );\n    if (typeof data['txn'] === 'undefined')\n      throw new Error(`Response is missing required field 'txn': ${data}`);\n    return new PendingTransactionResponse({\n      poolError: data['pool-error'],\n      txn: data['txn'],\n      applicationIndex: data['application-index'],\n      assetClosingAmount: data['asset-closing-amount'],\n      assetIndex: data['asset-index'],\n      closeRewards: data['close-rewards'],\n      closingAmount: data['closing-amount'],\n      confirmedRound: data['confirmed-round'],\n      globalStateDelta:\n        typeof data['global-state-delta'] !== 'undefined'\n          ? data['global-state-delta'].map(\n              EvalDeltaKeyValue.from_obj_for_encoding\n            )\n          : undefined,\n      innerTxns:\n        typeof data['inner-txns'] !== 'undefined'\n          ? data['inner-txns'].map(\n              PendingTransactionResponse.from_obj_for_encoding\n            )\n          : undefined,\n      localStateDelta:\n        typeof data['local-state-delta'] !== 'undefined'\n          ? data['local-state-delta'].map(\n              AccountStateDelta.from_obj_for_encoding\n            )\n          : undefined,\n      logs: data['logs'],\n      receiverRewards: data['receiver-rewards'],\n      senderRewards: data['sender-rewards'],\n    });\n    /* eslint-enable dot-notation */\n  }\n}\n\n/**\n * A potentially truncated list of transactions currently in the node's transaction\n * pool. You can compute whether or not the list is truncated if the number of\n * elements in the **top-transactions** array is fewer than **total-transactions**.\n */\nexport class PendingTransactionsResponse extends BaseModel {\n  /**\n   * An array of signed transaction objects.\n   */\n  public topTransactions: EncodedSignedTransaction[];\n\n  /**\n   * Total number of transactions in the pool.\n   */\n  public totalTransactions: number | bigint;\n\n  /**\n   * Creates a new `PendingTransactionsResponse` object.\n   * @param topTransactions - An array of signed transaction objects.\n   * @param totalTransactions - Total number of transactions in the pool.\n   */\n  constructor({\n    topTransactions,\n    totalTransactions,\n  }: {\n    topTransactions: EncodedSignedTransaction[];\n    totalTransactions: number | bigint;\n  }) {\n    super();\n    this.topTransactions = topTransactions;\n    this.totalTransactions = totalTransactions;\n\n    this.attribute_map = {\n      topTransactions: 'top-transactions',\n      totalTransactions: 'total-transactions',\n    };\n  }\n\n  // eslint-disable-next-line camelcase\n  static from_obj_for_encoding(\n    data: Record<string, any>\n  ): PendingTransactionsResponse {\n    /* eslint-disable dot-notation */\n    if (!Array.isArray(data['top-transactions']))\n      throw new Error(\n        `Response is missing required array field 'top-transactions': ${data}`\n      );\n    if (typeof data['total-transactions'] === 'undefined')\n      throw new Error(\n        `Response is missing required field 'total-transactions': ${data}`\n      );\n    return new PendingTransactionsResponse({\n      topTransactions: data['top-transactions'],\n      totalTransactions: data['total-transactions'],\n    });\n    /* eslint-enable dot-notation */\n  }\n}\n\n/**\n * Transaction ID of the submission.\n */\nexport class PostTransactionsResponse extends BaseModel {\n  /**\n   * encoding of the transaction hash.\n   */\n  public txid: string;\n\n  /**\n   * Creates a new `PostTransactionsResponse` object.\n   * @param txid - encoding of the transaction hash.\n   */\n  constructor({ txid }: { txid: string }) {\n    super();\n    this.txid = txid;\n\n    this.attribute_map = {\n      txid: 'txId',\n    };\n  }\n\n  // eslint-disable-next-line camelcase\n  static from_obj_for_encoding(\n    data: Record<string, any>\n  ): PostTransactionsResponse {\n    /* eslint-disable dot-notation */\n    if (typeof data['txId'] === 'undefined')\n      throw new Error(`Response is missing required field 'txId': ${data}`);\n    return new PostTransactionsResponse({\n      txid: data['txId'],\n    });\n    /* eslint-enable dot-notation */\n  }\n}\n\n/**\n * Request type for simulation endpoint.\n */\nexport class SimulateRequest extends BaseModel {\n  /**\n   * The transaction groups to simulate.\n   */\n  public txnGroups: SimulateRequestTransactionGroup[];\n\n  /**\n   * Allow transactions without signatures to be simulated as if they had correct\n   * signatures.\n   */\n  public allowEmptySignatures?: boolean;\n\n  /**\n   * Lifts limits on log opcode usage during simulation.\n   */\n  public allowMoreLogging?: boolean;\n\n  /**\n   * Creates a new `SimulateRequest` object.\n   * @param txnGroups - The transaction groups to simulate.\n   * @param allowEmptySignatures - Allow transactions without signatures to be simulated as if they had correct\n   * signatures.\n   * @param allowMoreLogging - Lifts limits on log opcode usage during simulation.\n   */\n  constructor({\n    txnGroups,\n    allowEmptySignatures,\n    allowMoreLogging,\n  }: {\n    txnGroups: SimulateRequestTransactionGroup[];\n    allowEmptySignatures?: boolean;\n    allowMoreLogging?: boolean;\n  }) {\n    super();\n    this.txnGroups = txnGroups;\n    this.allowEmptySignatures = allowEmptySignatures;\n    this.allowMoreLogging = allowMoreLogging;\n\n    this.attribute_map = {\n      txnGroups: 'txn-groups',\n      allowEmptySignatures: 'allow-empty-signatures',\n      allowMoreLogging: 'allow-more-logging',\n    };\n  }\n\n  // eslint-disable-next-line camelcase\n  static from_obj_for_encoding(data: Record<string, any>): SimulateRequest {\n    /* eslint-disable dot-notation */\n    if (!Array.isArray(data['txn-groups']))\n      throw new Error(\n        `Response is missing required array field 'txn-groups': ${data}`\n      );\n    return new SimulateRequest({\n      txnGroups: data['txn-groups'].map(\n        SimulateRequestTransactionGroup.from_obj_for_encoding\n      ),\n      allowEmptySignatures: data['allow-empty-signatures'],\n      allowMoreLogging: data['allow-more-logging'],\n    });\n    /* eslint-enable dot-notation */\n  }\n}\n\n/**\n * A transaction group to simulate.\n */\nexport class SimulateRequestTransactionGroup extends BaseModel {\n  /**\n   * An atomic transaction group.\n   */\n  public txns: EncodedSignedTransaction[];\n\n  /**\n   * Creates a new `SimulateRequestTransactionGroup` object.\n   * @param txns - An atomic transaction group.\n   */\n  constructor({ txns }: { txns: EncodedSignedTransaction[] }) {\n    super();\n    this.txns = txns;\n\n    this.attribute_map = {\n      txns: 'txns',\n    };\n  }\n\n  // eslint-disable-next-line camelcase\n  static from_obj_for_encoding(\n    data: Record<string, any>\n  ): SimulateRequestTransactionGroup {\n    /* eslint-disable dot-notation */\n    if (!Array.isArray(data['txns']))\n      throw new Error(\n        `Response is missing required array field 'txns': ${data}`\n      );\n    return new SimulateRequestTransactionGroup({\n      txns: data['txns'],\n    });\n    /* eslint-enable dot-notation */\n  }\n}\n\n/**\n * Result of a transaction group simulation.\n */\nexport class SimulateResponse extends BaseModel {\n  /**\n   * The round immediately preceding this simulation. State changes through this\n   * round were used to run this simulation.\n   */\n  public lastRound: number | bigint;\n\n  /**\n   * A result object for each transaction group that was simulated.\n   */\n  public txnGroups: SimulateTransactionGroupResult[];\n\n  /**\n   * The version of this response object.\n   */\n  public version: number | bigint;\n\n  /**\n   * The set of parameters and limits override during simulation. If this set of\n   * parameters is present, then evaluation parameters may differ from standard\n   * evaluation in certain ways.\n   */\n  public evalOverrides?: SimulationEvalOverrides;\n\n  /**\n   * Creates a new `SimulateResponse` object.\n   * @param lastRound - The round immediately preceding this simulation. State changes through this\n   * round were used to run this simulation.\n   * @param txnGroups - A result object for each transaction group that was simulated.\n   * @param version - The version of this response object.\n   * @param evalOverrides - The set of parameters and limits override during simulation. If this set of\n   * parameters is present, then evaluation parameters may differ from standard\n   * evaluation in certain ways.\n   */\n  constructor({\n    lastRound,\n    txnGroups,\n    version,\n    evalOverrides,\n  }: {\n    lastRound: number | bigint;\n    txnGroups: SimulateTransactionGroupResult[];\n    version: number | bigint;\n    evalOverrides?: SimulationEvalOverrides;\n  }) {\n    super();\n    this.lastRound = lastRound;\n    this.txnGroups = txnGroups;\n    this.version = version;\n    this.evalOverrides = evalOverrides;\n\n    this.attribute_map = {\n      lastRound: 'last-round',\n      txnGroups: 'txn-groups',\n      version: 'version',\n      evalOverrides: 'eval-overrides',\n    };\n  }\n\n  // eslint-disable-next-line camelcase\n  static from_obj_for_encoding(data: Record<string, any>): SimulateResponse {\n    /* eslint-disable dot-notation */\n    if (typeof data['last-round'] === 'undefined')\n      throw new Error(\n        `Response is missing required field 'last-round': ${data}`\n      );\n    if (!Array.isArray(data['txn-groups']))\n      throw new Error(\n        `Response is missing required array field 'txn-groups': ${data}`\n      );\n    if (typeof data['version'] === 'undefined')\n      throw new Error(`Response is missing required field 'version': ${data}`);\n    return new SimulateResponse({\n      lastRound: data['last-round'],\n      txnGroups: data['txn-groups'].map(\n        SimulateTransactionGroupResult.from_obj_for_encoding\n      ),\n      version: data['version'],\n      evalOverrides:\n        typeof data['eval-overrides'] !== 'undefined'\n          ? SimulationEvalOverrides.from_obj_for_encoding(\n              data['eval-overrides']\n            )\n          : undefined,\n    });\n    /* eslint-enable dot-notation */\n  }\n}\n\n/**\n * Simulation result for an atomic transaction group\n */\nexport class SimulateTransactionGroupResult extends BaseModel {\n  /**\n   * Simulation result for individual transactions\n   */\n  public txnResults: SimulateTransactionResult[];\n\n  /**\n   * Total budget added during execution of app calls in the transaction group.\n   */\n  public appBudgetAdded?: number | bigint;\n\n  /**\n   * Total budget consumed during execution of app calls in the transaction group.\n   */\n  public appBudgetConsumed?: number | bigint;\n\n  /**\n   * If present, indicates which transaction in this group caused the failure. This\n   * array represents the path to the failing transaction. Indexes are zero based,\n   * the first element indicates the top-level transaction, and successive elements\n   * indicate deeper inner transactions.\n   */\n  public failedAt?: (number | bigint)[];\n\n  /**\n   * If present, indicates that the transaction group failed and specifies why that\n   * happened\n   */\n  public failureMessage?: string;\n\n  /**\n   * Creates a new `SimulateTransactionGroupResult` object.\n   * @param txnResults - Simulation result for individual transactions\n   * @param appBudgetAdded - Total budget added during execution of app calls in the transaction group.\n   * @param appBudgetConsumed - Total budget consumed during execution of app calls in the transaction group.\n   * @param failedAt - If present, indicates which transaction in this group caused the failure. This\n   * array represents the path to the failing transaction. Indexes are zero based,\n   * the first element indicates the top-level transaction, and successive elements\n   * indicate deeper inner transactions.\n   * @param failureMessage - If present, indicates that the transaction group failed and specifies why that\n   * happened\n   */\n  constructor({\n    txnResults,\n    appBudgetAdded,\n    appBudgetConsumed,\n    failedAt,\n    failureMessage,\n  }: {\n    txnResults: SimulateTransactionResult[];\n    appBudgetAdded?: number | bigint;\n    appBudgetConsumed?: number | bigint;\n    failedAt?: (number | bigint)[];\n    failureMessage?: string;\n  }) {\n    super();\n    this.txnResults = txnResults;\n    this.appBudgetAdded = appBudgetAdded;\n    this.appBudgetConsumed = appBudgetConsumed;\n    this.failedAt = failedAt;\n    this.failureMessage = failureMessage;\n\n    this.attribute_map = {\n      txnResults: 'txn-results',\n      appBudgetAdded: 'app-budget-added',\n      appBudgetConsumed: 'app-budget-consumed',\n      failedAt: 'failed-at',\n      failureMessage: 'failure-message',\n    };\n  }\n\n  // eslint-disable-next-line camelcase\n  static from_obj_for_encoding(\n    data: Record<string, any>\n  ): SimulateTransactionGroupResult {\n    /* eslint-disable dot-notation */\n    if (!Array.isArray(data['txn-results']))\n      throw new Error(\n        `Response is missing required array field 'txn-results': ${data}`\n      );\n    return new SimulateTransactionGroupResult({\n      txnResults: data['txn-results'].map(\n        SimulateTransactionResult.from_obj_for_encoding\n      ),\n      appBudgetAdded: data['app-budget-added'],\n      appBudgetConsumed: data['app-budget-consumed'],\n      failedAt: data['failed-at'],\n      failureMessage: data['failure-message'],\n    });\n    /* eslint-enable dot-notation */\n  }\n}\n\n/**\n * Simulation result for an individual transaction\n */\nexport class SimulateTransactionResult extends BaseModel {\n  /**\n   * Details about a pending transaction. If the transaction was recently confirmed,\n   * includes confirmation details like the round and reward details.\n   */\n  public txnResult: PendingTransactionResponse;\n\n  /**\n   * Budget used during execution of an app call transaction. This value includes\n   * budged used by inner app calls spawned by this transaction.\n   */\n  public appBudgetConsumed?: number | bigint;\n\n  /**\n   * Budget used during execution of a logic sig transaction.\n   */\n  public logicSigBudgetConsumed?: number | bigint;\n\n  /**\n   * Creates a new `SimulateTransactionResult` object.\n   * @param txnResult - Details about a pending transaction. If the transaction was recently confirmed,\n   * includes confirmation details like the round and reward details.\n   * @param appBudgetConsumed - Budget used during execution of an app call transaction. This value includes\n   * budged used by inner app calls spawned by this transaction.\n   * @param logicSigBudgetConsumed - Budget used during execution of a logic sig transaction.\n   */\n  constructor({\n    txnResult,\n    appBudgetConsumed,\n    logicSigBudgetConsumed,\n  }: {\n    txnResult: PendingTransactionResponse;\n    appBudgetConsumed?: number | bigint;\n    logicSigBudgetConsumed?: number | bigint;\n  }) {\n    super();\n    this.txnResult = txnResult;\n    this.appBudgetConsumed = appBudgetConsumed;\n    this.logicSigBudgetConsumed = logicSigBudgetConsumed;\n\n    this.attribute_map = {\n      txnResult: 'txn-result',\n      appBudgetConsumed: 'app-budget-consumed',\n      logicSigBudgetConsumed: 'logic-sig-budget-consumed',\n    };\n  }\n\n  // eslint-disable-next-line camelcase\n  static from_obj_for_encoding(\n    data: Record<string, any>\n  ): SimulateTransactionResult {\n    /* eslint-disable dot-notation */\n    if (typeof data['txn-result'] === 'undefined')\n      throw new Error(\n        `Response is missing required field 'txn-result': ${data}`\n      );\n    return new SimulateTransactionResult({\n      txnResult: PendingTransactionResponse.from_obj_for_encoding(\n        data['txn-result']\n      ),\n      appBudgetConsumed: data['app-budget-consumed'],\n      logicSigBudgetConsumed: data['logic-sig-budget-consumed'],\n    });\n    /* eslint-enable dot-notation */\n  }\n}\n\n/**\n * The set of parameters and limits override during simulation. If this set of\n * parameters is present, then evaluation parameters may differ from standard\n * evaluation in certain ways.\n */\nexport class SimulationEvalOverrides extends BaseModel {\n  /**\n   * If true, transactions without signatures are allowed and simulated as if they\n   * were properly signed.\n   */\n  public allowEmptySignatures?: boolean;\n\n  /**\n   * The maximum log calls one can make during simulation\n   */\n  public maxLogCalls?: number | bigint;\n\n  /**\n   * The maximum byte number to log during simulation\n   */\n  public maxLogSize?: number | bigint;\n\n  /**\n   * Creates a new `SimulationEvalOverrides` object.\n   * @param allowEmptySignatures - If true, transactions without signatures are allowed and simulated as if they\n   * were properly signed.\n   * @param maxLogCalls - The maximum log calls one can make during simulation\n   * @param maxLogSize - The maximum byte number to log during simulation\n   */\n  constructor({\n    allowEmptySignatures,\n    maxLogCalls,\n    maxLogSize,\n  }: {\n    allowEmptySignatures?: boolean;\n    maxLogCalls?: number | bigint;\n    maxLogSize?: number | bigint;\n  }) {\n    super();\n    this.allowEmptySignatures = allowEmptySignatures;\n    this.maxLogCalls = maxLogCalls;\n    this.maxLogSize = maxLogSize;\n\n    this.attribute_map = {\n      allowEmptySignatures: 'allow-empty-signatures',\n      maxLogCalls: 'max-log-calls',\n      maxLogSize: 'max-log-size',\n    };\n  }\n\n  // eslint-disable-next-line camelcase\n  static from_obj_for_encoding(\n    data: Record<string, any>\n  ): SimulationEvalOverrides {\n    /* eslint-disable dot-notation */\n    return new SimulationEvalOverrides({\n      allowEmptySignatures: data['allow-empty-signatures'],\n      maxLogCalls: data['max-log-calls'],\n      maxLogSize: data['max-log-size'],\n    });\n    /* eslint-enable dot-notation */\n  }\n}\n\n/**\n * Represents a state proof and its corresponding message\n */\nexport class StateProof extends BaseModel {\n  /**\n   * Represents the message that the state proofs are attesting to.\n   */\n  public message: StateProofMessage;\n\n  /**\n   * The encoded StateProof for the message.\n   */\n  public stateproof: Uint8Array;\n\n  /**\n   * Creates a new `StateProof` object.\n   * @param message - Represents the message that the state proofs are attesting to.\n   * @param stateproof - The encoded StateProof for the message.\n   */\n  constructor({\n    message,\n    stateproof,\n  }: {\n    message: StateProofMessage;\n    stateproof: string | Uint8Array;\n  }) {\n    super();\n    this.message = message;\n    this.stateproof =\n      typeof stateproof === 'string'\n        ? new Uint8Array(Buffer.from(stateproof, 'base64'))\n        : stateproof;\n\n    this.attribute_map = {\n      message: 'Message',\n      stateproof: 'StateProof',\n    };\n  }\n\n  // eslint-disable-next-line camelcase\n  static from_obj_for_encoding(data: Record<string, any>): StateProof {\n    /* eslint-disable dot-notation */\n    if (typeof data['Message'] === 'undefined')\n      throw new Error(`Response is missing required field 'Message': ${data}`);\n    if (typeof data['StateProof'] === 'undefined')\n      throw new Error(\n        `Response is missing required field 'StateProof': ${data}`\n      );\n    return new StateProof({\n      message: StateProofMessage.from_obj_for_encoding(data['Message']),\n      stateproof: data['StateProof'],\n    });\n    /* eslint-enable dot-notation */\n  }\n}\n\n/**\n * Represents the message that the state proofs are attesting to.\n */\nexport class StateProofMessage extends BaseModel {\n  /**\n   * The vector commitment root on all light block headers within a state proof\n   * interval.\n   */\n  public blockheaderscommitment: Uint8Array;\n\n  /**\n   * The first round the message attests to.\n   */\n  public firstattestedround: number | bigint;\n\n  /**\n   * The last round the message attests to.\n   */\n  public lastattestedround: number | bigint;\n\n  /**\n   * An integer value representing the natural log of the proven weight with 16 bits\n   * of precision. This value would be used to verify the next state proof.\n   */\n  public lnprovenweight: number | bigint;\n\n  /**\n   * The vector commitment root of the top N accounts to sign the next StateProof.\n   */\n  public voterscommitment: Uint8Array;\n\n  /**\n   * Creates a new `StateProofMessage` object.\n   * @param blockheaderscommitment - The vector commitment root on all light block headers within a state proof\n   * interval.\n   * @param firstattestedround - The first round the message attests to.\n   * @param lastattestedround - The last round the message attests to.\n   * @param lnprovenweight - An integer value representing the natural log of the proven weight with 16 bits\n   * of precision. This value would be used to verify the next state proof.\n   * @param voterscommitment - The vector commitment root of the top N accounts to sign the next StateProof.\n   */\n  constructor({\n    blockheaderscommitment,\n    firstattestedround,\n    lastattestedround,\n    lnprovenweight,\n    voterscommitment,\n  }: {\n    blockheaderscommitment: string | Uint8Array;\n    firstattestedround: number | bigint;\n    lastattestedround: number | bigint;\n    lnprovenweight: number | bigint;\n    voterscommitment: string | Uint8Array;\n  }) {\n    super();\n    this.blockheaderscommitment =\n      typeof blockheaderscommitment === 'string'\n        ? new Uint8Array(Buffer.from(blockheaderscommitment, 'base64'))\n        : blockheaderscommitment;\n    this.firstattestedround = firstattestedround;\n    this.lastattestedround = lastattestedround;\n    this.lnprovenweight = lnprovenweight;\n    this.voterscommitment =\n      typeof voterscommitment === 'string'\n        ? new Uint8Array(Buffer.from(voterscommitment, 'base64'))\n        : voterscommitment;\n\n    this.attribute_map = {\n      blockheaderscommitment: 'BlockHeadersCommitment',\n      firstattestedround: 'FirstAttestedRound',\n      lastattestedround: 'LastAttestedRound',\n      lnprovenweight: 'LnProvenWeight',\n      voterscommitment: 'VotersCommitment',\n    };\n  }\n\n  // eslint-disable-next-line camelcase\n  static from_obj_for_encoding(data: Record<string, any>): StateProofMessage {\n    /* eslint-disable dot-notation */\n    if (typeof data['BlockHeadersCommitment'] === 'undefined')\n      throw new Error(\n        `Response is missing required field 'BlockHeadersCommitment': ${data}`\n      );\n    if (typeof data['FirstAttestedRound'] === 'undefined')\n      throw new Error(\n        `Response is missing required field 'FirstAttestedRound': ${data}`\n      );\n    if (typeof data['LastAttestedRound'] === 'undefined')\n      throw new Error(\n        `Response is missing required field 'LastAttestedRound': ${data}`\n      );\n    if (typeof data['LnProvenWeight'] === 'undefined')\n      throw new Error(\n        `Response is missing required field 'LnProvenWeight': ${data}`\n      );\n    if (typeof data['VotersCommitment'] === 'undefined')\n      throw new Error(\n        `Response is missing required field 'VotersCommitment': ${data}`\n      );\n    return new StateProofMessage({\n      blockheaderscommitment: data['BlockHeadersCommitment'],\n      firstattestedround: data['FirstAttestedRound'],\n      lastattestedround: data['LastAttestedRound'],\n      lnprovenweight: data['LnProvenWeight'],\n      voterscommitment: data['VotersCommitment'],\n    });\n    /* eslint-enable dot-notation */\n  }\n}\n\n/**\n * Supply represents the current supply of MicroAlgos in the system.\n */\nexport class SupplyResponse extends BaseModel {\n  /**\n   * Round\n   */\n  public currentRound: number | bigint;\n\n  /**\n   * OnlineMoney\n   */\n  public onlineMoney: number | bigint;\n\n  /**\n   * TotalMoney\n   */\n  public totalMoney: number | bigint;\n\n  /**\n   * Creates a new `SupplyResponse` object.\n   * @param currentRound - Round\n   * @param onlineMoney - OnlineMoney\n   * @param totalMoney - TotalMoney\n   */\n  constructor({\n    currentRound,\n    onlineMoney,\n    totalMoney,\n  }: {\n    currentRound: number | bigint;\n    onlineMoney: number | bigint;\n    totalMoney: number | bigint;\n  }) {\n    super();\n    this.currentRound = currentRound;\n    this.onlineMoney = onlineMoney;\n    this.totalMoney = totalMoney;\n\n    this.attribute_map = {\n      currentRound: 'current_round',\n      onlineMoney: 'online-money',\n      totalMoney: 'total-money',\n    };\n  }\n\n  // eslint-disable-next-line camelcase\n  static from_obj_for_encoding(data: Record<string, any>): SupplyResponse {\n    /* eslint-disable dot-notation */\n    if (typeof data['current_round'] === 'undefined')\n      throw new Error(\n        `Response is missing required field 'current_round': ${data}`\n      );\n    if (typeof data['online-money'] === 'undefined')\n      throw new Error(\n        `Response is missing required field 'online-money': ${data}`\n      );\n    if (typeof data['total-money'] === 'undefined')\n      throw new Error(\n        `Response is missing required field 'total-money': ${data}`\n      );\n    return new SupplyResponse({\n      currentRound: data['current_round'],\n      onlineMoney: data['online-money'],\n      totalMoney: data['total-money'],\n    });\n    /* eslint-enable dot-notation */\n  }\n}\n\n/**\n * Represents a key-value pair in an application store.\n */\nexport class TealKeyValue extends BaseModel {\n  public key: string;\n\n  /**\n   * Represents a TEAL value.\n   */\n  public value: TealValue;\n\n  /**\n   * Creates a new `TealKeyValue` object.\n   * @param key -\n   * @param value - Represents a TEAL value.\n   */\n  constructor({ key, value }: { key: string; value: TealValue }) {\n    super();\n    this.key = key;\n    this.value = value;\n\n    this.attribute_map = {\n      key: 'key',\n      value: 'value',\n    };\n  }\n\n  // eslint-disable-next-line camelcase\n  static from_obj_for_encoding(data: Record<string, any>): TealKeyValue {\n    /* eslint-disable dot-notation */\n    if (typeof data['key'] === 'undefined')\n      throw new Error(`Response is missing required field 'key': ${data}`);\n    if (typeof data['value'] === 'undefined')\n      throw new Error(`Response is missing required field 'value': ${data}`);\n    return new TealKeyValue({\n      key: data['key'],\n      value: TealValue.from_obj_for_encoding(data['value']),\n    });\n    /* eslint-enable dot-notation */\n  }\n}\n\n/**\n * Represents a TEAL value.\n */\nexport class TealValue extends BaseModel {\n  /**\n   * (tt) value type. Value `1` refers to **bytes**, value `2` refers to **uint**\n   */\n  public type: number | bigint;\n\n  /**\n   * (tb) bytes value.\n   */\n  public bytes: string;\n\n  /**\n   * (ui) uint value.\n   */\n  public uint: number | bigint;\n\n  /**\n   * Creates a new `TealValue` object.\n   * @param type - (tt) value type. Value `1` refers to **bytes**, value `2` refers to **uint**\n   * @param bytes - (tb) bytes value.\n   * @param uint - (ui) uint value.\n   */\n  constructor({\n    type,\n    bytes,\n    uint,\n  }: {\n    type: number | bigint;\n    bytes: string;\n    uint: number | bigint;\n  }) {\n    super();\n    this.type = type;\n    this.bytes = bytes;\n    this.uint = uint;\n\n    this.attribute_map = {\n      type: 'type',\n      bytes: 'bytes',\n      uint: 'uint',\n    };\n  }\n\n  // eslint-disable-next-line camelcase\n  static from_obj_for_encoding(data: Record<string, any>): TealValue {\n    /* eslint-disable dot-notation */\n    if (typeof data['type'] === 'undefined')\n      throw new Error(`Response is missing required field 'type': ${data}`);\n    if (typeof data['bytes'] === 'undefined')\n      throw new Error(`Response is missing required field 'bytes': ${data}`);\n    if (typeof data['uint'] === 'undefined')\n      throw new Error(`Response is missing required field 'uint': ${data}`);\n    return new TealValue({\n      type: data['type'],\n      bytes: data['bytes'],\n      uint: data['uint'],\n    });\n    /* eslint-enable dot-notation */\n  }\n}\n\n/**\n * TransactionParams contains the parameters that help a client construct a new\n * transaction.\n */\nexport class TransactionParametersResponse extends BaseModel {\n  /**\n   * ConsensusVersion indicates the consensus protocol version\n   * as of LastRound.\n   */\n  public consensusVersion: string;\n\n  /**\n   * Fee is the suggested transaction fee\n   * Fee is in units of micro-Algos per byte.\n   * Fee may fall to zero but transactions must still have a fee of\n   * at least MinTxnFee for the current network protocol.\n   */\n  public fee: number | bigint;\n\n  /**\n   * GenesisHash is the hash of the genesis block.\n   */\n  public genesisHash: Uint8Array;\n\n  /**\n   * GenesisID is an ID listed in the genesis block.\n   */\n  public genesisId: string;\n\n  /**\n   * LastRound indicates the last round seen\n   */\n  public lastRound: number | bigint;\n\n  /**\n   * The minimum transaction fee (not per byte) required for the\n   * txn to validate for the current network protocol.\n   */\n  public minFee: number | bigint;\n\n  /**\n   * Creates a new `TransactionParametersResponse` object.\n   * @param consensusVersion - ConsensusVersion indicates the consensus protocol version\n   * as of LastRound.\n   * @param fee - Fee is the suggested transaction fee\n   * Fee is in units of micro-Algos per byte.\n   * Fee may fall to zero but transactions must still have a fee of\n   * at least MinTxnFee for the current network protocol.\n   * @param genesisHash - GenesisHash is the hash of the genesis block.\n   * @param genesisId - GenesisID is an ID listed in the genesis block.\n   * @param lastRound - LastRound indicates the last round seen\n   * @param minFee - The minimum transaction fee (not per byte) required for the\n   * txn to validate for the current network protocol.\n   */\n  constructor({\n    consensusVersion,\n    fee,\n    genesisHash,\n    genesisId,\n    lastRound,\n    minFee,\n  }: {\n    consensusVersion: string;\n    fee: number | bigint;\n    genesisHash: string | Uint8Array;\n    genesisId: string;\n    lastRound: number | bigint;\n    minFee: number | bigint;\n  }) {\n    super();\n    this.consensusVersion = consensusVersion;\n    this.fee = fee;\n    this.genesisHash =\n      typeof genesisHash === 'string'\n        ? new Uint8Array(Buffer.from(genesisHash, 'base64'))\n        : genesisHash;\n    this.genesisId = genesisId;\n    this.lastRound = lastRound;\n    this.minFee = minFee;\n\n    this.attribute_map = {\n      consensusVersion: 'consensus-version',\n      fee: 'fee',\n      genesisHash: 'genesis-hash',\n      genesisId: 'genesis-id',\n      lastRound: 'last-round',\n      minFee: 'min-fee',\n    };\n  }\n\n  // eslint-disable-next-line camelcase\n  static from_obj_for_encoding(\n    data: Record<string, any>\n  ): TransactionParametersResponse {\n    /* eslint-disable dot-notation */\n    if (typeof data['consensus-version'] === 'undefined')\n      throw new Error(\n        `Response is missing required field 'consensus-version': ${data}`\n      );\n    if (typeof data['fee'] === 'undefined')\n      throw new Error(`Response is missing required field 'fee': ${data}`);\n    if (typeof data['genesis-hash'] === 'undefined')\n      throw new Error(\n        `Response is missing required field 'genesis-hash': ${data}`\n      );\n    if (typeof data['genesis-id'] === 'undefined')\n      throw new Error(\n        `Response is missing required field 'genesis-id': ${data}`\n      );\n    if (typeof data['last-round'] === 'undefined')\n      throw new Error(\n        `Response is missing required field 'last-round': ${data}`\n      );\n    if (typeof data['min-fee'] === 'undefined')\n      throw new Error(`Response is missing required field 'min-fee': ${data}`);\n    return new TransactionParametersResponse({\n      consensusVersion: data['consensus-version'],\n      fee: data['fee'],\n      genesisHash: data['genesis-hash'],\n      genesisId: data['genesis-id'],\n      lastRound: data['last-round'],\n      minFee: data['min-fee'],\n    });\n    /* eslint-enable dot-notation */\n  }\n}\n\n/**\n * Proof of transaction in a block.\n */\nexport class TransactionProofResponse extends BaseModel {\n  /**\n   * Index of the transaction in the block's payset.\n   */\n  public idx: number | bigint;\n\n  /**\n   * Proof of transaction membership.\n   */\n  public proof: Uint8Array;\n\n  /**\n   * Hash of SignedTxnInBlock for verifying proof.\n   */\n  public stibhash: Uint8Array;\n\n  /**\n   * Represents the depth of the tree that is being proven, i.e. the number of edges\n   * from a leaf to the root.\n   */\n  public treedepth: number | bigint;\n\n  /**\n   * The type of hash function used to create the proof, must be one of:\n   * * sha512_256\n   * * sha256\n   */\n  public hashtype?: string;\n\n  /**\n   * Creates a new `TransactionProofResponse` object.\n   * @param idx - Index of the transaction in the block's payset.\n   * @param proof - Proof of transaction membership.\n   * @param stibhash - Hash of SignedTxnInBlock for verifying proof.\n   * @param treedepth - Represents the depth of the tree that is being proven, i.e. the number of edges\n   * from a leaf to the root.\n   * @param hashtype - The type of hash function used to create the proof, must be one of:\n   * * sha512_256\n   * * sha256\n   */\n  constructor({\n    idx,\n    proof,\n    stibhash,\n    treedepth,\n    hashtype,\n  }: {\n    idx: number | bigint;\n    proof: string | Uint8Array;\n    stibhash: string | Uint8Array;\n    treedepth: number | bigint;\n    hashtype?: string;\n  }) {\n    super();\n    this.idx = idx;\n    this.proof =\n      typeof proof === 'string'\n        ? new Uint8Array(Buffer.from(proof, 'base64'))\n        : proof;\n    this.stibhash =\n      typeof stibhash === 'string'\n        ? new Uint8Array(Buffer.from(stibhash, 'base64'))\n        : stibhash;\n    this.treedepth = treedepth;\n    this.hashtype = hashtype;\n\n    this.attribute_map = {\n      idx: 'idx',\n      proof: 'proof',\n      stibhash: 'stibhash',\n      treedepth: 'treedepth',\n      hashtype: 'hashtype',\n    };\n  }\n\n  // eslint-disable-next-line camelcase\n  static from_obj_for_encoding(\n    data: Record<string, any>\n  ): TransactionProofResponse {\n    /* eslint-disable dot-notation */\n    if (typeof data['idx'] === 'undefined')\n      throw new Error(`Response is missing required field 'idx': ${data}`);\n    if (typeof data['proof'] === 'undefined')\n      throw new Error(`Response is missing required field 'proof': ${data}`);\n    if (typeof data['stibhash'] === 'undefined')\n      throw new Error(`Response is missing required field 'stibhash': ${data}`);\n    if (typeof data['treedepth'] === 'undefined')\n      throw new Error(\n        `Response is missing required field 'treedepth': ${data}`\n      );\n    return new TransactionProofResponse({\n      idx: data['idx'],\n      proof: data['proof'],\n      stibhash: data['stibhash'],\n      treedepth: data['treedepth'],\n      hashtype: data['hashtype'],\n    });\n    /* eslint-enable dot-notation */\n  }\n}\n\n/**\n * algod version information.\n */\nexport class Version extends BaseModel {\n  public build: BuildVersion;\n\n  public genesisHashB64: Uint8Array;\n\n  public genesisId: string;\n\n  public versions: string[];\n\n  /**\n   * Creates a new `Version` object.\n   * @param build -\n   * @param genesisHashB64 -\n   * @param genesisId -\n   * @param versions -\n   */\n  constructor({\n    build,\n    genesisHashB64,\n    genesisId,\n    versions,\n  }: {\n    build: BuildVersion;\n    genesisHashB64: string | Uint8Array;\n    genesisId: string;\n    versions: string[];\n  }) {\n    super();\n    this.build = build;\n    this.genesisHashB64 =\n      typeof genesisHashB64 === 'string'\n        ? new Uint8Array(Buffer.from(genesisHashB64, 'base64'))\n        : genesisHashB64;\n    this.genesisId = genesisId;\n    this.versions = versions;\n\n    this.attribute_map = {\n      build: 'build',\n      genesisHashB64: 'genesis_hash_b64',\n      genesisId: 'genesis_id',\n      versions: 'versions',\n    };\n  }\n\n  // eslint-disable-next-line camelcase\n  static from_obj_for_encoding(data: Record<string, any>): Version {\n    /* eslint-disable dot-notation */\n    if (typeof data['build'] === 'undefined')\n      throw new Error(`Response is missing required field 'build': ${data}`);\n    if (typeof data['genesis_hash_b64'] === 'undefined')\n      throw new Error(\n        `Response is missing required field 'genesis_hash_b64': ${data}`\n      );\n    if (typeof data['genesis_id'] === 'undefined')\n      throw new Error(\n        `Response is missing required field 'genesis_id': ${data}`\n      );\n    if (!Array.isArray(data['versions']))\n      throw new Error(\n        `Response is missing required array field 'versions': ${data}`\n      );\n    return new Version({\n      build: BuildVersion.from_obj_for_encoding(data['build']),\n      genesisHashB64: data['genesis_hash_b64'],\n      genesisId: data['genesis_id'],\n      versions: data['versions'],\n    });\n    /* eslint-enable dot-notation */\n  }\n}\n","import HTTPClient from '../client';\nimport IntDecoding from '../../types/intDecoding';\n\n/**\n * Base abstract class for JSON requests.\n *\n * Data: The type returned from the `do()` method\n *\n * Body: The structure of the response's body\n */\nexport default abstract class JSONRequest<\n  Data = Record<string, any>,\n  Body = Data | Uint8Array\n> {\n  c: HTTPClient;\n  query: Record<string, any>;\n  intDecoding: IntDecoding;\n\n  /**\n   * @param client - HTTPClient object.\n   * @param intDecoding - The method to use\n   *   for decoding integers from this request's response. See the setIntDecoding method for more\n   *   details.\n   */\n  constructor(client: HTTPClient, intDecoding?: IntDecoding) {\n    this.c = client;\n    this.query = {};\n    this.intDecoding = intDecoding || IntDecoding.DEFAULT;\n  }\n\n  /**\n   * @returns The path of this request.\n   * @category JSONRequest\n   */\n  abstract path(): string;\n\n  /**\n   * Prepare a JSON response before returning it.\n   *\n   * Use this method to change and restructure response\n   * data as needed after receiving it from the `do()` method.\n   * @param body - Response body received\n   * @category JSONRequest\n   */\n  // eslint-disable-next-line class-methods-use-this\n  prepare(body: Body): Data {\n    return (body as unknown) as Data;\n  }\n\n  /**\n   * Execute the request.\n   * @param headers - Additional headers to send in the request. Optional.\n   * @returns A promise which resolves to the parsed response data.\n   * @category JSONRequest\n   */\n  async do(headers: Record<string, any> = {}): Promise<Data> {\n    const jsonOptions: Record<string, any> = {};\n    if (this.intDecoding !== 'default') {\n      jsonOptions.intDecoding = this.intDecoding;\n    }\n    const res = await this.c.get(this.path(), this.query, headers, jsonOptions);\n    return this.prepare(res.body);\n  }\n\n  /**\n   * Execute the request, but do not process the response data in any way.\n   * @param headers - Additional headers to send in the request. Optional.\n   * @returns A promise which resolves to the raw response data, exactly as returned by the server.\n   * @category JSONRequest\n   */\n  async doRaw(headers: Record<string, any> = {}): Promise<Uint8Array> {\n    const res = await this.c.get(this.path(), this.query, headers, {}, false);\n    return res.body;\n  }\n\n  /**\n   * Configure how integers in this request's JSON response will be decoded.\n   *\n   * The options are:\n   * * \"default\": Integers will be decoded according to JSON.parse, meaning they will all be\n   *   Numbers and any values greater than Number.MAX_SAFE_INTEGER will lose precision.\n   * * \"safe\": All integers will be decoded as Numbers, but if any values are greater than\n   *   Number.MAX_SAFE_INTEGER an error will be thrown.\n   * * \"mixed\": Integers will be decoded as Numbers if they are less than or equal to\n   *   Number.MAX_SAFE_INTEGER, otherwise they will be decoded as BigInts.\n   * * \"bigint\": All integers will be decoded as BigInts.\n   *\n   * @param method - The method to use when parsing the\n   *   response for this request. Must be one of \"default\", \"safe\", \"mixed\", or \"bigint\".\n   * @category JSONRequest\n   */\n  setIntDecoding(method: IntDecoding) {\n    if (\n      method !== 'default' &&\n      method !== 'safe' &&\n      method !== 'mixed' &&\n      method !== 'bigint'\n    )\n      throw new Error(`Invalid method for int decoding: ${method}`);\n    this.intDecoding = method;\n    return this;\n  }\n}\n","import JSONRequest from '../jsonrequest';\nimport HTTPClient from '../../client';\nimport IntDecoding from '../../../types/intDecoding';\n\nexport default class AccountInformation extends JSONRequest {\n  constructor(\n    c: HTTPClient,\n    intDecoding: IntDecoding,\n    private account: string\n  ) {\n    super(c, intDecoding);\n    this.account = account;\n  }\n\n  path() {\n    return `/v2/accounts/${this.account}`;\n  }\n\n  /**\n   * Exclude assets and application data from results\n   *\n   * #### Example\n   * ```typescript\n   * const address = \"XBYLS2E6YI6XXL5BWCAMOA4GTWHXWENZMX5UHXMRNWWUQ7BXCY5WC5TEPA\";\n   * const accountInfo = await algodClient.accountInformation(address)\n   *        .exclude('all')\n   *        .do();\n   * ```\n   *\n   * @param round\n   * @category query\n   */\n  exclude(exclude: string) {\n    this.query.exclude = exclude;\n    return this;\n  }\n}\n","import JSONRequest from '../jsonrequest';\nimport HTTPClient from '../../client';\nimport IntDecoding from '../../../types/intDecoding';\n\nexport default class AccountAssetInformation extends JSONRequest {\n  constructor(\n    c: HTTPClient,\n    intDecoding: IntDecoding,\n    private account: string,\n    private assetID: number\n  ) {\n    super(c, intDecoding);\n    this.account = account;\n    this.assetID = assetID;\n  }\n\n  path() {\n    return `/v2/accounts/${this.account}/assets/${this.assetID}`;\n  }\n}\n","import JSONRequest from '../jsonrequest';\nimport HTTPClient from '../../client';\nimport IntDecoding from '../../../types/intDecoding';\n\nexport default class AccountApplicationInformation extends JSONRequest {\n  constructor(\n    c: HTTPClient,\n    intDecoding: IntDecoding,\n    private account: string,\n    private applicationID: number\n  ) {\n    super(c, intDecoding);\n    this.account = account;\n    this.applicationID = applicationID;\n  }\n\n  path() {\n    return `/v2/accounts/${this.account}/applications/${this.applicationID}`;\n  }\n}\n","import * as encoding from '../../../encoding/encoding';\nimport JSONRequest from '../jsonrequest';\nimport HTTPClient from '../../client';\n\n/**\n * block gets the block info for the given round. this call may block\n */\nexport default class Block extends JSONRequest {\n  private round: number;\n\n  constructor(c: HTTPClient, roundNumber: number) {\n    super(c);\n    if (!Number.isInteger(roundNumber))\n      throw Error('roundNumber should be an integer');\n    this.round = roundNumber;\n    this.query = { format: 'msgpack' };\n  }\n\n  path() {\n    return `/v2/blocks/${this.round}`;\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  prepare(body: Uint8Array) {\n    if (body && body.byteLength > 0) {\n      return encoding.decode(body) as Record<string, any>;\n    }\n    return undefined;\n  }\n}\n","import { Buffer } from 'buffer';\nimport JSONRequest from '../jsonrequest';\nimport HTTPClient from '../../client';\n\n/**\n * Sets the default header (if not previously set)\n * @param headers - A headers object\n */\nexport function setHeaders(headers = {}) {\n  let hdrs = headers;\n  if (Object.keys(hdrs).every((key) => key.toLowerCase() !== 'content-type')) {\n    hdrs = { ...headers };\n    hdrs['Content-Type'] = 'text/plain';\n  }\n  return hdrs;\n}\n\n/**\n * Executes compile\n */\nexport default class Compile extends JSONRequest {\n  constructor(c: HTTPClient, private source: string | Uint8Array) {\n    super(c);\n    this.source = source;\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  path() {\n    return `/v2/teal/compile`;\n  }\n\n  sourcemap(map: boolean = true) {\n    this.query.sourcemap = map;\n    return this;\n  }\n\n  /**\n   * Executes compile\n   * @param headers - A headers object\n   */\n  async do(headers = {}) {\n    const txHeaders = setHeaders(headers);\n    const res = await this.c.post(\n      this.path(),\n      Buffer.from(this.source),\n      txHeaders,\n      this.query\n    );\n    return res.body;\n  }\n}\n","import { Buffer } from 'buffer';\nimport JSONRequest from '../jsonrequest';\nimport HTTPClient from '../../client';\nimport * as modelsv2 from './models/types';\nimport * as encoding from '../../../encoding/encoding';\nimport { setHeaders } from './compile';\n\nexport default class Dryrun extends JSONRequest {\n  private blob: Uint8Array;\n\n  constructor(c: HTTPClient, dr: modelsv2.DryrunRequest) {\n    super(c);\n    this.blob = encoding.encode(dr.get_obj_for_encoding(true));\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  path() {\n    return '/v2/teal/dryrun';\n  }\n\n  /**\n   * Executes dryrun\n   * @param headers - A headers object\n   */\n  async do(headers = {}) {\n    const txHeaders = setHeaders(headers);\n    const res = await this.c.post(\n      this.path(),\n      Buffer.from(this.blob),\n      txHeaders\n    );\n    return res.body;\n  }\n}\n","import JSONRequest from '../jsonrequest';\n\nexport default class Genesis extends JSONRequest {\n  // eslint-disable-next-line class-methods-use-this\n  path() {\n    return '/genesis';\n  }\n}\n","import JSONRequest from '../jsonrequest';\nimport HTTPClient from '../../client';\nimport IntDecoding from '../../../types/intDecoding';\n\nexport default class GetAssetByID extends JSONRequest {\n  constructor(c: HTTPClient, intDecoding: IntDecoding, private index: number) {\n    super(c, intDecoding);\n    this.index = index;\n  }\n\n  path() {\n    return `/v2/assets/${this.index}`;\n  }\n}\n","import JSONRequest from '../jsonrequest';\nimport HTTPClient from '../../client';\nimport IntDecoding from '../../../types/intDecoding';\n\nexport default class GetApplicationByID extends JSONRequest {\n  constructor(c: HTTPClient, intDecoding: IntDecoding, private index: number) {\n    super(c, intDecoding);\n    this.index = index;\n  }\n\n  path() {\n    return `/v2/applications/${this.index}`;\n  }\n}\n","import JSONRequest from '../jsonrequest';\nimport HTTPClient from '../../client';\nimport IntDecoding from '../../../types/intDecoding';\n\nexport default class GetBlockHash extends JSONRequest {\n  round: number;\n\n  constructor(c: HTTPClient, intDecoding: IntDecoding, roundNumber: number) {\n    super(c, intDecoding);\n    if (!Number.isInteger(roundNumber))\n      throw Error('roundNumber should be an integer');\n    this.round = roundNumber;\n  }\n\n  path() {\n    return `/v2/blocks/${this.round}/hash`;\n  }\n}\n","import { Buffer } from 'buffer';\nimport JSONRequest from '../jsonrequest';\nimport HTTPClient from '../../client';\nimport IntDecoding from '../../../types/intDecoding';\nimport { Box } from './models/types';\n\n/**\n * Given an application ID and the box name (key), return the value stored in the box.\n *\n * #### Example\n * ```typescript\n * const index = 60553466;\n * const boxName = Buffer.from(\"foo\");\n * const boxResponse = await algodClient.getApplicationBoxByName(index, boxName).do();\n * const boxValue = boxResponse.value;\n * ```\n *\n * [Response data schema details](https://developer.algorand.org/docs/rest-apis/algod/#get-v2applicationsapplication-idbox)\n * @param index - The application ID to look up.\n * @category GET\n */\nexport default class GetApplicationBoxByName extends JSONRequest<\n  Box,\n  Record<string, any>\n> {\n  constructor(\n    c: HTTPClient,\n    intDecoding: IntDecoding,\n    private index: number,\n    name: Uint8Array\n  ) {\n    super(c, intDecoding);\n    this.index = index;\n    // Encode name in base64 format and append the encoding prefix.\n    const encodedName = Buffer.from(name).toString('base64');\n    this.query.name = encodeURI(`b64:${encodedName}`);\n  }\n\n  /**\n   * @returns `/v2/applications/${index}/box`\n   */\n  path() {\n    return `/v2/applications/${this.index}/box`;\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  prepare(body: Record<string, any>): Box {\n    return Box.from_obj_for_encoding(body);\n  }\n}\n","import JSONRequest from '../jsonrequest';\nimport HTTPClient from '../../client';\nimport IntDecoding from '../../../types/intDecoding';\nimport { BoxesResponse } from './models/types';\n\n/**\n * Given an application ID, return all the box names associated with the app.\n *\n * #### Example\n * ```typescript\n * const index = 60553466;\n * const boxesResponse = await algodClient.getApplicationBoxes(index).max(3).do();\n * const boxNames = boxesResponse.boxes.map(box => box.name);\n * ```\n *\n * [Response data schema details](https://developer.algorand.org/docs/rest-apis/algod/#get-v2applicationsapplication-idboxes)\n * @param index - The application ID to look up.\n * @category GET\n */\nexport default class GetApplicationBoxes extends JSONRequest<\n  BoxesResponse,\n  Record<string, any>\n> {\n  constructor(c: HTTPClient, intDecoding: IntDecoding, private index: number) {\n    super(c, intDecoding);\n    this.index = index;\n    this.query.max = 0;\n  }\n\n  /**\n   * @returns `/v2/applications/${index}/boxes`\n   */\n  path() {\n    return `/v2/applications/${this.index}/boxes`;\n  }\n\n  /**\n   * Limit results for pagination.\n   *\n   * #### Example\n   * ```typescript\n   * const maxResults = 20;\n   * const boxesResult = await algodClient\n   *        .GetApplicationBoxes(1234)\n   *        .limit(maxResults)\n   *        .do();\n   * ```\n   *\n   * @param limit - maximum number of results to return.\n   * @category query\n   */\n  max(max: number) {\n    this.query.max = max;\n    return this;\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  prepare(body: Record<string, any>): BoxesResponse {\n    return BoxesResponse.from_obj_for_encoding(body);\n  }\n}\n","import JSONRequest from '../jsonrequest';\n\n/**\n * healthCheck returns an empty object iff the node is running\n */\nexport default class HealthCheck extends JSONRequest {\n  // eslint-disable-next-line class-methods-use-this\n  path() {\n    return '/health';\n  }\n\n  async do(headers = {}) {\n    const res = await this.c.get(this.path(), {}, headers);\n    if (!res.ok) {\n      throw new Error(`Health response: ${res.status}`);\n    }\n    return {};\n  }\n}\n","import JSONRequest from '../jsonrequest';\nimport HTTPClient from '../../client';\nimport * as encoding from '../../../encoding/encoding';\n\n/**\n * returns the transaction information for a specific txid of a pending transaction\n */\nexport default class PendingTransactionInformation extends JSONRequest {\n  constructor(c: HTTPClient, private txid: string) {\n    super(c);\n    this.txid = txid;\n    this.query.format = 'msgpack';\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  prepare(body: Uint8Array) {\n    if (body && body.byteLength > 0) {\n      return encoding.decode(body) as Record<string, any>;\n    }\n    return undefined;\n  }\n\n  path() {\n    return `/v2/transactions/pending/${this.txid}`;\n  }\n\n  // max sets the maximum number of txs to return\n  max(max: number) {\n    this.query.max = max;\n    return this;\n  }\n}\n","import JSONRequest from '../jsonrequest';\nimport HTTPClient from '../../client';\nimport * as encoding from '../../../encoding/encoding';\n\n/**\n * pendingTransactionsInformation returns transactions that are pending in the pool\n */\nexport default class PendingTransactions extends JSONRequest {\n  constructor(c: HTTPClient) {\n    super(c);\n    this.query.format = 'msgpack';\n  }\n\n  /* eslint-disable class-methods-use-this */\n  path() {\n    return '/v2/transactions/pending';\n  }\n\n  prepare(body: Uint8Array) {\n    if (body && body.byteLength > 0) {\n      return encoding.decode(body) as Record<string, any>;\n    }\n    return undefined;\n  }\n  /* eslint-enable class-methods-use-this */\n\n  // max sets the maximum number of txs to return\n  max(max: number) {\n    this.query.max = max;\n    return this;\n  }\n}\n","import JSONRequest from '../jsonrequest';\nimport HTTPClient from '../../client';\nimport * as encoding from '../../../encoding/encoding';\n\n/**\n * returns all transactions for a PK [addr] in the [first, last] rounds range.\n */\nexport default class PendingTransactionsByAddress extends JSONRequest {\n  constructor(c: HTTPClient, private address: string) {\n    super(c);\n    this.address = address;\n    this.query.format = 'msgpack';\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  prepare(body: Uint8Array): Record<string, any> {\n    if (body && body.byteLength > 0) {\n      return encoding.decode(body) as Record<string, any>;\n    }\n    return undefined;\n  }\n\n  path() {\n    return `/v2/accounts/${this.address}/transactions/pending`;\n  }\n\n  // max sets the maximum number of txs to return\n  max(max: number) {\n    this.query.max = max;\n    return this;\n  }\n}\n","import JSONRequest from '../jsonrequest';\nimport HTTPClient from '../../client';\nimport IntDecoding from '../../../types/intDecoding';\n\nexport default class GetTransactionProof extends JSONRequest {\n  constructor(\n    c: HTTPClient,\n    intDecoding: IntDecoding,\n    private round: number,\n    private txID: string\n  ) {\n    super(c, intDecoding);\n\n    this.round = round;\n    this.txID = txID;\n  }\n\n  path() {\n    return `/v2/blocks/${this.round}/transactions/${this.txID}/proof`;\n  }\n\n  /**\n   * Exclude assets and application data from results\n   * The type of hash function used to create the proof, must be one of: \"sha512_256\", \"sha256\"\n   *\n   * #### Example\n   * ```typescript\n   * const hashType = \"sha256\";\n   * const round = 123456;\n   * const txId = \"abc123;\n   * const txProof = await algodClient.getTransactionProof(round, txId)\n   *        .hashType(hashType)\n   *        .do();\n   * ```\n   *\n   * @param hashType\n   * @category query\n   */\n  hashType(hashType: string) {\n    this.query.hashtype = hashType;\n    return this;\n  }\n}\n","import { Buffer } from 'buffer';\nimport JSONRequest from '../jsonrequest';\nimport HTTPClient from '../../client';\nimport { concatArrays } from '../../../utils/utils';\n\n/**\n * Sets the default header (if not previously set) for sending a raw\n * transaction.\n * @param headers - A headers object\n */\nexport function setSendTransactionHeaders(headers = {}) {\n  let hdrs = headers;\n  if (Object.keys(hdrs).every((key) => key.toLowerCase() !== 'content-type')) {\n    hdrs = { ...headers };\n    hdrs['Content-Type'] = 'application/x-binary';\n  }\n  return hdrs;\n}\n\nfunction isByteArray(array: any): array is Uint8Array {\n  return array && array.byteLength !== undefined;\n}\n\n/**\n * broadcasts the passed signed txns to the network\n */\nexport default class SendRawTransaction extends JSONRequest {\n  private txnBytesToPost: Uint8Array;\n\n  constructor(c: HTTPClient, stxOrStxs: Uint8Array | Uint8Array[]) {\n    super(c);\n\n    let forPosting = stxOrStxs;\n    if (Array.isArray(stxOrStxs)) {\n      if (!stxOrStxs.every(isByteArray)) {\n        throw new TypeError('Array elements must be byte arrays');\n      }\n      // Flatten into a single Uint8Array\n      forPosting = concatArrays(...stxOrStxs);\n    } else if (!isByteArray(forPosting)) {\n      throw new TypeError('Argument must be byte array');\n    }\n    this.txnBytesToPost = forPosting;\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  path() {\n    return '/v2/transactions';\n  }\n\n  async do(headers = {}) {\n    const txHeaders = setSendTransactionHeaders(headers);\n    const res = await this.c.post(\n      this.path(),\n      Buffer.from(this.txnBytesToPost),\n      txHeaders\n    );\n    return res.body;\n  }\n}\n","import JSONRequest from '../jsonrequest';\n\nexport default class Status extends JSONRequest {\n  // eslint-disable-next-line class-methods-use-this\n  path() {\n    return '/v2/status';\n  }\n}\n","import JSONRequest from '../jsonrequest';\nimport HTTPClient from '../../client';\nimport IntDecoding from '../../../types/intDecoding';\n\nexport default class StatusAfterBlock extends JSONRequest {\n  constructor(c: HTTPClient, intDecoding: IntDecoding, private round: number) {\n    super(c, intDecoding);\n    if (!Number.isInteger(round)) throw Error('round should be an integer');\n    this.round = round;\n  }\n\n  path() {\n    return `/v2/status/wait-for-block-after/${this.round}`;\n  }\n}\n","import JSONRequest from '../jsonrequest';\nimport { SuggestedParamsWithMinFee } from '../../../types/transactions/base';\n\n/**\n * Returns the common needed parameters for a new transaction, in a format the transaction builder expects\n */\nexport default class SuggestedParamsRequest extends JSONRequest<SuggestedParamsWithMinFee> {\n  /* eslint-disable class-methods-use-this */\n  path() {\n    return '/v2/transactions/params';\n  }\n\n  prepare(body: Record<string, any>): SuggestedParamsWithMinFee {\n    return {\n      flatFee: false,\n      fee: body.fee,\n      firstRound: body['last-round'],\n      lastRound: body['last-round'] + 1000,\n      genesisID: body['genesis-id'],\n      genesisHash: body['genesis-hash'],\n      minFee: body['min-fee'],\n    };\n  }\n  /* eslint-enable class-methods-use-this */\n}\n","import JSONRequest from '../jsonrequest';\n\nexport default class Supply extends JSONRequest {\n  // eslint-disable-next-line class-methods-use-this\n  path() {\n    return '/v2/ledger/supply';\n  }\n}\n","import JSONRequest from '../jsonrequest';\n\n/**\n * retrieves the VersionResponse from the running node\n */\nexport default class Versions extends JSONRequest {\n  // eslint-disable-next-line class-methods-use-this\n  path() {\n    return '/versions';\n  }\n}\n","import JSONRequest from '../jsonrequest';\nimport HTTPClient from '../../client';\nimport IntDecoding from '../../../types/intDecoding';\n\nexport default class LightBlockHeaderProof extends JSONRequest {\n  constructor(c: HTTPClient, intDecoding: IntDecoding, private round: number) {\n    super(c, intDecoding);\n\n    this.round = round;\n  }\n\n  path() {\n    return `/v2/blocks/${this.round}/lightheader/proof`;\n  }\n}\n","import JSONRequest from '../jsonrequest';\nimport HTTPClient from '../../client';\nimport IntDecoding from '../../../types/intDecoding';\n\nexport default class StateProof extends JSONRequest {\n  constructor(c: HTTPClient, intDecoding: IntDecoding, private round: number) {\n    super(c, intDecoding);\n\n    this.round = round;\n  }\n\n  path() {\n    return `/v2/stateproofs/${this.round}`;\n  }\n}\n","import JSONRequest from '../jsonrequest';\nimport HTTPClient from '../../client';\nimport IntDecoding from '../../../types/intDecoding';\n\nexport default class SetSyncRound extends JSONRequest {\n  constructor(c: HTTPClient, intDecoding: IntDecoding, private round: number) {\n    super(c, intDecoding);\n\n    this.round = round;\n  }\n\n  path() {\n    return `/v2/ledger/sync/${this.round}`;\n  }\n\n  async do(headers = {}) {\n    const res = await this.c.post(this.path(), headers);\n    return res.body;\n  }\n}\n","import JSONRequest from '../jsonrequest';\nimport { GetSyncRoundResponse } from './models/types';\n\nexport default class GetSyncRound extends JSONRequest<\n  GetSyncRoundResponse,\n  Record<string, any>\n> {\n  // eslint-disable-next-line class-methods-use-this\n  path() {\n    return `/v2/ledger/sync`;\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  prepare(body: Record<string, any>): GetSyncRoundResponse {\n    return GetSyncRoundResponse.from_obj_for_encoding(body);\n  }\n}\n","import JSONRequest from '../jsonrequest';\nimport HTTPClient from '../../client';\nimport IntDecoding from '../../../types/intDecoding';\n\nexport default class SetBlockOffsetTimestamp extends JSONRequest {\n  constructor(c: HTTPClient, intDecoding: IntDecoding, private offset: number) {\n    super(c, intDecoding);\n\n    this.offset = offset;\n  }\n\n  path() {\n    return `/v2/devmode/blocks/offset/${this.offset}`;\n  }\n\n  async do(headers = {}) {\n    const res = await this.c.post(this.path(), headers);\n    return res.body;\n  }\n}\n","import JSONRequest from '../jsonrequest';\nimport { GetBlockTimeStampOffsetResponse } from './models/types';\n\nexport default class GetBlockOffsetTimestamp extends JSONRequest<\n  GetBlockTimeStampOffsetResponse,\n  Record<string, any>\n> {\n  // eslint-disable-next-line class-methods-use-this\n  path() {\n    return `/v2/devmode/blocks/offset`;\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  prepare(body: Record<string, any>): GetBlockTimeStampOffsetResponse {\n    return GetBlockTimeStampOffsetResponse.from_obj_for_encoding(body);\n  }\n}\n","import { Buffer } from 'buffer';\nimport JSONRequest from '../jsonrequest';\nimport HTTPClient from '../../client';\n\n/**\n * Sets the default header (if not previously set)\n * @param headers - A headers object\n */\nexport function setHeaders(headers = {}) {\n  let hdrs = headers;\n  if (Object.keys(hdrs).every((key) => key.toLowerCase() !== 'content-type')) {\n    hdrs = { ...headers };\n    hdrs['Content-Type'] = 'text/plain';\n  }\n  return hdrs;\n}\n\n/**\n * Executes disassemble\n */\nexport default class Disassemble extends JSONRequest {\n  constructor(c: HTTPClient, private source: string | Uint8Array) {\n    super(c);\n    this.source = source;\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  path() {\n    return `/v2/teal/disassemble`;\n  }\n\n  /**\n   * Executes disassemble\n   * @param headers - A headers object\n   */\n  async do(headers = {}) {\n    const txHeaders = setHeaders(headers);\n    const res = await this.c.post(\n      this.path(),\n      Buffer.from(this.source),\n      txHeaders,\n      this.query\n    );\n    return res.body;\n  }\n}\n","import { Buffer } from 'buffer';\nimport * as encoding from '../../../encoding/encoding';\nimport HTTPClient from '../../client';\nimport JSONRequest from '../jsonrequest';\nimport { SimulateRequest, SimulateResponse } from './models/types';\n\n/**\n * Sets the default header (if not previously set) for simulating a raw\n * transaction.\n * @param headers - A headers object\n */\nexport function setSimulateTransactionsHeaders(headers = {}) {\n  let hdrs = headers;\n  if (Object.keys(hdrs).every((key) => key.toLowerCase() !== 'content-type')) {\n    hdrs = { ...headers };\n    hdrs['Content-Type'] = 'application/msgpack';\n  }\n  return hdrs;\n}\n\n/**\n * Simulates signed txns.\n */\nexport default class SimulateRawTransactions extends JSONRequest<\n  SimulateResponse,\n  Uint8Array\n> {\n  private requestBytes: Uint8Array;\n\n  constructor(c: HTTPClient, request: SimulateRequest) {\n    super(c);\n    this.query.format = 'msgpack';\n    this.requestBytes = encoding.rawEncode(request.get_obj_for_encoding(true));\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  path() {\n    return '/v2/transactions/simulate';\n  }\n\n  async do(headers = {}) {\n    const txHeaders = setSimulateTransactionsHeaders(headers);\n    const res = await this.c.post(\n      this.path(),\n      Buffer.from(this.requestBytes),\n      txHeaders,\n      this.query,\n      false\n    );\n    return this.prepare(res.body);\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  prepare(body: Uint8Array): SimulateResponse {\n    const decoded = encoding.decode(body);\n    return SimulateResponse.from_obj_for_encoding(decoded);\n  }\n}\n","import JSONRequest from '../jsonrequest';\n\nexport default class Ready extends JSONRequest {\n  // eslint-disable-next-line class-methods-use-this\n  path() {\n    return `/ready`;\n  }\n}\n","import JSONRequest from '../jsonrequest';\n\nexport default class UnsetSyncRound extends JSONRequest {\n  // eslint-disable-next-line class-methods-use-this\n  path() {\n    return `/v2/ledger/sync`;\n  }\n\n  async do(headers = {}) {\n    const res = await this.c.delete(this.path(), headers);\n    return res.body;\n  }\n}\n","import ServiceClient from '../serviceClient';\nimport * as modelsv2 from './models/types';\nimport AccountInformation from './accountInformation';\nimport AccountAssetInformation from './accountAssetInformation';\nimport AccountApplicationInformation from './accountApplicationInformation';\nimport Block from './block';\nimport Compile from './compile';\nimport Dryrun from './dryrun';\nimport Genesis from './genesis';\nimport GetAssetByID from './getAssetByID';\nimport GetApplicationByID from './getApplicationByID';\nimport GetBlockHash from './getBlockHash';\nimport GetApplicationBoxByName from './getApplicationBoxByName';\nimport GetApplicationBoxes from './getApplicationBoxes';\nimport HealthCheck from './healthCheck';\nimport PendingTransactionInformation from './pendingTransactionInformation';\nimport PendingTransactions from './pendingTransactions';\nimport PendingTransactionsByAddress from './pendingTransactionsByAddress';\nimport GetTransactionProof from './getTransactionProof';\nimport SendRawTransaction from './sendRawTransaction';\nimport Status from './status';\nimport StatusAfterBlock from './statusAfterBlock';\nimport SuggestedParams from './suggestedParams';\nimport Supply from './supply';\nimport Versions from './versions';\nimport { BaseHTTPClient } from '../../baseHTTPClient';\nimport {\n  AlgodTokenHeader,\n  CustomTokenHeader,\n} from '../../urlTokenBaseHTTPClient';\nimport LightBlockHeaderProof from './lightBlockHeaderProof';\nimport StateProof from './stateproof';\nimport SetSyncRound from './setSyncRound';\nimport GetSyncRound from './getSyncRound';\nimport SetBlockOffsetTimestamp from './setBlockOffsetTimestamp';\nimport GetBlockOffsetTimestamp from './getBlockOffsetTimestamp';\nimport Disassemble from './disassemble';\nimport SimulateRawTransactions from './simulateTransaction';\nimport { EncodedSignedTransaction } from '../../../types';\nimport * as encoding from '../../../encoding/encoding';\nimport Ready from './ready';\nimport UnsetSyncRound from './unsetSyncRound';\n\n/**\n * Algod client connects an application to the Algorand blockchain. The algod client requires a valid algod REST endpoint IP address and algod token from an Algorand node that is connected to the network you plan to interact with.\n *\n * Algod is the main Algorand process for handling the blockchain. Messages between nodes are processed, the protocol steps are executed, and the blocks are written to disk. The algod process also exposes a REST API server that developers can use to communicate with the node and the network. Algod uses the data directory for storage and configuration information.\n *\n * #### Relevant Information\n * [How do I obtain an algod address and token?](https://developer.algorand.org/docs/archive/build-apps/setup/?from_query=algod#how-do-i-obtain-an-algod-address-and-token)\n *\n * [Run Algod in Postman OAS3](https://developer.algorand.org/docs/rest-apis/restendpoints/?from_query=algod#algod-indexer-and-kmd-rest-endpoints)\n */\nexport default class AlgodClient extends ServiceClient {\n  /**\n   * Create an AlgodClient from\n   * * either a token, baseServer, port, and optional headers\n   * * or a base client server for interoperability with external dApp wallets\n   *\n   * #### Example\n   * ```typescript\n   * const token  = \"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\";\n   * const server = \"http://localhost\";\n   * const port   = 4001;\n   * const algodClient = new algosdk.Algodv2(token, server, port);\n   * ```\n   * @remarks\n   * The above configuration is for a sandbox private network.\n   * For applications on production, you are encouraged to run your own node, or use an Algorand REST API provider with a dedicated API key.\n   *\n   * @param tokenOrBaseClient - The algod token from the Algorand node you are interacting with\n   * @param baseServer - REST endpoint\n   * @param port - Port number if specifically configured by the server\n   * @param headers - Optional headers\n   */\n  constructor(\n    tokenOrBaseClient:\n      | string\n      | AlgodTokenHeader\n      | CustomTokenHeader\n      | BaseHTTPClient,\n    baseServer: string,\n    port?: string | number,\n    headers: Record<string, string> = {}\n  ) {\n    super('X-Algo-API-Token', tokenOrBaseClient, baseServer, port, headers);\n  }\n\n  /**\n   * Returns OK if healthy.\n   *\n   * #### Example\n   * ```typescript\n   * const health = await algodClient.healthCheck().do();\n   * ```\n   *\n   * [Response data schema details](https://developer.algorand.org/docs/rest-apis/algod/#get-health)\n   * @category GET\n   */\n  healthCheck() {\n    return new HealthCheck(this.c);\n  }\n\n  /**\n   * Retrieves the supported API versions, binary build versions, and genesis information.\n   *\n   * #### Example\n   * ```typescript\n   * const versionsDetails = await algodClient.versionsCheck().do();\n   * ```\n   *\n   * [Response data schema details](https://developer.algorand.org/docs/rest-apis/algod/#get-versions)\n   * @category GET\n   */\n  versionsCheck() {\n    return new Versions(this.c);\n  }\n\n  /**\n   * Broadcasts a raw transaction to the network.\n   *\n   * #### Example\n   * ```typescript\n   * const { txId } = await algodClient.sendRawTransaction(signedTxns).do();\n   * const result = await waitForConfirmation(algodClient, txid, 3);\n   * ```\n   *\n   * [Response data schema details](https://developer.algorand.org/docs/rest-apis/algod/#post-v2transactions)\n   *\n   * @remarks\n   * Often used with {@linkcode waitForConfirmation}\n   * @param stxOrStxs - Signed transactions\n   * @category POST\n   */\n  sendRawTransaction(stxOrStxs: Uint8Array | Uint8Array[]) {\n    return new SendRawTransaction(this.c, stxOrStxs);\n  }\n\n  /**\n   * Returns the given account's status, balance and spendable amounts.\n   *\n   * #### Example\n   * ```typescript\n   * const address = \"XBYLS2E6YI6XXL5BWCAMOA4GTWHXWENZMX5UHXMRNWWUQ7BXCY5WC5TEPA\";\n   * const accountInfo = await algodClient.accountInformation(address).do();\n   * ```\n   *\n   * [Response data schema details](https://developer.algorand.org/docs/rest-apis/algod/#get-v2accountsaddress)\n   * @param account - The address of the account to look up.\n   * @category GET\n   */\n  accountInformation(account: string) {\n    return new AccountInformation(this.c, this.intDecoding, account);\n  }\n\n  /**\n   * Returns the given account's asset information for a specific asset.\n   *\n   * #### Example\n   * ```typescript\n   * const address = \"XBYLS2E6YI6XXL5BWCAMOA4GTWHXWENZMX5UHXMRNWWUQ7BXCY5WC5TEPA\";\n   * const index = 60553466;\n   * const accountAssetInfo = await algodClient.accountAssetInformation(address, index).do();\n   * ```\n   *\n   * [Response data schema details](https://developer.algorand.org/docs/rest-apis/algod/#get-v2accountsaddress)\n   * @param account - The address of the account to look up.\n   * @param index - The asset ID to look up.\n   * @category GET\n   */\n  accountAssetInformation(account: string, index: number) {\n    return new AccountAssetInformation(\n      this.c,\n      this.intDecoding,\n      account,\n      index\n    );\n  }\n\n  /**\n   * Returns the given account's application information for a specific application.\n   *\n   * #### Example\n   * ```typescript\n   * const address = \"XBYLS2E6YI6XXL5BWCAMOA4GTWHXWENZMX5UHXMRNWWUQ7BXCY5WC5TEPA\";\n   * const index = 60553466;\n   * const accountInfo = await algodClient.accountApplicationInformation(address, index).do();\n   * ```\n   *\n   * [Response data schema details](https://developer.algorand.org/docs/rest-apis/algod/#get-v2accountsaddress)\n   * @param account - The address of the account to look up.\n   * @param index - The application ID to look up.\n   * @category GET\n   */\n  accountApplicationInformation(account: string, index: number) {\n    return new AccountApplicationInformation(\n      this.c,\n      this.intDecoding,\n      account,\n      index\n    );\n  }\n\n  /**\n   * Gets the block info for the given round.\n   *\n   * #### Example\n   * ```typescript\n   * const roundNumber = 18038133;\n   * const block = await algodClient.block(roundNumber).do();\n   * ```\n   *\n   * [Response data schema details](https://developer.algorand.org/docs/rest-apis/algod/#get-v2blocksround)\n   * @param roundNumber - The round number of the block to get.\n   * @category GET\n   */\n  block(roundNumber: number) {\n    return new Block(this.c, roundNumber);\n  }\n\n  /**\n   * Get the block hash for the block on the given round.\n   *\n   * #### Example\n   * ```typescript\n   * const roundNumber = 18038133;\n   * const block = await algodClient.getBlockHash(roundNumber).do();\n   * ```\n   *\n   * [Response data schema details](https://developer.algorand.org/docs/rest-apis/algod/#get-v2blocksroundhash)\n   * @param roundNumber - The round number of the block to get.\n   * @category GET\n   */\n  getBlockHash(roundNumber: number) {\n    return new GetBlockHash(this.c, this.intDecoding, roundNumber);\n  }\n\n  /**\n   * Returns the transaction information for a specific pending transaction.\n   *\n   * #### Example\n   * ```typescript\n   * const txId = \"DRJS6R745A7GFVMXEXWP4TGVDGKW7VILFTA7HC2BR2GRLHNY5CTA\";\n   * const pending = await algodClient.pendingTransactionInformation(txId).do();\n   * ```\n   *\n   * [Response data schema details](https://developer.algorand.org/docs/rest-apis/algod/#get-v2transactionspendingtxid)\n   *\n   * @remarks\n   * <br><br>\n   * There are several cases when this might succeed:\n   * - transaction committed (committed round > 0)\n   * - transaction still in the pool (committed round = 0, pool error = \"\")\n   * - transaction removed from pool due to error (committed round = 0, pool error != \"\")\n   *\n   * Or the transaction may have happened sufficiently long ago that the node no longer remembers it, and this will return an error.\n   *\n   * @param txid - The TxID string of the pending transaction to look up.\n   * @category GET\n   */\n  pendingTransactionInformation(txid: string) {\n    return new PendingTransactionInformation(this.c, txid);\n  }\n\n  /**\n   * Returns the list of pending transactions in the pool, sorted by priority, in decreasing order, truncated at the end at MAX.\n   * If MAX = 0, returns all pending transactions.\n   *\n   * #### Example 1\n   * ```typescript\n   * const pendingTxns = await algodClient.pendingTransactionsInformation().do();\n   * ```\n   *\n   * #### Example 2\n   * ```typescript\n   * const maxTxns = 5;\n   * const pendingTxns = await algodClient\n   *     .pendingTransactionsInformation()\n   *     .max(maxTxns)\n   *     .do();\n   * ```\n   *\n   * [Response data schema details](https://developer.algorand.org/docs/rest-apis/algod/#get-v2transactionspending)\n   * @category GET\n   */\n  pendingTransactionsInformation() {\n    return new PendingTransactions(this.c);\n  }\n\n  /**\n   * Returns the list of pending transactions sent by the address, sorted by priority, in decreasing order, truncated at the end at MAX.\n   * If MAX = 0, returns all pending transactions.\n   *\n   * #### Example 1\n   * ```typescript\n   * const address = \"XBYLS2E6YI6XXL5BWCAMOA4GTWHXWENZMX5UHXMRNWWUQ7BXCY5WC5TEPA\";\n   * const pendingTxnsByAddr = await algodClient.pendingTransactionByAddress(address).do();\n   * ```\n   *\n   * #### Example 2\n   * ```typescript\n   * const maxTxns = 5;\n   * const address = \"XBYLS2E6YI6XXL5BWCAMOA4GTWHXWENZMX5UHXMRNWWUQ7BXCY5WC5TEPA\";\n   * const pendingTxns = await algodClient\n   *     .pendingTransactionByAddress(address)\n   *     .max(maxTxns)\n   *     .do();\n   * ```\n   *\n   * [Response data schema details](https://developer.algorand.org/docs/rest-apis/algod/#get-v2accountsaddresstransactionspending)\n   * @param address - The address of the sender.\n   * @category GET\n   */\n  pendingTransactionByAddress(address: string) {\n    return new PendingTransactionsByAddress(this.c, address);\n  }\n\n  /**\n   * Retrieves the StatusResponse from the running node.\n   *\n   * #### Example\n   * ```typescript\n   * const status = await algodClient.status().do();\n   * ```\n   *\n   * [Response data schema details](https://developer.algorand.org/docs/rest-apis/algod/#get-v2status)\n   * @category GET\n   */\n  status() {\n    return new Status(this.c, this.intDecoding);\n  }\n\n  /**\n   * Waits for a specific round to occur then returns the `StatusResponse` for that round.\n   *\n   * #### Example\n   * ```typescript\n   * const round = 18038133;\n   * const statusAfterBlock = await algodClient.statusAfterBlock(round).do();\n   * ```\n   *\n   * [Response data schema details](https://developer.algorand.org/docs/rest-apis/algod/#get-v2statuswait-for-block-afterround)\n   * @param round - The number of the round to wait for.\n   * @category GET\n   */\n  statusAfterBlock(round: number) {\n    return new StatusAfterBlock(this.c, this.intDecoding, round);\n  }\n\n  /**\n   * Returns the common needed parameters for a new transaction.\n   *\n   * #### Example\n   * ```typescript\n   * const suggestedParams = await algodClient.getTransactionParams().do();\n   * const amountInMicroAlgos = algosdk.algosToMicroalgos(2); // 2 Algos\n   * const unsignedTxn = algosdk.makePaymentTxnWithSuggestedParamsFromObject({\n   *   from: senderAddress,\n   *   to: receiverAddress,\n   *   amount: amountInMicroAlgos,\n   *   suggestedParams: suggestedParams,\n   * });\n   * ```\n   *\n   * [Response data schema details](https://developer.algorand.org/docs/rest-apis/algod/#get-v2transactionsparams)\n   *\n   * @remarks\n   * Often used with\n   * {@linkcode makePaymentTxnWithSuggestedParamsFromObject}, {@linkcode algosToMicroalgos}\n   * @category GET\n   */\n  getTransactionParams() {\n    return new SuggestedParams(this.c);\n  }\n\n  /**\n   * Returns the supply details for the specified node's ledger.\n   *\n   * #### Example\n   * ```typescript\n   * const supplyDetails = await algodClient.supply().do();\n   * ```\n   *\n   * [Response data schema details](https://developer.algorand.org/docs/rest-apis/algod/#get-v2ledgersupply)\n   * @category GET\n   */\n  supply() {\n    return new Supply(this.c, this.intDecoding);\n  }\n\n  /**\n   * Compiles TEAL source code to binary, returns base64 encoded program bytes and base32 SHA512_256 hash of program bytes (Address style).\n   *\n   * #### Example\n   * ```typescript\n   * const source = \"TEAL SOURCE CODE\";\n   * const compiledSmartContract = await algodClient.compile(source).do();\n   * ```\n   *\n   * [Response data schema details](https://developer.algorand.org/docs/rest-apis/algod/#post-v2tealcompile)\n   * @remarks\n   * This endpoint is only enabled when a node's configuration file sets `EnableDeveloperAPI` to true.\n   * @param source\n   * @category POST\n   */\n  compile(source: string | Uint8Array) {\n    return new Compile(this.c, source);\n  }\n\n  /**\n   * Given the program bytes, return the TEAL source code in plain text.\n   *\n   * #### Example\n   * ```typescript\n   * const bytecode = \"TEAL bytecode\";\n   * const disassembledSource = await algodClient.disassemble(bytecode).do();\n   * ```\n   *\n   * @remarks This endpoint is only enabled when a node's configuration file sets EnableDeveloperAPI to true.\n   * @param source\n   */\n  disassemble(source: string | Uint8Array) {\n    return new Disassemble(this.c, source);\n  }\n\n  /**\n   * Provides debugging information for a transaction (or group).\n   *\n   * Executes TEAL program(s) in context and returns debugging information about the execution. This endpoint is only enabled when a node's configureation file sets `EnableDeveloperAPI` to true.\n   *\n   * #### Example\n   * ```typescript\n   * const dryRunResult = await algodClient.dryrun(dr).do();\n   * ```\n   *\n   * [Response data schema details](https://developer.algorand.org/docs/rest-apis/algod/#post-v2tealdryrun)\n   * @param dr\n   * @category POST\n   */\n  dryrun(dr: modelsv2.DryrunRequest) {\n    return new Dryrun(this.c, dr);\n  }\n\n  /**\n   * Given an asset ID, return asset information including creator, name, total supply and\n   * special addresses.\n   *\n   * #### Example\n   * ```typescript\n   * const asset_id = 163650;\n   * const asset = await algodClient.getAssetByID(asset_id).do();\n   * ```\n   *\n   * [Response data schema details](https://developer.algorand.org/docs/rest-apis/algod/#get-v2assetsasset-id)\n   * @param index - The asset ID to look up.\n   * @category GET\n   */\n  getAssetByID(index: number) {\n    return new GetAssetByID(this.c, this.intDecoding, index);\n  }\n\n  /**\n   * Given an application ID, return the application information including creator, approval\n   * and clear programs, global and local schemas, and global state.\n   *\n   * #### Example\n   * ```typescript\n   * const index = 60553466;\n   * const app = await algodClient.getApplicationByID(index).do();\n   * ```\n   *\n   * [Response data schema details](https://developer.algorand.org/docs/rest-apis/algod/#get-v2applicationsapplication-id)\n   * @param index - The application ID to look up.\n   * @category GET\n   */\n  getApplicationByID(index: number) {\n    return new GetApplicationByID(this.c, this.intDecoding, index);\n  }\n\n  /**\n   * Given an application ID and the box name (key), return the value stored in the box.\n   *\n   * #### Example\n   * ```typescript\n   * const index = 60553466;\n   * const boxName = Buffer.from(\"foo\");\n   * const boxResponse = await algodClient.getApplicationBoxByName(index, boxName).do();\n   * const boxValue = boxResponse.value;\n   * ```\n   *\n   * [Response data schema details](https://developer.algorand.org/docs/rest-apis/algod/#get-v2applicationsapplication-idbox)\n   * @param index - The application ID to look up.\n   * @category GET\n   */\n  getApplicationBoxByName(index: number, boxName: Uint8Array) {\n    return new GetApplicationBoxByName(\n      this.c,\n      this.intDecoding,\n      index,\n      boxName\n    );\n  }\n\n  /**\n   * Given an application ID, return all the box names associated with the app.\n   *\n   * #### Example\n   * ```typescript\n   * const index = 60553466;\n   * const boxesResponse = await algodClient.getApplicationBoxes(index).max(3).do();\n   * const boxNames = boxesResponse.boxes.map(box => box.name);\n   * ```\n   *\n   * [Response data schema details](https://developer.algorand.org/docs/rest-apis/algod/#get-v2applicationsapplication-idboxes)\n   * @param index - The application ID to look up.\n   * @category GET\n   */\n  getApplicationBoxes(index: number) {\n    return new GetApplicationBoxes(this.c, this.intDecoding, index);\n  }\n\n  /**\n   * Returns the entire genesis file.\n   *\n   * #### Example\n   * ```typescript\n   * const genesis = await algodClient.genesis().do();\n   * ```\n   *\n   * [Response data schema details](https://developer.algorand.org/docs/rest-apis/algod/#get-genesis)\n   * @category GET\n   */\n  genesis() {\n    return new Genesis(this.c, this.intDecoding);\n  }\n\n  /**\n   * Returns a Merkle proof for a given transaction in a block.\n   *\n   * #### Example\n   * ```typescript\n   * const round = 18038133;\n   * const txId = \"MEUOC4RQJB23CQZRFRKYEI6WBO73VTTPST5A7B3S5OKBUY6LFUDA\";\n   * const proof = await algodClient.getTransactionProof(round, txId).do();\n   * ```\n   *\n   * [Response data schema details](https://developer.algorand.org/docs/rest-apis/algod/#get-v2blocksroundtransactionstxidproof)\n   * @param round - The round in which the transaction appears.\n   * @param txID - The transaction ID for which to generate a proof.\n   * @category GET\n   */\n  getTransactionProof(round: number, txID: string) {\n    return new GetTransactionProof(this.c, this.intDecoding, round, txID);\n  }\n\n  /**\n   * Gets a proof for a given light block header inside a state proof commitment.\n   *\n   * #### Example\n   * ```typescript\n   * const round = 11111111;\n   * const lightBlockHeaderProof = await algodClient.getLightBlockHeaderProof(round).do();\n   * ```\n   *\n   * [Response data schema details](https://developer.algorand.org/docs/rest-apis/algod/v2#get-v2blocksroundlightheaderproof)\n   * @param round\n   */\n  getLightBlockHeaderProof(round: number) {\n    return new LightBlockHeaderProof(this.c, this.intDecoding, round);\n  }\n\n  /**\n   * Gets a state proof that covers a given round.\n   *\n   * #### Example\n   * ```typescript\n   * const round = 11111111;\n   * const stateProof = await algodClient.getStateProof(round).do();\n   * ```\n   *\n   * [Response data schema details](https://developer.algorand.org/docs/rest-apis/algod/v2#get-v2stateproofsround)\n   * @param round\n   */\n  getStateProof(round: number) {\n    return new StateProof(this.c, this.intDecoding, round);\n  }\n\n  /**\n   * Simulate a list of a signed transaction objects being sent to the network.\n   *\n   * #### Example\n   * ```typescript\n   * const txn1 = algosdk.makePaymentTxnWithSuggestedParamsFromObject(txn1Params);\n   * const txn2 = algosdk.makePaymentTxnWithSuggestedParamsFromObject(txn2Params);\n   * const txgroup = algosdk.assignGroupID([txn1, txn2]);\n   *\n   * // Actually sign the first transaction\n   * const signedTxn1 = txgroup[0].signTxn(senderSk).blob;\n   * // Simulate does not require signed transactions -- use this method to encode an unsigned transaction\n   * const signedTxn2 = algosdk.encodeUnsignedSimulateTransaction(txgroup[1]);\n   *\n   * const resp = await client.simulateRawTransactions([signedTxn1, signedTxn2]).do();\n   * ```\n   *\n   * [Response data schema details](https://developer.algorand.org/docs/rest-apis/algod/#post-v2transactionssimulate)\n   * @param stxOrStxs\n   * @category POST\n   */\n  simulateRawTransactions(stxOrStxs: Uint8Array | Uint8Array[]) {\n    const txnObjects: EncodedSignedTransaction[] = [];\n    if (Array.isArray(stxOrStxs)) {\n      for (const stxn of stxOrStxs) {\n        txnObjects.push(encoding.decode(stxn) as EncodedSignedTransaction);\n      }\n    } else {\n      txnObjects.push(encoding.decode(stxOrStxs) as EncodedSignedTransaction);\n    }\n    const request = new modelsv2.SimulateRequest({\n      txnGroups: [\n        new modelsv2.SimulateRequestTransactionGroup({\n          txns: txnObjects,\n        }),\n      ],\n    });\n    return this.simulateTransactions(request);\n  }\n\n  /**\n   * Simulate transactions being sent to the network.\n   *\n   * #### Example\n   * ```typescript\n   * const txn1 = algosdk.makePaymentTxnWithSuggestedParamsFromObject(txn1Params);\n   * const txn2 = algosdk.makePaymentTxnWithSuggestedParamsFromObject(txn2Params);\n   * const txgroup = algosdk.assignGroupID([txn1, txn2]);\n   *\n   * // Actually sign the first transaction\n   * const signedTxn1 = txgroup[0].signTxn(senderSk).blob;\n   * // Simulate does not require signed transactions -- use this method to encode an unsigned transaction\n   * const signedTxn2 = algosdk.encodeUnsignedSimulateTransaction(txgroup[1]);\n   *\n   * const request = new modelsv2.SimulateRequest({\n   *  txnGroups: [\n   *    new modelsv2.SimulateRequestTransactionGroup({\n   *       // Must decode the signed txn bytes into an object\n   *       txns: [algosdk.decodeObj(signedTxn1), algosdk.decodeObj(signedTxn2)]\n   *     }),\n   *   ],\n   * });\n   * const resp = await client.simulateRawTransactions(request).do();\n   * ```\n   *\n   * [Response data schema details](https://developer.algorand.org/docs/rest-apis/algod/#post-v2transactionssimulate)\n   * @param request\n   * @category POST\n   */\n  simulateTransactions(request: modelsv2.SimulateRequest) {\n    return new SimulateRawTransactions(this.c, request);\n  }\n\n  /**\n   * Set the offset (in seconds) applied to the block timestamp when creating new blocks in devmode.\n   *\n   *  #### Example\n   *  ```typesecript\n   *  const offset = 60\n   *  await client.setBlockOffsetTimestamp(offset).do();\n   *  ```\n   *\n   [Response data schema details](https://developer.algorand.org/docs/rest-apis/algod/#post-v2devmodeblocksoffsetoffset)\n   * @param offset\n   * @category POST\n   */\n  setBlockOffsetTimestamp(offset: number) {\n    return new SetBlockOffsetTimestamp(this.c, this.intDecoding, offset);\n  }\n\n  /**\n   * Get the offset (in seconds) applied to the block timestamp when creating new blocks in devmode.\n   *\n   *  #### Example\n   *  ```typesecript\n   *  const currentOffset = await client.getBlockOffsetTimestamp().do();\n   *  ```\n   *\n   [Response data schema details](https://developer.algorand.org/docs/rest-apis/algod/#get-v2devmodeblocksoffset)\n   * @category GET\n   */\n  getBlockOffsetTimestamp() {\n    return new GetBlockOffsetTimestamp(this.c, this.intDecoding);\n  }\n\n  /**\n   * Set the sync round on the ledger (algod must have EnableFollowMode: true), restricting catchup.\n   *\n   *  #### Example\n   *  ```typesecript\n   *  const round = 10000\n   *  await client.setSyncRound(round).do();\n   *  ```\n   *\n   [Response data schema details](https://developer.algorand.org/docs/rest-apis/algod/#post-v2ledgersyncround)\n   * @param round\n   * @category POST\n   */\n  setSyncRound(round: number) {\n    return new SetSyncRound(this.c, this.intDecoding, round);\n  }\n\n  /**\n   * Un-Set the sync round on the ledger (algod must have EnableFollowMode: true), removing the restriction on catchup.\n   *\n   *  #### Example\n   *  ```typesecript\n   *  await client.unsetSyncRound().do();\n   *  ```\n   *\n   [Response data schema details](https://developer.algorand.org/docs/rest-apis/algod/#delete-v2ledgersync)\n   * @category DELETE\n   */\n  unsetSyncRound() {\n    return new UnsetSyncRound(this.c, this.intDecoding);\n  }\n\n  /**\n   * Get the current sync round on the ledger (algod must have EnableFollowMode: true).\n   *\n   *  #### Example\n   *  ```typesecript\n   *  const currentSyncRound = await client.getSyncRound().do();\n   *  ```\n   *\n   [Response data schema details](https://developer.algorand.org/docs/rest-apis/algod/#get-v2ledgersync)\n   * @category GET\n   */\n  getSyncRound() {\n    return new GetSyncRound(this.c, this.intDecoding);\n  }\n\n  /**\n   * Ready check which returns 200 OK if algod is healthy and caught up\n   *\n   *  #### Example\n   *  ```typesecript\n   *  await client.ready().do();\n   *  ```\n   *\n   [Response data schema details](https://developer.algorand.org/docs/rest-apis/algod/#get-ready)\n   * @category GET\n   */\n  ready() {\n    return new Ready(this.c, this.intDecoding);\n  }\n}\n","import { Buffer } from 'buffer';\nimport ServiceClient from './v2/serviceClient';\nimport * as txn from '../transaction';\nimport { CustomTokenHeader, KMDTokenHeader } from './urlTokenBaseHTTPClient';\n\nexport default class Kmd extends ServiceClient {\n  constructor(\n    token: string | KMDTokenHeader | CustomTokenHeader,\n    baseServer = 'http://127.0.0.1',\n    port: string | number = 7833,\n    headers = {}\n  ) {\n    super('X-KMD-API-Token', token, baseServer, port, headers);\n  }\n\n  /**\n   * version returns a VersionResponse containing a list of kmd API versions supported by this running kmd instance.\n   */\n  async versions() {\n    const res = await this.c.get('/versions');\n    return res.body;\n  }\n\n  /**\n   * listWallets returns a ListWalletsResponse containing the list of wallets known to kmd. Using a wallet ID\n   * returned from this endpoint, you can initialize a wallet handle with client.InitWalletHandle\n   */\n  async listWallets() {\n    const res = await this.c.get('/v1/wallets');\n    return res.body;\n  }\n\n  /**\n   * createWallet creates a wallet with the specified name, password, driver,\n   * and master derivation key. If the master derivation key is blank, one is\n   * generated internally to kmd. CreateWallet returns a CreateWalletResponse\n   * containing information about the new wallet.\n   * @param walletName\n   * @param walletPassword\n   * @param walletDriverName\n   * @param walletMDK\n   */\n  async createWallet(\n    walletName: string,\n    walletPassword: string,\n    walletMDK: Uint8Array = new Uint8Array(),\n    walletDriverName = 'sqlite'\n  ) {\n    const req = {\n      wallet_name: walletName,\n      wallet_driver_name: walletDriverName,\n      wallet_password: walletPassword,\n      master_derivation_key: Buffer.from(walletMDK).toString('base64'),\n    };\n    const res = await this.c.post('/v1/wallet', req);\n    return res.body;\n  }\n\n  /**\n   * initWalletHandle accepts a wallet ID and a wallet password, and returns an\n   * initWalletHandleResponse containing a wallet handle token. This wallet\n   * handle token can be used for subsequent operations on this wallet, like key\n   * generation, transaction signing, etc.. WalletHandleTokens expire after a\n   * configurable number of seconds, and must be renewed periodically with\n   * RenewWalletHandle. It is good practice to call ReleaseWalletHandle when\n   * you're done interacting with this wallet.\n   * @param walletID\n   * @param walletPassword\n   */\n  async initWalletHandle(walletID: string, walletPassword: string) {\n    const req = {\n      wallet_id: walletID,\n      wallet_password: walletPassword,\n    };\n    const res = await this.c.post('/v1/wallet/init', req);\n    return res.body;\n  }\n\n  /**\n   * releaseWalletHandle invalidates the passed wallet handle token, making\n   * it unusuable for subsequent wallet operations.\n   * @param walletHandle\n   */\n  async releaseWalletHandle(walletHandle: string) {\n    const req = {\n      wallet_handle_token: walletHandle,\n    };\n    const res = await this.c.post('/v1/wallet/release', req);\n    return res.body;\n  }\n\n  /**\n   * renewWalletHandle accepts a wallet handle and attempts to renew it, moving\n   * the expiration time to some number of seconds in the future. It returns a\n   * RenewWalletHandleResponse containing the walletHandle and the number of\n   * seconds until expiration\n   * @param walletHandle\n   */\n  async renewWalletHandle(walletHandle: string) {\n    const req = {\n      wallet_handle_token: walletHandle,\n    };\n    const res = await this.c.post('/v1/wallet/renew', req);\n    return res.body;\n  }\n\n  /**\n   * renameWallet accepts a wallet ID, wallet password, and a new wallet name,\n   * and renames the underlying wallet.\n   * @param walletID\n   * @param walletPassword\n   * @param newWalletName\n   */\n  async renameWallet(\n    walletID: string,\n    walletPassword: string,\n    newWalletName: string\n  ) {\n    const req = {\n      wallet_id: walletID,\n      wallet_password: walletPassword,\n      wallet_name: newWalletName,\n    };\n    const res = await this.c.post('/v1/wallet/rename', req);\n    return res.body;\n  }\n\n  /**\n   * getWallet accepts a wallet handle and returns high level information about\n   * this wallet in a GetWalletResponse.\n   * @param walletHandle\n   */\n  async getWallet(walletHandle: string) {\n    const req = {\n      wallet_handle_token: walletHandle,\n    };\n    const res = await this.c.post('/v1/wallet/info', req);\n    return res.body;\n  }\n\n  /**\n   * exportMasterDerivationKey accepts a wallet handle and a wallet password, and\n   * returns an ExportMasterDerivationKeyResponse containing the master\n   * derivation key. This key can be used as an argument to CreateWallet in\n   * order to recover the keys generated by this wallet. The master derivation\n   * key can be encoded as a sequence of words using the mnemonic library, and\n   * @param walletHandle\n   * @param walletPassword\n   */\n  async exportMasterDerivationKey(\n    walletHandle: string,\n    walletPassword: string\n  ) {\n    const req = {\n      wallet_handle_token: walletHandle,\n      wallet_password: walletPassword,\n    };\n    const res = await this.c.post('/v1/master-key/export', req);\n    return {\n      master_derivation_key: Buffer.from(\n        res.body.master_derivation_key,\n        'base64'\n      ),\n    };\n  }\n\n  /**\n   * importKey accepts a wallet handle and an ed25519 private key, and imports\n   * the key into the wallet. It returns an ImportKeyResponse containing the\n   * address corresponding to this private key.\n   * @param walletHandle\n   * @param secretKey\n   */\n  async importKey(walletHandle: string, secretKey: Uint8Array) {\n    const req = {\n      wallet_handle_token: walletHandle,\n      private_key: Buffer.from(secretKey).toString('base64'),\n    };\n    const res = await this.c.post('/v1/key/import', req);\n    return res.body;\n  }\n\n  /**\n   * exportKey accepts a wallet handle, wallet password, and address, and returns\n   * an ExportKeyResponse containing the ed25519 private key corresponding to the\n   * address stored in the wallet.\n   * @param walletHandle\n   * @param walletPassword\n   * @param addr\n   */\n  async exportKey(walletHandle: string, walletPassword: string, addr: string) {\n    const req = {\n      wallet_handle_token: walletHandle,\n      address: addr,\n      wallet_password: walletPassword,\n    };\n    const res = await this.c.post('/v1/key/export', req);\n    return { private_key: Buffer.from(res.body.private_key, 'base64') };\n  }\n\n  /**\n   * generateKey accepts a wallet handle, and then generates the next key in the\n   * wallet using its internal master derivation key. Two wallets with the same\n   * master derivation key will generate the same sequence of keys.\n   * @param walletHandle\n   */\n  async generateKey(walletHandle: string) {\n    const req = {\n      wallet_handle_token: walletHandle,\n      display_mnemonic: false,\n    };\n    const res = await this.c.post('/v1/key', req);\n    return res.body;\n  }\n\n  /**\n   * deleteKey accepts a wallet handle, wallet password, and address, and deletes\n   * the information about this address from the wallet (including address and\n   * secret key). If DeleteKey is called on a key generated using GenerateKey,\n   * the same key will not be generated again. However, if a wallet is recovered\n   * using the master derivation key, a key generated in this way can be\n   * recovered.\n   * @param walletHandle\n   * @param walletPassword\n   * @param addr\n   */\n  async deleteKey(walletHandle: string, walletPassword: string, addr: string) {\n    const req = {\n      wallet_handle_token: walletHandle,\n      address: addr,\n      wallet_password: walletPassword,\n    };\n    const res = await this.c.delete('/v1/key', req);\n    return res.body;\n  }\n\n  /**\n   * ListKeys accepts a wallet handle and returns a ListKeysResponse containing\n   * all of the addresses for which this wallet contains secret keys.\n   * @param walletHandle\n   */\n  async listKeys(walletHandle: string) {\n    const req = {\n      wallet_handle_token: walletHandle,\n    };\n    const res = await this.c.post('/v1/key/list', req);\n    return res.body;\n  }\n\n  /**\n   * signTransaction accepts a wallet handle, wallet password, and a transaction,\n   * and returns and SignTransactionResponse containing an encoded, signed\n   * transaction. The transaction is signed using the key corresponding to the\n   * Sender field.\n   * @param walletHandle\n   * @param walletPassword\n   * @param transaction\n   */\n  async signTransaction(\n    walletHandle: string,\n    walletPassword: string,\n    transaction: txn.TransactionLike\n  ) {\n    const tx = txn.instantiateTxnIfNeeded(transaction);\n\n    const req = {\n      wallet_handle_token: walletHandle,\n      wallet_password: walletPassword,\n      transaction: Buffer.from(tx.toByte()).toString('base64'),\n    };\n    const res = await this.c.post('/v1/transaction/sign', req);\n\n    if (res.status === 200) {\n      return Buffer.from(res.body.signed_transaction, 'base64');\n    }\n    return res.body;\n  }\n\n  /**\n   * signTransactionWithSpecificPublicKey accepts a wallet handle, wallet password, a transaction, and a public key,\n   * and returns and SignTransactionResponse containing an encoded, signed\n   * transaction. The transaction is signed using the key corresponding to the\n   * publicKey arg.\n   * @param walletHandle\n   * @param walletPassword\n   * @param transaction\n   * @param publicKey - sign the txn with the key corresponding to publicKey (used for working with a rekeyed addr)\n   */\n  async signTransactionWithSpecificPublicKey(\n    walletHandle: string,\n    walletPassword: string,\n    transaction: txn.TransactionLike,\n    publicKey: Uint8Array | string\n  ) {\n    const tx = txn.instantiateTxnIfNeeded(transaction);\n\n    const req = {\n      wallet_handle_token: walletHandle,\n      wallet_password: walletPassword,\n      transaction: Buffer.from(tx.toByte()).toString('base64'),\n      public_key: Buffer.from(publicKey).toString('base64'),\n    };\n    const res = await this.c.post('/v1/transaction/sign', req);\n\n    if (res.status === 200) {\n      return Buffer.from(res.body.signed_transaction, 'base64');\n    }\n    return res.body;\n  }\n\n  /**\n   * listMultisig accepts a wallet handle and returns a ListMultisigResponse\n   * containing the multisig addresses whose preimages are stored in this wallet.\n   * A preimage is the information needed to reconstruct this multisig address,\n   * including multisig version information, threshold information, and a list\n   * of public keys.\n   * @param walletHandle\n   */\n  async listMultisig(walletHandle: string) {\n    const req = {\n      wallet_handle_token: walletHandle,\n    };\n    const res = await this.c.post('/v1/multisig/list', req);\n    return res.body;\n  }\n\n  /**\n   * importMultisig accepts a wallet handle and the information required to\n   * generate a multisig address. It derives this address, and stores all of the\n   * information within the wallet. It returns a ImportMultisigResponse with the\n   * derived address.\n   * @param walletHandle\n   * @param version\n   * @param threshold\n   * @param pks\n   */\n  async importMultisig(\n    walletHandle: string,\n    version: number,\n    threshold: number,\n    pks: string[]\n  ) {\n    const req = {\n      wallet_handle_token: walletHandle,\n      multisig_version: version,\n      threshold,\n      pks,\n    };\n    const res = await this.c.post('/v1/multisig/import', req);\n    return res.body;\n  }\n\n  /**\n   * exportMultisig accepts a wallet handle, wallet password, and multisig\n   * address, and returns an ExportMultisigResponse containing the stored\n   * multisig preimage. The preimage contains all of the information necessary\n   * to derive the multisig address, including version, threshold, and a list of\n   * public keys.\n   * @param walletHandle\n   * @param walletPassword\n   * @param addr\n   */\n  async exportMultisig(walletHandle: string, addr: string) {\n    const req = {\n      wallet_handle_token: walletHandle,\n      address: addr,\n    };\n    const res = await this.c.post('/v1/multisig/export', req);\n    return res.body;\n  }\n\n  /**\n   * signMultisigTransaction accepts a wallet handle, wallet password,\n   * transaction, public key (*not* an address), and an optional partial\n   * MultisigSig. It looks up the secret key corresponding to the public key, and\n   * returns a SignMultisigTransactionResponse containing a MultisigSig with a\n   * signature by the secret key included.\n   * @param walletHandle\n   * @param pw\n   * @param tx\n   * @param pk\n   * @param partial\n   */\n  async signMultisigTransaction(\n    walletHandle: string,\n    pw: string,\n    transaction: txn.TransactionLike,\n    pk: Uint8Array | string,\n    partial: string\n  ) {\n    const tx = txn.instantiateTxnIfNeeded(transaction);\n    const req = {\n      wallet_handle_token: walletHandle,\n      transaction: Buffer.from(tx.toByte()).toString('base64'),\n      public_key: Buffer.from(pk).toString('base64'),\n      partial_multisig: partial,\n      wallet_password: pw,\n    };\n    const res = await this.c.post('/v1/multisig/sign', req);\n    return res.body;\n  }\n\n  /**\n   * deleteMultisig accepts a wallet handle, wallet password, and multisig\n   * address, and deletes the information about this multisig address from the\n   * wallet (including address and secret key).\n   * @param walletHandle\n   * @param walletPassword\n   * @param addr\n   */\n  async deleteMultisig(\n    walletHandle: string,\n    walletPassword: string,\n    addr: string\n  ) {\n    const req = {\n      wallet_handle_token: walletHandle,\n      address: addr,\n      wallet_password: walletPassword,\n    };\n    const res = await this.c.delete('/v1/multisig', req);\n    return res.body;\n  }\n}\n","import JSONRequest from '../jsonrequest';\n\n/**\n * Returns the health object for the service.\n * Returns 200 if healthy.\n *\n * #### Example\n * ```typescript\n * const health = await indexerClient.makeHealthCheck().do();\n * ```\n *\n * [Response data schema details](https://developer.algorand.org/docs/rest-apis/indexer/#get-health)\n * @category GET\n */\nexport default class MakeHealthCheck extends JSONRequest {\n  /**\n   * @returns `/health`\n   */\n  // eslint-disable-next-line class-methods-use-this\n  path() {\n    return '/health';\n  }\n}\n","import JSONRequest from '../jsonrequest';\nimport HTTPClient from '../../client';\nimport IntDecoding from '../../../types/intDecoding';\n\nexport default class LookupAssetBalances extends JSONRequest {\n  /**\n   * Returns the list of accounts which hold the given asset and their balance.\n   *\n   * #### Example\n   * ```typescript\n   * const assetId = 163650;\n   * const assetBalances = await indexerClient.lookupAssetBalances(assetId).do();\n   * ```\n   *\n   * [Response data schema details](https://developer.algorand.org/docs/rest-apis/indexer/#get-v2assetsasset-idbalances)\n   * @param index - The asset ID to look up.\n   */\n  constructor(c: HTTPClient, intDecoding: IntDecoding, private index: number) {\n    super(c, intDecoding);\n    this.index = index;\n  }\n\n  /**\n   * @returns `/v2/assets/${index}/balances`\n   */\n  path() {\n    return `/v2/assets/${this.index}/balances`;\n  }\n\n  /**\n   * Limit results for pagination.\n   *\n   * #### Example\n   * ```typescript\n   * const assetId = 163650;\n   * const maxResults = 20;\n   * const assetBalances = await indexerClient\n   *        .lookupAssetBalances(assetId)\n   *        .limit(maxResults)\n   *        .do();\n   * ```\n   *\n   * @param limit - maximum number of results to return.\n   * @category query\n   */\n  limit(limit: number) {\n    this.query.limit = limit;\n    return this;\n  }\n\n  /**\n   * Filtered results should have an asset balance greater than this value.\n   *\n   * #### Example\n   * ```typescript\n   * const assetId = 163650;\n   * const minBalance = 1000000;\n   * const assetBalances = await indexerClient\n   *        .lookupAssetBalances(assetId)\n   *        .currencyGreaterThan(minBalance)\n   *        .do();\n   * ```\n   * @param greater\n   * @category query\n   */\n  currencyGreaterThan(greater: number) {\n    this.query['currency-greater-than'] = greater;\n    return this;\n  }\n\n  /**\n   * Filtered results should have an asset balance less than this value.\n   *\n   * #### Example\n   * ```typescript\n   * const assetId = 163650;\n   * const maxBalance = 2000000;\n   * const assetBalances = await indexerClient\n   *        .lookupAssetBalances(assetId)\n   *        .currencyLessThan(maxBalance)\n   *        .do();\n   * ```\n   * @param lesser\n   * @category query\n   */\n  currencyLessThan(lesser: number) {\n    this.query['currency-less-than'] = lesser;\n    return this;\n  }\n\n  /**\n   * Specify the next page of results.\n   *\n   * #### Example\n   * ```typescript\n   * const assetId = 163650;\n   * const maxResults = 20;\n   *\n   * const assetBalancesPage1 = await indexerClient\n   *        .lookupAssetBalances(assetId)\n   *        .limit(maxResults)\n   *        .do();\n   *\n   * const assetBalancesPage2 = await indexerClient\n   *        .lookupAssetBalances(assetId)\n   *        .limit(maxResults)\n   *        .nextToken(assetBalancesPage1[\"next-token\"])\n   *        .do();\n   * ```\n   * @param nextToken - provided by the previous results.\n   * @category query\n   */\n  nextToken(nextToken: string) {\n    this.query.next = nextToken;\n    return this;\n  }\n\n  /**\n   * Include all items including closed accounts, deleted applications, destroyed assets, opted-out asset holdings, and closed-out application localstates.\n   *\n   * #### Example 1\n   * ```typescript\n   * const assetId = 163650;\n   * const assetBalances = await indexerClient\n   *        .lookupAssetBalances(assetId)\n   *        .includeAll(false)\n   *        .do();\n   * ```\n   *\n   * #### Example 2\n   * ```typescript\n   * const assetId = 163650;\n   * const assetBalances = await indexerClient\n   *        .lookupAssetBalances(assetId)\n   *        .includeAll()\n   *        .do();\n   * ```\n   *\n   * @param value\n   * @category query\n   */\n  includeAll(value = true) {\n    this.query['include-all'] = value;\n    return this;\n  }\n}\n","import { Buffer } from 'buffer';\nimport JSONRequest from '../jsonrequest';\nimport HTTPClient from '../../client';\nimport IntDecoding from '../../../types/intDecoding';\n\n/**\n * Accept base64 string or Uint8Array and output base64 string\n * @param data - Base64 string or Uint8Array\n * @returns The inputted base64 string, or a base64 string representation of the Uint8Array\n */\nexport function base64StringFunnel(data: Uint8Array | string) {\n  if (typeof data === 'string') {\n    return data;\n  }\n  return Buffer.from(data).toString('base64');\n}\n\nexport default class LookupAccountTransactions extends JSONRequest {\n  /**\n   * Returns transactions relating to the given account.\n   *\n   * #### Example\n   * ```typescript\n   * const address = \"XBYLS2E6YI6XXL5BWCAMOA4GTWHXWENZMX5UHXMRNWWUQ7BXCY5WC5TEPA\";\n   * const accountTxns = await indexerClient.lookupAccountTransactions(address).do();\n   * ```\n   *\n   * [Response data schema details](https://developer.algorand.org/docs/rest-apis/indexer/#get-v2accountsaccount-idtransactions)\n   * @param account - The address of the account.\n   */\n  constructor(\n    c: HTTPClient,\n    intDecoding: IntDecoding,\n    private account: string\n  ) {\n    super(c, intDecoding);\n    this.account = account;\n  }\n\n  /**\n   * @returns `/v2/accounts/${account}/transactions`\n   */\n  path() {\n    return `/v2/accounts/${this.account}/transactions`;\n  }\n\n  /**\n   * Specifies a prefix which must be contained in the note field.\n   *\n   * #### Example\n   * ```typescript\n   * const notePrefixBase64Encoded = \"Y3JlYXRl\";\n   * const address = \"XBYLS2E6YI6XXL5BWCAMOA4GTWHXWENZMX5UHXMRNWWUQ7BXCY5WC5TEPA\";\n   * const accountTxns = await indexerClient\n   *        .lookupAccountTransactions(address)\n   *        .notePrefix(notePrefixBase64Encoded)\n   *        .do();\n   * ```\n   *\n   * @param prefix - base64 string or uint8array\n   * @category query\n   */\n  notePrefix(prefix: Uint8Array | string) {\n    this.query['note-prefix'] = base64StringFunnel(prefix);\n    return this;\n  }\n\n  /**\n   * Type of transaction to filter with.\n   *\n   * #### Example\n   * ```typescript\n   * const address = \"XBYLS2E6YI6XXL5BWCAMOA4GTWHXWENZMX5UHXMRNWWUQ7BXCY5WC5TEPA\";\n   * const accountTxns = await indexerClient\n   *        .lookupAccountTransactions(address)\n   *        .txType(\"appl\")\n   *        .do();\n   * ```\n   *\n   * @param type - one of `pay`, `keyreg`, `acfg`, `axfer`, `afrz`, `appl`, `stpf`\n   * @category query\n   */\n  txType(type: string) {\n    this.query['tx-type'] = type;\n    return this;\n  }\n\n  /**\n   * Type of signature to filter with.\n   * - sig: Standard\n   * - msig: MultiSig\n   * - lsig: LogicSig\n   *\n   * #### Example\n   * ```typescript\n   * const address = \"XBYLS2E6YI6XXL5BWCAMOA4GTWHXWENZMX5UHXMRNWWUQ7BXCY5WC5TEPA\";\n   * const accountTxns = await indexerClient\n   *        .lookupAccountTransactions(address)\n   *        .sigType(\"msig\")\n   *        .do();\n   * ```\n   *\n   * @param type - one of `sig`, `msig`, `lsig`\n   * @category query\n   */\n  sigType(type: string) {\n    this.query['sig-type'] = type;\n    return this;\n  }\n\n  /**\n   * Lookup the specific transaction by ID.\n   *\n   * #### Example\n   * ```typescript\n   * const txId = \"MEUOC4RQJB23CQZRFRKYEI6WBO73VTTPST5A7B3S5OKBUY6LFUDA\";\n   * const address = \"XBYLS2E6YI6XXL5BWCAMOA4GTWHXWENZMX5UHXMRNWWUQ7BXCY5WC5TEPA\";\n   * const accountTxns = await indexerClient\n   *        .lookupAccountTransactions(address)\n   *        .txid(txId)\n   *        .do();\n   * ```\n   * @remarks Alternatively, use `indexerClient.lookupTransactionByID(txnId).do()`\n   * @param txid\n   * @category query\n   */\n  txid(txid: string) {\n    this.query.txid = txid;\n    return this;\n  }\n\n  /**\n   * Include results for the specified round.\n   *\n   * #### Example\n   * ```typescript\n   * const targetBlock = 18309917;\n   * const address = \"XBYLS2E6YI6XXL5BWCAMOA4GTWHXWENZMX5UHXMRNWWUQ7BXCY5WC5TEPA\";\n   * const accountTxns = await indexerClient\n   *        .lookupAccountTransactions(address)\n   *        .round(targetBlock)\n   *        .do();\n   * ```\n   *\n   * @param round\n   * @category query\n   */\n  round(round: number) {\n    this.query.round = round;\n    return this;\n  }\n\n  /**\n   * Include results at or after the specified min-round.\n   *\n   * #### Example\n   * ```typescript\n   * const minRound = 18309917;\n   * const address = \"XBYLS2E6YI6XXL5BWCAMOA4GTWHXWENZMX5UHXMRNWWUQ7BXCY5WC5TEPA\";\n   * const accountTxns = await indexerClient\n   *        .lookupAccountTransactions(address)\n   *        .minRound(minRound)\n   *        .do();\n   * ```\n   *\n   * @param round\n   * @category query\n   */\n  minRound(round: number) {\n    this.query['min-round'] = round;\n    return this;\n  }\n\n  /**\n   * Include results at or before the specified max-round.\n   *\n   * #### Example\n   * ```typescript\n   * const maxRound = 18309917;\n   * const address = \"XBYLS2E6YI6XXL5BWCAMOA4GTWHXWENZMX5UHXMRNWWUQ7BXCY5WC5TEPA\";\n   * const accountTxns = await indexerClient\n   *        .lookupAccountTransactions(address)\n   *        .maxRound(maxRound)\n   *        .do();\n   * ```\n   *\n   * @param round\n   * @category query\n   */\n  maxRound(round: number) {\n    this.query['max-round'] = round;\n    return this;\n  }\n\n  /**\n   * Asset ID to filter with.\n   *\n   * #### Example\n   * ```typescript\n   * const assetID = 163650;\n   * const address = \"XBYLS2E6YI6XXL5BWCAMOA4GTWHXWENZMX5UHXMRNWWUQ7BXCY5WC5TEPA\";\n   * const accountTxns = await indexerClient\n   *        .lookupAccountTransactions(address)\n   *        .assetID(assetID)\n   *        .do();\n   * ```\n   *\n   * @param id\n   * @category query\n   */\n  assetID(id: number) {\n    this.query['asset-id'] = id;\n    return this;\n  }\n\n  /**\n   * Maximum number of results to return.\n   *\n   * #### Example\n   * ```typescript\n   * const maxResults = 25;\n   * const address = \"XBYLS2E6YI6XXL5BWCAMOA4GTWHXWENZMX5UHXMRNWWUQ7BXCY5WC5TEPA\";\n   * const accountTxns = await indexerClient\n   *        .lookupAccountTransactions(address)\n   *        .limit(maxResults)\n   *        .do();\n   * ```\n   *\n   * @param limit\n   * @category query\n   */\n  limit(limit: number) {\n    this.query.limit = limit;\n    return this;\n  }\n\n  /**\n   * Include results before the given time.\n   *\n   * #### Example\n   * ```typescript\n   * const beforeTime = \"2022-02-02T20:20:22.02Z\";\n   * const address = \"XBYLS2E6YI6XXL5BWCAMOA4GTWHXWENZMX5UHXMRNWWUQ7BXCY5WC5TEPA\";\n   * const accountTxns = await indexerClient\n   *        .lookupAccountTransactions(address)\n   *        .beforeTime(beforeTime)\n   *        .do();\n   * ```\n   *\n   * @param before - rfc3339 string\n   * @category query\n   */\n  beforeTime(before: string) {\n    this.query['before-time'] = before;\n    return this;\n  }\n\n  /**\n   * Include results after the given time.\n   *\n   * #### Example\n   * ```typescript\n   * const afterTime = \"2022-10-21T00:00:11.55Z\";\n   * const address = \"XBYLS2E6YI6XXL5BWCAMOA4GTWHXWENZMX5UHXMRNWWUQ7BXCY5WC5TEPA\";\n   * const accountTxns = await indexerClient\n   *        .lookupAccountTransactions(address)\n   *        .afterTime(afterTime)\n   *        .do();\n   * ```\n   *\n   * @param after - rfc3339 string\n   * @category query\n   */\n  afterTime(after: string) {\n    this.query['after-time'] = after;\n    return this;\n  }\n\n  /**\n   * Filtered results should have an amount greater than this value, as int, representing microAlgos, unless an asset-id is provided, in which case units are in the asset's units.\n   *\n   * #### Example 1\n   * ```typescript\n   * const minBalance = 300000;\n   * const address = \"XBYLS2E6YI6XXL5BWCAMOA4GTWHXWENZMX5UHXMRNWWUQ7BXCY5WC5TEPA\";\n   * const accountTxns = await indexerClient\n   *        .lookupAccountTransactions(address)\n   *        .currencyGreaterThan(minBalance - 1)\n   *        .do();\n   * ```\n   *\n   * #### Example 2\n   * ```typescript\n   * const assetID = 163650;\n   * const minBalance = 300000;\n   * const address = \"XBYLS2E6YI6XXL5BWCAMOA4GTWHXWENZMX5UHXMRNWWUQ7BXCY5WC5TEPA\";\n   * const accountTxns = await indexerClient\n   *        .lookupAccountTransactions(address)\n   *        .assetID(assetID)\n   *        .currencyGreaterThan(minBalance - 1)\n   *        .do();\n   * ```\n   * @remarks\n   * If you are looking for transactions with the currency amount greater than 0, simply construct the query without `currencyGreaterThan` because it doesn't accept `-1`, and passing the `0` `currency-greater-than` value would exclude transactions with a 0 amount.\n   *\n   * @param greater\n   * @category query\n   */\n  currencyGreaterThan(greater: number) {\n    this.query['currency-greater-than'] = greater;\n    return this;\n  }\n\n  /**\n   * Filtered results should have an amount less than this value, as int, representing microAlgos, unless an asset-id is provided, in which case units are in the asset's units.\n   *\n   * #### Example 1\n   * ```typescript\n   * const maxBalance = 500000;\n   * const address = \"XBYLS2E6YI6XXL5BWCAMOA4GTWHXWENZMX5UHXMRNWWUQ7BXCY5WC5TEPA\";\n   * const accountTxns = await indexerClient\n   *        .lookupAccountTransactions(address)\n   *        .currencyLessThan(maxBalance + 1)\n   *        .do();\n   * ```\n   *\n   * #### Example 2\n   * ```typescript\n   * const assetID = 163650;\n   * const maxBalance = 500000;\n   * const address = \"XBYLS2E6YI6XXL5BWCAMOA4GTWHXWENZMX5UHXMRNWWUQ7BXCY5WC5TEPA\";\n   * const accountTxns = await indexerClient\n   *        .lookupAccountTransactions(address)\n   *        .assetID(assetID)\n   *        .currencyLessThan(maxBalance + 1)\n   *        .do();\n   * ```\n   *\n   * @param lesser\n   * @category query\n   */\n  currencyLessThan(lesser: number) {\n    this.query['currency-less-than'] = lesser;\n    return this;\n  }\n\n  /**\n   * The next page of results. Use the next token provided by the previous results.\n   *\n   * #### Example\n   * ```typescript\n   * const maxResults = 25;\n   * const address = \"XBYLS2E6YI6XXL5BWCAMOA4GTWHXWENZMX5UHXMRNWWUQ7BXCY5WC5TEPA\";\n   *\n   * const accountTxnsPage1 = await indexerClient\n   *        .lookupAccountTransactions(address)\n   *        .limit(maxResults)\n   *        .do();\n   *\n   * const accountTxnsPage2 = await indexerClient\n   *        .lookupAccountTransactions(address)\n   *        .limit(maxResults)\n   *        .nextToken(accountTxnsPage1[\"next-token\"])\n   *        .do();\n   * ```\n   *\n   * @param nextToken - provided by the previous results.\n   * @category query\n   */\n  nextToken(nextToken: string) {\n    this.query.next = nextToken;\n    return this;\n  }\n\n  /**\n   * Whether or not to include rekeying transactions.\n   *\n   * #### Example\n   * ```typescript\n   * const address = \"XBYLS2E6YI6XXL5BWCAMOA4GTWHXWENZMX5UHXMRNWWUQ7BXCY5WC5TEPA\";\n   * const accountTxns = await indexerClient\n   *        .lookupAccountTransactions(address)\n   *        .rekeyTo(false)\n   *        .do();\n   * ```\n   *\n   * @param rekeyTo\n   * @category query\n   */\n  rekeyTo(rekeyTo: boolean) {\n    this.query['rekey-to'] = rekeyTo;\n    return this;\n  }\n}\n","import JSONRequest from '../jsonrequest';\nimport HTTPClient from '../../client';\nimport IntDecoding from '../../../types/intDecoding';\nimport { base64StringFunnel } from './lookupAccountTransactions';\n\nexport default class LookupAssetTransactions extends JSONRequest {\n  /**\n   * Returns transactions relating to the given asset.\n   *\n   * #### Example\n   * ```typescript\n   * const assetId = 163650;\n   * const assetTxns = await indexerClient.lookupAssetTransactions(assetId).do();\n   * ```\n   *\n   * [Response data schema details](https://developer.algorand.org/docs/rest-apis/indexer/#get-v2assetsasset-idtransactions)\n   * @param index - The asset ID to look up.\n   */\n  constructor(c: HTTPClient, intDecoding: IntDecoding, private index: number) {\n    super(c, intDecoding);\n    this.index = index;\n  }\n\n  /**\n   * @returns `/v2/assets/${index}/transactions`\n   */\n  path() {\n    return `/v2/assets/${this.index}/transactions`;\n  }\n\n  /**\n   * Specifies a prefix which must be contained in the note field.\n   *\n   * #### Example\n   * ```typescript\n   * const notePrefixBase64Encoded = \"Y3JlYXRl\";\n   * const assetId = 163650;\n   * const assetTxns = await indexerClient\n   *        .lookupAssetTransactions(assetId)\n   *        .notePrefix(notePrefixBase64Encoded)\n   *        .do();\n   * ```\n   *\n   * @param prefix - base64 string or uint8array\n   * @category query\n   */\n  notePrefix(prefix: Uint8Array | string) {\n    this.query['note-prefix'] = base64StringFunnel(prefix);\n    return this;\n  }\n\n  /**\n   * Type of transaction to filter with.\n   *\n   * #### Example\n   * ```typescript\n   * const assetId = 163650;\n   * const assetTxns = await indexerClient\n   *        .lookupAssetTransactions(assetId)\n   *        .txType(\"axfer\")\n   *        .do();\n   * ```\n   *\n   * @param type - one of `pay`, `keyreg`, `acfg`, `axfer`, `afrz`, `appl`\n   * @category query\n   */\n  txType(type: string) {\n    this.query['tx-type'] = type;\n    return this;\n  }\n\n  /**\n   * Type of signature to filter with.\n   * - sig: Standard\n   * - msig: MultiSig\n   * - lsig: LogicSig\n   *\n   * #### Example\n   * ```typescript\n   * const assetId = 163650;\n   * const assetTxns = await indexerClient\n   *        .lookupAssetTransactions(assetId)\n   *        .sigType(\"lsig\")\n   *        .do();\n   * ```\n   *\n   * @param type - one of `sig`, `msig`, `lsig`\n   * @category query\n   */\n  sigType(type: string) {\n    this.query['sig-type'] = type;\n    return this;\n  }\n\n  /**\n   * Lookup the specific transaction by ID.\n   *\n   * #### Example\n   * ```typescript\n   * const txId = \"MEUOC4RQJB23CQZRFRKYEI6WBO73VTTPST5A7B3S5OKBUY6LFUDA\";\n   * const assetId = 163650;\n   * const assetTxns = await indexerClient\n   *        .lookupAssetTransactions(assetId)\n   *        .txid(txId)\n   *        .do();\n   * ```\n   *\n   * @param txid\n   * @category query\n   */\n  txid(txid: string) {\n    this.query.txid = txid;\n    return this;\n  }\n\n  /**\n   * Include results for the specified round.\n   *\n   * #### Example\n   * ```typescript\n   * const targetBlock = 18309917;\n   * const assetId = 163650;\n   * const assetTxns = await indexerClient\n   *        .lookupAssetTransactions(assetId)\n   *        .round(targetBlock)\n   *        .do();\n   * ```\n   *\n   * @param round\n   * @category query\n   */\n  round(round: number) {\n    this.query.round = round;\n    return this;\n  }\n\n  /**\n   * Include results at or after the specified min-round.\n   *\n   * #### Example\n   * ```typescript\n   * const minRound = 18309917;\n   * const assetId = 163650;\n   * const assetTxns = await indexerClient\n   *        .lookupAssetTransactions(assetId)\n   *        .minRound(minRound)\n   *        .do();\n   * ```\n   *\n   * @param round\n   * @category query\n   */\n  minRound(round: number) {\n    this.query['min-round'] = round;\n    return this;\n  }\n\n  /**\n   * Include results at or before the specified max-round.\n   *\n   * #### Example\n   * ```typescript\n   * const maxRound = 18309917;\n   * const assetId = 163650;\n   * const assetTxns = await indexerClient\n   *        .lookupAssetTransactions(assetId)\n   *        .maxRound(maxRound)\n   *        .do();\n   * ```\n   *\n   * @param round\n   * @category query\n   */\n  maxRound(round: number) {\n    this.query['max-round'] = round;\n    return this;\n  }\n\n  /**\n   * Maximum number of results to return.\n   *\n   * #### Example\n   * ```typescript\n   * const maxResults = 25;\n   * const assetId = 163650;\n   * const assetTxns = await indexerClient\n   *        .lookupAssetTransactions(assetId)\n   *        .limit(maxResults)\n   *        .do();\n   * ```\n   *\n   * @param limit\n   * @category query\n   */\n  limit(limit: number) {\n    this.query.limit = limit;\n    return this;\n  }\n\n  /**\n   * Include results before the given time.\n   *\n   * #### Example\n   * ```typescript\n   * const beforeTime = \"2022-02-02T20:20:22.02Z\";\n   * const assetId = 163650;\n   * const assetTxns = await indexerClient\n   *        .lookupAssetTransactions(assetId)\n   *        .beforeTime(beforeTime)\n   *        .do();\n   * ```\n   *\n   * @param before - rfc3339 string\n   * @category query\n   */\n  beforeTime(before: string) {\n    this.query['before-time'] = before;\n    return this;\n  }\n\n  /**\n   * Include results after the given time.\n   *\n   * #### Example\n   * ```typescript\n   * const afterTime = \"2022-10-21T00:00:11.55Z\";\n   * const assetId = 163650;\n   * const assetTxns = await indexerClient\n   *        .lookupAssetTransactions(assetId)\n   *        .afterTime(afterTime)\n   *        .do();\n   * ```\n   *\n   * @param after - rfc3339 string\n   * @category query\n   */\n  afterTime(after: string) {\n    this.query['after-time'] = after;\n    return this;\n  }\n\n  /**\n   * Filtered results should have an amount greater than this value, as int, representing asset units.\n   *\n   * #### Example\n   * ```typescript\n   * const minBalance = 300000;\n   * const assetId = 163650;\n   * const assetTxns = await indexerClient\n   *        .lookupAssetTransactions(assetId)\n   *        .currencyGreaterThan(minBalance - 1)\n   *        .do();\n   * ```\n   *\n   * @remarks\n   * If you are looking for transactions with the currency amount greater than 0, simply construct the query without `currencyGreaterThan` because it doesn't accept `-1`, and passing the `0` `currency-greater-than` value would exclude transactions with a 0 amount.\n   *\n   * @param greater\n   * @category query\n   */\n  currencyGreaterThan(greater: number) {\n    this.query['currency-greater-than'] = greater;\n    return this;\n  }\n\n  /**\n   * Filtered results should have an amount less than this value, as int, representing asset units.\n   *\n   * #### Example\n   * ```typescript\n   * const maxBalance = 500000;\n   * const assetId = 163650;\n   * const assetTxns = await indexerClient\n   *        .lookupAssetTransactions(assetId)\n   *        .currencyLessThan(maxBalance + 1)\n   *        .do();\n   * ```\n   *\n   * @param lesser\n   * @category query\n   */\n  currencyLessThan(lesser: number) {\n    this.query['currency-less-than'] = lesser;\n    return this;\n  }\n\n  /**\n   * Combined with address, defines what address to filter on, as string.\n   *\n   * #### Example\n   * ```typescript\n   * const assetId = 163650;\n   * const address = \"XBYLS2E6YI6XXL5BWCAMOA4GTWHXWENZMX5UHXMRNWWUQ7BXCY5WC5TEPA\";\n   * const role = \"sender\";\n   * const assetTxns = await indexerClient\n   *        .lookupAssetTransactions(assetId)\n   *        .address(address)\n   *        .addressRole(role)\n   *        .do();\n   * ```\n   *\n   * @param role - one of `sender`, `receiver`, `freeze-target`\n   * @category query\n   */\n  addressRole(role: string) {\n    this.query['address-role'] = role;\n    return this;\n  }\n\n  /**\n   * Only include transactions with this address in one of the transaction fields.\n   *\n   * #### Example\n   * ```typescript\n   * const assetId = 163650;\n   * const address = \"XBYLS2E6YI6XXL5BWCAMOA4GTWHXWENZMX5UHXMRNWWUQ7BXCY5WC5TEPA\";\n   * const assetTxns = await indexerClient\n   *        .lookupAssetTransactions(assetId)\n   *        .address(address)\n   *        .do();\n   * ```\n   *\n   * @param address\n   * @category query\n   */\n  address(address: string) {\n    this.query.address = address;\n    return this;\n  }\n\n  /**\n   * Whether or not to consider the `close-to` field as a receiver when filtering transactions, as bool. Set to `true` to ignore `close-to`.\n   *\n   * #### Example\n   * ```typescript\n   * const assetId = 163650;\n   * const assetTxns = await indexerClient\n   *        .lookupAssetTransactions(assetId)\n   *        .excludeCloseTo(true)\n   *        .do();\n   * ```\n   *\n   * @param exclude\n   * @category query\n   */\n  excludeCloseTo(exclude: boolean) {\n    this.query['exclude-close-to'] = exclude;\n    return this;\n  }\n\n  /**\n   * The next page of results.\n   *\n   * #### Example\n   * ```typescript\n   * const maxResults = 25;\n   * const assetId = 163650;\n   *\n   * const assetTxnsPage1 = await indexerClient\n   *        .lookupAssetTransactions(assetId)\n   *        .limit(maxResults)\n   *        .do();\n   *\n   * const assetTxnsPage2 = await indexerClient\n   *        .lookupAssetTransactions(assetId)\n   *        .limit(maxResults)\n   *        .nextToken(assetTxnsPage1[\"next-token\"])\n   *        .do();\n   * ```\n   *\n   * @param nextToken - provided by the previous results.\n   * @category query\n   */\n  nextToken(nextToken: string) {\n    this.query.next = nextToken;\n    return this;\n  }\n\n  /**\n   * Whether or not to include rekeying transactions.\n   *\n   * #### Example\n   * ```typescript\n   * const assetId = 163650;\n   * const assetTxns = await indexerClient\n   *        .lookupAssetTransactions(assetId)\n   *        .rekeyTo(false)\n   *        .do();\n   * ```\n   *\n   * @param rekeyTo\n   * @category query\n   */\n  rekeyTo(rekeyTo: boolean) {\n    this.query['rekey-to'] = rekeyTo;\n    return this;\n  }\n}\n","import JSONRequest from '../jsonrequest';\nimport HTTPClient from '../../client';\nimport IntDecoding from '../../../types/intDecoding';\n\nexport default class LookupBlock extends JSONRequest {\n  /**\n   * Returns the block for the passed round.\n   *\n   * #### Example\n   * ```typescript\n   * const targetBlock = 18309917;\n   * const blockInfo = await indexerClient.lookupBlock(targetBlock).do();\n   * ```\n   *\n   * [Response data schema details](https://developer.algorand.org/docs/rest-apis/indexer/#get-v2blocksround-number)\n   * @param round - The number of the round to look up.\n   * @category GET\n   */\n  constructor(c: HTTPClient, intDecoding: IntDecoding, private round: number) {\n    super(c, intDecoding);\n    this.round = round;\n  }\n\n  /**\n   * @returns `/v2/blocks/${round}`\n   */\n  path() {\n    return `/v2/blocks/${this.round}`;\n  }\n\n  /**\n   * Header only flag. When this is set to true, returned block does not contain the\n   * transactions.\n   */\n  headerOnly(headerOnly: boolean) {\n    this.query['header-only'] = headerOnly;\n    return this;\n  }\n}\n","import JSONRequest from '../jsonrequest';\nimport HTTPClient from '../../client';\nimport IntDecoding from '../../../types/intDecoding';\n\nexport default class LookupTransactionByID extends JSONRequest {\n  /**\n   * Returns information about the given transaction.\n   *\n   * #### Example\n   * ```typescript\n   * const txnId = \"MEUOC4RQJB23CQZRFRKYEI6WBO73VTTPST5A7B3S5OKBUY6LFUDA\";\n   * const txnInfo = await indexerClient.lookupTransactionByID(txnId).do();\n   * ```\n   *\n   * [Response data schema details](https://developer.algorand.org/docs/rest-apis/indexer/#get-v2transactionstxid)\n   * @param txID - The ID of the transaction to look up.\n   * @category GET\n   */\n  constructor(c: HTTPClient, intDecoding: IntDecoding, private txID: string) {\n    super(c, intDecoding);\n    this.txID = txID;\n  }\n\n  /**\n   * @returns `/v2/transactions/${txID}`\n   */\n  path() {\n    return `/v2/transactions/${this.txID}`;\n  }\n}\n","import JSONRequest from '../jsonrequest';\nimport HTTPClient from '../../client';\nimport IntDecoding from '../../../types/intDecoding';\n\nexport default class LookupAccountByID extends JSONRequest {\n  /**\n   * Returns information about the given account.\n   *\n   * #### Example\n   * ```typescript\n   * const address = \"XBYLS2E6YI6XXL5BWCAMOA4GTWHXWENZMX5UHXMRNWWUQ7BXCY5WC5TEPA\";\n   * const accountInfo = await indexerClient.lookupAccountByID(address).do();\n   * ```\n   *\n   * [Response data schema details](https://developer.algorand.org/docs/rest-apis/indexer/#get-v2accountsaccount-id)\n   * @param account - The address of the account to look up.\n   * @category GET\n   */\n  constructor(\n    c: HTTPClient,\n    intDecoding: IntDecoding,\n    private account: string\n  ) {\n    super(c, intDecoding);\n    this.account = account;\n  }\n\n  /**\n   * @returns `/v2/accounts/${account}`\n   */\n  path() {\n    return `/v2/accounts/${this.account}`;\n  }\n\n  /**\n   * Specify round to filter with.\n   *\n   * #### Example\n   * ```typescript\n   * const address = \"XBYLS2E6YI6XXL5BWCAMOA4GTWHXWENZMX5UHXMRNWWUQ7BXCY5WC5TEPA\";\n   * const targetBlock = 18309917;\n   * const accountInfo = await indexerClient\n   *        .lookupAccountByID(address)\n   *        .round(targetBlock)\n   *        .do();\n   * ```\n   * @param round\n   */\n  round(round: number) {\n    this.query.round = round;\n    return this;\n  }\n\n  /**\n   * Include all items including closed accounts, deleted applications, destroyed assets, opted-out asset holdings, and closed-out application localstates.\n   *\n   * #### Example 1\n   * ```typescript\n   * const address = \"XBYLS2E6YI6XXL5BWCAMOA4GTWHXWENZMX5UHXMRNWWUQ7BXCY5WC5TEPA\";\n   * const accountInfo = await indexerClient\n   *        .lookupAccountByID(address)\n   *        .includeAll(false)\n   *        .do();\n   * ```\n   *\n   * #### Example 2\n   * ```typescript\n   * const address = \"XBYLS2E6YI6XXL5BWCAMOA4GTWHXWENZMX5UHXMRNWWUQ7BXCY5WC5TEPA\";\n   * const accountInfo = await indexerClient\n   *        .lookupAccountByID(address)\n   *        .includeAll()\n   *        .do();\n   * ```\n   * @param value\n   */\n  includeAll(value = true) {\n    this.query['include-all'] = value;\n    return this;\n  }\n\n  /**\n   * Exclude additional items such as asset holdings, application local data stored for this account, asset parameters created by this account, and application parameters created by this account.\n   *\n   * #### Example 1\n   * ```typescript\n   * const address = \"XBYLS2E6YI6XXL5BWCAMOA4GTWHXWENZMX5UHXMRNWWUQ7BXCY5WC5TEPA\";\n   * const accountInfo = await indexerClient\n   *        .lookupAccountByID(address)\n   *        .exclude(\"all\")\n   *        .do();\n   * ```\n   *\n   * #### Example 2\n   * ```typescript\n   * const address = \"XBYLS2E6YI6XXL5BWCAMOA4GTWHXWENZMX5UHXMRNWWUQ7BXCY5WC5TEPA\";\n   * const accountInfo = await indexerClient\n   *        .lookupAccountByID(address)\n   *        .exclude(\"assets,created-assets\")\n   *        .do();\n   * ```\n   * @remarks By default, it behaves as exclude=none\n   * @param exclude - Array of `all`, `assets`, `created-assets`, `apps-local-state`, `created-apps`, `none`\n   * @category query\n   */\n  exclude(exclude: string) {\n    this.query.exclude = exclude;\n    return this;\n  }\n}\n","import JSONRequest from '../jsonrequest';\nimport HTTPClient from '../../client';\nimport IntDecoding from '../../../types/intDecoding';\n\nexport default class LookupAccountAssets extends JSONRequest {\n  /**\n   * Returns asset about the given account.\n   *\n   * #### Example\n   * ```typescript\n   * const address = \"XBYLS2E6YI6XXL5BWCAMOA4GTWHXWENZMX5UHXMRNWWUQ7BXCY5WC5TEPA\";\n   * const accountAssets = await indexerClient.lookupAccountAssets(address).do();\n   * ```\n   *\n   * [Response data schema details](https://developer.algorand.org/docs/rest-apis/indexer/#get-v2accountsaccount-idassets)\n   * @param account - The address of the account to look up.\n   * @category GET\n   */\n  constructor(\n    c: HTTPClient,\n    intDecoding: IntDecoding,\n    private account: string\n  ) {\n    super(c, intDecoding);\n    this.account = account;\n  }\n\n  /**\n   * @returns `/v2/accounts/${account}/assets`\n   */\n  path() {\n    return `/v2/accounts/${this.account}/assets`;\n  }\n\n  /**\n   * Add a limit for filter.\n   *\n   * #### Example\n   * ```typescript\n   * const address = \"XBYLS2E6YI6XXL5BWCAMOA4GTWHXWENZMX5UHXMRNWWUQ7BXCY5WC5TEPA\";\n   * const maxResults = 20;\n   * const accountAssets = await indexerClient\n   *        .lookupAccountAssets(address)\n   *        .limit(maxResults)\n   *        .do();\n   * ```\n   *\n   * @param limit - maximum number of results to return.\n   * @category query\n   */\n  limit(limit: number) {\n    this.query.limit = limit;\n    return this;\n  }\n\n  /**\n   * Specify round to filter with.\n   *\n   * #### Example\n   * ```typescript\n   * const address = \"XBYLS2E6YI6XXL5BWCAMOA4GTWHXWENZMX5UHXMRNWWUQ7BXCY5WC5TEPA\";\n   * const targetBlock = 18309917;\n   * const accountAssets = await indexerClient\n   *        .lookupAccountAssets(address)\n   *        .round(targetBlock)\n   *        .do();\n   * ```\n   * @param round\n   * @category query\n   */\n  round(round: number) {\n    this.query.round = round;\n    return this;\n  }\n\n  /**\n   * Specify the next page of results.\n   *\n   * #### Example\n   * ```typescript\n   * const address = \"XBYLS2E6YI6XXL5BWCAMOA4GTWHXWENZMX5UHXMRNWWUQ7BXCY5WC5TEPA\";\n   * const maxResults = 20;\n   *\n   * const accountAssetsPage1 = await indexerClient\n   *        .lookupAccountAssets(address)\n   *        .limit(maxResults)\n   *        .do();\n   *\n   * const accountAssetsPage2 = await indexerClient\n   *        .lookupAccountAssets(address)\n   *        .limit(maxResults)\n   *        .next(accountAssetsPage1[\"next-token\"])\n   *        .do();\n   * ```\n   * @param nextToken - provided by the previous results.\n   * @category query\n   */\n  nextToken(nextToken: string) {\n    this.query.next = nextToken;\n    return this;\n  }\n\n  /**\n   * Include all items including closed accounts, deleted applications, destroyed assets, opted-out asset holdings, and closed-out application localstates\n   *\n   * #### Example\n   * ```typescript\n   * const address = \"XBYLS2E6YI6XXL5BWCAMOA4GTWHXWENZMX5UHXMRNWWUQ7BXCY5WC5TEPA\";\n   * const accountAssets = await indexerClient\n   *        .lookupAccountAssets(address)\n   *        .includeAll(false)\n   *        .do();\n   * ```\n   * @param value\n   * @category query\n   */\n  includeAll(value = true) {\n    this.query['include-all'] = value;\n    return this;\n  }\n\n  /**\n   * Specify an assetID to search for.\n   *\n   * #### Example\n   * ```typescript\n   * const assetId = 163650;\n   * const address = \"XBYLS2E6YI6XXL5BWCAMOA4GTWHXWENZMX5UHXMRNWWUQ7BXCY5WC5TEPA\";\n   * const assetAssets = await indexerClient\n   *        .lookupAccountAssets(address)\n   *        .assetId(assetId)\n   *        .do();\n   * ```\n   * @param index - the assetID\n   * @category query\n   */\n  assetId(index: number) {\n    this.query['asset-id'] = index;\n    return this;\n  }\n}\n","import JSONRequest from '../jsonrequest';\nimport HTTPClient from '../../client';\nimport IntDecoding from '../../../types/intDecoding';\n\nexport default class LookupAccountCreatedAssets extends JSONRequest {\n  /**\n   * Returns asset information created by the given account.\n   *\n   * #### Example\n   * ```typescript\n   * const address = \"XBYLS2E6YI6XXL5BWCAMOA4GTWHXWENZMX5UHXMRNWWUQ7BXCY5WC5TEPA\";\n   * const accountCreatedAssets = await indexerClient.lookupAccountCreatedAssets(address).do();\n   * ```\n   *\n   * [Response data schema details](https://developer.algorand.org/docs/rest-apis/indexer/#get-v2accountsaccount-idcreated-assets)\n   * @param account - The address of the account to look up.\n   * @category GET\n   */\n  constructor(\n    c: HTTPClient,\n    intDecoding: IntDecoding,\n    private account: string\n  ) {\n    super(c, intDecoding);\n    this.account = account;\n  }\n\n  /**\n   * @returns `/v2/accounts/${account}/created-assets`\n   */\n  path() {\n    return `/v2/accounts/${this.account}/created-assets`;\n  }\n\n  /**\n   * Add a limit for filter.\n   *\n   * #### Example\n   * ```typescript\n   * const address = \"XBYLS2E6YI6XXL5BWCAMOA4GTWHXWENZMX5UHXMRNWWUQ7BXCY5WC5TEPA\";\n   * const maxResults = 20;\n   * const accountAssets = await indexerClient\n   *        .lookupAccountCreatedAssets(address)\n   *        .limit(maxResults)\n   *        .do();\n   * ```\n   *\n   * @param limit - maximum number of results to return.\n   * @category query\n   */\n  limit(limit: number) {\n    this.query.limit = limit;\n    return this;\n  }\n\n  /**\n   * Specify round to filter with.\n   *\n   * #### Example\n   * ```typescript\n   * const address = \"XBYLS2E6YI6XXL5BWCAMOA4GTWHXWENZMX5UHXMRNWWUQ7BXCY5WC5TEPA\";\n   * const targetBlock = 18309917;\n   * const accountAssets = await indexerClient\n   *        .lookupAccountCreatedAssets(address)\n   *        .round(targetBlock)\n   *        .do();\n   * ```\n   * @param round\n   * @category query\n   */\n  round(round: number) {\n    this.query.round = round;\n    return this;\n  }\n\n  /**\n   * Specify the next page of results.\n   *\n   * #### Example\n   * ```typescript\n   * const address = \"XBYLS2E6YI6XXL5BWCAMOA4GTWHXWENZMX5UHXMRNWWUQ7BXCY5WC5TEPA\";\n   * const maxResults = 20;\n   *\n   * const accountAssetsPage1 = await indexerClient\n   *        .lookupAccountCreatedAssets(address)\n   *        .limit(maxResults)\n   *        .do();\n   * ```\n   *\n   * const accountAssetsPage2 = await indexerClient\n   *        .lookupAccountCreatedAssets(address)\n   *        .limit(maxResults)\n   *        .next(accountAssetsPage1[\"next-token\"])\n   *        .do();\n   * ```\n   * @param nextToken - provided by the previous results.\n   * @category query\n   */\n  nextToken(nextToken: string) {\n    this.query.next = nextToken;\n    return this;\n  }\n\n  /**\n   * Include all items including closed accounts, deleted applications, destroyed assets, opted-out asset holdings, and closed-out application localstates\n   *\n   * #### Example\n   * ```typescript\n   * const address = \"XBYLS2E6YI6XXL5BWCAMOA4GTWHXWENZMX5UHXMRNWWUQ7BXCY5WC5TEPA\";\n   * const accountAssets = await indexerClient\n   *        .lookupAccountCreatedAssets(address)\n   *        .includeAll(false)\n   *        .do();\n   * ```\n   * @param value\n   * @category query\n   */\n  includeAll(value = true) {\n    this.query['include-all'] = value;\n    return this;\n  }\n\n  /**\n   * Specify an assetID to search for.\n   *\n   * #### Example\n   * ```typescript\n   * const assetID = 163650;\n   * const address = \"XBYLS2E6YI6XXL5BWCAMOA4GTWHXWENZMX5UHXMRNWWUQ7BXCY5WC5TEPA\";\n   * const assetAssets = await indexerClient\n   *        .lookupAccountCreatedAssets(address)\n   *        .assetID(assetID)\n   *        .do();\n   * ```\n   * @param index - the assetID\n   * @category query\n   */\n  assetID(index: number) {\n    this.query['asset-id'] = index;\n    return this;\n  }\n}\n","import JSONRequest from '../jsonrequest';\nimport HTTPClient from '../../client';\nimport IntDecoding from '../../../types/intDecoding';\n\nexport default class LookupAccountAppLocalStates extends JSONRequest {\n  /**\n   * Returns application local state about the given account.\n   *\n   * #### Example\n   * ```typescript\n   * const address = \"XBYLS2E6YI6XXL5BWCAMOA4GTWHXWENZMX5UHXMRNWWUQ7BXCY5WC5TEPA\";\n   * const accountAppLocalStates = await indexerClient.lookupAccountAppLocalStates(address).do();\n   * ```\n   *\n   * [Response data schema details](https://developer.algorand.org/docs/rest-apis/indexer/#get-v2accountsaccount-idapps-local-state)\n   * @param account - The address of the account to look up.\n   * @category GET\n   */\n  constructor(\n    c: HTTPClient,\n    intDecoding: IntDecoding,\n    private account: string\n  ) {\n    super(c, intDecoding);\n    this.account = account;\n  }\n\n  /**\n   * @returns `/v2/accounts/${account}/apps-local-state`\n   */\n  path() {\n    return `/v2/accounts/${this.account}/apps-local-state`;\n  }\n\n  /**\n   * Add a limit for filter.\n   *\n   * #### Example\n   * ```typescript\n   * const address = \"XBYLS2E6YI6XXL5BWCAMOA4GTWHXWENZMX5UHXMRNWWUQ7BXCY5WC5TEPA\";\n   * const maxResults = 20;\n   * const accountAssets = await indexerClient\n   *        .lookupAccountAppLocalStates(address)\n   *        .limit(maxResults)\n   *        .do();\n   * ```\n   *\n   * @param limit - maximum number of results to return.\n   * @category query\n   */\n  limit(limit: number) {\n    this.query.limit = limit;\n    return this;\n  }\n\n  /**\n   * Specify round to filter with.\n   *\n   * #### Example\n   * ```typescript\n   * const address = \"XBYLS2E6YI6XXL5BWCAMOA4GTWHXWENZMX5UHXMRNWWUQ7BXCY5WC5TEPA\";\n   * const targetBlock = 18309917;\n   * const accountAssets = await indexerClient\n   *        .lookupAccountAppLocalStates(address)\n   *        .round(targetBlock)\n   *        .do();\n   * ```\n   * @param round\n   * @category query\n   */\n  round(round: number) {\n    this.query.round = round;\n    return this;\n  }\n\n  /**\n   * Specify the next page of results.\n   *\n   * #### Example\n   * ```typescript\n   * const address = \"XBYLS2E6YI6XXL5BWCAMOA4GTWHXWENZMX5UHXMRNWWUQ7BXCY5WC5TEPA\";\n   * const maxResults = 20;\n   *\n   * const accountAssetsPage1 = await indexerClient\n   *        .lookupAccountAppLocalStates(address)\n   *        .limit(maxResults)\n   *        .do();\n   *\n   * const accountAssetsPage2 = await indexerClient\n   *        .lookupAccountAppLocalStates(address)\n   *        .limit(maxResults)\n   *        .next(accountAssetsPage1[\"next-token\"])\n   *        .do();\n   * ```\n   * @param nextToken - provided by the previous results.\n   */\n  nextToken(nextToken: string) {\n    this.query.next = nextToken;\n    return this;\n  }\n\n  /**\n   * Include all items including closed accounts, deleted applications, destroyed assets, opted-out asset holdings, and closed-out application localstates\n   *\n   * #### Example\n   * ```typescript\n   * const address = \"XBYLS2E6YI6XXL5BWCAMOA4GTWHXWENZMX5UHXMRNWWUQ7BXCY5WC5TEPA\";\n   * const accountAssets = await indexerClient\n   *        .lookupAccountAppLocalStates(address)\n   *        .includeAll(false)\n   *        .do();\n   * ```\n   * @param value\n   * @category query\n   */\n  includeAll(value = true) {\n    this.query['include-all'] = value;\n    return this;\n  }\n\n  /**\n   * Specify an applicationID to search for.\n   *\n   * #### Example\n   * ```typescript\n   * const applicationID = 163650;\n   * const address = \"XBYLS2E6YI6XXL5BWCAMOA4GTWHXWENZMX5UHXMRNWWUQ7BXCY5WC5TEPA\";\n   * const accountApplications = await indexerClient\n   *        .lookupAccountAppLocalStates(address)\n   *        .applicationID(applicationID)\n   *        .do();\n   * ```\n   * @param index - the applicationID\n   * @category query\n   */\n  applicationID(index: number) {\n    this.query['application-id'] = index;\n    return this;\n  }\n}\n","import JSONRequest from '../jsonrequest';\nimport HTTPClient from '../../client';\nimport IntDecoding from '../../../types/intDecoding';\n\nexport default class LookupAccountCreatedApplications extends JSONRequest {\n  /**\n   * Returns application information created by the given account.\n   *\n   * #### Example\n   * ```typescript\n   * const address = \"XBYLS2E6YI6XXL5BWCAMOA4GTWHXWENZMX5UHXMRNWWUQ7BXCY5WC5TEPA\";\n   * const accountCreatedApps = await indexerClient.lookupAccountCreatedApplications(address).do();\n   * ```\n   *\n   * [Response data schema details](https://developer.algorand.org/docs/rest-apis/indexer/#get-v2accountsaccount-idcreated-applications)\n   * @param account - The address of the account to look up.\n   * @category GET\n   */\n  constructor(\n    c: HTTPClient,\n    intDecoding: IntDecoding,\n    private account: string\n  ) {\n    super(c, intDecoding);\n    this.account = account;\n  }\n\n  /**\n   * @returns `/v2/accounts/${account}/created-applications`\n   */\n  path() {\n    return `/v2/accounts/${this.account}/created-applications`;\n  }\n\n  /**\n   * Add a limit for filter.\n   *\n   * #### Example\n   * ```typescript\n   * const address = \"XBYLS2E6YI6XXL5BWCAMOA4GTWHXWENZMX5UHXMRNWWUQ7BXCY5WC5TEPA\";\n   * const maxResults = 20;\n   * const accountAssets = await indexerClient\n   *        .lookupAccountCreatedApplications(address)\n   *        .limit(maxResults)\n   *        .do();\n   * ```\n   *\n   * @param limit - maximum number of results to return.\n   * @category query\n   */\n  limit(limit: number) {\n    this.query.limit = limit;\n    return this;\n  }\n\n  /**\n   * Specify round to filter with.\n   *\n   * #### Example\n   * ```typescript\n   * const address = \"XBYLS2E6YI6XXL5BWCAMOA4GTWHXWENZMX5UHXMRNWWUQ7BXCY5WC5TEPA\";\n   * const targetBlock = 18309917;\n   * const accountAssets = await indexerClient\n   *        .lookupAccountCreatedApplications(address)\n   *        .round(targetBlock)\n   *        .do();\n   * ```\n   * @param round\n   * @category query\n   */\n  round(round: number) {\n    this.query.round = round;\n    return this;\n  }\n\n  /**\n   * Specify the next page of results.\n   *\n   * #### Example\n   * ```typescript\n   * const address = \"XBYLS2E6YI6XXL5BWCAMOA4GTWHXWENZMX5UHXMRNWWUQ7BXCY5WC5TEPA\";\n   * const maxResults = 20;\n   *\n   * const accountAssetsPage1 = await indexerClient\n   *        .lookupAccountCreatedApplications(address)\n   *        .limit(maxResults)\n   *        .do();\n   *\n   * const accountAssetsPage2 = await indexerClient\n   *        .lookupAccountCreatedApplications(address)\n   *        .limit(maxResults)\n   *        .next(accountAssetsPage1[\"next-token\"])\n   *        .do();\n   * ```\n   * @param nextToken - provided by the previous results.\n   * @category query\n   */\n  nextToken(nextToken: string) {\n    this.query.next = nextToken;\n    return this;\n  }\n\n  /**\n   * Include all items including closed accounts, deleted applications, destroyed assets, opted-out asset holdings, and closed-out application localstates\n   *\n   * #### Example\n   * ```typescript\n   * const address = \"XBYLS2E6YI6XXL5BWCAMOA4GTWHXWENZMX5UHXMRNWWUQ7BXCY5WC5TEPA\";\n   * const accountAssets = await indexerClient\n   *        .lookupAccountCreatedApplications(address)\n   *        .includeAll(false)\n   *        .do();\n   * ```\n   * @param value\n   * @category query\n   */\n  includeAll(value = true) {\n    this.query['include-all'] = value;\n    return this;\n  }\n\n  /**\n   * Specify an applicationID to search for.\n   *\n   * #### Example\n   * ```typescript\n   * const applicationID = 163650;\n   * const address = \"XBYLS2E6YI6XXL5BWCAMOA4GTWHXWENZMX5UHXMRNWWUQ7BXCY5WC5TEPA\";\n   * const accountApplications = await indexerClient\n   *        .lookupAccountAppLocalStates(address)\n   *        .applicationID(applicationID)\n   *        .do();\n   * ```\n   * @param index - the applicationID\n   * @category query\n   */\n  applicationID(index: number) {\n    this.query['application-id'] = index;\n    return this;\n  }\n}\n","import JSONRequest from '../jsonrequest';\nimport HTTPClient from '../../client';\nimport IntDecoding from '../../../types/intDecoding';\n\nexport default class LookupAssetByID extends JSONRequest {\n  /**\n   * Returns asset information of the queried asset.\n   *\n   * #### Example\n   * ```typescript\n   * const assetId = 163650;\n   * const assetInfo = await indexerClient.lookupAssetByID(assetId).do();\n   * ```\n   *\n   * [Response data schema details](https://developer.algorand.org/docs/rest-apis/indexer/#get-v2assetsasset-id)\n   * @param index - The asset ID to look up.\n   */\n  constructor(c: HTTPClient, intDecoding: IntDecoding, private index: number) {\n    super(c, intDecoding);\n    this.index = index;\n  }\n\n  /**\n   * @returns `/v2/assets/${index}`\n   */\n  path() {\n    return `/v2/assets/${this.index}`;\n  }\n\n  /**\n   * Includes all items including closed accounts, deleted applications, destroyed assets, opted-out asset holdings, and closed-out application localstates\n   *\n   * #### Example 1\n   * ```typescript\n   * const assetId = 163650;\n   * const assetInfo = await indexerClient\n   *        .lookupAssetByID(assetId)\n   *        .includeAll(false)\n   *        .do();\n   * ```\n   *\n   * #### Example 2\n   * ```typescript\n   * const assetId = 163650;\n   * const assetInfo = await indexerClient\n   *        .lookupAssetByID(assetId)\n   *        .includeAll()\n   *        .do();\n   * ```\n   *\n   * @param value - default true when called without passing a value\n   * @category query\n   */\n  includeAll(value = true) {\n    this.query['include-all'] = value;\n    return this;\n  }\n}\n","import JSONRequest from '../jsonrequest';\nimport HTTPClient from '../../client';\nimport IntDecoding from '../../../types/intDecoding';\n\nexport default class LookupApplications extends JSONRequest {\n  /**\n   * Returns information about the passed application.\n   *\n   * #### Example\n   * ```typescript\n   * const appId = 60553466;\n   * const appInfo = await indexerClient.lookupApplications(appId).do();\n   * ```\n   *\n   * [Response data schema details](https://developer.algorand.org/docs/rest-apis/indexer/#get-v2applicationsapplication-id)\n   * @param index - The ID of the application to look up.\n   * @category GET\n   */\n  constructor(c: HTTPClient, intDecoding: IntDecoding, private index: number) {\n    super(c, intDecoding);\n    this.index = index;\n  }\n\n  /**\n   * @returns `/v2/applications/${index}`\n   */\n  path() {\n    return `/v2/applications/${this.index}`;\n  }\n\n  /**\n   * Includes all items including closed accounts, deleted applications, destroyed assets, opted-out asset holdings, and closed-out application localstates\n   *\n   * #### Example 1\n   * ```typescript\n   * const appId = 60553466;\n   * const appInfo = await indexerClient\n   *        .lookupApplications(appId)\n   *        .includeAll(false)\n   *        .do();\n   * ```\n   *\n   * #### Example 2\n   * ```typescript\n   * const appId = 60553466;\n   * const appInfo = await indexerClient\n   *        .lookupApplications(appId)\n   *        .includeAll()\n   *        .do();\n   * ```\n   *\n   * @param value - default true when called without passing a value\n   * @category query\n   */\n  includeAll(value = true) {\n    this.query['include-all'] = value;\n    return this;\n  }\n}\n","import JSONRequest from '../jsonrequest';\nimport HTTPClient from '../../client';\nimport IntDecoding from '../../../types/intDecoding';\n\nexport default class LookupApplicationLogs extends JSONRequest {\n  /**\n   * Returns log messages generated by the passed in application.\n   *\n   * #### Example\n   * ```typescript\n   * const appId = 60553466;\n   * const appLogs = await indexerClient.lookupApplicationLogs(appId).do();\n   * ```\n   *\n   * [Response data schema details](https://developer.algorand.org/docs/rest-apis/indexer/#get-v2applicationsapplication-idlogs)\n   * @param appID - The ID of the application which generated the logs.\n   * @category GET\n   */\n  constructor(c: HTTPClient, intDecoding: IntDecoding, private appID: number) {\n    super(c, intDecoding);\n    this.appID = appID;\n  }\n\n  /**\n   * @returns `/v2/applications/${appID}/logs`\n   */\n  path() {\n    return `/v2/applications/${this.appID}/logs`;\n  }\n\n  /**\n   * Limit results for pagination.\n   *\n   * #### Example\n   * ```typescript\n   * const maxResults = 20;\n   * const appLogs = await indexerClient\n   *        .lookupApplicationLogs(appId)\n   *        .limit(maxResults)\n   *        .do();\n   * ```\n   *\n   * @param limit - maximum number of results to return.\n   */\n  limit(limit: number) {\n    this.query.limit = limit;\n    return this;\n  }\n\n  /**\n   * Include results at or after the specified min-round.\n   *\n   * #### Example\n   * ```typescript\n   * const minRound = 18309917;\n   * const appLogs = await indexerClient\n   *        .lookupApplicationLogs(appId)\n   *        .minRound(minRound)\n   *        .do();\n   * ```\n   *\n   * @param round\n   * @category query\n   */\n  minRound(round: number) {\n    this.query['min-round'] = round;\n    return this;\n  }\n\n  /**\n   * Include results at or before the specified max-round.\n   *\n   * #### Example\n   * ```typescript\n   * const maxRound = 18309917;\n   * const appLogs = await indexerClient\n   *        .lookupApplicationLogs(appId)\n   *        .maxRound(maxRound)\n   *        .do();\n   * ```\n   *\n   * @param round\n   * @category query\n   */\n  maxRound(round: number) {\n    this.query['max-round'] = round;\n    return this;\n  }\n\n  /**\n   * The next page of results.\n   *\n   * #### Example\n   * ```typescript\n   * const maxResults = 25;\n   *\n   * const appLogsPage1 = await indexerClient\n   *        .lookupApplicationLogs(appId)\n   *        .limit(maxResults)\n   *        .do();\n   *\n   * const appLogsPage2 = await indexerClient\n   *        .lookupApplicationLogs(appId)\n   *        .limit(maxResults)\n   *        .nextToken(appLogsPage1[\"next-token\"])\n   *        .do();\n   * ```\n   *\n   * @param nextToken - provided by the previous results.\n   * @category query\n   */\n  nextToken(nextToken: string) {\n    this.query.next = nextToken;\n    return this;\n  }\n\n  /**\n   * Only include transactions with this sender address.\n   *\n   * #### Example\n   * ```typescript\n   * const sender = \"XBYLS2E6YI6XXL5BWCAMOA4GTWHXWENZMX5UHXMRNWWUQ7BXCY5WC5TEPA\";\n   * const appLogs = await indexerClient\n   *        .lookupApplicationLogs(appId)\n   *        .sender(sender)\n   *        .do();\n   * ```\n   *\n   * @param senderAddress\n   * @category query\n   */\n  sender(senderAddress: string) {\n    this.query['sender-address'] = senderAddress;\n    return this;\n  }\n\n  /**\n   * Lookup the specific transaction by ID.\n   *\n   * #### Example\n   * ```typescript\n   * const txId = \"MEUOC4RQJB23CQZRFRKYEI6WBO73VTTPST5A7B3S5OKBUY6LFUDA\";\n   * const appLogs = await indexerClient\n   *        .lookupApplicationLogs(appId)\n   *        .txid(txId)\n   *        .do();\n   * ```\n   *\n   * @param txid\n   * @category query\n   */\n  txid(txid: string) {\n    this.query.txid = txid;\n    return this;\n  }\n}\n","/**\n * NOTICE: This file was generated. Editing this file manually is not recommended.\n */\n\n/* eslint-disable no-use-before-define */\nimport { Buffer } from 'buffer';\nimport BaseModel from '../../basemodel';\n\n/**\n * Account information at a given round.\n * Definition:\n * data/basics/userBalance.go : AccountData\n */\nexport class Account extends BaseModel {\n  /**\n   * the account public key\n   */\n  public address: string;\n\n  /**\n   * (algo) total number of MicroAlgos in the account\n   */\n  public amount: number | bigint;\n\n  /**\n   * specifies the amount of MicroAlgos in the account, without the pending rewards.\n   */\n  public amountWithoutPendingRewards: number | bigint;\n\n  /**\n   * amount of MicroAlgos of pending rewards in this account.\n   */\n  public pendingRewards: number | bigint;\n\n  /**\n   * (ern) total rewards of MicroAlgos the account has received, including pending\n   * rewards.\n   */\n  public rewards: number | bigint;\n\n  /**\n   * The round for which this information is relevant.\n   */\n  public round: number | bigint;\n\n  /**\n   * (onl) delegation status of the account's MicroAlgos\n   * * Offline - indicates that the associated account is delegated.\n   * * Online - indicates that the associated account used as part of the delegation\n   * pool.\n   * * NotParticipating - indicates that the associated account is neither a\n   * delegator nor a delegate.\n   */\n  public status: string;\n\n  /**\n   * The count of all applications that have been opted in, equivalent to the count\n   * of application local data (AppLocalState objects) stored in this account.\n   */\n  public totalAppsOptedIn: number | bigint;\n\n  /**\n   * The count of all assets that have been opted in, equivalent to the count of\n   * AssetHolding objects held by this account.\n   */\n  public totalAssetsOptedIn: number | bigint;\n\n  /**\n   * For app-accounts only. The total number of bytes allocated for the keys and\n   * values of boxes which belong to the associated application.\n   */\n  public totalBoxBytes: number | bigint;\n\n  /**\n   * For app-accounts only. The total number of boxes which belong to the associated\n   * application.\n   */\n  public totalBoxes: number | bigint;\n\n  /**\n   * The count of all apps (AppParams objects) created by this account.\n   */\n  public totalCreatedApps: number | bigint;\n\n  /**\n   * The count of all assets (AssetParams objects) created by this account.\n   */\n  public totalCreatedAssets: number | bigint;\n\n  /**\n   * (appl) applications local data stored in this account.\n   * Note the raw object uses `map[int] -> AppLocalState` for this type.\n   */\n  public appsLocalState?: ApplicationLocalState[];\n\n  /**\n   * (teap) the sum of all extra application program pages for this account.\n   */\n  public appsTotalExtraPages?: number | bigint;\n\n  /**\n   * (tsch) stores the sum of all of the local schemas and global schemas in this\n   * account.\n   * Note: the raw account uses `StateSchema` for this type.\n   */\n  public appsTotalSchema?: ApplicationStateSchema;\n\n  /**\n   * (asset) assets held by this account.\n   * Note the raw object uses `map[int] -> AssetHolding` for this type.\n   */\n  public assets?: AssetHolding[];\n\n  /**\n   * (spend) the address against which signing should be checked. If empty, the\n   * address of the current account is used. This field can be updated in any\n   * transaction by setting the RekeyTo field.\n   */\n  public authAddr?: string;\n\n  /**\n   * Round during which this account was most recently closed.\n   */\n  public closedAtRound?: number | bigint;\n\n  /**\n   * (appp) parameters of applications created by this account including app global\n   * data.\n   * Note: the raw account uses `map[int] -> AppParams` for this type.\n   */\n  public createdApps?: Application[];\n\n  /**\n   * (apar) parameters of assets created by this account.\n   * Note: the raw account uses `map[int] -> Asset` for this type.\n   */\n  public createdAssets?: Asset[];\n\n  /**\n   * Round during which this account first appeared in a transaction.\n   */\n  public createdAtRound?: number | bigint;\n\n  /**\n   * Whether or not this account is currently closed.\n   */\n  public deleted?: boolean;\n\n  /**\n   * AccountParticipation describes the parameters used by this account in consensus\n   * protocol.\n   */\n  public participation?: AccountParticipation;\n\n  /**\n   * (ebase) used as part of the rewards computation. Only applicable to accounts\n   * which are participating.\n   */\n  public rewardBase?: number | bigint;\n\n  /**\n   * Indicates what type of signature is used by this account, must be one of:\n   * * sig\n   * * msig\n   * * lsig\n   * * or null if unknown\n   */\n  public sigType?: string;\n\n  /**\n   * Creates a new `Account` object.\n   * @param address - the account public key\n   * @param amount - (algo) total number of MicroAlgos in the account\n   * @param amountWithoutPendingRewards - specifies the amount of MicroAlgos in the account, without the pending rewards.\n   * @param pendingRewards - amount of MicroAlgos of pending rewards in this account.\n   * @param rewards - (ern) total rewards of MicroAlgos the account has received, including pending\n   * rewards.\n   * @param round - The round for which this information is relevant.\n   * @param status - (onl) delegation status of the account's MicroAlgos\n   * * Offline - indicates that the associated account is delegated.\n   * * Online - indicates that the associated account used as part of the delegation\n   * pool.\n   * * NotParticipating - indicates that the associated account is neither a\n   * delegator nor a delegate.\n   * @param totalAppsOptedIn - The count of all applications that have been opted in, equivalent to the count\n   * of application local data (AppLocalState objects) stored in this account.\n   * @param totalAssetsOptedIn - The count of all assets that have been opted in, equivalent to the count of\n   * AssetHolding objects held by this account.\n   * @param totalBoxBytes - For app-accounts only. The total number of bytes allocated for the keys and\n   * values of boxes which belong to the associated application.\n   * @param totalBoxes - For app-accounts only. The total number of boxes which belong to the associated\n   * application.\n   * @param totalCreatedApps - The count of all apps (AppParams objects) created by this account.\n   * @param totalCreatedAssets - The count of all assets (AssetParams objects) created by this account.\n   * @param appsLocalState - (appl) applications local data stored in this account.\n   * Note the raw object uses `map[int] -> AppLocalState` for this type.\n   * @param appsTotalExtraPages - (teap) the sum of all extra application program pages for this account.\n   * @param appsTotalSchema - (tsch) stores the sum of all of the local schemas and global schemas in this\n   * account.\n   * Note: the raw account uses `StateSchema` for this type.\n   * @param assets - (asset) assets held by this account.\n   * Note the raw object uses `map[int] -> AssetHolding` for this type.\n   * @param authAddr - (spend) the address against which signing should be checked. If empty, the\n   * address of the current account is used. This field can be updated in any\n   * transaction by setting the RekeyTo field.\n   * @param closedAtRound - Round during which this account was most recently closed.\n   * @param createdApps - (appp) parameters of applications created by this account including app global\n   * data.\n   * Note: the raw account uses `map[int] -> AppParams` for this type.\n   * @param createdAssets - (apar) parameters of assets created by this account.\n   * Note: the raw account uses `map[int] -> Asset` for this type.\n   * @param createdAtRound - Round during which this account first appeared in a transaction.\n   * @param deleted - Whether or not this account is currently closed.\n   * @param participation - AccountParticipation describes the parameters used by this account in consensus\n   * protocol.\n   * @param rewardBase - (ebase) used as part of the rewards computation. Only applicable to accounts\n   * which are participating.\n   * @param sigType - Indicates what type of signature is used by this account, must be one of:\n   * * sig\n   * * msig\n   * * lsig\n   * * or null if unknown\n   */\n  constructor({\n    address,\n    amount,\n    amountWithoutPendingRewards,\n    pendingRewards,\n    rewards,\n    round,\n    status,\n    totalAppsOptedIn,\n    totalAssetsOptedIn,\n    totalBoxBytes,\n    totalBoxes,\n    totalCreatedApps,\n    totalCreatedAssets,\n    appsLocalState,\n    appsTotalExtraPages,\n    appsTotalSchema,\n    assets,\n    authAddr,\n    closedAtRound,\n    createdApps,\n    createdAssets,\n    createdAtRound,\n    deleted,\n    participation,\n    rewardBase,\n    sigType,\n  }: {\n    address: string;\n    amount: number | bigint;\n    amountWithoutPendingRewards: number | bigint;\n    pendingRewards: number | bigint;\n    rewards: number | bigint;\n    round: number | bigint;\n    status: string;\n    totalAppsOptedIn: number | bigint;\n    totalAssetsOptedIn: number | bigint;\n    totalBoxBytes: number | bigint;\n    totalBoxes: number | bigint;\n    totalCreatedApps: number | bigint;\n    totalCreatedAssets: number | bigint;\n    appsLocalState?: ApplicationLocalState[];\n    appsTotalExtraPages?: number | bigint;\n    appsTotalSchema?: ApplicationStateSchema;\n    assets?: AssetHolding[];\n    authAddr?: string;\n    closedAtRound?: number | bigint;\n    createdApps?: Application[];\n    createdAssets?: Asset[];\n    createdAtRound?: number | bigint;\n    deleted?: boolean;\n    participation?: AccountParticipation;\n    rewardBase?: number | bigint;\n    sigType?: string;\n  }) {\n    super();\n    this.address = address;\n    this.amount = amount;\n    this.amountWithoutPendingRewards = amountWithoutPendingRewards;\n    this.pendingRewards = pendingRewards;\n    this.rewards = rewards;\n    this.round = round;\n    this.status = status;\n    this.totalAppsOptedIn = totalAppsOptedIn;\n    this.totalAssetsOptedIn = totalAssetsOptedIn;\n    this.totalBoxBytes = totalBoxBytes;\n    this.totalBoxes = totalBoxes;\n    this.totalCreatedApps = totalCreatedApps;\n    this.totalCreatedAssets = totalCreatedAssets;\n    this.appsLocalState = appsLocalState;\n    this.appsTotalExtraPages = appsTotalExtraPages;\n    this.appsTotalSchema = appsTotalSchema;\n    this.assets = assets;\n    this.authAddr = authAddr;\n    this.closedAtRound = closedAtRound;\n    this.createdApps = createdApps;\n    this.createdAssets = createdAssets;\n    this.createdAtRound = createdAtRound;\n    this.deleted = deleted;\n    this.participation = participation;\n    this.rewardBase = rewardBase;\n    this.sigType = sigType;\n\n    this.attribute_map = {\n      address: 'address',\n      amount: 'amount',\n      amountWithoutPendingRewards: 'amount-without-pending-rewards',\n      pendingRewards: 'pending-rewards',\n      rewards: 'rewards',\n      round: 'round',\n      status: 'status',\n      totalAppsOptedIn: 'total-apps-opted-in',\n      totalAssetsOptedIn: 'total-assets-opted-in',\n      totalBoxBytes: 'total-box-bytes',\n      totalBoxes: 'total-boxes',\n      totalCreatedApps: 'total-created-apps',\n      totalCreatedAssets: 'total-created-assets',\n      appsLocalState: 'apps-local-state',\n      appsTotalExtraPages: 'apps-total-extra-pages',\n      appsTotalSchema: 'apps-total-schema',\n      assets: 'assets',\n      authAddr: 'auth-addr',\n      closedAtRound: 'closed-at-round',\n      createdApps: 'created-apps',\n      createdAssets: 'created-assets',\n      createdAtRound: 'created-at-round',\n      deleted: 'deleted',\n      participation: 'participation',\n      rewardBase: 'reward-base',\n      sigType: 'sig-type',\n    };\n  }\n\n  // eslint-disable-next-line camelcase\n  static from_obj_for_encoding(data: Record<string, any>): Account {\n    /* eslint-disable dot-notation */\n    if (typeof data['address'] === 'undefined')\n      throw new Error(`Response is missing required field 'address': ${data}`);\n    if (typeof data['amount'] === 'undefined')\n      throw new Error(`Response is missing required field 'amount': ${data}`);\n    if (typeof data['amount-without-pending-rewards'] === 'undefined')\n      throw new Error(\n        `Response is missing required field 'amount-without-pending-rewards': ${data}`\n      );\n    if (typeof data['pending-rewards'] === 'undefined')\n      throw new Error(\n        `Response is missing required field 'pending-rewards': ${data}`\n      );\n    if (typeof data['rewards'] === 'undefined')\n      throw new Error(`Response is missing required field 'rewards': ${data}`);\n    if (typeof data['round'] === 'undefined')\n      throw new Error(`Response is missing required field 'round': ${data}`);\n    if (typeof data['status'] === 'undefined')\n      throw new Error(`Response is missing required field 'status': ${data}`);\n    if (typeof data['total-apps-opted-in'] === 'undefined')\n      throw new Error(\n        `Response is missing required field 'total-apps-opted-in': ${data}`\n      );\n    if (typeof data['total-assets-opted-in'] === 'undefined')\n      throw new Error(\n        `Response is missing required field 'total-assets-opted-in': ${data}`\n      );\n    if (typeof data['total-box-bytes'] === 'undefined')\n      throw new Error(\n        `Response is missing required field 'total-box-bytes': ${data}`\n      );\n    if (typeof data['total-boxes'] === 'undefined')\n      throw new Error(\n        `Response is missing required field 'total-boxes': ${data}`\n      );\n    if (typeof data['total-created-apps'] === 'undefined')\n      throw new Error(\n        `Response is missing required field 'total-created-apps': ${data}`\n      );\n    if (typeof data['total-created-assets'] === 'undefined')\n      throw new Error(\n        `Response is missing required field 'total-created-assets': ${data}`\n      );\n    return new Account({\n      address: data['address'],\n      amount: data['amount'],\n      amountWithoutPendingRewards: data['amount-without-pending-rewards'],\n      pendingRewards: data['pending-rewards'],\n      rewards: data['rewards'],\n      round: data['round'],\n      status: data['status'],\n      totalAppsOptedIn: data['total-apps-opted-in'],\n      totalAssetsOptedIn: data['total-assets-opted-in'],\n      totalBoxBytes: data['total-box-bytes'],\n      totalBoxes: data['total-boxes'],\n      totalCreatedApps: data['total-created-apps'],\n      totalCreatedAssets: data['total-created-assets'],\n      appsLocalState:\n        typeof data['apps-local-state'] !== 'undefined'\n          ? data['apps-local-state'].map(\n              ApplicationLocalState.from_obj_for_encoding\n            )\n          : undefined,\n      appsTotalExtraPages: data['apps-total-extra-pages'],\n      appsTotalSchema:\n        typeof data['apps-total-schema'] !== 'undefined'\n          ? ApplicationStateSchema.from_obj_for_encoding(\n              data['apps-total-schema']\n            )\n          : undefined,\n      assets:\n        typeof data['assets'] !== 'undefined'\n          ? data['assets'].map(AssetHolding.from_obj_for_encoding)\n          : undefined,\n      authAddr: data['auth-addr'],\n      closedAtRound: data['closed-at-round'],\n      createdApps:\n        typeof data['created-apps'] !== 'undefined'\n          ? data['created-apps'].map(Application.from_obj_for_encoding)\n          : undefined,\n      createdAssets:\n        typeof data['created-assets'] !== 'undefined'\n          ? data['created-assets'].map(Asset.from_obj_for_encoding)\n          : undefined,\n      createdAtRound: data['created-at-round'],\n      deleted: data['deleted'],\n      participation:\n        typeof data['participation'] !== 'undefined'\n          ? AccountParticipation.from_obj_for_encoding(data['participation'])\n          : undefined,\n      rewardBase: data['reward-base'],\n      sigType: data['sig-type'],\n    });\n    /* eslint-enable dot-notation */\n  }\n}\n\n/**\n * AccountParticipation describes the parameters used by this account in consensus\n * protocol.\n */\nexport class AccountParticipation extends BaseModel {\n  /**\n   * (sel) Selection public key (if any) currently registered for this round.\n   */\n  public selectionParticipationKey: Uint8Array;\n\n  /**\n   * (voteFst) First round for which this participation is valid.\n   */\n  public voteFirstValid: number | bigint;\n\n  /**\n   * (voteKD) Number of subkeys in each batch of participation keys.\n   */\n  public voteKeyDilution: number | bigint;\n\n  /**\n   * (voteLst) Last round for which this participation is valid.\n   */\n  public voteLastValid: number | bigint;\n\n  /**\n   * (vote) root participation public key (if any) currently registered for this\n   * round.\n   */\n  public voteParticipationKey: Uint8Array;\n\n  /**\n   * (stprf) Root of the state proof key (if any)\n   */\n  public stateProofKey?: Uint8Array;\n\n  /**\n   * Creates a new `AccountParticipation` object.\n   * @param selectionParticipationKey - (sel) Selection public key (if any) currently registered for this round.\n   * @param voteFirstValid - (voteFst) First round for which this participation is valid.\n   * @param voteKeyDilution - (voteKD) Number of subkeys in each batch of participation keys.\n   * @param voteLastValid - (voteLst) Last round for which this participation is valid.\n   * @param voteParticipationKey - (vote) root participation public key (if any) currently registered for this\n   * round.\n   * @param stateProofKey - (stprf) Root of the state proof key (if any)\n   */\n  constructor({\n    selectionParticipationKey,\n    voteFirstValid,\n    voteKeyDilution,\n    voteLastValid,\n    voteParticipationKey,\n    stateProofKey,\n  }: {\n    selectionParticipationKey: string | Uint8Array;\n    voteFirstValid: number | bigint;\n    voteKeyDilution: number | bigint;\n    voteLastValid: number | bigint;\n    voteParticipationKey: string | Uint8Array;\n    stateProofKey?: string | Uint8Array;\n  }) {\n    super();\n    this.selectionParticipationKey =\n      typeof selectionParticipationKey === 'string'\n        ? new Uint8Array(Buffer.from(selectionParticipationKey, 'base64'))\n        : selectionParticipationKey;\n    this.voteFirstValid = voteFirstValid;\n    this.voteKeyDilution = voteKeyDilution;\n    this.voteLastValid = voteLastValid;\n    this.voteParticipationKey =\n      typeof voteParticipationKey === 'string'\n        ? new Uint8Array(Buffer.from(voteParticipationKey, 'base64'))\n        : voteParticipationKey;\n    this.stateProofKey =\n      typeof stateProofKey === 'string'\n        ? new Uint8Array(Buffer.from(stateProofKey, 'base64'))\n        : stateProofKey;\n\n    this.attribute_map = {\n      selectionParticipationKey: 'selection-participation-key',\n      voteFirstValid: 'vote-first-valid',\n      voteKeyDilution: 'vote-key-dilution',\n      voteLastValid: 'vote-last-valid',\n      voteParticipationKey: 'vote-participation-key',\n      stateProofKey: 'state-proof-key',\n    };\n  }\n\n  // eslint-disable-next-line camelcase\n  static from_obj_for_encoding(\n    data: Record<string, any>\n  ): AccountParticipation {\n    /* eslint-disable dot-notation */\n    if (typeof data['selection-participation-key'] === 'undefined')\n      throw new Error(\n        `Response is missing required field 'selection-participation-key': ${data}`\n      );\n    if (typeof data['vote-first-valid'] === 'undefined')\n      throw new Error(\n        `Response is missing required field 'vote-first-valid': ${data}`\n      );\n    if (typeof data['vote-key-dilution'] === 'undefined')\n      throw new Error(\n        `Response is missing required field 'vote-key-dilution': ${data}`\n      );\n    if (typeof data['vote-last-valid'] === 'undefined')\n      throw new Error(\n        `Response is missing required field 'vote-last-valid': ${data}`\n      );\n    if (typeof data['vote-participation-key'] === 'undefined')\n      throw new Error(\n        `Response is missing required field 'vote-participation-key': ${data}`\n      );\n    return new AccountParticipation({\n      selectionParticipationKey: data['selection-participation-key'],\n      voteFirstValid: data['vote-first-valid'],\n      voteKeyDilution: data['vote-key-dilution'],\n      voteLastValid: data['vote-last-valid'],\n      voteParticipationKey: data['vote-participation-key'],\n      stateProofKey: data['state-proof-key'],\n    });\n    /* eslint-enable dot-notation */\n  }\n}\n\n/**\n *\n */\nexport class AccountResponse extends BaseModel {\n  /**\n   * Account information at a given round.\n   * Definition:\n   * data/basics/userBalance.go : AccountData\n   */\n  public account: Account;\n\n  /**\n   * Round at which the results were computed.\n   */\n  public currentRound: number | bigint;\n\n  /**\n   * Creates a new `AccountResponse` object.\n   * @param account - Account information at a given round.\n   * Definition:\n   * data/basics/userBalance.go : AccountData\n   * @param currentRound - Round at which the results were computed.\n   */\n  constructor({\n    account,\n    currentRound,\n  }: {\n    account: Account;\n    currentRound: number | bigint;\n  }) {\n    super();\n    this.account = account;\n    this.currentRound = currentRound;\n\n    this.attribute_map = {\n      account: 'account',\n      currentRound: 'current-round',\n    };\n  }\n\n  // eslint-disable-next-line camelcase\n  static from_obj_for_encoding(data: Record<string, any>): AccountResponse {\n    /* eslint-disable dot-notation */\n    if (typeof data['account'] === 'undefined')\n      throw new Error(`Response is missing required field 'account': ${data}`);\n    if (typeof data['current-round'] === 'undefined')\n      throw new Error(\n        `Response is missing required field 'current-round': ${data}`\n      );\n    return new AccountResponse({\n      account: Account.from_obj_for_encoding(data['account']),\n      currentRound: data['current-round'],\n    });\n    /* eslint-enable dot-notation */\n  }\n}\n\n/**\n * Application state delta.\n */\nexport class AccountStateDelta extends BaseModel {\n  public address: string;\n\n  /**\n   * Application state delta.\n   */\n  public delta: EvalDeltaKeyValue[];\n\n  /**\n   * Creates a new `AccountStateDelta` object.\n   * @param address -\n   * @param delta - Application state delta.\n   */\n  constructor({\n    address,\n    delta,\n  }: {\n    address: string;\n    delta: EvalDeltaKeyValue[];\n  }) {\n    super();\n    this.address = address;\n    this.delta = delta;\n\n    this.attribute_map = {\n      address: 'address',\n      delta: 'delta',\n    };\n  }\n\n  // eslint-disable-next-line camelcase\n  static from_obj_for_encoding(data: Record<string, any>): AccountStateDelta {\n    /* eslint-disable dot-notation */\n    if (typeof data['address'] === 'undefined')\n      throw new Error(`Response is missing required field 'address': ${data}`);\n    if (!Array.isArray(data['delta']))\n      throw new Error(\n        `Response is missing required array field 'delta': ${data}`\n      );\n    return new AccountStateDelta({\n      address: data['address'],\n      delta: data['delta'].map(EvalDeltaKeyValue.from_obj_for_encoding),\n    });\n    /* eslint-enable dot-notation */\n  }\n}\n\n/**\n *\n */\nexport class AccountsResponse extends BaseModel {\n  public accounts: Account[];\n\n  /**\n   * Round at which the results were computed.\n   */\n  public currentRound: number | bigint;\n\n  /**\n   * Used for pagination, when making another request provide this token with the\n   * next parameter.\n   */\n  public nextToken?: string;\n\n  /**\n   * Creates a new `AccountsResponse` object.\n   * @param accounts -\n   * @param currentRound - Round at which the results were computed.\n   * @param nextToken - Used for pagination, when making another request provide this token with the\n   * next parameter.\n   */\n  constructor({\n    accounts,\n    currentRound,\n    nextToken,\n  }: {\n    accounts: Account[];\n    currentRound: number | bigint;\n    nextToken?: string;\n  }) {\n    super();\n    this.accounts = accounts;\n    this.currentRound = currentRound;\n    this.nextToken = nextToken;\n\n    this.attribute_map = {\n      accounts: 'accounts',\n      currentRound: 'current-round',\n      nextToken: 'next-token',\n    };\n  }\n\n  // eslint-disable-next-line camelcase\n  static from_obj_for_encoding(data: Record<string, any>): AccountsResponse {\n    /* eslint-disable dot-notation */\n    if (!Array.isArray(data['accounts']))\n      throw new Error(\n        `Response is missing required array field 'accounts': ${data}`\n      );\n    if (typeof data['current-round'] === 'undefined')\n      throw new Error(\n        `Response is missing required field 'current-round': ${data}`\n      );\n    return new AccountsResponse({\n      accounts: data['accounts'].map(Account.from_obj_for_encoding),\n      currentRound: data['current-round'],\n      nextToken: data['next-token'],\n    });\n    /* eslint-enable dot-notation */\n  }\n}\n\n/**\n * Application index and its parameters\n */\nexport class Application extends BaseModel {\n  /**\n   * (appidx) application index.\n   */\n  public id: number | bigint;\n\n  /**\n   * (appparams) application parameters.\n   */\n  public params: ApplicationParams;\n\n  /**\n   * Round when this application was created.\n   */\n  public createdAtRound?: number | bigint;\n\n  /**\n   * Whether or not this application is currently deleted.\n   */\n  public deleted?: boolean;\n\n  /**\n   * Round when this application was deleted.\n   */\n  public deletedAtRound?: number | bigint;\n\n  /**\n   * Creates a new `Application` object.\n   * @param id - (appidx) application index.\n   * @param params - (appparams) application parameters.\n   * @param createdAtRound - Round when this application was created.\n   * @param deleted - Whether or not this application is currently deleted.\n   * @param deletedAtRound - Round when this application was deleted.\n   */\n  constructor({\n    id,\n    params,\n    createdAtRound,\n    deleted,\n    deletedAtRound,\n  }: {\n    id: number | bigint;\n    params: ApplicationParams;\n    createdAtRound?: number | bigint;\n    deleted?: boolean;\n    deletedAtRound?: number | bigint;\n  }) {\n    super();\n    this.id = id;\n    this.params = params;\n    this.createdAtRound = createdAtRound;\n    this.deleted = deleted;\n    this.deletedAtRound = deletedAtRound;\n\n    this.attribute_map = {\n      id: 'id',\n      params: 'params',\n      createdAtRound: 'created-at-round',\n      deleted: 'deleted',\n      deletedAtRound: 'deleted-at-round',\n    };\n  }\n\n  // eslint-disable-next-line camelcase\n  static from_obj_for_encoding(data: Record<string, any>): Application {\n    /* eslint-disable dot-notation */\n    if (typeof data['id'] === 'undefined')\n      throw new Error(`Response is missing required field 'id': ${data}`);\n    if (typeof data['params'] === 'undefined')\n      throw new Error(`Response is missing required field 'params': ${data}`);\n    return new Application({\n      id: data['id'],\n      params: ApplicationParams.from_obj_for_encoding(data['params']),\n      createdAtRound: data['created-at-round'],\n      deleted: data['deleted'],\n      deletedAtRound: data['deleted-at-round'],\n    });\n    /* eslint-enable dot-notation */\n  }\n}\n\n/**\n * Stores local state associated with an application.\n */\nexport class ApplicationLocalState extends BaseModel {\n  /**\n   * The application which this local state is for.\n   */\n  public id: number | bigint;\n\n  /**\n   * (hsch) schema.\n   */\n  public schema: ApplicationStateSchema;\n\n  /**\n   * Round when account closed out of the application.\n   */\n  public closedOutAtRound?: number | bigint;\n\n  /**\n   * Whether or not the application local state is currently deleted from its\n   * account.\n   */\n  public deleted?: boolean;\n\n  /**\n   * (tkv) storage.\n   */\n  public keyValue?: TealKeyValue[];\n\n  /**\n   * Round when the account opted into the application.\n   */\n  public optedInAtRound?: number | bigint;\n\n  /**\n   * Creates a new `ApplicationLocalState` object.\n   * @param id - The application which this local state is for.\n   * @param schema - (hsch) schema.\n   * @param closedOutAtRound - Round when account closed out of the application.\n   * @param deleted - Whether or not the application local state is currently deleted from its\n   * account.\n   * @param keyValue - (tkv) storage.\n   * @param optedInAtRound - Round when the account opted into the application.\n   */\n  constructor({\n    id,\n    schema,\n    closedOutAtRound,\n    deleted,\n    keyValue,\n    optedInAtRound,\n  }: {\n    id: number | bigint;\n    schema: ApplicationStateSchema;\n    closedOutAtRound?: number | bigint;\n    deleted?: boolean;\n    keyValue?: TealKeyValue[];\n    optedInAtRound?: number | bigint;\n  }) {\n    super();\n    this.id = id;\n    this.schema = schema;\n    this.closedOutAtRound = closedOutAtRound;\n    this.deleted = deleted;\n    this.keyValue = keyValue;\n    this.optedInAtRound = optedInAtRound;\n\n    this.attribute_map = {\n      id: 'id',\n      schema: 'schema',\n      closedOutAtRound: 'closed-out-at-round',\n      deleted: 'deleted',\n      keyValue: 'key-value',\n      optedInAtRound: 'opted-in-at-round',\n    };\n  }\n\n  // eslint-disable-next-line camelcase\n  static from_obj_for_encoding(\n    data: Record<string, any>\n  ): ApplicationLocalState {\n    /* eslint-disable dot-notation */\n    if (typeof data['id'] === 'undefined')\n      throw new Error(`Response is missing required field 'id': ${data}`);\n    if (typeof data['schema'] === 'undefined')\n      throw new Error(`Response is missing required field 'schema': ${data}`);\n    return new ApplicationLocalState({\n      id: data['id'],\n      schema: ApplicationStateSchema.from_obj_for_encoding(data['schema']),\n      closedOutAtRound: data['closed-out-at-round'],\n      deleted: data['deleted'],\n      keyValue:\n        typeof data['key-value'] !== 'undefined'\n          ? data['key-value'].map(TealKeyValue.from_obj_for_encoding)\n          : undefined,\n      optedInAtRound: data['opted-in-at-round'],\n    });\n    /* eslint-enable dot-notation */\n  }\n}\n\n/**\n *\n */\nexport class ApplicationLocalStatesResponse extends BaseModel {\n  public appsLocalStates: ApplicationLocalState[];\n\n  /**\n   * Round at which the results were computed.\n   */\n  public currentRound: number | bigint;\n\n  /**\n   * Used for pagination, when making another request provide this token with the\n   * next parameter.\n   */\n  public nextToken?: string;\n\n  /**\n   * Creates a new `ApplicationLocalStatesResponse` object.\n   * @param appsLocalStates -\n   * @param currentRound - Round at which the results were computed.\n   * @param nextToken - Used for pagination, when making another request provide this token with the\n   * next parameter.\n   */\n  constructor({\n    appsLocalStates,\n    currentRound,\n    nextToken,\n  }: {\n    appsLocalStates: ApplicationLocalState[];\n    currentRound: number | bigint;\n    nextToken?: string;\n  }) {\n    super();\n    this.appsLocalStates = appsLocalStates;\n    this.currentRound = currentRound;\n    this.nextToken = nextToken;\n\n    this.attribute_map = {\n      appsLocalStates: 'apps-local-states',\n      currentRound: 'current-round',\n      nextToken: 'next-token',\n    };\n  }\n\n  // eslint-disable-next-line camelcase\n  static from_obj_for_encoding(\n    data: Record<string, any>\n  ): ApplicationLocalStatesResponse {\n    /* eslint-disable dot-notation */\n    if (!Array.isArray(data['apps-local-states']))\n      throw new Error(\n        `Response is missing required array field 'apps-local-states': ${data}`\n      );\n    if (typeof data['current-round'] === 'undefined')\n      throw new Error(\n        `Response is missing required field 'current-round': ${data}`\n      );\n    return new ApplicationLocalStatesResponse({\n      appsLocalStates: data['apps-local-states'].map(\n        ApplicationLocalState.from_obj_for_encoding\n      ),\n      currentRound: data['current-round'],\n      nextToken: data['next-token'],\n    });\n    /* eslint-enable dot-notation */\n  }\n}\n\n/**\n * Stores the global information associated with an application.\n */\nexport class ApplicationLogData extends BaseModel {\n  /**\n   * (lg) Logs for the application being executed by the transaction.\n   */\n  public logs: Uint8Array[];\n\n  /**\n   * Transaction ID\n   */\n  public txid: string;\n\n  /**\n   * Creates a new `ApplicationLogData` object.\n   * @param logs - (lg) Logs for the application being executed by the transaction.\n   * @param txid - Transaction ID\n   */\n  constructor({ logs, txid }: { logs: Uint8Array[]; txid: string }) {\n    super();\n    this.logs = logs;\n    this.txid = txid;\n\n    this.attribute_map = {\n      logs: 'logs',\n      txid: 'txid',\n    };\n  }\n\n  // eslint-disable-next-line camelcase\n  static from_obj_for_encoding(data: Record<string, any>): ApplicationLogData {\n    /* eslint-disable dot-notation */\n    if (!Array.isArray(data['logs']))\n      throw new Error(\n        `Response is missing required array field 'logs': ${data}`\n      );\n    if (typeof data['txid'] === 'undefined')\n      throw new Error(`Response is missing required field 'txid': ${data}`);\n    return new ApplicationLogData({\n      logs: data['logs'],\n      txid: data['txid'],\n    });\n    /* eslint-enable dot-notation */\n  }\n}\n\n/**\n *\n */\nexport class ApplicationLogsResponse extends BaseModel {\n  /**\n   * (appidx) application index.\n   */\n  public applicationId: number | bigint;\n\n  /**\n   * Round at which the results were computed.\n   */\n  public currentRound: number | bigint;\n\n  public logData?: ApplicationLogData[];\n\n  /**\n   * Used for pagination, when making another request provide this token with the\n   * next parameter.\n   */\n  public nextToken?: string;\n\n  /**\n   * Creates a new `ApplicationLogsResponse` object.\n   * @param applicationId - (appidx) application index.\n   * @param currentRound - Round at which the results were computed.\n   * @param logData -\n   * @param nextToken - Used for pagination, when making another request provide this token with the\n   * next parameter.\n   */\n  constructor({\n    applicationId,\n    currentRound,\n    logData,\n    nextToken,\n  }: {\n    applicationId: number | bigint;\n    currentRound: number | bigint;\n    logData?: ApplicationLogData[];\n    nextToken?: string;\n  }) {\n    super();\n    this.applicationId = applicationId;\n    this.currentRound = currentRound;\n    this.logData = logData;\n    this.nextToken = nextToken;\n\n    this.attribute_map = {\n      applicationId: 'application-id',\n      currentRound: 'current-round',\n      logData: 'log-data',\n      nextToken: 'next-token',\n    };\n  }\n\n  // eslint-disable-next-line camelcase\n  static from_obj_for_encoding(\n    data: Record<string, any>\n  ): ApplicationLogsResponse {\n    /* eslint-disable dot-notation */\n    if (typeof data['application-id'] === 'undefined')\n      throw new Error(\n        `Response is missing required field 'application-id': ${data}`\n      );\n    if (typeof data['current-round'] === 'undefined')\n      throw new Error(\n        `Response is missing required field 'current-round': ${data}`\n      );\n    return new ApplicationLogsResponse({\n      applicationId: data['application-id'],\n      currentRound: data['current-round'],\n      logData:\n        typeof data['log-data'] !== 'undefined'\n          ? data['log-data'].map(ApplicationLogData.from_obj_for_encoding)\n          : undefined,\n      nextToken: data['next-token'],\n    });\n    /* eslint-enable dot-notation */\n  }\n}\n\n/**\n * Stores the global information associated with an application.\n */\nexport class ApplicationParams extends BaseModel {\n  /**\n   * (approv) approval program.\n   */\n  public approvalProgram: Uint8Array;\n\n  /**\n   * (clearp) approval program.\n   */\n  public clearStateProgram: Uint8Array;\n\n  /**\n   * The address that created this application. This is the address where the\n   * parameters and global state for this application can be found.\n   */\n  public creator?: string;\n\n  /**\n   * (epp) the amount of extra program pages available to this app.\n   */\n  public extraProgramPages?: number | bigint;\n\n  /**\n   * [\\gs) global schema\n   */\n  public globalState?: TealKeyValue[];\n\n  /**\n   * [\\gsch) global schema\n   */\n  public globalStateSchema?: ApplicationStateSchema;\n\n  /**\n   * [\\lsch) local schema\n   */\n  public localStateSchema?: ApplicationStateSchema;\n\n  /**\n   * Creates a new `ApplicationParams` object.\n   * @param approvalProgram - (approv) approval program.\n   * @param clearStateProgram - (clearp) approval program.\n   * @param creator - The address that created this application. This is the address where the\n   * parameters and global state for this application can be found.\n   * @param extraProgramPages - (epp) the amount of extra program pages available to this app.\n   * @param globalState - [\\gs) global schema\n   * @param globalStateSchema - [\\gsch) global schema\n   * @param localStateSchema - [\\lsch) local schema\n   */\n  constructor({\n    approvalProgram,\n    clearStateProgram,\n    creator,\n    extraProgramPages,\n    globalState,\n    globalStateSchema,\n    localStateSchema,\n  }: {\n    approvalProgram: string | Uint8Array;\n    clearStateProgram: string | Uint8Array;\n    creator?: string;\n    extraProgramPages?: number | bigint;\n    globalState?: TealKeyValue[];\n    globalStateSchema?: ApplicationStateSchema;\n    localStateSchema?: ApplicationStateSchema;\n  }) {\n    super();\n    this.approvalProgram =\n      typeof approvalProgram === 'string'\n        ? new Uint8Array(Buffer.from(approvalProgram, 'base64'))\n        : approvalProgram;\n    this.clearStateProgram =\n      typeof clearStateProgram === 'string'\n        ? new Uint8Array(Buffer.from(clearStateProgram, 'base64'))\n        : clearStateProgram;\n    this.creator = creator;\n    this.extraProgramPages = extraProgramPages;\n    this.globalState = globalState;\n    this.globalStateSchema = globalStateSchema;\n    this.localStateSchema = localStateSchema;\n\n    this.attribute_map = {\n      approvalProgram: 'approval-program',\n      clearStateProgram: 'clear-state-program',\n      creator: 'creator',\n      extraProgramPages: 'extra-program-pages',\n      globalState: 'global-state',\n      globalStateSchema: 'global-state-schema',\n      localStateSchema: 'local-state-schema',\n    };\n  }\n\n  // eslint-disable-next-line camelcase\n  static from_obj_for_encoding(data: Record<string, any>): ApplicationParams {\n    /* eslint-disable dot-notation */\n    if (typeof data['approval-program'] === 'undefined')\n      throw new Error(\n        `Response is missing required field 'approval-program': ${data}`\n      );\n    if (typeof data['clear-state-program'] === 'undefined')\n      throw new Error(\n        `Response is missing required field 'clear-state-program': ${data}`\n      );\n    return new ApplicationParams({\n      approvalProgram: data['approval-program'],\n      clearStateProgram: data['clear-state-program'],\n      creator: data['creator'],\n      extraProgramPages: data['extra-program-pages'],\n      globalState:\n        typeof data['global-state'] !== 'undefined'\n          ? data['global-state'].map(TealKeyValue.from_obj_for_encoding)\n          : undefined,\n      globalStateSchema:\n        typeof data['global-state-schema'] !== 'undefined'\n          ? ApplicationStateSchema.from_obj_for_encoding(\n              data['global-state-schema']\n            )\n          : undefined,\n      localStateSchema:\n        typeof data['local-state-schema'] !== 'undefined'\n          ? ApplicationStateSchema.from_obj_for_encoding(\n              data['local-state-schema']\n            )\n          : undefined,\n    });\n    /* eslint-enable dot-notation */\n  }\n}\n\n/**\n *\n */\nexport class ApplicationResponse extends BaseModel {\n  /**\n   * Round at which the results were computed.\n   */\n  public currentRound: number | bigint;\n\n  /**\n   * Application index and its parameters\n   */\n  public application?: Application;\n\n  /**\n   * Creates a new `ApplicationResponse` object.\n   * @param currentRound - Round at which the results were computed.\n   * @param application - Application index and its parameters\n   */\n  constructor({\n    currentRound,\n    application,\n  }: {\n    currentRound: number | bigint;\n    application?: Application;\n  }) {\n    super();\n    this.currentRound = currentRound;\n    this.application = application;\n\n    this.attribute_map = {\n      currentRound: 'current-round',\n      application: 'application',\n    };\n  }\n\n  // eslint-disable-next-line camelcase\n  static from_obj_for_encoding(data: Record<string, any>): ApplicationResponse {\n    /* eslint-disable dot-notation */\n    if (typeof data['current-round'] === 'undefined')\n      throw new Error(\n        `Response is missing required field 'current-round': ${data}`\n      );\n    return new ApplicationResponse({\n      currentRound: data['current-round'],\n      application:\n        typeof data['application'] !== 'undefined'\n          ? Application.from_obj_for_encoding(data['application'])\n          : undefined,\n    });\n    /* eslint-enable dot-notation */\n  }\n}\n\n/**\n * Specifies maximums on the number of each type that may be stored.\n */\nexport class ApplicationStateSchema extends BaseModel {\n  /**\n   * (nbs) num of byte slices.\n   */\n  public numByteSlice: number | bigint;\n\n  /**\n   * (nui) num of uints.\n   */\n  public numUint: number | bigint;\n\n  /**\n   * Creates a new `ApplicationStateSchema` object.\n   * @param numByteSlice - (nbs) num of byte slices.\n   * @param numUint - (nui) num of uints.\n   */\n  constructor({\n    numByteSlice,\n    numUint,\n  }: {\n    numByteSlice: number | bigint;\n    numUint: number | bigint;\n  }) {\n    super();\n    this.numByteSlice = numByteSlice;\n    this.numUint = numUint;\n\n    this.attribute_map = {\n      numByteSlice: 'num-byte-slice',\n      numUint: 'num-uint',\n    };\n  }\n\n  // eslint-disable-next-line camelcase\n  static from_obj_for_encoding(\n    data: Record<string, any>\n  ): ApplicationStateSchema {\n    /* eslint-disable dot-notation */\n    if (typeof data['num-byte-slice'] === 'undefined')\n      throw new Error(\n        `Response is missing required field 'num-byte-slice': ${data}`\n      );\n    if (typeof data['num-uint'] === 'undefined')\n      throw new Error(`Response is missing required field 'num-uint': ${data}`);\n    return new ApplicationStateSchema({\n      numByteSlice: data['num-byte-slice'],\n      numUint: data['num-uint'],\n    });\n    /* eslint-enable dot-notation */\n  }\n}\n\n/**\n *\n */\nexport class ApplicationsResponse extends BaseModel {\n  public applications: Application[];\n\n  /**\n   * Round at which the results were computed.\n   */\n  public currentRound: number | bigint;\n\n  /**\n   * Used for pagination, when making another request provide this token with the\n   * next parameter.\n   */\n  public nextToken?: string;\n\n  /**\n   * Creates a new `ApplicationsResponse` object.\n   * @param applications -\n   * @param currentRound - Round at which the results were computed.\n   * @param nextToken - Used for pagination, when making another request provide this token with the\n   * next parameter.\n   */\n  constructor({\n    applications,\n    currentRound,\n    nextToken,\n  }: {\n    applications: Application[];\n    currentRound: number | bigint;\n    nextToken?: string;\n  }) {\n    super();\n    this.applications = applications;\n    this.currentRound = currentRound;\n    this.nextToken = nextToken;\n\n    this.attribute_map = {\n      applications: 'applications',\n      currentRound: 'current-round',\n      nextToken: 'next-token',\n    };\n  }\n\n  // eslint-disable-next-line camelcase\n  static from_obj_for_encoding(\n    data: Record<string, any>\n  ): ApplicationsResponse {\n    /* eslint-disable dot-notation */\n    if (!Array.isArray(data['applications']))\n      throw new Error(\n        `Response is missing required array field 'applications': ${data}`\n      );\n    if (typeof data['current-round'] === 'undefined')\n      throw new Error(\n        `Response is missing required field 'current-round': ${data}`\n      );\n    return new ApplicationsResponse({\n      applications: data['applications'].map(Application.from_obj_for_encoding),\n      currentRound: data['current-round'],\n      nextToken: data['next-token'],\n    });\n    /* eslint-enable dot-notation */\n  }\n}\n\n/**\n * Specifies both the unique identifier and the parameters for an asset\n */\nexport class Asset extends BaseModel {\n  /**\n   * unique asset identifier\n   */\n  public index: number | bigint;\n\n  /**\n   * AssetParams specifies the parameters for an asset.\n   * (apar) when part of an AssetConfig transaction.\n   * Definition:\n   * data/transactions/asset.go : AssetParams\n   */\n  public params: AssetParams;\n\n  /**\n   * Round during which this asset was created.\n   */\n  public createdAtRound?: number | bigint;\n\n  /**\n   * Whether or not this asset is currently deleted.\n   */\n  public deleted?: boolean;\n\n  /**\n   * Round during which this asset was destroyed.\n   */\n  public destroyedAtRound?: number | bigint;\n\n  /**\n   * Creates a new `Asset` object.\n   * @param index - unique asset identifier\n   * @param params - AssetParams specifies the parameters for an asset.\n   * (apar) when part of an AssetConfig transaction.\n   * Definition:\n   * data/transactions/asset.go : AssetParams\n   * @param createdAtRound - Round during which this asset was created.\n   * @param deleted - Whether or not this asset is currently deleted.\n   * @param destroyedAtRound - Round during which this asset was destroyed.\n   */\n  constructor({\n    index,\n    params,\n    createdAtRound,\n    deleted,\n    destroyedAtRound,\n  }: {\n    index: number | bigint;\n    params: AssetParams;\n    createdAtRound?: number | bigint;\n    deleted?: boolean;\n    destroyedAtRound?: number | bigint;\n  }) {\n    super();\n    this.index = index;\n    this.params = params;\n    this.createdAtRound = createdAtRound;\n    this.deleted = deleted;\n    this.destroyedAtRound = destroyedAtRound;\n\n    this.attribute_map = {\n      index: 'index',\n      params: 'params',\n      createdAtRound: 'created-at-round',\n      deleted: 'deleted',\n      destroyedAtRound: 'destroyed-at-round',\n    };\n  }\n\n  // eslint-disable-next-line camelcase\n  static from_obj_for_encoding(data: Record<string, any>): Asset {\n    /* eslint-disable dot-notation */\n    if (typeof data['index'] === 'undefined')\n      throw new Error(`Response is missing required field 'index': ${data}`);\n    if (typeof data['params'] === 'undefined')\n      throw new Error(`Response is missing required field 'params': ${data}`);\n    return new Asset({\n      index: data['index'],\n      params: AssetParams.from_obj_for_encoding(data['params']),\n      createdAtRound: data['created-at-round'],\n      deleted: data['deleted'],\n      destroyedAtRound: data['destroyed-at-round'],\n    });\n    /* eslint-enable dot-notation */\n  }\n}\n\n/**\n *\n */\nexport class AssetBalancesResponse extends BaseModel {\n  public balances: MiniAssetHolding[];\n\n  /**\n   * Round at which the results were computed.\n   */\n  public currentRound: number | bigint;\n\n  /**\n   * Used for pagination, when making another request provide this token with the\n   * next parameter.\n   */\n  public nextToken?: string;\n\n  /**\n   * Creates a new `AssetBalancesResponse` object.\n   * @param balances -\n   * @param currentRound - Round at which the results were computed.\n   * @param nextToken - Used for pagination, when making another request provide this token with the\n   * next parameter.\n   */\n  constructor({\n    balances,\n    currentRound,\n    nextToken,\n  }: {\n    balances: MiniAssetHolding[];\n    currentRound: number | bigint;\n    nextToken?: string;\n  }) {\n    super();\n    this.balances = balances;\n    this.currentRound = currentRound;\n    this.nextToken = nextToken;\n\n    this.attribute_map = {\n      balances: 'balances',\n      currentRound: 'current-round',\n      nextToken: 'next-token',\n    };\n  }\n\n  // eslint-disable-next-line camelcase\n  static from_obj_for_encoding(\n    data: Record<string, any>\n  ): AssetBalancesResponse {\n    /* eslint-disable dot-notation */\n    if (!Array.isArray(data['balances']))\n      throw new Error(\n        `Response is missing required array field 'balances': ${data}`\n      );\n    if (typeof data['current-round'] === 'undefined')\n      throw new Error(\n        `Response is missing required field 'current-round': ${data}`\n      );\n    return new AssetBalancesResponse({\n      balances: data['balances'].map(MiniAssetHolding.from_obj_for_encoding),\n      currentRound: data['current-round'],\n      nextToken: data['next-token'],\n    });\n    /* eslint-enable dot-notation */\n  }\n}\n\n/**\n * Describes an asset held by an account.\n * Definition:\n * data/basics/userBalance.go : AssetHolding\n */\nexport class AssetHolding extends BaseModel {\n  /**\n   * (a) number of units held.\n   */\n  public amount: number | bigint;\n\n  /**\n   * Asset ID of the holding.\n   */\n  public assetId: number | bigint;\n\n  /**\n   * (f) whether or not the holding is frozen.\n   */\n  public isFrozen: boolean;\n\n  /**\n   * Whether or not the asset holding is currently deleted from its account.\n   */\n  public deleted?: boolean;\n\n  /**\n   * Round during which the account opted into this asset holding.\n   */\n  public optedInAtRound?: number | bigint;\n\n  /**\n   * Round during which the account opted out of this asset holding.\n   */\n  public optedOutAtRound?: number | bigint;\n\n  /**\n   * Creates a new `AssetHolding` object.\n   * @param amount - (a) number of units held.\n   * @param assetId - Asset ID of the holding.\n   * @param isFrozen - (f) whether or not the holding is frozen.\n   * @param deleted - Whether or not the asset holding is currently deleted from its account.\n   * @param optedInAtRound - Round during which the account opted into this asset holding.\n   * @param optedOutAtRound - Round during which the account opted out of this asset holding.\n   */\n  constructor({\n    amount,\n    assetId,\n    isFrozen,\n    deleted,\n    optedInAtRound,\n    optedOutAtRound,\n  }: {\n    amount: number | bigint;\n    assetId: number | bigint;\n    isFrozen: boolean;\n    deleted?: boolean;\n    optedInAtRound?: number | bigint;\n    optedOutAtRound?: number | bigint;\n  }) {\n    super();\n    this.amount = amount;\n    this.assetId = assetId;\n    this.isFrozen = isFrozen;\n    this.deleted = deleted;\n    this.optedInAtRound = optedInAtRound;\n    this.optedOutAtRound = optedOutAtRound;\n\n    this.attribute_map = {\n      amount: 'amount',\n      assetId: 'asset-id',\n      isFrozen: 'is-frozen',\n      deleted: 'deleted',\n      optedInAtRound: 'opted-in-at-round',\n      optedOutAtRound: 'opted-out-at-round',\n    };\n  }\n\n  // eslint-disable-next-line camelcase\n  static from_obj_for_encoding(data: Record<string, any>): AssetHolding {\n    /* eslint-disable dot-notation */\n    if (typeof data['amount'] === 'undefined')\n      throw new Error(`Response is missing required field 'amount': ${data}`);\n    if (typeof data['asset-id'] === 'undefined')\n      throw new Error(`Response is missing required field 'asset-id': ${data}`);\n    if (typeof data['is-frozen'] === 'undefined')\n      throw new Error(\n        `Response is missing required field 'is-frozen': ${data}`\n      );\n    return new AssetHolding({\n      amount: data['amount'],\n      assetId: data['asset-id'],\n      isFrozen: data['is-frozen'],\n      deleted: data['deleted'],\n      optedInAtRound: data['opted-in-at-round'],\n      optedOutAtRound: data['opted-out-at-round'],\n    });\n    /* eslint-enable dot-notation */\n  }\n}\n\n/**\n *\n */\nexport class AssetHoldingsResponse extends BaseModel {\n  public assets: AssetHolding[];\n\n  /**\n   * Round at which the results were computed.\n   */\n  public currentRound: number | bigint;\n\n  /**\n   * Used for pagination, when making another request provide this token with the\n   * next parameter.\n   */\n  public nextToken?: string;\n\n  /**\n   * Creates a new `AssetHoldingsResponse` object.\n   * @param assets -\n   * @param currentRound - Round at which the results were computed.\n   * @param nextToken - Used for pagination, when making another request provide this token with the\n   * next parameter.\n   */\n  constructor({\n    assets,\n    currentRound,\n    nextToken,\n  }: {\n    assets: AssetHolding[];\n    currentRound: number | bigint;\n    nextToken?: string;\n  }) {\n    super();\n    this.assets = assets;\n    this.currentRound = currentRound;\n    this.nextToken = nextToken;\n\n    this.attribute_map = {\n      assets: 'assets',\n      currentRound: 'current-round',\n      nextToken: 'next-token',\n    };\n  }\n\n  // eslint-disable-next-line camelcase\n  static from_obj_for_encoding(\n    data: Record<string, any>\n  ): AssetHoldingsResponse {\n    /* eslint-disable dot-notation */\n    if (!Array.isArray(data['assets']))\n      throw new Error(\n        `Response is missing required array field 'assets': ${data}`\n      );\n    if (typeof data['current-round'] === 'undefined')\n      throw new Error(\n        `Response is missing required field 'current-round': ${data}`\n      );\n    return new AssetHoldingsResponse({\n      assets: data['assets'].map(AssetHolding.from_obj_for_encoding),\n      currentRound: data['current-round'],\n      nextToken: data['next-token'],\n    });\n    /* eslint-enable dot-notation */\n  }\n}\n\n/**\n * AssetParams specifies the parameters for an asset.\n * (apar) when part of an AssetConfig transaction.\n * Definition:\n * data/transactions/asset.go : AssetParams\n */\nexport class AssetParams extends BaseModel {\n  /**\n   * The address that created this asset. This is the address where the parameters\n   * for this asset can be found, and also the address where unwanted asset units can\n   * be sent in the worst case.\n   */\n  public creator: string;\n\n  /**\n   * (dc) The number of digits to use after the decimal point when displaying this\n   * asset. If 0, the asset is not divisible. If 1, the base unit of the asset is in\n   * tenths. If 2, the base unit of the asset is in hundredths, and so on. This value\n   * must be between 0 and 19 (inclusive).\n   */\n  public decimals: number | bigint;\n\n  /**\n   * (t) The total number of units of this asset.\n   */\n  public total: number | bigint;\n\n  /**\n   * (c) Address of account used to clawback holdings of this asset. If empty,\n   * clawback is not permitted.\n   */\n  public clawback?: string;\n\n  /**\n   * (df) Whether holdings of this asset are frozen by default.\n   */\n  public defaultFrozen?: boolean;\n\n  /**\n   * (f) Address of account used to freeze holdings of this asset. If empty, freezing\n   * is not permitted.\n   */\n  public freeze?: string;\n\n  /**\n   * (m) Address of account used to manage the keys of this asset and to destroy it.\n   */\n  public manager?: string;\n\n  /**\n   * (am) A commitment to some unspecified asset metadata. The format of this\n   * metadata is up to the application.\n   */\n  public metadataHash?: Uint8Array;\n\n  /**\n   * (an) Name of this asset, as supplied by the creator. Included only when the\n   * asset name is composed of printable utf-8 characters.\n   */\n  public name?: string;\n\n  /**\n   * Base64 encoded name of this asset, as supplied by the creator.\n   */\n  public nameB64?: Uint8Array;\n\n  /**\n   * (r) Address of account holding reserve (non-minted) units of this asset.\n   */\n  public reserve?: string;\n\n  /**\n   * (un) Name of a unit of this asset, as supplied by the creator. Included only\n   * when the name of a unit of this asset is composed of printable utf-8 characters.\n   */\n  public unitName?: string;\n\n  /**\n   * Base64 encoded name of a unit of this asset, as supplied by the creator.\n   */\n  public unitNameB64?: Uint8Array;\n\n  /**\n   * (au) URL where more information about the asset can be retrieved. Included only\n   * when the URL is composed of printable utf-8 characters.\n   */\n  public url?: string;\n\n  /**\n   * Base64 encoded URL where more information about the asset can be retrieved.\n   */\n  public urlB64?: Uint8Array;\n\n  /**\n   * Creates a new `AssetParams` object.\n   * @param creator - The address that created this asset. This is the address where the parameters\n   * for this asset can be found, and also the address where unwanted asset units can\n   * be sent in the worst case.\n   * @param decimals - (dc) The number of digits to use after the decimal point when displaying this\n   * asset. If 0, the asset is not divisible. If 1, the base unit of the asset is in\n   * tenths. If 2, the base unit of the asset is in hundredths, and so on. This value\n   * must be between 0 and 19 (inclusive).\n   * @param total - (t) The total number of units of this asset.\n   * @param clawback - (c) Address of account used to clawback holdings of this asset. If empty,\n   * clawback is not permitted.\n   * @param defaultFrozen - (df) Whether holdings of this asset are frozen by default.\n   * @param freeze - (f) Address of account used to freeze holdings of this asset. If empty, freezing\n   * is not permitted.\n   * @param manager - (m) Address of account used to manage the keys of this asset and to destroy it.\n   * @param metadataHash - (am) A commitment to some unspecified asset metadata. The format of this\n   * metadata is up to the application.\n   * @param name - (an) Name of this asset, as supplied by the creator. Included only when the\n   * asset name is composed of printable utf-8 characters.\n   * @param nameB64 - Base64 encoded name of this asset, as supplied by the creator.\n   * @param reserve - (r) Address of account holding reserve (non-minted) units of this asset.\n   * @param unitName - (un) Name of a unit of this asset, as supplied by the creator. Included only\n   * when the name of a unit of this asset is composed of printable utf-8 characters.\n   * @param unitNameB64 - Base64 encoded name of a unit of this asset, as supplied by the creator.\n   * @param url - (au) URL where more information about the asset can be retrieved. Included only\n   * when the URL is composed of printable utf-8 characters.\n   * @param urlB64 - Base64 encoded URL where more information about the asset can be retrieved.\n   */\n  constructor({\n    creator,\n    decimals,\n    total,\n    clawback,\n    defaultFrozen,\n    freeze,\n    manager,\n    metadataHash,\n    name,\n    nameB64,\n    reserve,\n    unitName,\n    unitNameB64,\n    url,\n    urlB64,\n  }: {\n    creator: string;\n    decimals: number | bigint;\n    total: number | bigint;\n    clawback?: string;\n    defaultFrozen?: boolean;\n    freeze?: string;\n    manager?: string;\n    metadataHash?: string | Uint8Array;\n    name?: string;\n    nameB64?: string | Uint8Array;\n    reserve?: string;\n    unitName?: string;\n    unitNameB64?: string | Uint8Array;\n    url?: string;\n    urlB64?: string | Uint8Array;\n  }) {\n    super();\n    this.creator = creator;\n    this.decimals = decimals;\n    this.total = total;\n    this.clawback = clawback;\n    this.defaultFrozen = defaultFrozen;\n    this.freeze = freeze;\n    this.manager = manager;\n    this.metadataHash =\n      typeof metadataHash === 'string'\n        ? new Uint8Array(Buffer.from(metadataHash, 'base64'))\n        : metadataHash;\n    this.name = name;\n    this.nameB64 =\n      typeof nameB64 === 'string'\n        ? new Uint8Array(Buffer.from(nameB64, 'base64'))\n        : nameB64;\n    this.reserve = reserve;\n    this.unitName = unitName;\n    this.unitNameB64 =\n      typeof unitNameB64 === 'string'\n        ? new Uint8Array(Buffer.from(unitNameB64, 'base64'))\n        : unitNameB64;\n    this.url = url;\n    this.urlB64 =\n      typeof urlB64 === 'string'\n        ? new Uint8Array(Buffer.from(urlB64, 'base64'))\n        : urlB64;\n\n    this.attribute_map = {\n      creator: 'creator',\n      decimals: 'decimals',\n      total: 'total',\n      clawback: 'clawback',\n      defaultFrozen: 'default-frozen',\n      freeze: 'freeze',\n      manager: 'manager',\n      metadataHash: 'metadata-hash',\n      name: 'name',\n      nameB64: 'name-b64',\n      reserve: 'reserve',\n      unitName: 'unit-name',\n      unitNameB64: 'unit-name-b64',\n      url: 'url',\n      urlB64: 'url-b64',\n    };\n  }\n\n  // eslint-disable-next-line camelcase\n  static from_obj_for_encoding(data: Record<string, any>): AssetParams {\n    /* eslint-disable dot-notation */\n    if (typeof data['creator'] === 'undefined')\n      throw new Error(`Response is missing required field 'creator': ${data}`);\n    if (typeof data['decimals'] === 'undefined')\n      throw new Error(`Response is missing required field 'decimals': ${data}`);\n    if (typeof data['total'] === 'undefined')\n      throw new Error(`Response is missing required field 'total': ${data}`);\n    return new AssetParams({\n      creator: data['creator'],\n      decimals: data['decimals'],\n      total: data['total'],\n      clawback: data['clawback'],\n      defaultFrozen: data['default-frozen'],\n      freeze: data['freeze'],\n      manager: data['manager'],\n      metadataHash: data['metadata-hash'],\n      name: data['name'],\n      nameB64: data['name-b64'],\n      reserve: data['reserve'],\n      unitName: data['unit-name'],\n      unitNameB64: data['unit-name-b64'],\n      url: data['url'],\n      urlB64: data['url-b64'],\n    });\n    /* eslint-enable dot-notation */\n  }\n}\n\n/**\n *\n */\nexport class AssetResponse extends BaseModel {\n  /**\n   * Specifies both the unique identifier and the parameters for an asset\n   */\n  public asset: Asset;\n\n  /**\n   * Round at which the results were computed.\n   */\n  public currentRound: number | bigint;\n\n  /**\n   * Creates a new `AssetResponse` object.\n   * @param asset - Specifies both the unique identifier and the parameters for an asset\n   * @param currentRound - Round at which the results were computed.\n   */\n  constructor({\n    asset,\n    currentRound,\n  }: {\n    asset: Asset;\n    currentRound: number | bigint;\n  }) {\n    super();\n    this.asset = asset;\n    this.currentRound = currentRound;\n\n    this.attribute_map = {\n      asset: 'asset',\n      currentRound: 'current-round',\n    };\n  }\n\n  // eslint-disable-next-line camelcase\n  static from_obj_for_encoding(data: Record<string, any>): AssetResponse {\n    /* eslint-disable dot-notation */\n    if (typeof data['asset'] === 'undefined')\n      throw new Error(`Response is missing required field 'asset': ${data}`);\n    if (typeof data['current-round'] === 'undefined')\n      throw new Error(\n        `Response is missing required field 'current-round': ${data}`\n      );\n    return new AssetResponse({\n      asset: Asset.from_obj_for_encoding(data['asset']),\n      currentRound: data['current-round'],\n    });\n    /* eslint-enable dot-notation */\n  }\n}\n\n/**\n *\n */\nexport class AssetsResponse extends BaseModel {\n  public assets: Asset[];\n\n  /**\n   * Round at which the results were computed.\n   */\n  public currentRound: number | bigint;\n\n  /**\n   * Used for pagination, when making another request provide this token with the\n   * next parameter.\n   */\n  public nextToken?: string;\n\n  /**\n   * Creates a new `AssetsResponse` object.\n   * @param assets -\n   * @param currentRound - Round at which the results were computed.\n   * @param nextToken - Used for pagination, when making another request provide this token with the\n   * next parameter.\n   */\n  constructor({\n    assets,\n    currentRound,\n    nextToken,\n  }: {\n    assets: Asset[];\n    currentRound: number | bigint;\n    nextToken?: string;\n  }) {\n    super();\n    this.assets = assets;\n    this.currentRound = currentRound;\n    this.nextToken = nextToken;\n\n    this.attribute_map = {\n      assets: 'assets',\n      currentRound: 'current-round',\n      nextToken: 'next-token',\n    };\n  }\n\n  // eslint-disable-next-line camelcase\n  static from_obj_for_encoding(data: Record<string, any>): AssetsResponse {\n    /* eslint-disable dot-notation */\n    if (!Array.isArray(data['assets']))\n      throw new Error(\n        `Response is missing required array field 'assets': ${data}`\n      );\n    if (typeof data['current-round'] === 'undefined')\n      throw new Error(\n        `Response is missing required field 'current-round': ${data}`\n      );\n    return new AssetsResponse({\n      assets: data['assets'].map(Asset.from_obj_for_encoding),\n      currentRound: data['current-round'],\n      nextToken: data['next-token'],\n    });\n    /* eslint-enable dot-notation */\n  }\n}\n\n/**\n * Block information.\n * Definition:\n * data/bookkeeping/block.go : Block\n */\nexport class Block extends BaseModel {\n  /**\n   * (gh) hash to which this block belongs.\n   */\n  public genesisHash: Uint8Array;\n\n  /**\n   * (gen) ID to which this block belongs.\n   */\n  public genesisId: string;\n\n  /**\n   * (prev) Previous block hash.\n   */\n  public previousBlockHash: Uint8Array;\n\n  /**\n   * (rnd) Current round on which this block was appended to the chain.\n   */\n  public round: number | bigint;\n\n  /**\n   * (seed) Sortition seed.\n   */\n  public seed: Uint8Array;\n\n  /**\n   * (ts) Block creation timestamp in seconds since eposh\n   */\n  public timestamp: number | bigint;\n\n  /**\n   * (txn) TransactionsRoot authenticates the set of transactions appearing in the\n   * block. More specifically, it's the root of a merkle tree whose leaves are the\n   * block's Txids, in lexicographic order. For the empty block, it's 0. Note that\n   * the TxnRoot does not authenticate the signatures on the transactions, only the\n   * transactions themselves. Two blocks with the same transactions but in a\n   * different order and with different signatures will have the same TxnRoot.\n   */\n  public transactionsRoot: Uint8Array;\n\n  /**\n   * (txn256) TransactionsRootSHA256 is an auxiliary TransactionRoot, built using a\n   * vector commitment instead of a merkle tree, and SHA256 hash function instead of\n   * the default SHA512_256. This commitment can be used on environments where only\n   * the SHA256 function exists.\n   */\n  public transactionsRootSha256: Uint8Array;\n\n  /**\n   * Participation account data that needs to be checked/acted on by the network.\n   */\n  public participationUpdates?: ParticipationUpdates;\n\n  /**\n   * Fields relating to rewards,\n   */\n  public rewards?: BlockRewards;\n\n  /**\n   * Tracks the status of state proofs.\n   */\n  public stateProofTracking?: StateProofTracking[];\n\n  /**\n   * (txns) list of transactions corresponding to a given round.\n   */\n  public transactions?: Transaction[];\n\n  /**\n   * (tc) TxnCounter counts the number of transactions committed in the ledger, from\n   * the time at which support for this feature was introduced.\n   * Specifically, TxnCounter is the number of the next transaction that will be\n   * committed after this block. It is 0 when no transactions have ever been\n   * committed (since TxnCounter started being supported).\n   */\n  public txnCounter?: number | bigint;\n\n  /**\n   * Fields relating to a protocol upgrade.\n   */\n  public upgradeState?: BlockUpgradeState;\n\n  /**\n   * Fields relating to voting for a protocol upgrade.\n   */\n  public upgradeVote?: BlockUpgradeVote;\n\n  /**\n   * Creates a new `Block` object.\n   * @param genesisHash - (gh) hash to which this block belongs.\n   * @param genesisId - (gen) ID to which this block belongs.\n   * @param previousBlockHash - (prev) Previous block hash.\n   * @param round - (rnd) Current round on which this block was appended to the chain.\n   * @param seed - (seed) Sortition seed.\n   * @param timestamp - (ts) Block creation timestamp in seconds since eposh\n   * @param transactionsRoot - (txn) TransactionsRoot authenticates the set of transactions appearing in the\n   * block. More specifically, it's the root of a merkle tree whose leaves are the\n   * block's Txids, in lexicographic order. For the empty block, it's 0. Note that\n   * the TxnRoot does not authenticate the signatures on the transactions, only the\n   * transactions themselves. Two blocks with the same transactions but in a\n   * different order and with different signatures will have the same TxnRoot.\n   * @param transactionsRootSha256 - (txn256) TransactionsRootSHA256 is an auxiliary TransactionRoot, built using a\n   * vector commitment instead of a merkle tree, and SHA256 hash function instead of\n   * the default SHA512_256. This commitment can be used on environments where only\n   * the SHA256 function exists.\n   * @param participationUpdates - Participation account data that needs to be checked/acted on by the network.\n   * @param rewards - Fields relating to rewards,\n   * @param stateProofTracking - Tracks the status of state proofs.\n   * @param transactions - (txns) list of transactions corresponding to a given round.\n   * @param txnCounter - (tc) TxnCounter counts the number of transactions committed in the ledger, from\n   * the time at which support for this feature was introduced.\n   * Specifically, TxnCounter is the number of the next transaction that will be\n   * committed after this block. It is 0 when no transactions have ever been\n   * committed (since TxnCounter started being supported).\n   * @param upgradeState - Fields relating to a protocol upgrade.\n   * @param upgradeVote - Fields relating to voting for a protocol upgrade.\n   */\n  constructor({\n    genesisHash,\n    genesisId,\n    previousBlockHash,\n    round,\n    seed,\n    timestamp,\n    transactionsRoot,\n    transactionsRootSha256,\n    participationUpdates,\n    rewards,\n    stateProofTracking,\n    transactions,\n    txnCounter,\n    upgradeState,\n    upgradeVote,\n  }: {\n    genesisHash: string | Uint8Array;\n    genesisId: string;\n    previousBlockHash: string | Uint8Array;\n    round: number | bigint;\n    seed: string | Uint8Array;\n    timestamp: number | bigint;\n    transactionsRoot: string | Uint8Array;\n    transactionsRootSha256: string | Uint8Array;\n    participationUpdates?: ParticipationUpdates;\n    rewards?: BlockRewards;\n    stateProofTracking?: StateProofTracking[];\n    transactions?: Transaction[];\n    txnCounter?: number | bigint;\n    upgradeState?: BlockUpgradeState;\n    upgradeVote?: BlockUpgradeVote;\n  }) {\n    super();\n    this.genesisHash =\n      typeof genesisHash === 'string'\n        ? new Uint8Array(Buffer.from(genesisHash, 'base64'))\n        : genesisHash;\n    this.genesisId = genesisId;\n    this.previousBlockHash =\n      typeof previousBlockHash === 'string'\n        ? new Uint8Array(Buffer.from(previousBlockHash, 'base64'))\n        : previousBlockHash;\n    this.round = round;\n    this.seed =\n      typeof seed === 'string'\n        ? new Uint8Array(Buffer.from(seed, 'base64'))\n        : seed;\n    this.timestamp = timestamp;\n    this.transactionsRoot =\n      typeof transactionsRoot === 'string'\n        ? new Uint8Array(Buffer.from(transactionsRoot, 'base64'))\n        : transactionsRoot;\n    this.transactionsRootSha256 =\n      typeof transactionsRootSha256 === 'string'\n        ? new Uint8Array(Buffer.from(transactionsRootSha256, 'base64'))\n        : transactionsRootSha256;\n    this.participationUpdates = participationUpdates;\n    this.rewards = rewards;\n    this.stateProofTracking = stateProofTracking;\n    this.transactions = transactions;\n    this.txnCounter = txnCounter;\n    this.upgradeState = upgradeState;\n    this.upgradeVote = upgradeVote;\n\n    this.attribute_map = {\n      genesisHash: 'genesis-hash',\n      genesisId: 'genesis-id',\n      previousBlockHash: 'previous-block-hash',\n      round: 'round',\n      seed: 'seed',\n      timestamp: 'timestamp',\n      transactionsRoot: 'transactions-root',\n      transactionsRootSha256: 'transactions-root-sha256',\n      participationUpdates: 'participation-updates',\n      rewards: 'rewards',\n      stateProofTracking: 'state-proof-tracking',\n      transactions: 'transactions',\n      txnCounter: 'txn-counter',\n      upgradeState: 'upgrade-state',\n      upgradeVote: 'upgrade-vote',\n    };\n  }\n\n  // eslint-disable-next-line camelcase\n  static from_obj_for_encoding(data: Record<string, any>): Block {\n    /* eslint-disable dot-notation */\n    if (typeof data['genesis-hash'] === 'undefined')\n      throw new Error(\n        `Response is missing required field 'genesis-hash': ${data}`\n      );\n    if (typeof data['genesis-id'] === 'undefined')\n      throw new Error(\n        `Response is missing required field 'genesis-id': ${data}`\n      );\n    if (typeof data['previous-block-hash'] === 'undefined')\n      throw new Error(\n        `Response is missing required field 'previous-block-hash': ${data}`\n      );\n    if (typeof data['round'] === 'undefined')\n      throw new Error(`Response is missing required field 'round': ${data}`);\n    if (typeof data['seed'] === 'undefined')\n      throw new Error(`Response is missing required field 'seed': ${data}`);\n    if (typeof data['timestamp'] === 'undefined')\n      throw new Error(\n        `Response is missing required field 'timestamp': ${data}`\n      );\n    if (typeof data['transactions-root'] === 'undefined')\n      throw new Error(\n        `Response is missing required field 'transactions-root': ${data}`\n      );\n    if (typeof data['transactions-root-sha256'] === 'undefined')\n      throw new Error(\n        `Response is missing required field 'transactions-root-sha256': ${data}`\n      );\n    return new Block({\n      genesisHash: data['genesis-hash'],\n      genesisId: data['genesis-id'],\n      previousBlockHash: data['previous-block-hash'],\n      round: data['round'],\n      seed: data['seed'],\n      timestamp: data['timestamp'],\n      transactionsRoot: data['transactions-root'],\n      transactionsRootSha256: data['transactions-root-sha256'],\n      participationUpdates:\n        typeof data['participation-updates'] !== 'undefined'\n          ? ParticipationUpdates.from_obj_for_encoding(\n              data['participation-updates']\n            )\n          : undefined,\n      rewards:\n        typeof data['rewards'] !== 'undefined'\n          ? BlockRewards.from_obj_for_encoding(data['rewards'])\n          : undefined,\n      stateProofTracking:\n        typeof data['state-proof-tracking'] !== 'undefined'\n          ? data['state-proof-tracking'].map(\n              StateProofTracking.from_obj_for_encoding\n            )\n          : undefined,\n      transactions:\n        typeof data['transactions'] !== 'undefined'\n          ? data['transactions'].map(Transaction.from_obj_for_encoding)\n          : undefined,\n      txnCounter: data['txn-counter'],\n      upgradeState:\n        typeof data['upgrade-state'] !== 'undefined'\n          ? BlockUpgradeState.from_obj_for_encoding(data['upgrade-state'])\n          : undefined,\n      upgradeVote:\n        typeof data['upgrade-vote'] !== 'undefined'\n          ? BlockUpgradeVote.from_obj_for_encoding(data['upgrade-vote'])\n          : undefined,\n    });\n    /* eslint-enable dot-notation */\n  }\n}\n\n/**\n * Fields relating to rewards,\n */\nexport class BlockRewards extends BaseModel {\n  /**\n   * (fees) accepts transaction fees, it can only spend to the incentive pool.\n   */\n  public feeSink: string;\n\n  /**\n   * (rwcalr) number of leftover MicroAlgos after the distribution of rewards-rate\n   * MicroAlgos for every reward unit in the next round.\n   */\n  public rewardsCalculationRound: number | bigint;\n\n  /**\n   * (earn) How many rewards, in MicroAlgos, have been distributed to each RewardUnit\n   * of MicroAlgos since genesis.\n   */\n  public rewardsLevel: number | bigint;\n\n  /**\n   * (rwd) accepts periodic injections from the fee-sink and continually\n   * redistributes them as rewards.\n   */\n  public rewardsPool: string;\n\n  /**\n   * (rate) Number of new MicroAlgos added to the participation stake from rewards at\n   * the next round.\n   */\n  public rewardsRate: number | bigint;\n\n  /**\n   * (frac) Number of leftover MicroAlgos after the distribution of\n   * RewardsRate/rewardUnits MicroAlgos for every reward unit in the next round.\n   */\n  public rewardsResidue: number | bigint;\n\n  /**\n   * Creates a new `BlockRewards` object.\n   * @param feeSink - (fees) accepts transaction fees, it can only spend to the incentive pool.\n   * @param rewardsCalculationRound - (rwcalr) number of leftover MicroAlgos after the distribution of rewards-rate\n   * MicroAlgos for every reward unit in the next round.\n   * @param rewardsLevel - (earn) How many rewards, in MicroAlgos, have been distributed to each RewardUnit\n   * of MicroAlgos since genesis.\n   * @param rewardsPool - (rwd) accepts periodic injections from the fee-sink and continually\n   * redistributes them as rewards.\n   * @param rewardsRate - (rate) Number of new MicroAlgos added to the participation stake from rewards at\n   * the next round.\n   * @param rewardsResidue - (frac) Number of leftover MicroAlgos after the distribution of\n   * RewardsRate/rewardUnits MicroAlgos for every reward unit in the next round.\n   */\n  constructor({\n    feeSink,\n    rewardsCalculationRound,\n    rewardsLevel,\n    rewardsPool,\n    rewardsRate,\n    rewardsResidue,\n  }: {\n    feeSink: string;\n    rewardsCalculationRound: number | bigint;\n    rewardsLevel: number | bigint;\n    rewardsPool: string;\n    rewardsRate: number | bigint;\n    rewardsResidue: number | bigint;\n  }) {\n    super();\n    this.feeSink = feeSink;\n    this.rewardsCalculationRound = rewardsCalculationRound;\n    this.rewardsLevel = rewardsLevel;\n    this.rewardsPool = rewardsPool;\n    this.rewardsRate = rewardsRate;\n    this.rewardsResidue = rewardsResidue;\n\n    this.attribute_map = {\n      feeSink: 'fee-sink',\n      rewardsCalculationRound: 'rewards-calculation-round',\n      rewardsLevel: 'rewards-level',\n      rewardsPool: 'rewards-pool',\n      rewardsRate: 'rewards-rate',\n      rewardsResidue: 'rewards-residue',\n    };\n  }\n\n  // eslint-disable-next-line camelcase\n  static from_obj_for_encoding(data: Record<string, any>): BlockRewards {\n    /* eslint-disable dot-notation */\n    if (typeof data['fee-sink'] === 'undefined')\n      throw new Error(`Response is missing required field 'fee-sink': ${data}`);\n    if (typeof data['rewards-calculation-round'] === 'undefined')\n      throw new Error(\n        `Response is missing required field 'rewards-calculation-round': ${data}`\n      );\n    if (typeof data['rewards-level'] === 'undefined')\n      throw new Error(\n        `Response is missing required field 'rewards-level': ${data}`\n      );\n    if (typeof data['rewards-pool'] === 'undefined')\n      throw new Error(\n        `Response is missing required field 'rewards-pool': ${data}`\n      );\n    if (typeof data['rewards-rate'] === 'undefined')\n      throw new Error(\n        `Response is missing required field 'rewards-rate': ${data}`\n      );\n    if (typeof data['rewards-residue'] === 'undefined')\n      throw new Error(\n        `Response is missing required field 'rewards-residue': ${data}`\n      );\n    return new BlockRewards({\n      feeSink: data['fee-sink'],\n      rewardsCalculationRound: data['rewards-calculation-round'],\n      rewardsLevel: data['rewards-level'],\n      rewardsPool: data['rewards-pool'],\n      rewardsRate: data['rewards-rate'],\n      rewardsResidue: data['rewards-residue'],\n    });\n    /* eslint-enable dot-notation */\n  }\n}\n\n/**\n * Fields relating to a protocol upgrade.\n */\nexport class BlockUpgradeState extends BaseModel {\n  /**\n   * (proto) The current protocol version.\n   */\n  public currentProtocol: string;\n\n  /**\n   * (nextproto) The next proposed protocol version.\n   */\n  public nextProtocol?: string;\n\n  /**\n   * (nextyes) Number of blocks which approved the protocol upgrade.\n   */\n  public nextProtocolApprovals?: number | bigint;\n\n  /**\n   * (nextswitch) Round on which the protocol upgrade will take effect.\n   */\n  public nextProtocolSwitchOn?: number | bigint;\n\n  /**\n   * (nextbefore) Deadline round for this protocol upgrade (No votes will be consider\n   * after this round).\n   */\n  public nextProtocolVoteBefore?: number | bigint;\n\n  /**\n   * Creates a new `BlockUpgradeState` object.\n   * @param currentProtocol - (proto) The current protocol version.\n   * @param nextProtocol - (nextproto) The next proposed protocol version.\n   * @param nextProtocolApprovals - (nextyes) Number of blocks which approved the protocol upgrade.\n   * @param nextProtocolSwitchOn - (nextswitch) Round on which the protocol upgrade will take effect.\n   * @param nextProtocolVoteBefore - (nextbefore) Deadline round for this protocol upgrade (No votes will be consider\n   * after this round).\n   */\n  constructor({\n    currentProtocol,\n    nextProtocol,\n    nextProtocolApprovals,\n    nextProtocolSwitchOn,\n    nextProtocolVoteBefore,\n  }: {\n    currentProtocol: string;\n    nextProtocol?: string;\n    nextProtocolApprovals?: number | bigint;\n    nextProtocolSwitchOn?: number | bigint;\n    nextProtocolVoteBefore?: number | bigint;\n  }) {\n    super();\n    this.currentProtocol = currentProtocol;\n    this.nextProtocol = nextProtocol;\n    this.nextProtocolApprovals = nextProtocolApprovals;\n    this.nextProtocolSwitchOn = nextProtocolSwitchOn;\n    this.nextProtocolVoteBefore = nextProtocolVoteBefore;\n\n    this.attribute_map = {\n      currentProtocol: 'current-protocol',\n      nextProtocol: 'next-protocol',\n      nextProtocolApprovals: 'next-protocol-approvals',\n      nextProtocolSwitchOn: 'next-protocol-switch-on',\n      nextProtocolVoteBefore: 'next-protocol-vote-before',\n    };\n  }\n\n  // eslint-disable-next-line camelcase\n  static from_obj_for_encoding(data: Record<string, any>): BlockUpgradeState {\n    /* eslint-disable dot-notation */\n    if (typeof data['current-protocol'] === 'undefined')\n      throw new Error(\n        `Response is missing required field 'current-protocol': ${data}`\n      );\n    return new BlockUpgradeState({\n      currentProtocol: data['current-protocol'],\n      nextProtocol: data['next-protocol'],\n      nextProtocolApprovals: data['next-protocol-approvals'],\n      nextProtocolSwitchOn: data['next-protocol-switch-on'],\n      nextProtocolVoteBefore: data['next-protocol-vote-before'],\n    });\n    /* eslint-enable dot-notation */\n  }\n}\n\n/**\n * Fields relating to voting for a protocol upgrade.\n */\nexport class BlockUpgradeVote extends BaseModel {\n  /**\n   * (upgradeyes) Indicates a yes vote for the current proposal.\n   */\n  public upgradeApprove?: boolean;\n\n  /**\n   * (upgradedelay) Indicates the time between acceptance and execution.\n   */\n  public upgradeDelay?: number | bigint;\n\n  /**\n   * (upgradeprop) Indicates a proposed upgrade.\n   */\n  public upgradePropose?: string;\n\n  /**\n   * Creates a new `BlockUpgradeVote` object.\n   * @param upgradeApprove - (upgradeyes) Indicates a yes vote for the current proposal.\n   * @param upgradeDelay - (upgradedelay) Indicates the time between acceptance and execution.\n   * @param upgradePropose - (upgradeprop) Indicates a proposed upgrade.\n   */\n  constructor({\n    upgradeApprove,\n    upgradeDelay,\n    upgradePropose,\n  }: {\n    upgradeApprove?: boolean;\n    upgradeDelay?: number | bigint;\n    upgradePropose?: string;\n  }) {\n    super();\n    this.upgradeApprove = upgradeApprove;\n    this.upgradeDelay = upgradeDelay;\n    this.upgradePropose = upgradePropose;\n\n    this.attribute_map = {\n      upgradeApprove: 'upgrade-approve',\n      upgradeDelay: 'upgrade-delay',\n      upgradePropose: 'upgrade-propose',\n    };\n  }\n\n  // eslint-disable-next-line camelcase\n  static from_obj_for_encoding(data: Record<string, any>): BlockUpgradeVote {\n    /* eslint-disable dot-notation */\n    return new BlockUpgradeVote({\n      upgradeApprove: data['upgrade-approve'],\n      upgradeDelay: data['upgrade-delay'],\n      upgradePropose: data['upgrade-propose'],\n    });\n    /* eslint-enable dot-notation */\n  }\n}\n\n/**\n * Box name and its content.\n */\nexport class Box extends BaseModel {\n  /**\n   * (name) box name, base64 encoded\n   */\n  public name: Uint8Array;\n\n  /**\n   * (value) box value, base64 encoded.\n   */\n  public value: Uint8Array;\n\n  /**\n   * Creates a new `Box` object.\n   * @param name - (name) box name, base64 encoded\n   * @param value - (value) box value, base64 encoded.\n   */\n  constructor({\n    name,\n    value,\n  }: {\n    name: string | Uint8Array;\n    value: string | Uint8Array;\n  }) {\n    super();\n    this.name =\n      typeof name === 'string'\n        ? new Uint8Array(Buffer.from(name, 'base64'))\n        : name;\n    this.value =\n      typeof value === 'string'\n        ? new Uint8Array(Buffer.from(value, 'base64'))\n        : value;\n\n    this.attribute_map = {\n      name: 'name',\n      value: 'value',\n    };\n  }\n\n  // eslint-disable-next-line camelcase\n  static from_obj_for_encoding(data: Record<string, any>): Box {\n    /* eslint-disable dot-notation */\n    if (typeof data['name'] === 'undefined')\n      throw new Error(`Response is missing required field 'name': ${data}`);\n    if (typeof data['value'] === 'undefined')\n      throw new Error(`Response is missing required field 'value': ${data}`);\n    return new Box({\n      name: data['name'],\n      value: data['value'],\n    });\n    /* eslint-enable dot-notation */\n  }\n}\n\n/**\n * Box descriptor describes an app box without a value.\n */\nexport class BoxDescriptor extends BaseModel {\n  /**\n   * Base64 encoded box name\n   */\n  public name: Uint8Array;\n\n  /**\n   * Creates a new `BoxDescriptor` object.\n   * @param name - Base64 encoded box name\n   */\n  constructor({ name }: { name: string | Uint8Array }) {\n    super();\n    this.name =\n      typeof name === 'string'\n        ? new Uint8Array(Buffer.from(name, 'base64'))\n        : name;\n\n    this.attribute_map = {\n      name: 'name',\n    };\n  }\n\n  // eslint-disable-next-line camelcase\n  static from_obj_for_encoding(data: Record<string, any>): BoxDescriptor {\n    /* eslint-disable dot-notation */\n    if (typeof data['name'] === 'undefined')\n      throw new Error(`Response is missing required field 'name': ${data}`);\n    return new BoxDescriptor({\n      name: data['name'],\n    });\n    /* eslint-enable dot-notation */\n  }\n}\n\n/**\n * Box names of an application\n */\nexport class BoxesResponse extends BaseModel {\n  /**\n   * (appidx) application index.\n   */\n  public applicationId: number | bigint;\n\n  public boxes: BoxDescriptor[];\n\n  /**\n   * Used for pagination, when making another request provide this token with the\n   * next parameter.\n   */\n  public nextToken?: string;\n\n  /**\n   * Creates a new `BoxesResponse` object.\n   * @param applicationId - (appidx) application index.\n   * @param boxes -\n   * @param nextToken - Used for pagination, when making another request provide this token with the\n   * next parameter.\n   */\n  constructor({\n    applicationId,\n    boxes,\n    nextToken,\n  }: {\n    applicationId: number | bigint;\n    boxes: BoxDescriptor[];\n    nextToken?: string;\n  }) {\n    super();\n    this.applicationId = applicationId;\n    this.boxes = boxes;\n    this.nextToken = nextToken;\n\n    this.attribute_map = {\n      applicationId: 'application-id',\n      boxes: 'boxes',\n      nextToken: 'next-token',\n    };\n  }\n\n  // eslint-disable-next-line camelcase\n  static from_obj_for_encoding(data: Record<string, any>): BoxesResponse {\n    /* eslint-disable dot-notation */\n    if (typeof data['application-id'] === 'undefined')\n      throw new Error(\n        `Response is missing required field 'application-id': ${data}`\n      );\n    if (!Array.isArray(data['boxes']))\n      throw new Error(\n        `Response is missing required array field 'boxes': ${data}`\n      );\n    return new BoxesResponse({\n      applicationId: data['application-id'],\n      boxes: data['boxes'].map(BoxDescriptor.from_obj_for_encoding),\n      nextToken: data['next-token'],\n    });\n    /* eslint-enable dot-notation */\n  }\n}\n\n/**\n * Response for errors\n */\nexport class ErrorResponse extends BaseModel {\n  public message: string;\n\n  public data?: Record<string, any>;\n\n  /**\n   * Creates a new `ErrorResponse` object.\n   * @param message -\n   * @param data -\n   */\n  constructor({\n    message,\n    data,\n  }: {\n    message: string;\n    data?: Record<string, any>;\n  }) {\n    super();\n    this.message = message;\n    this.data = data;\n\n    this.attribute_map = {\n      message: 'message',\n      data: 'data',\n    };\n  }\n\n  // eslint-disable-next-line camelcase\n  static from_obj_for_encoding(data: Record<string, any>): ErrorResponse {\n    /* eslint-disable dot-notation */\n    if (typeof data['message'] === 'undefined')\n      throw new Error(`Response is missing required field 'message': ${data}`);\n    return new ErrorResponse({\n      message: data['message'],\n      data: data['data'],\n    });\n    /* eslint-enable dot-notation */\n  }\n}\n\n/**\n * Represents a TEAL value delta.\n */\nexport class EvalDelta extends BaseModel {\n  /**\n   * (at) delta action.\n   */\n  public action: number | bigint;\n\n  /**\n   * (bs) bytes value.\n   */\n  public bytes?: string;\n\n  /**\n   * (ui) uint value.\n   */\n  public uint?: number | bigint;\n\n  /**\n   * Creates a new `EvalDelta` object.\n   * @param action - (at) delta action.\n   * @param bytes - (bs) bytes value.\n   * @param uint - (ui) uint value.\n   */\n  constructor({\n    action,\n    bytes,\n    uint,\n  }: {\n    action: number | bigint;\n    bytes?: string;\n    uint?: number | bigint;\n  }) {\n    super();\n    this.action = action;\n    this.bytes = bytes;\n    this.uint = uint;\n\n    this.attribute_map = {\n      action: 'action',\n      bytes: 'bytes',\n      uint: 'uint',\n    };\n  }\n\n  // eslint-disable-next-line camelcase\n  static from_obj_for_encoding(data: Record<string, any>): EvalDelta {\n    /* eslint-disable dot-notation */\n    if (typeof data['action'] === 'undefined')\n      throw new Error(`Response is missing required field 'action': ${data}`);\n    return new EvalDelta({\n      action: data['action'],\n      bytes: data['bytes'],\n      uint: data['uint'],\n    });\n    /* eslint-enable dot-notation */\n  }\n}\n\n/**\n * Key-value pairs for StateDelta.\n */\nexport class EvalDeltaKeyValue extends BaseModel {\n  public key: string;\n\n  /**\n   * Represents a TEAL value delta.\n   */\n  public value: EvalDelta;\n\n  /**\n   * Creates a new `EvalDeltaKeyValue` object.\n   * @param key -\n   * @param value - Represents a TEAL value delta.\n   */\n  constructor({ key, value }: { key: string; value: EvalDelta }) {\n    super();\n    this.key = key;\n    this.value = value;\n\n    this.attribute_map = {\n      key: 'key',\n      value: 'value',\n    };\n  }\n\n  // eslint-disable-next-line camelcase\n  static from_obj_for_encoding(data: Record<string, any>): EvalDeltaKeyValue {\n    /* eslint-disable dot-notation */\n    if (typeof data['key'] === 'undefined')\n      throw new Error(`Response is missing required field 'key': ${data}`);\n    if (typeof data['value'] === 'undefined')\n      throw new Error(`Response is missing required field 'value': ${data}`);\n    return new EvalDeltaKeyValue({\n      key: data['key'],\n      value: EvalDelta.from_obj_for_encoding(data['value']),\n    });\n    /* eslint-enable dot-notation */\n  }\n}\n\nexport class HashFactory extends BaseModel {\n  /**\n   * (t)\n   */\n  public hashType?: number | bigint;\n\n  /**\n   * Creates a new `HashFactory` object.\n   * @param hashType - (t)\n   */\n  constructor({ hashType }: { hashType?: number | bigint }) {\n    super();\n    this.hashType = hashType;\n\n    this.attribute_map = {\n      hashType: 'hash-type',\n    };\n  }\n\n  // eslint-disable-next-line camelcase\n  static from_obj_for_encoding(data: Record<string, any>): HashFactory {\n    /* eslint-disable dot-notation */\n    return new HashFactory({\n      hashType: data['hash-type'],\n    });\n    /* eslint-enable dot-notation */\n  }\n}\n\n/**\n * A health check response.\n */\nexport class HealthCheck extends BaseModel {\n  public dbAvailable: boolean;\n\n  public isMigrating: boolean;\n\n  public message: string;\n\n  public round: number | bigint;\n\n  /**\n   * Current version.\n   */\n  public version: string;\n\n  public data?: Record<string, any>;\n\n  public errors?: string[];\n\n  /**\n   * Creates a new `HealthCheck` object.\n   * @param dbAvailable -\n   * @param isMigrating -\n   * @param message -\n   * @param round -\n   * @param version - Current version.\n   * @param data -\n   * @param errors -\n   */\n  constructor({\n    dbAvailable,\n    isMigrating,\n    message,\n    round,\n    version,\n    data,\n    errors,\n  }: {\n    dbAvailable: boolean;\n    isMigrating: boolean;\n    message: string;\n    round: number | bigint;\n    version: string;\n    data?: Record<string, any>;\n    errors?: string[];\n  }) {\n    super();\n    this.dbAvailable = dbAvailable;\n    this.isMigrating = isMigrating;\n    this.message = message;\n    this.round = round;\n    this.version = version;\n    this.data = data;\n    this.errors = errors;\n\n    this.attribute_map = {\n      dbAvailable: 'db-available',\n      isMigrating: 'is-migrating',\n      message: 'message',\n      round: 'round',\n      version: 'version',\n      data: 'data',\n      errors: 'errors',\n    };\n  }\n\n  // eslint-disable-next-line camelcase\n  static from_obj_for_encoding(data: Record<string, any>): HealthCheck {\n    /* eslint-disable dot-notation */\n    if (typeof data['db-available'] === 'undefined')\n      throw new Error(\n        `Response is missing required field 'db-available': ${data}`\n      );\n    if (typeof data['is-migrating'] === 'undefined')\n      throw new Error(\n        `Response is missing required field 'is-migrating': ${data}`\n      );\n    if (typeof data['message'] === 'undefined')\n      throw new Error(`Response is missing required field 'message': ${data}`);\n    if (typeof data['round'] === 'undefined')\n      throw new Error(`Response is missing required field 'round': ${data}`);\n    if (typeof data['version'] === 'undefined')\n      throw new Error(`Response is missing required field 'version': ${data}`);\n    return new HealthCheck({\n      dbAvailable: data['db-available'],\n      isMigrating: data['is-migrating'],\n      message: data['message'],\n      round: data['round'],\n      version: data['version'],\n      data: data['data'],\n      errors: data['errors'],\n    });\n    /* eslint-enable dot-notation */\n  }\n}\n\nexport class IndexerStateProofMessage extends BaseModel {\n  /**\n   * (b)\n   */\n  public blockHeadersCommitment?: Uint8Array;\n\n  /**\n   * (f)\n   */\n  public firstAttestedRound?: number | bigint;\n\n  /**\n   * (l)\n   */\n  public latestAttestedRound?: number | bigint;\n\n  /**\n   * (P)\n   */\n  public lnProvenWeight?: number | bigint;\n\n  /**\n   * (v)\n   */\n  public votersCommitment?: Uint8Array;\n\n  /**\n   * Creates a new `IndexerStateProofMessage` object.\n   * @param blockHeadersCommitment - (b)\n   * @param firstAttestedRound - (f)\n   * @param latestAttestedRound - (l)\n   * @param lnProvenWeight - (P)\n   * @param votersCommitment - (v)\n   */\n  constructor({\n    blockHeadersCommitment,\n    firstAttestedRound,\n    latestAttestedRound,\n    lnProvenWeight,\n    votersCommitment,\n  }: {\n    blockHeadersCommitment?: string | Uint8Array;\n    firstAttestedRound?: number | bigint;\n    latestAttestedRound?: number | bigint;\n    lnProvenWeight?: number | bigint;\n    votersCommitment?: string | Uint8Array;\n  }) {\n    super();\n    this.blockHeadersCommitment =\n      typeof blockHeadersCommitment === 'string'\n        ? new Uint8Array(Buffer.from(blockHeadersCommitment, 'base64'))\n        : blockHeadersCommitment;\n    this.firstAttestedRound = firstAttestedRound;\n    this.latestAttestedRound = latestAttestedRound;\n    this.lnProvenWeight = lnProvenWeight;\n    this.votersCommitment =\n      typeof votersCommitment === 'string'\n        ? new Uint8Array(Buffer.from(votersCommitment, 'base64'))\n        : votersCommitment;\n\n    this.attribute_map = {\n      blockHeadersCommitment: 'block-headers-commitment',\n      firstAttestedRound: 'first-attested-round',\n      latestAttestedRound: 'latest-attested-round',\n      lnProvenWeight: 'ln-proven-weight',\n      votersCommitment: 'voters-commitment',\n    };\n  }\n\n  // eslint-disable-next-line camelcase\n  static from_obj_for_encoding(\n    data: Record<string, any>\n  ): IndexerStateProofMessage {\n    /* eslint-disable dot-notation */\n    return new IndexerStateProofMessage({\n      blockHeadersCommitment: data['block-headers-commitment'],\n      firstAttestedRound: data['first-attested-round'],\n      latestAttestedRound: data['latest-attested-round'],\n      lnProvenWeight: data['ln-proven-weight'],\n      votersCommitment: data['voters-commitment'],\n    });\n    /* eslint-enable dot-notation */\n  }\n}\n\nexport class MerkleArrayProof extends BaseModel {\n  public hashFactory?: HashFactory;\n\n  /**\n   * (pth)\n   */\n  public path?: Uint8Array[];\n\n  /**\n   * (td)\n   */\n  public treeDepth?: number | bigint;\n\n  /**\n   * Creates a new `MerkleArrayProof` object.\n   * @param hashFactory -\n   * @param path - (pth)\n   * @param treeDepth - (td)\n   */\n  constructor({\n    hashFactory,\n    path,\n    treeDepth,\n  }: {\n    hashFactory?: HashFactory;\n    path?: Uint8Array[];\n    treeDepth?: number | bigint;\n  }) {\n    super();\n    this.hashFactory = hashFactory;\n    this.path = path;\n    this.treeDepth = treeDepth;\n\n    this.attribute_map = {\n      hashFactory: 'hash-factory',\n      path: 'path',\n      treeDepth: 'tree-depth',\n    };\n  }\n\n  // eslint-disable-next-line camelcase\n  static from_obj_for_encoding(data: Record<string, any>): MerkleArrayProof {\n    /* eslint-disable dot-notation */\n    return new MerkleArrayProof({\n      hashFactory:\n        typeof data['hash-factory'] !== 'undefined'\n          ? HashFactory.from_obj_for_encoding(data['hash-factory'])\n          : undefined,\n      path: data['path'],\n      treeDepth: data['tree-depth'],\n    });\n    /* eslint-enable dot-notation */\n  }\n}\n\n/**\n * A simplified version of AssetHolding\n */\nexport class MiniAssetHolding extends BaseModel {\n  public address: string;\n\n  public amount: number | bigint;\n\n  public isFrozen: boolean;\n\n  /**\n   * Whether or not this asset holding is currently deleted from its account.\n   */\n  public deleted?: boolean;\n\n  /**\n   * Round during which the account opted into the asset.\n   */\n  public optedInAtRound?: number | bigint;\n\n  /**\n   * Round during which the account opted out of the asset.\n   */\n  public optedOutAtRound?: number | bigint;\n\n  /**\n   * Creates a new `MiniAssetHolding` object.\n   * @param address -\n   * @param amount -\n   * @param isFrozen -\n   * @param deleted - Whether or not this asset holding is currently deleted from its account.\n   * @param optedInAtRound - Round during which the account opted into the asset.\n   * @param optedOutAtRound - Round during which the account opted out of the asset.\n   */\n  constructor({\n    address,\n    amount,\n    isFrozen,\n    deleted,\n    optedInAtRound,\n    optedOutAtRound,\n  }: {\n    address: string;\n    amount: number | bigint;\n    isFrozen: boolean;\n    deleted?: boolean;\n    optedInAtRound?: number | bigint;\n    optedOutAtRound?: number | bigint;\n  }) {\n    super();\n    this.address = address;\n    this.amount = amount;\n    this.isFrozen = isFrozen;\n    this.deleted = deleted;\n    this.optedInAtRound = optedInAtRound;\n    this.optedOutAtRound = optedOutAtRound;\n\n    this.attribute_map = {\n      address: 'address',\n      amount: 'amount',\n      isFrozen: 'is-frozen',\n      deleted: 'deleted',\n      optedInAtRound: 'opted-in-at-round',\n      optedOutAtRound: 'opted-out-at-round',\n    };\n  }\n\n  // eslint-disable-next-line camelcase\n  static from_obj_for_encoding(data: Record<string, any>): MiniAssetHolding {\n    /* eslint-disable dot-notation */\n    if (typeof data['address'] === 'undefined')\n      throw new Error(`Response is missing required field 'address': ${data}`);\n    if (typeof data['amount'] === 'undefined')\n      throw new Error(`Response is missing required field 'amount': ${data}`);\n    if (typeof data['is-frozen'] === 'undefined')\n      throw new Error(\n        `Response is missing required field 'is-frozen': ${data}`\n      );\n    return new MiniAssetHolding({\n      address: data['address'],\n      amount: data['amount'],\n      isFrozen: data['is-frozen'],\n      deleted: data['deleted'],\n      optedInAtRound: data['opted-in-at-round'],\n      optedOutAtRound: data['opted-out-at-round'],\n    });\n    /* eslint-enable dot-notation */\n  }\n}\n\n/**\n * Participation account data that needs to be checked/acted on by the network.\n */\nexport class ParticipationUpdates extends BaseModel {\n  /**\n   * (partupdrmv) a list of online accounts that needs to be converted to offline\n   * since their participation key expired.\n   */\n  public expiredParticipationAccounts?: string[];\n\n  /**\n   * Creates a new `ParticipationUpdates` object.\n   * @param expiredParticipationAccounts - (partupdrmv) a list of online accounts that needs to be converted to offline\n   * since their participation key expired.\n   */\n  constructor({\n    expiredParticipationAccounts,\n  }: {\n    expiredParticipationAccounts?: string[];\n  }) {\n    super();\n    this.expiredParticipationAccounts = expiredParticipationAccounts;\n\n    this.attribute_map = {\n      expiredParticipationAccounts: 'expired-participation-accounts',\n    };\n  }\n\n  // eslint-disable-next-line camelcase\n  static from_obj_for_encoding(\n    data: Record<string, any>\n  ): ParticipationUpdates {\n    /* eslint-disable dot-notation */\n    return new ParticipationUpdates({\n      expiredParticipationAccounts: data['expired-participation-accounts'],\n    });\n    /* eslint-enable dot-notation */\n  }\n}\n\n/**\n * (sp) represents a state proof.\n * Definition:\n * crypto/stateproof/structs.go : StateProof\n */\nexport class StateProofFields extends BaseModel {\n  /**\n   * (P)\n   */\n  public partProofs?: MerkleArrayProof;\n\n  /**\n   * (pr) Sequence of reveal positions.\n   */\n  public positionsToReveal?: (number | bigint)[];\n\n  /**\n   * (r) Note that this is actually stored as a map[uint64] - Reveal in the actual\n   * msgp\n   */\n  public reveals?: StateProofReveal[];\n\n  /**\n   * (v) Salt version of the merkle signature.\n   */\n  public saltVersion?: number | bigint;\n\n  /**\n   * (c)\n   */\n  public sigCommit?: Uint8Array;\n\n  /**\n   * (S)\n   */\n  public sigProofs?: MerkleArrayProof;\n\n  /**\n   * (w)\n   */\n  public signedWeight?: number | bigint;\n\n  /**\n   * Creates a new `StateProofFields` object.\n   * @param partProofs - (P)\n   * @param positionsToReveal - (pr) Sequence of reveal positions.\n   * @param reveals - (r) Note that this is actually stored as a map[uint64] - Reveal in the actual\n   * msgp\n   * @param saltVersion - (v) Salt version of the merkle signature.\n   * @param sigCommit - (c)\n   * @param sigProofs - (S)\n   * @param signedWeight - (w)\n   */\n  constructor({\n    partProofs,\n    positionsToReveal,\n    reveals,\n    saltVersion,\n    sigCommit,\n    sigProofs,\n    signedWeight,\n  }: {\n    partProofs?: MerkleArrayProof;\n    positionsToReveal?: (number | bigint)[];\n    reveals?: StateProofReveal[];\n    saltVersion?: number | bigint;\n    sigCommit?: string | Uint8Array;\n    sigProofs?: MerkleArrayProof;\n    signedWeight?: number | bigint;\n  }) {\n    super();\n    this.partProofs = partProofs;\n    this.positionsToReveal = positionsToReveal;\n    this.reveals = reveals;\n    this.saltVersion = saltVersion;\n    this.sigCommit =\n      typeof sigCommit === 'string'\n        ? new Uint8Array(Buffer.from(sigCommit, 'base64'))\n        : sigCommit;\n    this.sigProofs = sigProofs;\n    this.signedWeight = signedWeight;\n\n    this.attribute_map = {\n      partProofs: 'part-proofs',\n      positionsToReveal: 'positions-to-reveal',\n      reveals: 'reveals',\n      saltVersion: 'salt-version',\n      sigCommit: 'sig-commit',\n      sigProofs: 'sig-proofs',\n      signedWeight: 'signed-weight',\n    };\n  }\n\n  // eslint-disable-next-line camelcase\n  static from_obj_for_encoding(data: Record<string, any>): StateProofFields {\n    /* eslint-disable dot-notation */\n    return new StateProofFields({\n      partProofs:\n        typeof data['part-proofs'] !== 'undefined'\n          ? MerkleArrayProof.from_obj_for_encoding(data['part-proofs'])\n          : undefined,\n      positionsToReveal: data['positions-to-reveal'],\n      reveals:\n        typeof data['reveals'] !== 'undefined'\n          ? data['reveals'].map(StateProofReveal.from_obj_for_encoding)\n          : undefined,\n      saltVersion: data['salt-version'],\n      sigCommit: data['sig-commit'],\n      sigProofs:\n        typeof data['sig-proofs'] !== 'undefined'\n          ? MerkleArrayProof.from_obj_for_encoding(data['sig-proofs'])\n          : undefined,\n      signedWeight: data['signed-weight'],\n    });\n    /* eslint-enable dot-notation */\n  }\n}\n\nexport class StateProofParticipant extends BaseModel {\n  /**\n   * (p)\n   */\n  public verifier?: StateProofVerifier;\n\n  /**\n   * (w)\n   */\n  public weight?: number | bigint;\n\n  /**\n   * Creates a new `StateProofParticipant` object.\n   * @param verifier - (p)\n   * @param weight - (w)\n   */\n  constructor({\n    verifier,\n    weight,\n  }: {\n    verifier?: StateProofVerifier;\n    weight?: number | bigint;\n  }) {\n    super();\n    this.verifier = verifier;\n    this.weight = weight;\n\n    this.attribute_map = {\n      verifier: 'verifier',\n      weight: 'weight',\n    };\n  }\n\n  // eslint-disable-next-line camelcase\n  static from_obj_for_encoding(\n    data: Record<string, any>\n  ): StateProofParticipant {\n    /* eslint-disable dot-notation */\n    return new StateProofParticipant({\n      verifier:\n        typeof data['verifier'] !== 'undefined'\n          ? StateProofVerifier.from_obj_for_encoding(data['verifier'])\n          : undefined,\n      weight: data['weight'],\n    });\n    /* eslint-enable dot-notation */\n  }\n}\n\nexport class StateProofReveal extends BaseModel {\n  /**\n   * (p)\n   */\n  public participant?: StateProofParticipant;\n\n  /**\n   * The position in the signature and participants arrays corresponding to this\n   * entry.\n   */\n  public position?: number | bigint;\n\n  /**\n   * (s)\n   */\n  public sigSlot?: StateProofSigSlot;\n\n  /**\n   * Creates a new `StateProofReveal` object.\n   * @param participant - (p)\n   * @param position - The position in the signature and participants arrays corresponding to this\n   * entry.\n   * @param sigSlot - (s)\n   */\n  constructor({\n    participant,\n    position,\n    sigSlot,\n  }: {\n    participant?: StateProofParticipant;\n    position?: number | bigint;\n    sigSlot?: StateProofSigSlot;\n  }) {\n    super();\n    this.participant = participant;\n    this.position = position;\n    this.sigSlot = sigSlot;\n\n    this.attribute_map = {\n      participant: 'participant',\n      position: 'position',\n      sigSlot: 'sig-slot',\n    };\n  }\n\n  // eslint-disable-next-line camelcase\n  static from_obj_for_encoding(data: Record<string, any>): StateProofReveal {\n    /* eslint-disable dot-notation */\n    return new StateProofReveal({\n      participant:\n        typeof data['participant'] !== 'undefined'\n          ? StateProofParticipant.from_obj_for_encoding(data['participant'])\n          : undefined,\n      position: data['position'],\n      sigSlot:\n        typeof data['sig-slot'] !== 'undefined'\n          ? StateProofSigSlot.from_obj_for_encoding(data['sig-slot'])\n          : undefined,\n    });\n    /* eslint-enable dot-notation */\n  }\n}\n\nexport class StateProofSigSlot extends BaseModel {\n  /**\n   * (l) The total weight of signatures in the lower-numbered slots.\n   */\n  public lowerSigWeight?: number | bigint;\n\n  public signature?: StateProofSignature;\n\n  /**\n   * Creates a new `StateProofSigSlot` object.\n   * @param lowerSigWeight - (l) The total weight of signatures in the lower-numbered slots.\n   * @param signature -\n   */\n  constructor({\n    lowerSigWeight,\n    signature,\n  }: {\n    lowerSigWeight?: number | bigint;\n    signature?: StateProofSignature;\n  }) {\n    super();\n    this.lowerSigWeight = lowerSigWeight;\n    this.signature = signature;\n\n    this.attribute_map = {\n      lowerSigWeight: 'lower-sig-weight',\n      signature: 'signature',\n    };\n  }\n\n  // eslint-disable-next-line camelcase\n  static from_obj_for_encoding(data: Record<string, any>): StateProofSigSlot {\n    /* eslint-disable dot-notation */\n    return new StateProofSigSlot({\n      lowerSigWeight: data['lower-sig-weight'],\n      signature:\n        typeof data['signature'] !== 'undefined'\n          ? StateProofSignature.from_obj_for_encoding(data['signature'])\n          : undefined,\n    });\n    /* eslint-enable dot-notation */\n  }\n}\n\nexport class StateProofSignature extends BaseModel {\n  public falconSignature?: Uint8Array;\n\n  public merkleArrayIndex?: number | bigint;\n\n  public proof?: MerkleArrayProof;\n\n  /**\n   * (vkey)\n   */\n  public verifyingKey?: Uint8Array;\n\n  /**\n   * Creates a new `StateProofSignature` object.\n   * @param falconSignature -\n   * @param merkleArrayIndex -\n   * @param proof -\n   * @param verifyingKey - (vkey)\n   */\n  constructor({\n    falconSignature,\n    merkleArrayIndex,\n    proof,\n    verifyingKey,\n  }: {\n    falconSignature?: string | Uint8Array;\n    merkleArrayIndex?: number | bigint;\n    proof?: MerkleArrayProof;\n    verifyingKey?: string | Uint8Array;\n  }) {\n    super();\n    this.falconSignature =\n      typeof falconSignature === 'string'\n        ? new Uint8Array(Buffer.from(falconSignature, 'base64'))\n        : falconSignature;\n    this.merkleArrayIndex = merkleArrayIndex;\n    this.proof = proof;\n    this.verifyingKey =\n      typeof verifyingKey === 'string'\n        ? new Uint8Array(Buffer.from(verifyingKey, 'base64'))\n        : verifyingKey;\n\n    this.attribute_map = {\n      falconSignature: 'falcon-signature',\n      merkleArrayIndex: 'merkle-array-index',\n      proof: 'proof',\n      verifyingKey: 'verifying-key',\n    };\n  }\n\n  // eslint-disable-next-line camelcase\n  static from_obj_for_encoding(data: Record<string, any>): StateProofSignature {\n    /* eslint-disable dot-notation */\n    return new StateProofSignature({\n      falconSignature: data['falcon-signature'],\n      merkleArrayIndex: data['merkle-array-index'],\n      proof:\n        typeof data['proof'] !== 'undefined'\n          ? MerkleArrayProof.from_obj_for_encoding(data['proof'])\n          : undefined,\n      verifyingKey: data['verifying-key'],\n    });\n    /* eslint-enable dot-notation */\n  }\n}\n\nexport class StateProofTracking extends BaseModel {\n  /**\n   * (n) Next round for which we will accept a state proof transaction.\n   */\n  public nextRound?: number | bigint;\n\n  /**\n   * (t) The total number of microalgos held by the online accounts during the\n   * StateProof round.\n   */\n  public onlineTotalWeight?: number | bigint;\n\n  /**\n   * State Proof Type. Note the raw object uses map with this as key.\n   */\n  public type?: number | bigint;\n\n  /**\n   * (v) Root of a vector commitment containing online accounts that will help sign\n   * the proof.\n   */\n  public votersCommitment?: Uint8Array;\n\n  /**\n   * Creates a new `StateProofTracking` object.\n   * @param nextRound - (n) Next round for which we will accept a state proof transaction.\n   * @param onlineTotalWeight - (t) The total number of microalgos held by the online accounts during the\n   * StateProof round.\n   * @param type - State Proof Type. Note the raw object uses map with this as key.\n   * @param votersCommitment - (v) Root of a vector commitment containing online accounts that will help sign\n   * the proof.\n   */\n  constructor({\n    nextRound,\n    onlineTotalWeight,\n    type,\n    votersCommitment,\n  }: {\n    nextRound?: number | bigint;\n    onlineTotalWeight?: number | bigint;\n    type?: number | bigint;\n    votersCommitment?: string | Uint8Array;\n  }) {\n    super();\n    this.nextRound = nextRound;\n    this.onlineTotalWeight = onlineTotalWeight;\n    this.type = type;\n    this.votersCommitment =\n      typeof votersCommitment === 'string'\n        ? new Uint8Array(Buffer.from(votersCommitment, 'base64'))\n        : votersCommitment;\n\n    this.attribute_map = {\n      nextRound: 'next-round',\n      onlineTotalWeight: 'online-total-weight',\n      type: 'type',\n      votersCommitment: 'voters-commitment',\n    };\n  }\n\n  // eslint-disable-next-line camelcase\n  static from_obj_for_encoding(data: Record<string, any>): StateProofTracking {\n    /* eslint-disable dot-notation */\n    return new StateProofTracking({\n      nextRound: data['next-round'],\n      onlineTotalWeight: data['online-total-weight'],\n      type: data['type'],\n      votersCommitment: data['voters-commitment'],\n    });\n    /* eslint-enable dot-notation */\n  }\n}\n\nexport class StateProofVerifier extends BaseModel {\n  /**\n   * (cmt) Represents the root of the vector commitment tree.\n   */\n  public commitment?: Uint8Array;\n\n  /**\n   * (lf) Key lifetime.\n   */\n  public keyLifetime?: number | bigint;\n\n  /**\n   * Creates a new `StateProofVerifier` object.\n   * @param commitment - (cmt) Represents the root of the vector commitment tree.\n   * @param keyLifetime - (lf) Key lifetime.\n   */\n  constructor({\n    commitment,\n    keyLifetime,\n  }: {\n    commitment?: string | Uint8Array;\n    keyLifetime?: number | bigint;\n  }) {\n    super();\n    this.commitment =\n      typeof commitment === 'string'\n        ? new Uint8Array(Buffer.from(commitment, 'base64'))\n        : commitment;\n    this.keyLifetime = keyLifetime;\n\n    this.attribute_map = {\n      commitment: 'commitment',\n      keyLifetime: 'key-lifetime',\n    };\n  }\n\n  // eslint-disable-next-line camelcase\n  static from_obj_for_encoding(data: Record<string, any>): StateProofVerifier {\n    /* eslint-disable dot-notation */\n    return new StateProofVerifier({\n      commitment: data['commitment'],\n      keyLifetime: data['key-lifetime'],\n    });\n    /* eslint-enable dot-notation */\n  }\n}\n\n/**\n * Represents a (apls) local-state or (apgs) global-state schema. These schemas\n * determine how much storage may be used in a local-state or global-state for an\n * application. The more space used, the larger minimum balance must be maintained\n * in the account holding the data.\n */\nexport class StateSchema extends BaseModel {\n  /**\n   * Maximum number of TEAL byte slices that may be stored in the key/value store.\n   */\n  public numByteSlice: number | bigint;\n\n  /**\n   * Maximum number of TEAL uints that may be stored in the key/value store.\n   */\n  public numUint: number | bigint;\n\n  /**\n   * Creates a new `StateSchema` object.\n   * @param numByteSlice - Maximum number of TEAL byte slices that may be stored in the key/value store.\n   * @param numUint - Maximum number of TEAL uints that may be stored in the key/value store.\n   */\n  constructor({\n    numByteSlice,\n    numUint,\n  }: {\n    numByteSlice: number | bigint;\n    numUint: number | bigint;\n  }) {\n    super();\n    this.numByteSlice = numByteSlice;\n    this.numUint = numUint;\n\n    this.attribute_map = {\n      numByteSlice: 'num-byte-slice',\n      numUint: 'num-uint',\n    };\n  }\n\n  // eslint-disable-next-line camelcase\n  static from_obj_for_encoding(data: Record<string, any>): StateSchema {\n    /* eslint-disable dot-notation */\n    if (typeof data['num-byte-slice'] === 'undefined')\n      throw new Error(\n        `Response is missing required field 'num-byte-slice': ${data}`\n      );\n    if (typeof data['num-uint'] === 'undefined')\n      throw new Error(`Response is missing required field 'num-uint': ${data}`);\n    return new StateSchema({\n      numByteSlice: data['num-byte-slice'],\n      numUint: data['num-uint'],\n    });\n    /* eslint-enable dot-notation */\n  }\n}\n\n/**\n * Represents a key-value pair in an application store.\n */\nexport class TealKeyValue extends BaseModel {\n  public key: string;\n\n  /**\n   * Represents a TEAL value.\n   */\n  public value: TealValue;\n\n  /**\n   * Creates a new `TealKeyValue` object.\n   * @param key -\n   * @param value - Represents a TEAL value.\n   */\n  constructor({ key, value }: { key: string; value: TealValue }) {\n    super();\n    this.key = key;\n    this.value = value;\n\n    this.attribute_map = {\n      key: 'key',\n      value: 'value',\n    };\n  }\n\n  // eslint-disable-next-line camelcase\n  static from_obj_for_encoding(data: Record<string, any>): TealKeyValue {\n    /* eslint-disable dot-notation */\n    if (typeof data['key'] === 'undefined')\n      throw new Error(`Response is missing required field 'key': ${data}`);\n    if (typeof data['value'] === 'undefined')\n      throw new Error(`Response is missing required field 'value': ${data}`);\n    return new TealKeyValue({\n      key: data['key'],\n      value: TealValue.from_obj_for_encoding(data['value']),\n    });\n    /* eslint-enable dot-notation */\n  }\n}\n\n/**\n * Represents a TEAL value.\n */\nexport class TealValue extends BaseModel {\n  /**\n   * (tb) bytes value.\n   */\n  public bytes: string;\n\n  /**\n   * (tt) value type. Value `1` refers to **bytes**, value `2` refers to **uint**\n   */\n  public type: number | bigint;\n\n  /**\n   * (ui) uint value.\n   */\n  public uint: number | bigint;\n\n  /**\n   * Creates a new `TealValue` object.\n   * @param bytes - (tb) bytes value.\n   * @param type - (tt) value type. Value `1` refers to **bytes**, value `2` refers to **uint**\n   * @param uint - (ui) uint value.\n   */\n  constructor({\n    bytes,\n    type,\n    uint,\n  }: {\n    bytes: string;\n    type: number | bigint;\n    uint: number | bigint;\n  }) {\n    super();\n    this.bytes = bytes;\n    this.type = type;\n    this.uint = uint;\n\n    this.attribute_map = {\n      bytes: 'bytes',\n      type: 'type',\n      uint: 'uint',\n    };\n  }\n\n  // eslint-disable-next-line camelcase\n  static from_obj_for_encoding(data: Record<string, any>): TealValue {\n    /* eslint-disable dot-notation */\n    if (typeof data['bytes'] === 'undefined')\n      throw new Error(`Response is missing required field 'bytes': ${data}`);\n    if (typeof data['type'] === 'undefined')\n      throw new Error(`Response is missing required field 'type': ${data}`);\n    if (typeof data['uint'] === 'undefined')\n      throw new Error(`Response is missing required field 'uint': ${data}`);\n    return new TealValue({\n      bytes: data['bytes'],\n      type: data['type'],\n      uint: data['uint'],\n    });\n    /* eslint-enable dot-notation */\n  }\n}\n\n/**\n * Contains all fields common to all transactions and serves as an envelope to all\n * transactions type. Represents both regular and inner transactions.\n * Definition:\n * data/transactions/signedtxn.go : SignedTxn\n * data/transactions/transaction.go : Transaction\n */\nexport class Transaction extends BaseModel {\n  /**\n   * (fee) Transaction fee.\n   */\n  public fee: number | bigint;\n\n  /**\n   * (fv) First valid round for this transaction.\n   */\n  public firstValid: number | bigint;\n\n  /**\n   * (lv) Last valid round for this transaction.\n   */\n  public lastValid: number | bigint;\n\n  /**\n   * (snd) Sender's address.\n   */\n  public sender: string;\n\n  /**\n   * Fields for application transactions.\n   * Definition:\n   * data/transactions/application.go : ApplicationCallTxnFields\n   */\n  public applicationTransaction?: TransactionApplication;\n\n  /**\n   * Fields for asset allocation, re-configuration, and destruction.\n   * A zero value for asset-id indicates asset creation.\n   * A zero value for the params indicates asset destruction.\n   * Definition:\n   * data/transactions/asset.go : AssetConfigTxnFields\n   */\n  public assetConfigTransaction?: TransactionAssetConfig;\n\n  /**\n   * Fields for an asset freeze transaction.\n   * Definition:\n   * data/transactions/asset.go : AssetFreezeTxnFields\n   */\n  public assetFreezeTransaction?: TransactionAssetFreeze;\n\n  /**\n   * Fields for an asset transfer transaction.\n   * Definition:\n   * data/transactions/asset.go : AssetTransferTxnFields\n   */\n  public assetTransferTransaction?: TransactionAssetTransfer;\n\n  /**\n   * (sgnr) this is included with signed transactions when the signing address does\n   * not equal the sender. The backend can use this to ensure that auth addr is equal\n   * to the accounts auth addr.\n   */\n  public authAddr?: string;\n\n  /**\n   * (rc) rewards applied to close-remainder-to account.\n   */\n  public closeRewards?: number | bigint;\n\n  /**\n   * (ca) closing amount for transaction.\n   */\n  public closingAmount?: number | bigint;\n\n  /**\n   * Round when the transaction was confirmed.\n   */\n  public confirmedRound?: number | bigint;\n\n  /**\n   * Specifies an application index (ID) if an application was created with this\n   * transaction.\n   */\n  public createdApplicationIndex?: number | bigint;\n\n  /**\n   * Specifies an asset index (ID) if an asset was created with this transaction.\n   */\n  public createdAssetIndex?: number | bigint;\n\n  /**\n   * (gh) Hash of genesis block.\n   */\n  public genesisHash?: Uint8Array;\n\n  /**\n   * (gen) genesis block ID.\n   */\n  public genesisId?: string;\n\n  /**\n   * (gd) Global state key/value changes for the application being executed by this\n   * transaction.\n   */\n  public globalStateDelta?: EvalDeltaKeyValue[];\n\n  /**\n   * (grp) Base64 encoded byte array of a sha512/256 digest. When present indicates\n   * that this transaction is part of a transaction group and the value is the\n   * sha512/256 hash of the transactions in that group.\n   */\n  public group?: Uint8Array;\n\n  /**\n   * Transaction ID\n   */\n  public id?: string;\n\n  /**\n   * Inner transactions produced by application execution.\n   */\n  public innerTxns?: Transaction[];\n\n  /**\n   * Offset into the round where this transaction was confirmed.\n   */\n  public intraRoundOffset?: number | bigint;\n\n  /**\n   * Fields for a keyreg transaction.\n   * Definition:\n   * data/transactions/keyreg.go : KeyregTxnFields\n   */\n  public keyregTransaction?: TransactionKeyreg;\n\n  /**\n   * (lx) Base64 encoded 32-byte array. Lease enforces mutual exclusion of\n   * transactions. If this field is nonzero, then once the transaction is confirmed,\n   * it acquires the lease identified by the (Sender, Lease) pair of the transaction\n   * until the LastValid round passes. While this transaction possesses the lease, no\n   * other transaction specifying this lease can be confirmed.\n   */\n  public lease?: Uint8Array;\n\n  /**\n   * (ld) Local state key/value changes for the application being executed by this\n   * transaction.\n   */\n  public localStateDelta?: AccountStateDelta[];\n\n  /**\n   * (lg) Logs for the application being executed by this transaction.\n   */\n  public logs?: Uint8Array[];\n\n  /**\n   * (note) Free form data.\n   */\n  public note?: Uint8Array;\n\n  /**\n   * Fields for a payment transaction.\n   * Definition:\n   * data/transactions/payment.go : PaymentTxnFields\n   */\n  public paymentTransaction?: TransactionPayment;\n\n  /**\n   * (rr) rewards applied to receiver account.\n   */\n  public receiverRewards?: number | bigint;\n\n  /**\n   * (rekey) when included in a valid transaction, the accounts auth addr will be\n   * updated with this value and future signatures must be signed with the key\n   * represented by this address.\n   */\n  public rekeyTo?: string;\n\n  /**\n   * Time when the block this transaction is in was confirmed.\n   */\n  public roundTime?: number | bigint;\n\n  /**\n   * (rs) rewards applied to sender account.\n   */\n  public senderRewards?: number | bigint;\n\n  /**\n   * Validation signature associated with some data. Only one of the signatures\n   * should be provided.\n   */\n  public signature?: TransactionSignature;\n\n  /**\n   * Fields for a state proof transaction.\n   * Definition:\n   * data/transactions/stateproof.go : StateProofTxnFields\n   */\n  public stateProofTransaction?: TransactionStateProof;\n\n  /**\n   * (type) Indicates what type of transaction this is. Different types have\n   * different fields.\n   * Valid types, and where their fields are stored:\n   * * (pay) payment-transaction\n   * * (keyreg) keyreg-transaction\n   * * (acfg) asset-config-transaction\n   * * (axfer) asset-transfer-transaction\n   * * (afrz) asset-freeze-transaction\n   * * (appl) application-transaction\n   * * (stpf) state-proof-transaction\n   */\n  public txType?: string;\n\n  /**\n   * Creates a new `Transaction` object.\n   * @param fee - (fee) Transaction fee.\n   * @param firstValid - (fv) First valid round for this transaction.\n   * @param lastValid - (lv) Last valid round for this transaction.\n   * @param sender - (snd) Sender's address.\n   * @param applicationTransaction - Fields for application transactions.\n   * Definition:\n   * data/transactions/application.go : ApplicationCallTxnFields\n   * @param assetConfigTransaction - Fields for asset allocation, re-configuration, and destruction.\n   * A zero value for asset-id indicates asset creation.\n   * A zero value for the params indicates asset destruction.\n   * Definition:\n   * data/transactions/asset.go : AssetConfigTxnFields\n   * @param assetFreezeTransaction - Fields for an asset freeze transaction.\n   * Definition:\n   * data/transactions/asset.go : AssetFreezeTxnFields\n   * @param assetTransferTransaction - Fields for an asset transfer transaction.\n   * Definition:\n   * data/transactions/asset.go : AssetTransferTxnFields\n   * @param authAddr - (sgnr) this is included with signed transactions when the signing address does\n   * not equal the sender. The backend can use this to ensure that auth addr is equal\n   * to the accounts auth addr.\n   * @param closeRewards - (rc) rewards applied to close-remainder-to account.\n   * @param closingAmount - (ca) closing amount for transaction.\n   * @param confirmedRound - Round when the transaction was confirmed.\n   * @param createdApplicationIndex - Specifies an application index (ID) if an application was created with this\n   * transaction.\n   * @param createdAssetIndex - Specifies an asset index (ID) if an asset was created with this transaction.\n   * @param genesisHash - (gh) Hash of genesis block.\n   * @param genesisId - (gen) genesis block ID.\n   * @param globalStateDelta - (gd) Global state key/value changes for the application being executed by this\n   * transaction.\n   * @param group - (grp) Base64 encoded byte array of a sha512/256 digest. When present indicates\n   * that this transaction is part of a transaction group and the value is the\n   * sha512/256 hash of the transactions in that group.\n   * @param id - Transaction ID\n   * @param innerTxns - Inner transactions produced by application execution.\n   * @param intraRoundOffset - Offset into the round where this transaction was confirmed.\n   * @param keyregTransaction - Fields for a keyreg transaction.\n   * Definition:\n   * data/transactions/keyreg.go : KeyregTxnFields\n   * @param lease - (lx) Base64 encoded 32-byte array. Lease enforces mutual exclusion of\n   * transactions. If this field is nonzero, then once the transaction is confirmed,\n   * it acquires the lease identified by the (Sender, Lease) pair of the transaction\n   * until the LastValid round passes. While this transaction possesses the lease, no\n   * other transaction specifying this lease can be confirmed.\n   * @param localStateDelta - (ld) Local state key/value changes for the application being executed by this\n   * transaction.\n   * @param logs - (lg) Logs for the application being executed by this transaction.\n   * @param note - (note) Free form data.\n   * @param paymentTransaction - Fields for a payment transaction.\n   * Definition:\n   * data/transactions/payment.go : PaymentTxnFields\n   * @param receiverRewards - (rr) rewards applied to receiver account.\n   * @param rekeyTo - (rekey) when included in a valid transaction, the accounts auth addr will be\n   * updated with this value and future signatures must be signed with the key\n   * represented by this address.\n   * @param roundTime - Time when the block this transaction is in was confirmed.\n   * @param senderRewards - (rs) rewards applied to sender account.\n   * @param signature - Validation signature associated with some data. Only one of the signatures\n   * should be provided.\n   * @param stateProofTransaction - Fields for a state proof transaction.\n   * Definition:\n   * data/transactions/stateproof.go : StateProofTxnFields\n   * @param txType - (type) Indicates what type of transaction this is. Different types have\n   * different fields.\n   * Valid types, and where their fields are stored:\n   * * (pay) payment-transaction\n   * * (keyreg) keyreg-transaction\n   * * (acfg) asset-config-transaction\n   * * (axfer) asset-transfer-transaction\n   * * (afrz) asset-freeze-transaction\n   * * (appl) application-transaction\n   * * (stpf) state-proof-transaction\n   */\n  constructor({\n    fee,\n    firstValid,\n    lastValid,\n    sender,\n    applicationTransaction,\n    assetConfigTransaction,\n    assetFreezeTransaction,\n    assetTransferTransaction,\n    authAddr,\n    closeRewards,\n    closingAmount,\n    confirmedRound,\n    createdApplicationIndex,\n    createdAssetIndex,\n    genesisHash,\n    genesisId,\n    globalStateDelta,\n    group,\n    id,\n    innerTxns,\n    intraRoundOffset,\n    keyregTransaction,\n    lease,\n    localStateDelta,\n    logs,\n    note,\n    paymentTransaction,\n    receiverRewards,\n    rekeyTo,\n    roundTime,\n    senderRewards,\n    signature,\n    stateProofTransaction,\n    txType,\n  }: {\n    fee: number | bigint;\n    firstValid: number | bigint;\n    lastValid: number | bigint;\n    sender: string;\n    applicationTransaction?: TransactionApplication;\n    assetConfigTransaction?: TransactionAssetConfig;\n    assetFreezeTransaction?: TransactionAssetFreeze;\n    assetTransferTransaction?: TransactionAssetTransfer;\n    authAddr?: string;\n    closeRewards?: number | bigint;\n    closingAmount?: number | bigint;\n    confirmedRound?: number | bigint;\n    createdApplicationIndex?: number | bigint;\n    createdAssetIndex?: number | bigint;\n    genesisHash?: string | Uint8Array;\n    genesisId?: string;\n    globalStateDelta?: EvalDeltaKeyValue[];\n    group?: string | Uint8Array;\n    id?: string;\n    innerTxns?: Transaction[];\n    intraRoundOffset?: number | bigint;\n    keyregTransaction?: TransactionKeyreg;\n    lease?: string | Uint8Array;\n    localStateDelta?: AccountStateDelta[];\n    logs?: Uint8Array[];\n    note?: string | Uint8Array;\n    paymentTransaction?: TransactionPayment;\n    receiverRewards?: number | bigint;\n    rekeyTo?: string;\n    roundTime?: number | bigint;\n    senderRewards?: number | bigint;\n    signature?: TransactionSignature;\n    stateProofTransaction?: TransactionStateProof;\n    txType?: string;\n  }) {\n    super();\n    this.fee = fee;\n    this.firstValid = firstValid;\n    this.lastValid = lastValid;\n    this.sender = sender;\n    this.applicationTransaction = applicationTransaction;\n    this.assetConfigTransaction = assetConfigTransaction;\n    this.assetFreezeTransaction = assetFreezeTransaction;\n    this.assetTransferTransaction = assetTransferTransaction;\n    this.authAddr = authAddr;\n    this.closeRewards = closeRewards;\n    this.closingAmount = closingAmount;\n    this.confirmedRound = confirmedRound;\n    this.createdApplicationIndex = createdApplicationIndex;\n    this.createdAssetIndex = createdAssetIndex;\n    this.genesisHash =\n      typeof genesisHash === 'string'\n        ? new Uint8Array(Buffer.from(genesisHash, 'base64'))\n        : genesisHash;\n    this.genesisId = genesisId;\n    this.globalStateDelta = globalStateDelta;\n    this.group =\n      typeof group === 'string'\n        ? new Uint8Array(Buffer.from(group, 'base64'))\n        : group;\n    this.id = id;\n    this.innerTxns = innerTxns;\n    this.intraRoundOffset = intraRoundOffset;\n    this.keyregTransaction = keyregTransaction;\n    this.lease =\n      typeof lease === 'string'\n        ? new Uint8Array(Buffer.from(lease, 'base64'))\n        : lease;\n    this.localStateDelta = localStateDelta;\n    this.logs = logs;\n    this.note =\n      typeof note === 'string'\n        ? new Uint8Array(Buffer.from(note, 'base64'))\n        : note;\n    this.paymentTransaction = paymentTransaction;\n    this.receiverRewards = receiverRewards;\n    this.rekeyTo = rekeyTo;\n    this.roundTime = roundTime;\n    this.senderRewards = senderRewards;\n    this.signature = signature;\n    this.stateProofTransaction = stateProofTransaction;\n    this.txType = txType;\n\n    this.attribute_map = {\n      fee: 'fee',\n      firstValid: 'first-valid',\n      lastValid: 'last-valid',\n      sender: 'sender',\n      applicationTransaction: 'application-transaction',\n      assetConfigTransaction: 'asset-config-transaction',\n      assetFreezeTransaction: 'asset-freeze-transaction',\n      assetTransferTransaction: 'asset-transfer-transaction',\n      authAddr: 'auth-addr',\n      closeRewards: 'close-rewards',\n      closingAmount: 'closing-amount',\n      confirmedRound: 'confirmed-round',\n      createdApplicationIndex: 'created-application-index',\n      createdAssetIndex: 'created-asset-index',\n      genesisHash: 'genesis-hash',\n      genesisId: 'genesis-id',\n      globalStateDelta: 'global-state-delta',\n      group: 'group',\n      id: 'id',\n      innerTxns: 'inner-txns',\n      intraRoundOffset: 'intra-round-offset',\n      keyregTransaction: 'keyreg-transaction',\n      lease: 'lease',\n      localStateDelta: 'local-state-delta',\n      logs: 'logs',\n      note: 'note',\n      paymentTransaction: 'payment-transaction',\n      receiverRewards: 'receiver-rewards',\n      rekeyTo: 'rekey-to',\n      roundTime: 'round-time',\n      senderRewards: 'sender-rewards',\n      signature: 'signature',\n      stateProofTransaction: 'state-proof-transaction',\n      txType: 'tx-type',\n    };\n  }\n\n  // eslint-disable-next-line camelcase\n  static from_obj_for_encoding(data: Record<string, any>): Transaction {\n    /* eslint-disable dot-notation */\n    if (typeof data['fee'] === 'undefined')\n      throw new Error(`Response is missing required field 'fee': ${data}`);\n    if (typeof data['first-valid'] === 'undefined')\n      throw new Error(\n        `Response is missing required field 'first-valid': ${data}`\n      );\n    if (typeof data['last-valid'] === 'undefined')\n      throw new Error(\n        `Response is missing required field 'last-valid': ${data}`\n      );\n    if (typeof data['sender'] === 'undefined')\n      throw new Error(`Response is missing required field 'sender': ${data}`);\n    return new Transaction({\n      fee: data['fee'],\n      firstValid: data['first-valid'],\n      lastValid: data['last-valid'],\n      sender: data['sender'],\n      applicationTransaction:\n        typeof data['application-transaction'] !== 'undefined'\n          ? TransactionApplication.from_obj_for_encoding(\n              data['application-transaction']\n            )\n          : undefined,\n      assetConfigTransaction:\n        typeof data['asset-config-transaction'] !== 'undefined'\n          ? TransactionAssetConfig.from_obj_for_encoding(\n              data['asset-config-transaction']\n            )\n          : undefined,\n      assetFreezeTransaction:\n        typeof data['asset-freeze-transaction'] !== 'undefined'\n          ? TransactionAssetFreeze.from_obj_for_encoding(\n              data['asset-freeze-transaction']\n            )\n          : undefined,\n      assetTransferTransaction:\n        typeof data['asset-transfer-transaction'] !== 'undefined'\n          ? TransactionAssetTransfer.from_obj_for_encoding(\n              data['asset-transfer-transaction']\n            )\n          : undefined,\n      authAddr: data['auth-addr'],\n      closeRewards: data['close-rewards'],\n      closingAmount: data['closing-amount'],\n      confirmedRound: data['confirmed-round'],\n      createdApplicationIndex: data['created-application-index'],\n      createdAssetIndex: data['created-asset-index'],\n      genesisHash: data['genesis-hash'],\n      genesisId: data['genesis-id'],\n      globalStateDelta:\n        typeof data['global-state-delta'] !== 'undefined'\n          ? data['global-state-delta'].map(\n              EvalDeltaKeyValue.from_obj_for_encoding\n            )\n          : undefined,\n      group: data['group'],\n      id: data['id'],\n      innerTxns:\n        typeof data['inner-txns'] !== 'undefined'\n          ? data['inner-txns'].map(Transaction.from_obj_for_encoding)\n          : undefined,\n      intraRoundOffset: data['intra-round-offset'],\n      keyregTransaction:\n        typeof data['keyreg-transaction'] !== 'undefined'\n          ? TransactionKeyreg.from_obj_for_encoding(data['keyreg-transaction'])\n          : undefined,\n      lease: data['lease'],\n      localStateDelta:\n        typeof data['local-state-delta'] !== 'undefined'\n          ? data['local-state-delta'].map(\n              AccountStateDelta.from_obj_for_encoding\n            )\n          : undefined,\n      logs: data['logs'],\n      note: data['note'],\n      paymentTransaction:\n        typeof data['payment-transaction'] !== 'undefined'\n          ? TransactionPayment.from_obj_for_encoding(\n              data['payment-transaction']\n            )\n          : undefined,\n      receiverRewards: data['receiver-rewards'],\n      rekeyTo: data['rekey-to'],\n      roundTime: data['round-time'],\n      senderRewards: data['sender-rewards'],\n      signature:\n        typeof data['signature'] !== 'undefined'\n          ? TransactionSignature.from_obj_for_encoding(data['signature'])\n          : undefined,\n      stateProofTransaction:\n        typeof data['state-proof-transaction'] !== 'undefined'\n          ? TransactionStateProof.from_obj_for_encoding(\n              data['state-proof-transaction']\n            )\n          : undefined,\n      txType: data['tx-type'],\n    });\n    /* eslint-enable dot-notation */\n  }\n}\n\n/**\n * Fields for application transactions.\n * Definition:\n * data/transactions/application.go : ApplicationCallTxnFields\n */\nexport class TransactionApplication extends BaseModel {\n  /**\n   * (apid) ID of the application being configured or empty if creating.\n   */\n  public applicationId: number | bigint;\n\n  /**\n   * (apat) List of accounts in addition to the sender that may be accessed from the\n   * application's approval-program and clear-state-program.\n   */\n  public accounts?: string[];\n\n  /**\n   * (apaa) transaction specific arguments accessed from the application's\n   * approval-program and clear-state-program.\n   */\n  public applicationArgs?: Uint8Array[];\n\n  /**\n   * (apap) Logic executed for every application transaction, except when\n   * on-completion is set to \"clear\". It can read and write global state for the\n   * application, as well as account-specific local state. Approval programs may\n   * reject the transaction.\n   */\n  public approvalProgram?: Uint8Array;\n\n  /**\n   * (apsu) Logic executed for application transactions with on-completion set to\n   * \"clear\". It can read and write global state for the application, as well as\n   * account-specific local state. Clear state programs cannot reject the\n   * transaction.\n   */\n  public clearStateProgram?: Uint8Array;\n\n  /**\n   * (epp) specifies the additional app program len requested in pages.\n   */\n  public extraProgramPages?: number | bigint;\n\n  /**\n   * (apfa) Lists the applications in addition to the application-id whose global\n   * states may be accessed by this application's approval-program and\n   * clear-state-program. The access is read-only.\n   */\n  public foreignApps?: (number | bigint)[];\n\n  /**\n   * (apas) lists the assets whose parameters may be accessed by this application's\n   * ApprovalProgram and ClearStateProgram. The access is read-only.\n   */\n  public foreignAssets?: (number | bigint)[];\n\n  /**\n   * Represents a (apls) local-state or (apgs) global-state schema. These schemas\n   * determine how much storage may be used in a local-state or global-state for an\n   * application. The more space used, the larger minimum balance must be maintained\n   * in the account holding the data.\n   */\n  public globalStateSchema?: StateSchema;\n\n  /**\n   * Represents a (apls) local-state or (apgs) global-state schema. These schemas\n   * determine how much storage may be used in a local-state or global-state for an\n   * application. The more space used, the larger minimum balance must be maintained\n   * in the account holding the data.\n   */\n  public localStateSchema?: StateSchema;\n\n  /**\n   * (apan) defines the what additional actions occur with the transaction.\n   * Valid types:\n   * * noop\n   * * optin\n   * * closeout\n   * * clear\n   * * update\n   * * update\n   * * delete\n   */\n  public onCompletion?: string;\n\n  /**\n   * Creates a new `TransactionApplication` object.\n   * @param applicationId - (apid) ID of the application being configured or empty if creating.\n   * @param accounts - (apat) List of accounts in addition to the sender that may be accessed from the\n   * application's approval-program and clear-state-program.\n   * @param applicationArgs - (apaa) transaction specific arguments accessed from the application's\n   * approval-program and clear-state-program.\n   * @param approvalProgram - (apap) Logic executed for every application transaction, except when\n   * on-completion is set to \"clear\". It can read and write global state for the\n   * application, as well as account-specific local state. Approval programs may\n   * reject the transaction.\n   * @param clearStateProgram - (apsu) Logic executed for application transactions with on-completion set to\n   * \"clear\". It can read and write global state for the application, as well as\n   * account-specific local state. Clear state programs cannot reject the\n   * transaction.\n   * @param extraProgramPages - (epp) specifies the additional app program len requested in pages.\n   * @param foreignApps - (apfa) Lists the applications in addition to the application-id whose global\n   * states may be accessed by this application's approval-program and\n   * clear-state-program. The access is read-only.\n   * @param foreignAssets - (apas) lists the assets whose parameters may be accessed by this application's\n   * ApprovalProgram and ClearStateProgram. The access is read-only.\n   * @param globalStateSchema - Represents a (apls) local-state or (apgs) global-state schema. These schemas\n   * determine how much storage may be used in a local-state or global-state for an\n   * application. The more space used, the larger minimum balance must be maintained\n   * in the account holding the data.\n   * @param localStateSchema - Represents a (apls) local-state or (apgs) global-state schema. These schemas\n   * determine how much storage may be used in a local-state or global-state for an\n   * application. The more space used, the larger minimum balance must be maintained\n   * in the account holding the data.\n   * @param onCompletion - (apan) defines the what additional actions occur with the transaction.\n   * Valid types:\n   * * noop\n   * * optin\n   * * closeout\n   * * clear\n   * * update\n   * * update\n   * * delete\n   */\n  constructor({\n    applicationId,\n    accounts,\n    applicationArgs,\n    approvalProgram,\n    clearStateProgram,\n    extraProgramPages,\n    foreignApps,\n    foreignAssets,\n    globalStateSchema,\n    localStateSchema,\n    onCompletion,\n  }: {\n    applicationId: number | bigint;\n    accounts?: string[];\n    applicationArgs?: Uint8Array[];\n    approvalProgram?: string | Uint8Array;\n    clearStateProgram?: string | Uint8Array;\n    extraProgramPages?: number | bigint;\n    foreignApps?: (number | bigint)[];\n    foreignAssets?: (number | bigint)[];\n    globalStateSchema?: StateSchema;\n    localStateSchema?: StateSchema;\n    onCompletion?: string;\n  }) {\n    super();\n    this.applicationId = applicationId;\n    this.accounts = accounts;\n    this.applicationArgs = applicationArgs;\n    this.approvalProgram =\n      typeof approvalProgram === 'string'\n        ? new Uint8Array(Buffer.from(approvalProgram, 'base64'))\n        : approvalProgram;\n    this.clearStateProgram =\n      typeof clearStateProgram === 'string'\n        ? new Uint8Array(Buffer.from(clearStateProgram, 'base64'))\n        : clearStateProgram;\n    this.extraProgramPages = extraProgramPages;\n    this.foreignApps = foreignApps;\n    this.foreignAssets = foreignAssets;\n    this.globalStateSchema = globalStateSchema;\n    this.localStateSchema = localStateSchema;\n    this.onCompletion = onCompletion;\n\n    this.attribute_map = {\n      applicationId: 'application-id',\n      accounts: 'accounts',\n      applicationArgs: 'application-args',\n      approvalProgram: 'approval-program',\n      clearStateProgram: 'clear-state-program',\n      extraProgramPages: 'extra-program-pages',\n      foreignApps: 'foreign-apps',\n      foreignAssets: 'foreign-assets',\n      globalStateSchema: 'global-state-schema',\n      localStateSchema: 'local-state-schema',\n      onCompletion: 'on-completion',\n    };\n  }\n\n  // eslint-disable-next-line camelcase\n  static from_obj_for_encoding(\n    data: Record<string, any>\n  ): TransactionApplication {\n    /* eslint-disable dot-notation */\n    if (typeof data['application-id'] === 'undefined')\n      throw new Error(\n        `Response is missing required field 'application-id': ${data}`\n      );\n    return new TransactionApplication({\n      applicationId: data['application-id'],\n      accounts: data['accounts'],\n      applicationArgs: data['application-args'],\n      approvalProgram: data['approval-program'],\n      clearStateProgram: data['clear-state-program'],\n      extraProgramPages: data['extra-program-pages'],\n      foreignApps: data['foreign-apps'],\n      foreignAssets: data['foreign-assets'],\n      globalStateSchema:\n        typeof data['global-state-schema'] !== 'undefined'\n          ? StateSchema.from_obj_for_encoding(data['global-state-schema'])\n          : undefined,\n      localStateSchema:\n        typeof data['local-state-schema'] !== 'undefined'\n          ? StateSchema.from_obj_for_encoding(data['local-state-schema'])\n          : undefined,\n      onCompletion: data['on-completion'],\n    });\n    /* eslint-enable dot-notation */\n  }\n}\n\n/**\n * Fields for asset allocation, re-configuration, and destruction.\n * A zero value for asset-id indicates asset creation.\n * A zero value for the params indicates asset destruction.\n * Definition:\n * data/transactions/asset.go : AssetConfigTxnFields\n */\nexport class TransactionAssetConfig extends BaseModel {\n  /**\n   * (xaid) ID of the asset being configured or empty if creating.\n   */\n  public assetId?: number | bigint;\n\n  /**\n   * AssetParams specifies the parameters for an asset.\n   * (apar) when part of an AssetConfig transaction.\n   * Definition:\n   * data/transactions/asset.go : AssetParams\n   */\n  public params?: AssetParams;\n\n  /**\n   * Creates a new `TransactionAssetConfig` object.\n   * @param assetId - (xaid) ID of the asset being configured or empty if creating.\n   * @param params - AssetParams specifies the parameters for an asset.\n   * (apar) when part of an AssetConfig transaction.\n   * Definition:\n   * data/transactions/asset.go : AssetParams\n   */\n  constructor({\n    assetId,\n    params,\n  }: {\n    assetId?: number | bigint;\n    params?: AssetParams;\n  }) {\n    super();\n    this.assetId = assetId;\n    this.params = params;\n\n    this.attribute_map = {\n      assetId: 'asset-id',\n      params: 'params',\n    };\n  }\n\n  // eslint-disable-next-line camelcase\n  static from_obj_for_encoding(\n    data: Record<string, any>\n  ): TransactionAssetConfig {\n    /* eslint-disable dot-notation */\n    return new TransactionAssetConfig({\n      assetId: data['asset-id'],\n      params:\n        typeof data['params'] !== 'undefined'\n          ? AssetParams.from_obj_for_encoding(data['params'])\n          : undefined,\n    });\n    /* eslint-enable dot-notation */\n  }\n}\n\n/**\n * Fields for an asset freeze transaction.\n * Definition:\n * data/transactions/asset.go : AssetFreezeTxnFields\n */\nexport class TransactionAssetFreeze extends BaseModel {\n  /**\n   * (fadd) Address of the account whose asset is being frozen or thawed.\n   */\n  public address: string;\n\n  /**\n   * (faid) ID of the asset being frozen or thawed.\n   */\n  public assetId: number | bigint;\n\n  /**\n   * (afrz) The new freeze status.\n   */\n  public newFreezeStatus: boolean;\n\n  /**\n   * Creates a new `TransactionAssetFreeze` object.\n   * @param address - (fadd) Address of the account whose asset is being frozen or thawed.\n   * @param assetId - (faid) ID of the asset being frozen or thawed.\n   * @param newFreezeStatus - (afrz) The new freeze status.\n   */\n  constructor({\n    address,\n    assetId,\n    newFreezeStatus,\n  }: {\n    address: string;\n    assetId: number | bigint;\n    newFreezeStatus: boolean;\n  }) {\n    super();\n    this.address = address;\n    this.assetId = assetId;\n    this.newFreezeStatus = newFreezeStatus;\n\n    this.attribute_map = {\n      address: 'address',\n      assetId: 'asset-id',\n      newFreezeStatus: 'new-freeze-status',\n    };\n  }\n\n  // eslint-disable-next-line camelcase\n  static from_obj_for_encoding(\n    data: Record<string, any>\n  ): TransactionAssetFreeze {\n    /* eslint-disable dot-notation */\n    if (typeof data['address'] === 'undefined')\n      throw new Error(`Response is missing required field 'address': ${data}`);\n    if (typeof data['asset-id'] === 'undefined')\n      throw new Error(`Response is missing required field 'asset-id': ${data}`);\n    if (typeof data['new-freeze-status'] === 'undefined')\n      throw new Error(\n        `Response is missing required field 'new-freeze-status': ${data}`\n      );\n    return new TransactionAssetFreeze({\n      address: data['address'],\n      assetId: data['asset-id'],\n      newFreezeStatus: data['new-freeze-status'],\n    });\n    /* eslint-enable dot-notation */\n  }\n}\n\n/**\n * Fields for an asset transfer transaction.\n * Definition:\n * data/transactions/asset.go : AssetTransferTxnFields\n */\nexport class TransactionAssetTransfer extends BaseModel {\n  /**\n   * (aamt) Amount of asset to transfer. A zero amount transferred to self allocates\n   * that asset in the account's Assets map.\n   */\n  public amount: number | bigint;\n\n  /**\n   * (xaid) ID of the asset being transferred.\n   */\n  public assetId: number | bigint;\n\n  /**\n   * (arcv) Recipient address of the transfer.\n   */\n  public receiver: string;\n\n  /**\n   * Number of assets transfered to the close-to account as part of the transaction.\n   */\n  public closeAmount?: number | bigint;\n\n  /**\n   * (aclose) Indicates that the asset should be removed from the account's Assets\n   * map, and specifies where the remaining asset holdings should be transferred.\n   * It's always valid to transfer remaining asset holdings to the creator account.\n   */\n  public closeTo?: string;\n\n  /**\n   * (asnd) The effective sender during a clawback transactions. If this is not a\n   * zero value, the real transaction sender must be the Clawback address from the\n   * AssetParams.\n   */\n  public sender?: string;\n\n  /**\n   * Creates a new `TransactionAssetTransfer` object.\n   * @param amount - (aamt) Amount of asset to transfer. A zero amount transferred to self allocates\n   * that asset in the account's Assets map.\n   * @param assetId - (xaid) ID of the asset being transferred.\n   * @param receiver - (arcv) Recipient address of the transfer.\n   * @param closeAmount - Number of assets transfered to the close-to account as part of the transaction.\n   * @param closeTo - (aclose) Indicates that the asset should be removed from the account's Assets\n   * map, and specifies where the remaining asset holdings should be transferred.\n   * It's always valid to transfer remaining asset holdings to the creator account.\n   * @param sender - (asnd) The effective sender during a clawback transactions. If this is not a\n   * zero value, the real transaction sender must be the Clawback address from the\n   * AssetParams.\n   */\n  constructor({\n    amount,\n    assetId,\n    receiver,\n    closeAmount,\n    closeTo,\n    sender,\n  }: {\n    amount: number | bigint;\n    assetId: number | bigint;\n    receiver: string;\n    closeAmount?: number | bigint;\n    closeTo?: string;\n    sender?: string;\n  }) {\n    super();\n    this.amount = amount;\n    this.assetId = assetId;\n    this.receiver = receiver;\n    this.closeAmount = closeAmount;\n    this.closeTo = closeTo;\n    this.sender = sender;\n\n    this.attribute_map = {\n      amount: 'amount',\n      assetId: 'asset-id',\n      receiver: 'receiver',\n      closeAmount: 'close-amount',\n      closeTo: 'close-to',\n      sender: 'sender',\n    };\n  }\n\n  // eslint-disable-next-line camelcase\n  static from_obj_for_encoding(\n    data: Record<string, any>\n  ): TransactionAssetTransfer {\n    /* eslint-disable dot-notation */\n    if (typeof data['amount'] === 'undefined')\n      throw new Error(`Response is missing required field 'amount': ${data}`);\n    if (typeof data['asset-id'] === 'undefined')\n      throw new Error(`Response is missing required field 'asset-id': ${data}`);\n    if (typeof data['receiver'] === 'undefined')\n      throw new Error(`Response is missing required field 'receiver': ${data}`);\n    return new TransactionAssetTransfer({\n      amount: data['amount'],\n      assetId: data['asset-id'],\n      receiver: data['receiver'],\n      closeAmount: data['close-amount'],\n      closeTo: data['close-to'],\n      sender: data['sender'],\n    });\n    /* eslint-enable dot-notation */\n  }\n}\n\n/**\n * Fields for a keyreg transaction.\n * Definition:\n * data/transactions/keyreg.go : KeyregTxnFields\n */\nexport class TransactionKeyreg extends BaseModel {\n  /**\n   * (nonpart) Mark the account as participating or non-participating.\n   */\n  public nonParticipation?: boolean;\n\n  /**\n   * (selkey) Public key used with the Verified Random Function (VRF) result during\n   * committee selection.\n   */\n  public selectionParticipationKey?: Uint8Array;\n\n  /**\n   * (sprfkey) State proof key used in key registration transactions.\n   */\n  public stateProofKey?: Uint8Array;\n\n  /**\n   * (votefst) First round this participation key is valid.\n   */\n  public voteFirstValid?: number | bigint;\n\n  /**\n   * (votekd) Number of subkeys in each batch of participation keys.\n   */\n  public voteKeyDilution?: number | bigint;\n\n  /**\n   * (votelst) Last round this participation key is valid.\n   */\n  public voteLastValid?: number | bigint;\n\n  /**\n   * (votekey) Participation public key used in key registration transactions.\n   */\n  public voteParticipationKey?: Uint8Array;\n\n  /**\n   * Creates a new `TransactionKeyreg` object.\n   * @param nonParticipation - (nonpart) Mark the account as participating or non-participating.\n   * @param selectionParticipationKey - (selkey) Public key used with the Verified Random Function (VRF) result during\n   * committee selection.\n   * @param stateProofKey - (sprfkey) State proof key used in key registration transactions.\n   * @param voteFirstValid - (votefst) First round this participation key is valid.\n   * @param voteKeyDilution - (votekd) Number of subkeys in each batch of participation keys.\n   * @param voteLastValid - (votelst) Last round this participation key is valid.\n   * @param voteParticipationKey - (votekey) Participation public key used in key registration transactions.\n   */\n  constructor({\n    nonParticipation,\n    selectionParticipationKey,\n    stateProofKey,\n    voteFirstValid,\n    voteKeyDilution,\n    voteLastValid,\n    voteParticipationKey,\n  }: {\n    nonParticipation?: boolean;\n    selectionParticipationKey?: string | Uint8Array;\n    stateProofKey?: string | Uint8Array;\n    voteFirstValid?: number | bigint;\n    voteKeyDilution?: number | bigint;\n    voteLastValid?: number | bigint;\n    voteParticipationKey?: string | Uint8Array;\n  }) {\n    super();\n    this.nonParticipation = nonParticipation;\n    this.selectionParticipationKey =\n      typeof selectionParticipationKey === 'string'\n        ? new Uint8Array(Buffer.from(selectionParticipationKey, 'base64'))\n        : selectionParticipationKey;\n    this.stateProofKey =\n      typeof stateProofKey === 'string'\n        ? new Uint8Array(Buffer.from(stateProofKey, 'base64'))\n        : stateProofKey;\n    this.voteFirstValid = voteFirstValid;\n    this.voteKeyDilution = voteKeyDilution;\n    this.voteLastValid = voteLastValid;\n    this.voteParticipationKey =\n      typeof voteParticipationKey === 'string'\n        ? new Uint8Array(Buffer.from(voteParticipationKey, 'base64'))\n        : voteParticipationKey;\n\n    this.attribute_map = {\n      nonParticipation: 'non-participation',\n      selectionParticipationKey: 'selection-participation-key',\n      stateProofKey: 'state-proof-key',\n      voteFirstValid: 'vote-first-valid',\n      voteKeyDilution: 'vote-key-dilution',\n      voteLastValid: 'vote-last-valid',\n      voteParticipationKey: 'vote-participation-key',\n    };\n  }\n\n  // eslint-disable-next-line camelcase\n  static from_obj_for_encoding(data: Record<string, any>): TransactionKeyreg {\n    /* eslint-disable dot-notation */\n    return new TransactionKeyreg({\n      nonParticipation: data['non-participation'],\n      selectionParticipationKey: data['selection-participation-key'],\n      stateProofKey: data['state-proof-key'],\n      voteFirstValid: data['vote-first-valid'],\n      voteKeyDilution: data['vote-key-dilution'],\n      voteLastValid: data['vote-last-valid'],\n      voteParticipationKey: data['vote-participation-key'],\n    });\n    /* eslint-enable dot-notation */\n  }\n}\n\n/**\n * Fields for a payment transaction.\n * Definition:\n * data/transactions/payment.go : PaymentTxnFields\n */\nexport class TransactionPayment extends BaseModel {\n  /**\n   * (amt) number of MicroAlgos intended to be transferred.\n   */\n  public amount: number | bigint;\n\n  /**\n   * (rcv) receiver's address.\n   */\n  public receiver: string;\n\n  /**\n   * Number of MicroAlgos that were sent to the close-remainder-to address when\n   * closing the sender account.\n   */\n  public closeAmount?: number | bigint;\n\n  /**\n   * (close) when set, indicates that the sending account should be closed and all\n   * remaining funds be transferred to this address.\n   */\n  public closeRemainderTo?: string;\n\n  /**\n   * Creates a new `TransactionPayment` object.\n   * @param amount - (amt) number of MicroAlgos intended to be transferred.\n   * @param receiver - (rcv) receiver's address.\n   * @param closeAmount - Number of MicroAlgos that were sent to the close-remainder-to address when\n   * closing the sender account.\n   * @param closeRemainderTo - (close) when set, indicates that the sending account should be closed and all\n   * remaining funds be transferred to this address.\n   */\n  constructor({\n    amount,\n    receiver,\n    closeAmount,\n    closeRemainderTo,\n  }: {\n    amount: number | bigint;\n    receiver: string;\n    closeAmount?: number | bigint;\n    closeRemainderTo?: string;\n  }) {\n    super();\n    this.amount = amount;\n    this.receiver = receiver;\n    this.closeAmount = closeAmount;\n    this.closeRemainderTo = closeRemainderTo;\n\n    this.attribute_map = {\n      amount: 'amount',\n      receiver: 'receiver',\n      closeAmount: 'close-amount',\n      closeRemainderTo: 'close-remainder-to',\n    };\n  }\n\n  // eslint-disable-next-line camelcase\n  static from_obj_for_encoding(data: Record<string, any>): TransactionPayment {\n    /* eslint-disable dot-notation */\n    if (typeof data['amount'] === 'undefined')\n      throw new Error(`Response is missing required field 'amount': ${data}`);\n    if (typeof data['receiver'] === 'undefined')\n      throw new Error(`Response is missing required field 'receiver': ${data}`);\n    return new TransactionPayment({\n      amount: data['amount'],\n      receiver: data['receiver'],\n      closeAmount: data['close-amount'],\n      closeRemainderTo: data['close-remainder-to'],\n    });\n    /* eslint-enable dot-notation */\n  }\n}\n\n/**\n *\n */\nexport class TransactionResponse extends BaseModel {\n  /**\n   * Round at which the results were computed.\n   */\n  public currentRound: number | bigint;\n\n  /**\n   * Contains all fields common to all transactions and serves as an envelope to all\n   * transactions type. Represents both regular and inner transactions.\n   * Definition:\n   * data/transactions/signedtxn.go : SignedTxn\n   * data/transactions/transaction.go : Transaction\n   */\n  public transaction: Transaction;\n\n  /**\n   * Creates a new `TransactionResponse` object.\n   * @param currentRound - Round at which the results were computed.\n   * @param transaction - Contains all fields common to all transactions and serves as an envelope to all\n   * transactions type. Represents both regular and inner transactions.\n   * Definition:\n   * data/transactions/signedtxn.go : SignedTxn\n   * data/transactions/transaction.go : Transaction\n   */\n  constructor({\n    currentRound,\n    transaction,\n  }: {\n    currentRound: number | bigint;\n    transaction: Transaction;\n  }) {\n    super();\n    this.currentRound = currentRound;\n    this.transaction = transaction;\n\n    this.attribute_map = {\n      currentRound: 'current-round',\n      transaction: 'transaction',\n    };\n  }\n\n  // eslint-disable-next-line camelcase\n  static from_obj_for_encoding(data: Record<string, any>): TransactionResponse {\n    /* eslint-disable dot-notation */\n    if (typeof data['current-round'] === 'undefined')\n      throw new Error(\n        `Response is missing required field 'current-round': ${data}`\n      );\n    if (typeof data['transaction'] === 'undefined')\n      throw new Error(\n        `Response is missing required field 'transaction': ${data}`\n      );\n    return new TransactionResponse({\n      currentRound: data['current-round'],\n      transaction: Transaction.from_obj_for_encoding(data['transaction']),\n    });\n    /* eslint-enable dot-notation */\n  }\n}\n\n/**\n * Validation signature associated with some data. Only one of the signatures\n * should be provided.\n */\nexport class TransactionSignature extends BaseModel {\n  /**\n   * (lsig) Programatic transaction signature.\n   * Definition:\n   * data/transactions/logicsig.go\n   */\n  public logicsig?: TransactionSignatureLogicsig;\n\n  /**\n   * (msig) structure holding multiple subsignatures.\n   * Definition:\n   * crypto/multisig.go : MultisigSig\n   */\n  public multisig?: TransactionSignatureMultisig;\n\n  /**\n   * (sig) Standard ed25519 signature.\n   */\n  public sig?: Uint8Array;\n\n  /**\n   * Creates a new `TransactionSignature` object.\n   * @param logicsig - (lsig) Programatic transaction signature.\n   * Definition:\n   * data/transactions/logicsig.go\n   * @param multisig - (msig) structure holding multiple subsignatures.\n   * Definition:\n   * crypto/multisig.go : MultisigSig\n   * @param sig - (sig) Standard ed25519 signature.\n   */\n  constructor({\n    logicsig,\n    multisig,\n    sig,\n  }: {\n    logicsig?: TransactionSignatureLogicsig;\n    multisig?: TransactionSignatureMultisig;\n    sig?: string | Uint8Array;\n  }) {\n    super();\n    this.logicsig = logicsig;\n    this.multisig = multisig;\n    this.sig =\n      typeof sig === 'string'\n        ? new Uint8Array(Buffer.from(sig, 'base64'))\n        : sig;\n\n    this.attribute_map = {\n      logicsig: 'logicsig',\n      multisig: 'multisig',\n      sig: 'sig',\n    };\n  }\n\n  // eslint-disable-next-line camelcase\n  static from_obj_for_encoding(\n    data: Record<string, any>\n  ): TransactionSignature {\n    /* eslint-disable dot-notation */\n    return new TransactionSignature({\n      logicsig:\n        typeof data['logicsig'] !== 'undefined'\n          ? TransactionSignatureLogicsig.from_obj_for_encoding(data['logicsig'])\n          : undefined,\n      multisig:\n        typeof data['multisig'] !== 'undefined'\n          ? TransactionSignatureMultisig.from_obj_for_encoding(data['multisig'])\n          : undefined,\n      sig: data['sig'],\n    });\n    /* eslint-enable dot-notation */\n  }\n}\n\n/**\n * (lsig) Programatic transaction signature.\n * Definition:\n * data/transactions/logicsig.go\n */\nexport class TransactionSignatureLogicsig extends BaseModel {\n  /**\n   * (l) Program signed by a signature or multi signature, or hashed to be the\n   * address of ana ccount. Base64 encoded TEAL program.\n   */\n  public logic: Uint8Array;\n\n  /**\n   * (arg) Logic arguments, base64 encoded.\n   */\n  public args?: Uint8Array[];\n\n  /**\n   * (msig) structure holding multiple subsignatures.\n   * Definition:\n   * crypto/multisig.go : MultisigSig\n   */\n  public multisigSignature?: TransactionSignatureMultisig;\n\n  /**\n   * (sig) ed25519 signature.\n   */\n  public signature?: Uint8Array;\n\n  /**\n   * Creates a new `TransactionSignatureLogicsig` object.\n   * @param logic - (l) Program signed by a signature or multi signature, or hashed to be the\n   * address of ana ccount. Base64 encoded TEAL program.\n   * @param args - (arg) Logic arguments, base64 encoded.\n   * @param multisigSignature - (msig) structure holding multiple subsignatures.\n   * Definition:\n   * crypto/multisig.go : MultisigSig\n   * @param signature - (sig) ed25519 signature.\n   */\n  constructor({\n    logic,\n    args,\n    multisigSignature,\n    signature,\n  }: {\n    logic: string | Uint8Array;\n    args?: Uint8Array[];\n    multisigSignature?: TransactionSignatureMultisig;\n    signature?: string | Uint8Array;\n  }) {\n    super();\n    this.logic =\n      typeof logic === 'string'\n        ? new Uint8Array(Buffer.from(logic, 'base64'))\n        : logic;\n    this.args = args;\n    this.multisigSignature = multisigSignature;\n    this.signature =\n      typeof signature === 'string'\n        ? new Uint8Array(Buffer.from(signature, 'base64'))\n        : signature;\n\n    this.attribute_map = {\n      logic: 'logic',\n      args: 'args',\n      multisigSignature: 'multisig-signature',\n      signature: 'signature',\n    };\n  }\n\n  // eslint-disable-next-line camelcase\n  static from_obj_for_encoding(\n    data: Record<string, any>\n  ): TransactionSignatureLogicsig {\n    /* eslint-disable dot-notation */\n    if (typeof data['logic'] === 'undefined')\n      throw new Error(`Response is missing required field 'logic': ${data}`);\n    return new TransactionSignatureLogicsig({\n      logic: data['logic'],\n      args: data['args'],\n      multisigSignature:\n        typeof data['multisig-signature'] !== 'undefined'\n          ? TransactionSignatureMultisig.from_obj_for_encoding(\n              data['multisig-signature']\n            )\n          : undefined,\n      signature: data['signature'],\n    });\n    /* eslint-enable dot-notation */\n  }\n}\n\n/**\n * (msig) structure holding multiple subsignatures.\n * Definition:\n * crypto/multisig.go : MultisigSig\n */\nexport class TransactionSignatureMultisig extends BaseModel {\n  /**\n   * (subsig) holds pairs of public key and signatures.\n   */\n  public subsignature?: TransactionSignatureMultisigSubsignature[];\n\n  /**\n   * (thr)\n   */\n  public threshold?: number | bigint;\n\n  /**\n   * (v)\n   */\n  public version?: number | bigint;\n\n  /**\n   * Creates a new `TransactionSignatureMultisig` object.\n   * @param subsignature - (subsig) holds pairs of public key and signatures.\n   * @param threshold - (thr)\n   * @param version - (v)\n   */\n  constructor({\n    subsignature,\n    threshold,\n    version,\n  }: {\n    subsignature?: TransactionSignatureMultisigSubsignature[];\n    threshold?: number | bigint;\n    version?: number | bigint;\n  }) {\n    super();\n    this.subsignature = subsignature;\n    this.threshold = threshold;\n    this.version = version;\n\n    this.attribute_map = {\n      subsignature: 'subsignature',\n      threshold: 'threshold',\n      version: 'version',\n    };\n  }\n\n  // eslint-disable-next-line camelcase\n  static from_obj_for_encoding(\n    data: Record<string, any>\n  ): TransactionSignatureMultisig {\n    /* eslint-disable dot-notation */\n    return new TransactionSignatureMultisig({\n      subsignature:\n        typeof data['subsignature'] !== 'undefined'\n          ? data['subsignature'].map(\n              TransactionSignatureMultisigSubsignature.from_obj_for_encoding\n            )\n          : undefined,\n      threshold: data['threshold'],\n      version: data['version'],\n    });\n    /* eslint-enable dot-notation */\n  }\n}\n\nexport class TransactionSignatureMultisigSubsignature extends BaseModel {\n  /**\n   * (pk)\n   */\n  public publicKey?: Uint8Array;\n\n  /**\n   * (s)\n   */\n  public signature?: Uint8Array;\n\n  /**\n   * Creates a new `TransactionSignatureMultisigSubsignature` object.\n   * @param publicKey - (pk)\n   * @param signature - (s)\n   */\n  constructor({\n    publicKey,\n    signature,\n  }: {\n    publicKey?: string | Uint8Array;\n    signature?: string | Uint8Array;\n  }) {\n    super();\n    this.publicKey =\n      typeof publicKey === 'string'\n        ? new Uint8Array(Buffer.from(publicKey, 'base64'))\n        : publicKey;\n    this.signature =\n      typeof signature === 'string'\n        ? new Uint8Array(Buffer.from(signature, 'base64'))\n        : signature;\n\n    this.attribute_map = {\n      publicKey: 'public-key',\n      signature: 'signature',\n    };\n  }\n\n  // eslint-disable-next-line camelcase\n  static from_obj_for_encoding(\n    data: Record<string, any>\n  ): TransactionSignatureMultisigSubsignature {\n    /* eslint-disable dot-notation */\n    return new TransactionSignatureMultisigSubsignature({\n      publicKey: data['public-key'],\n      signature: data['signature'],\n    });\n    /* eslint-enable dot-notation */\n  }\n}\n\n/**\n * Fields for a state proof transaction.\n * Definition:\n * data/transactions/stateproof.go : StateProofTxnFields\n */\nexport class TransactionStateProof extends BaseModel {\n  /**\n   * (spmsg)\n   */\n  public message?: IndexerStateProofMessage;\n\n  /**\n   * (sp) represents a state proof.\n   * Definition:\n   * crypto/stateproof/structs.go : StateProof\n   */\n  public stateProof?: StateProofFields;\n\n  /**\n   * (sptype) Type of the state proof. Integer representing an entry defined in\n   * protocol/stateproof.go\n   */\n  public stateProofType?: number | bigint;\n\n  /**\n   * Creates a new `TransactionStateProof` object.\n   * @param message - (spmsg)\n   * @param stateProof - (sp) represents a state proof.\n   * Definition:\n   * crypto/stateproof/structs.go : StateProof\n   * @param stateProofType - (sptype) Type of the state proof. Integer representing an entry defined in\n   * protocol/stateproof.go\n   */\n  constructor({\n    message,\n    stateProof,\n    stateProofType,\n  }: {\n    message?: IndexerStateProofMessage;\n    stateProof?: StateProofFields;\n    stateProofType?: number | bigint;\n  }) {\n    super();\n    this.message = message;\n    this.stateProof = stateProof;\n    this.stateProofType = stateProofType;\n\n    this.attribute_map = {\n      message: 'message',\n      stateProof: 'state-proof',\n      stateProofType: 'state-proof-type',\n    };\n  }\n\n  // eslint-disable-next-line camelcase\n  static from_obj_for_encoding(\n    data: Record<string, any>\n  ): TransactionStateProof {\n    /* eslint-disable dot-notation */\n    return new TransactionStateProof({\n      message:\n        typeof data['message'] !== 'undefined'\n          ? IndexerStateProofMessage.from_obj_for_encoding(data['message'])\n          : undefined,\n      stateProof:\n        typeof data['state-proof'] !== 'undefined'\n          ? StateProofFields.from_obj_for_encoding(data['state-proof'])\n          : undefined,\n      stateProofType: data['state-proof-type'],\n    });\n    /* eslint-enable dot-notation */\n  }\n}\n\n/**\n *\n */\nexport class TransactionsResponse extends BaseModel {\n  /**\n   * Round at which the results were computed.\n   */\n  public currentRound: number | bigint;\n\n  public transactions: Transaction[];\n\n  /**\n   * Used for pagination, when making another request provide this token with the\n   * next parameter.\n   */\n  public nextToken?: string;\n\n  /**\n   * Creates a new `TransactionsResponse` object.\n   * @param currentRound - Round at which the results were computed.\n   * @param transactions -\n   * @param nextToken - Used for pagination, when making another request provide this token with the\n   * next parameter.\n   */\n  constructor({\n    currentRound,\n    transactions,\n    nextToken,\n  }: {\n    currentRound: number | bigint;\n    transactions: Transaction[];\n    nextToken?: string;\n  }) {\n    super();\n    this.currentRound = currentRound;\n    this.transactions = transactions;\n    this.nextToken = nextToken;\n\n    this.attribute_map = {\n      currentRound: 'current-round',\n      transactions: 'transactions',\n      nextToken: 'next-token',\n    };\n  }\n\n  // eslint-disable-next-line camelcase\n  static from_obj_for_encoding(\n    data: Record<string, any>\n  ): TransactionsResponse {\n    /* eslint-disable dot-notation */\n    if (typeof data['current-round'] === 'undefined')\n      throw new Error(\n        `Response is missing required field 'current-round': ${data}`\n      );\n    if (!Array.isArray(data['transactions']))\n      throw new Error(\n        `Response is missing required array field 'transactions': ${data}`\n      );\n    return new TransactionsResponse({\n      currentRound: data['current-round'],\n      transactions: data['transactions'].map(Transaction.from_obj_for_encoding),\n      nextToken: data['next-token'],\n    });\n    /* eslint-enable dot-notation */\n  }\n}\n","import { Buffer } from 'buffer';\nimport JSONRequest from '../jsonrequest';\nimport HTTPClient from '../../client';\nimport IntDecoding from '../../../types/intDecoding';\nimport { Box } from './models/types';\n\nexport default class LookupApplicationBoxByIDandName extends JSONRequest<\n  Box,\n  Record<string, any>\n> {\n  /**\n   * Returns information about indexed application boxes.\n   *\n   * #### Example\n   * ```typescript\n   * const boxName = Buffer.from(\"foo\");\n   * const boxResponse = await indexerClient\n   *        .LookupApplicationBoxByIDandName(1234, boxName)\n   *        .do();\n   * const boxValue = boxResponse.value;\n   * ```\n   *\n   * [Response data schema details](https://developer.algorand.org/docs/rest-apis/indexer/#get-v2applicationsapplication-idbox)\n   * @oaram index - application index.\n   * @category GET\n   */\n  constructor(\n    c: HTTPClient,\n    intDecoding: IntDecoding,\n    private index: number,\n    boxName: Uint8Array\n  ) {\n    super(c, intDecoding);\n    this.index = index;\n    // Encode query in base64 format and append the encoding prefix.\n    const encodedName = Buffer.from(boxName).toString('base64');\n    this.query.name = encodeURI(`b64:${encodedName}`);\n  }\n\n  /**\n   * @returns `/v2/applications/${index}/box`\n   */\n  path() {\n    return `/v2/applications/${this.index}/box`;\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  prepare(body: Record<string, any>): Box {\n    return Box.from_obj_for_encoding(body);\n  }\n}\n","import JSONRequest from '../jsonrequest';\n\n/**\n * Returns information about indexed accounts.\n *\n * #### Example\n * ```typescript\n * const accounts = await indexerClient.searchAccounts().do();\n * ```\n *\n * [Response data schema details](https://developer.algorand.org/docs/rest-apis/indexer/#get-v2accounts)\n * @category GET\n */\nexport default class SearchAccounts extends JSONRequest {\n  /**\n   * @returns `/v2/accounts`\n   */\n  // eslint-disable-next-line class-methods-use-this\n  path() {\n    return '/v2/accounts';\n  }\n\n  /**\n   * Filtered results should have an amount greater than this value, as int, representing microAlgos, unless an asset-id is provided, in which case units are in the asset's units.\n   *\n   * #### Example 1\n   * ```typescript\n   * const minBalance = 300000;\n   * const accounts = await indexerClient\n   *        .searchAccounts()\n   *        .currencyGreaterThan(minBalance - 1)\n   *        .do();\n   * ```\n   *\n   * #### Example 2\n   * ```typescript\n   * const assetID = 163650;\n   * const minBalance = 300000;\n   * const accounts = await indexerClient\n   *        .searchAccounts()\n   *        .assetID(assetID)\n   *        .currencyGreaterThan(minBalance - 1)\n   *        .do();\n   * ```\n   * @remarks\n   * If you are looking for accounts with the currency amount greater than 0, simply construct the query without `currencyGreaterThan` because it doesn't accept `-1`, and passing the `0` `currency-greater-than` value would exclude accounts with a 0 amount.\n   *\n   * @param greater\n   * @category query\n   */\n  currencyGreaterThan(greater: number) {\n    this.query['currency-greater-than'] = greater;\n    return this;\n  }\n\n  /**\n   * Filtered results should have an amount less than this value, as int, representing microAlgos, unless an asset-id is provided, in which case units are in the asset's units.\n   *\n   * #### Example 1\n   * ```typescript\n   * const maxBalance = 500000;\n   * const accounts = await indexerClient\n   *        .searchAccounts()\n   *        .currencyLessThan(maxBalance + 1)\n   *        .do();\n   * ```\n   *\n   * #### Example 2\n   * ```typescript\n   * const assetID = 163650;\n   * const maxBalance = 500000;\n   * const accounts = await indexerClient\n   *        .searchAccounts()\n   *        .assetID(assetID)\n   *        .currencyLessThan(maxBalance + 1)\n   *        .do();\n   * ```\n   *\n   * @param lesser\n   * @category query\n   */\n  currencyLessThan(lesser: number) {\n    this.query['currency-less-than'] = lesser;\n    return this;\n  }\n\n  /**\n   * Maximum number of results to return.\n   *\n   * #### Example\n   * ```typescript\n   * const maxResults = 25;\n   * const accounts = await indexerClient\n   *        .searchAccounts()\n   *        .limit(maxResults)\n   *        .do();\n   * ```\n   *\n   * @param limit\n   * @category query\n   */\n  limit(limit: number) {\n    this.query.limit = limit;\n    return this;\n  }\n\n  /**\n   * Asset ID to filter with.\n   *\n   * #### Example\n   * ```typescript\n   * const assetID = 163650;\n   * const accounts = await indexerClient\n   *        .searchAccounts()\n   *        .assetID(assetID)\n   *        .do();\n   * ```\n   *\n   * @param id\n   * @category query\n   */\n  assetID(id: number) {\n    this.query['asset-id'] = id;\n    return this;\n  }\n\n  /**\n   * The next page of results.\n   *\n   * #### Example\n   * ```typescript\n   * const maxResults = 25;\n   *\n   * const accountsPage1 = await indexerClient\n   *        .searchAccounts()\n   *        .limit(maxResults)\n   *        .do();\n   *\n   * const accountsPage2 = await indexerClient\n   *        .searchAccounts()\n   *        .limit(maxResults)\n   *        .nextToken(accountsPage1[\"next-token\"])\n   *        .do();\n   * ```\n   *\n   * @param nextToken - provided by the previous results\n   * @category query\n   */\n  nextToken(nextToken: string) {\n    this.query.next = nextToken;\n    return this;\n  }\n\n  /**\n   * Include results for the specified round.\n   *\n   * #### Example\n   * ```typescript\n   * const targetBlock = 18309917;\n   * const accounts = await indexerClient\n   *        .searchAccounts()\n   *        .round(targetBlock)\n   *        .do();\n   * ```\n   * @remarks For performance reasons, this parameter may be disabled on some configurations.\n   * @param round\n   * @category query\n   */\n  round(round: number) {\n    this.query.round = round;\n    return this;\n  }\n\n  /**\n   * Include accounts that use this spending key.\n   *\n   * #### Example\n   * ```typescript\n   * const authAddr = \"XBYLS2E6YI6XXL5BWCAMOA4GTWHXWENZMX5UHXMRNWWUQ7BXCY5WC5TEPA\";\n   * const accounts = await indexerClient\n   *        .searchAccounts()\n   *        .authAddr(authAddr)\n   *        .do();\n   * ```\n   *\n   * @param authAddr\n   */\n  authAddr(authAddr: string) {\n    this.query['auth-addr'] = authAddr;\n    return this;\n  }\n\n  /**\n   * Filter for this application.\n   *\n   * #### Example\n   * ```typescript\n   * const appId = 60553466;\n   * const accounts = await indexerClient\n   *        .searchAccounts()\n   *        .applicationID(appId)\n   *        .do();\n   * ```\n   *\n   * @param applicationID\n   * @category query\n   */\n  applicationID(applicationID: number) {\n    this.query['application-id'] = applicationID;\n    return this;\n  }\n\n  /**\n   * Includes all items including closed accounts, deleted applications, destroyed assets, opted-out asset holdings, and closed-out application localstates\n   *\n   * #### Example 1\n   * ```typescript\n   * const assetId = 163650;\n   * const accounts = await indexerClient\n   *        .searchAccounts()\n   *        .includeAll(false)\n   *        .do();\n   * ```\n   *\n   * #### Example 2\n   * ```typescript\n   * const assetId = 163650;\n   * const accounts = await indexerClient\n   *        .searchAccounts()\n   *        .includeAll()\n   *        .do();\n   * ```\n   *\n   * @param value - default true when called without passing a value\n   * @category query\n   */\n  includeAll(value = true) {\n    this.query['include-all'] = value;\n    return this;\n  }\n\n  /**\n   * Exclude additional items such as asset holdings, application local data stored for this account, asset parameters created by this account, and application parameters created by this account.\n   *\n   * #### Example 1\n   * ```typescript\n   * const accounts = await indexerClient\n   *        .searchAccounts()\n   *        .exclude(\"all\")\n   *        .do();\n   * ```\n   *\n   * #### Example 2\n   * ```typescript\n   * const accounts = await indexerClient\n   *        .searchAccounts()\n   *        .exclude(\"assets,created-assets\")\n   *        .do();\n   * ```\n   * @remarks By default, it behaves as exclude=none\n   * @param exclude - Array of `all`, `assets`, `created-assets`, `apps-local-state`, `created-apps`, `none`\n   * @category query\n   */\n  exclude(exclude: string) {\n    this.query.exclude = exclude;\n    return this;\n  }\n}\n","import JSONRequest from '../jsonrequest';\nimport { base64StringFunnel } from './lookupAccountTransactions';\n\n/**\n * Returns information about indexed transactions.\n *\n * #### Example\n * ```typescript\n * const txns = await indexerClient.searchForTransactions().do();\n * ```\n *\n * [Response data schema details](https://developer.algorand.org/docs/rest-apis/indexer/#get-v2transactions)\n * @category GET\n */\nexport default class SearchForTransactions extends JSONRequest {\n  /**\n   * @returns `/v2/transactions`\n   */\n  // eslint-disable-next-line class-methods-use-this\n  path() {\n    return '/v2/transactions';\n  }\n\n  /**\n   * Specifies a prefix which must be contained in the note field.\n   *\n   * #### Example\n   * ```typescript\n   * const notePrefixBase64Encoded = \"Y3JlYXRl\";\n   * const txns = await indexerClient\n   *        .searchForTransactions()\n   *        .notePrefix(notePrefixBase64Encoded)\n   *        .do();\n   * ```\n   *\n   * @param prefix - base64 string or uint8array\n   * @category query\n   */\n  notePrefix(prefix: Uint8Array | string) {\n    this.query['note-prefix'] = base64StringFunnel(prefix);\n    return this;\n  }\n\n  /**\n   * Type of transaction to filter with.\n   *\n   * #### Example\n   * ```typescript\n   * const txns = await indexerClient\n   *        .searchForTransactions()\n   *        .txType(\"keyreg\")\n   *        .do();\n   * ```\n   *\n   * @param type - one of `pay`, `keyreg`, `acfg`, `axfer`, `afrz`, `appl`, `stpf`\n   * @category query\n   */\n  txType(type: string) {\n    this.query['tx-type'] = type;\n    return this;\n  }\n\n  /**\n   * Type of signature to filter with.\n   * - sig: Standard\n   * - msig: MultiSig\n   * - lsig: LogicSig\n   *\n   * #### Example\n   * ```typescript\n   * const txns = await indexerClient\n   *        .searchForTransactions()\n   *        .sigType(\"sig\")\n   *        .do();\n   * ```\n   *\n   * @param type - one of `sig`, `msig`, `lsig`\n   * @category query\n   */\n  sigType(type: string) {\n    this.query['sig-type'] = type;\n    return this;\n  }\n\n  /**\n   * Lookup the specific transaction by ID.\n   *\n   * #### Example\n   * ```typescript\n   * const txId = \"MEUOC4RQJB23CQZRFRKYEI6WBO73VTTPST5A7B3S5OKBUY6LFUDA\";\n   * const txns = await indexerClient\n   *        .searchForTransactions()\n   *        .txid(txId)\n   *        .do();\n   * ```\n   * @remarks Alternatively, use `indexerClient.lookupTransactionByID(txnId).do()`\n   * @param txid\n   * @category query\n   */\n  txid(txid: string) {\n    this.query.txid = txid;\n    return this;\n  }\n\n  /**\n   * Include results for the specified round.\n   *\n   * #### Example\n   * ```typescript\n   * const targetBlock = 18309917;\n   * const txns = await indexerClient\n   *        .searchForTransactions()\n   *        .round(targetBlock)\n   *        .do();\n   * ```\n   * @remarks Alternatively, use `indexerClient.lookupBlock(targetBlock).do()`\n   * @param round\n   * @category query\n   */\n  round(round: number) {\n    this.query.round = round;\n    return this;\n  }\n\n  /**\n   * Include results at or after the specified min-round.\n   *\n   * #### Example\n   * ```typescript\n   * const minRound = 18309917;\n   * const txns = await indexerClient\n   *        .searchForTransactions()\n   *        .minRound(minRound)\n   *        .do();\n   * ```\n   *\n   * @param round\n   * @category query\n   */\n  minRound(round: number) {\n    this.query['min-round'] = round;\n    return this;\n  }\n\n  /**\n   * Include results at or before the specified max-round.\n   *\n   * #### Example\n   * ```typescript\n   * const maxRound = 18309917;\n   * const txns = await indexerClient\n   *        .searchForTransactions()\n   *        .maxRound(maxRound)\n   *        .do();\n   * ```\n   *\n   * @param round\n   * @category query\n   */\n  maxRound(round: number) {\n    this.query['max-round'] = round;\n    return this;\n  }\n\n  /**\n   * Asset ID to filter with.\n   *\n   * #### Example\n   * ```typescript\n   * const assetID = 163650;\n   * const txns = await indexerClient\n   *        .searchForTransactions()\n   *        .assetID(assetID)\n   *        .do();\n   * ```\n   * @remarks Alternatively, use `indexerClient.lookupAssetTransactions(assetId).do()`\n   * @param id\n   * @category query\n   */\n  assetID(id: number) {\n    this.query['asset-id'] = id;\n    return this;\n  }\n\n  /**\n   * Maximum number of results to return.\n   *\n   * #### Example\n   * ```typescript\n   * const maxResults = 25;\n   * const txns = await indexerClient\n   *        .searchForTransactions()\n   *        .limit(maxResults)\n   *        .do();\n   * ```\n   *\n   * @param limit\n   * @category query\n   */\n  limit(limit: number) {\n    this.query.limit = limit;\n    return this;\n  }\n\n  /**\n   * Include results before the given time.\n   *\n   * #### Example\n   * ```typescript\n   * const beforeTime = \"2022-02-02T20:20:22.02Z\";\n   * const txns = await indexerClient\n   *        .searchForTransactions()\n   *        .beforeTime(beforeTime)\n   *        .do();\n   * ```\n   *\n   * @param before - rfc3339 string\n   * @category query\n   */\n  beforeTime(before: string) {\n    this.query['before-time'] = before;\n    return this;\n  }\n\n  /**\n   * Include results after the given time.\n   *\n   * #### Example\n   * ```typescript\n   * const afterTime = \"2022-10-21T00:00:11.55Z\";\n   * const txns = await indexerClient\n   *        .searchForTransactions()\n   *        .afterTime(afterTime)\n   *        .do();\n   * ```\n   *\n   * @param after - rfc3339 string\n   * @category query\n   */\n  afterTime(after: string) {\n    this.query['after-time'] = after;\n    return this;\n  }\n\n  /**\n   * Filtered results should have an amount greater than this value, as int, representing microAlgos, unless an asset-id is provided, in which case units are in the asset's units.\n   *\n   * #### Example 1\n   * ```typescript\n   * const minBalance = 300000;\n   * const txns = await indexerClient\n   *        .searchForTransactions()\n   *        .currencyGreaterThan(minBalance - 1)\n   *        .do();\n   * ```\n   *\n   * #### Example 2\n   * ```typescript\n   * const assetID = 163650;\n   * const minBalance = 300000;\n   * const txns = await indexerClient\n   *        .searchForTransactions()\n   *        .assetID(assetID)\n   *        .currencyGreaterThan(minBalance - 1)\n   *        .do();\n   * ```\n   * @remarks\n   * If you are looking for transactions with the currency amount greater than 0, simply construct the query without `currencyGreaterThan` because it doesn't accept `-1`, and passing the `0` `currency-greater-than` value would exclude transactions with a 0 amount.\n   *\n   * @param greater\n   * @category query\n   */\n  currencyGreaterThan(greater: number) {\n    this.query['currency-greater-than'] = greater;\n    return this;\n  }\n\n  /**\n   * Filtered results should have an amount less than this value, as int, representing microAlgos, unless an asset-id is provided, in which case units are in the asset's units.\n   *\n   * #### Example 1\n   * ```typescript\n   * const maxBalance = 500000;\n   * const txns = await indexerClient\n   *        .searchForTransactions()\n   *        .currencyLessThan(maxBalance + 1)\n   *        .do();\n   * ```\n   *\n   * #### Example 2\n   * ```typescript\n   * const assetID = 163650;\n   * const maxBalance = 500000;\n   * const txns = await indexerClient\n   *        .searchForTransactions()\n   *        .assetID(assetID)\n   *        .currencyLessThan(maxBalance + 1)\n   *        .do();\n   * ```\n   *\n   * @param lesser\n   * @category query\n   */\n  currencyLessThan(lesser: number) {\n    this.query['currency-less-than'] = lesser;\n    return this;\n  }\n\n  /**\n   * Combined with address, defines what address to filter on, as string.\n   *\n   * #### Example\n   * ```typescript\n   * const address = \"XBYLS2E6YI6XXL5BWCAMOA4GTWHXWENZMX5UHXMRNWWUQ7BXCY5WC5TEPA\";\n   * const role = \"freeze-target\";\n   * const txns = await indexerClient\n   *        .searchForTransactions()\n   *        .address(address)\n   *        .addressRole(role)\n   *        .do();\n   * ```\n   *\n   * @param role - one of `sender`, `receiver`, `freeze-target`\n   * @category query\n   */\n  addressRole(role: string) {\n    this.query['address-role'] = role;\n    return this;\n  }\n\n  /**\n   * Only include transactions with this address in one of the transaction fields.\n   *\n   * #### Example\n   * ```typescript\n   * const address = \"XBYLS2E6YI6XXL5BWCAMOA4GTWHXWENZMX5UHXMRNWWUQ7BXCY5WC5TEPA\";\n   * const txns = await indexerClient\n   *        .searchForTransactions()\n   *        .address(address)\n   *        .do();\n   * ```\n   * @remarks Alternatively, use `indexerClient.lookupAccountTransactions(address).do()`\n   * @param address\n   * @category query\n   */\n  address(address: string) {\n    this.query.address = address;\n    return this;\n  }\n\n  /**\n   * Whether or not to consider the `close-to` field as a receiver when filtering transactions, as bool. Set to `true` to ignore `close-to`.\n   *\n   * #### Example\n   * ```typescript\n   * const txns = await indexerClient\n   *        .searchForTransactions()\n   *        .excludeCloseTo(true)\n   *        .do();\n   * ```\n   *\n   * @param exclude\n   * @category query\n   */\n  excludeCloseTo(exclude: boolean) {\n    this.query['exclude-close-to'] = exclude;\n    return this;\n  }\n\n  /**\n   * The next page of results.\n   *\n   * #### Example\n   * ```typescript\n   * const maxResults = 25;\n   *\n   * const txnsPage1 = await indexerClient\n   *        .searchForTransactions()\n   *        .limit(maxResults)\n   *        .do();\n   *\n   * const txnsPage2 = await indexerClient\n   *        .searchForTransactions()\n   *        .limit(maxResults)\n   *        .nextToken(txnsPage1[\"next-token\"])\n   *        .do();\n   * ```\n   *\n   * @param nextToken - provided by the previous results\n   * @category query\n   */\n  nextToken(nextToken: string) {\n    this.query.next = nextToken;\n    return this;\n  }\n\n  /**\n   * Whether or not to include rekeying transactions.\n   *\n   * #### Example\n   * ```typescript\n   * const txns = await indexerClient\n   *        .searchForTransactions()\n   *        .rekeyTo(false)\n   *        .do();\n   * ```\n   *\n   * @param rekeyTo\n   * @category query\n   */\n  rekeyTo(rekeyTo: boolean) {\n    this.query['rekey-to'] = rekeyTo;\n    return this;\n  }\n\n  /**\n   * Filter for this application.\n   *\n   * #### Example\n   * ```typescript\n   * const appId = 60553466;\n   * const txns = await indexerClient\n   *        .searchForTransactions()\n   *        .applicationID(appId)\n   *        .do();\n   * ```\n   *\n   * @param applicationID\n   * @category query\n   */\n  applicationID(applicationID: number) {\n    this.query['application-id'] = applicationID;\n    return this;\n  }\n}\n","import JSONRequest from '../jsonrequest';\n\n/**\n * Returns information about indexed assets.\n *\n * #### Example\n * ```typescript\n * const assets = await indexerClient.searchForAssets().do();\n * ```\n *\n * [Response data schema details](https://developer.algorand.org/docs/rest-apis/indexer/#get-v2assets)\n * @category GET\n */\nexport default class SearchForAssets extends JSONRequest {\n  /**\n   * @returns `/v2/assets`\n   */\n  // eslint-disable-next-line class-methods-use-this\n  path() {\n    return '/v2/assets';\n  }\n\n  /**\n   * Limit results for pagination.\n   *\n   * #### Example\n   * ```typescript\n   * const maxResults = 20;\n   * const assets = await indexerClient\n   *        .searchForAssets()\n   *        .limit(maxResults)\n   *        .do();\n   * ```\n   *\n   * @param limit - maximum number of results to return.\n   * @category query\n   */\n  limit(limit: number) {\n    this.query.limit = limit;\n    return this;\n  }\n\n  /**\n   * Filter just assets with the given creator address.\n   *\n   * #### Example\n   * ```typescript\n   * const address = \"XBYLS2E6YI6XXL5BWCAMOA4GTWHXWENZMX5UHXMRNWWUQ7BXCY5WC5TEPA\";\n   * const assets = await indexerClient\n   *        .searchForAssets()\n   *        .creator(address)\n   *        .do();\n   * ```\n   *\n   * @param creator\n   * @category query\n   */\n  creator(creator: string) {\n    this.query.creator = creator;\n    return this;\n  }\n\n  /**\n   * Filter just assets with the given name.\n   *\n   * #### Example\n   * ```typescript\n   * const name = \"Test Token\";\n   * const assets = await indexerClient\n   *        .searchForAssets()\n   *        .name(name)\n   *        .do();\n   * ```\n   *\n   * @param name\n   * @category query\n   */\n  name(name: string) {\n    this.query.name = name;\n    return this;\n  }\n\n  /**\n   * Filter just assets with the given unit.\n   *\n   * #### Example\n   * ```typescript\n   * const unit = \"test\";\n   * const assets = await indexerClient\n   *        .searchForAssets()\n   *        .unit(unit)\n   *        .do();\n   * ```\n   *\n   * @param unit\n   * @category query\n   */\n  unit(unit: string) {\n    this.query.unit = unit;\n    return this;\n  }\n\n  /**\n   * Asset ID for filter, as int.\n   *\n   * #### Example\n   * ```typescript\n   * const assetId = 163650;\n   * const assets = await indexerClient\n   *        .searchForAssets()\n   *        .index(assetId)\n   *        .do();\n   * ```\n   * @remarks Alternatively, use `indexerClient.lookupAssetByID(assetId).do();`\n   * @param index\n   * @category query\n   */\n  index(index: number) {\n    this.query['asset-id'] = index;\n    return this;\n  }\n\n  /**\n   * Specify the next page of results.\n   *\n   * #### Example\n   * ```typescript\n   * const maxResults = 20;\n   *\n   * const assetsPage1 = await indexerClient\n   *        .searchForAssets()\n   *        .limit(maxResults)\n   *        .do();\n   *\n   * const assetsPage2 = await indexerClient\n   *        .searchForAssets()\n   *        .limit(maxResults)\n   *        .nextToken(assetsPage1[\"next-token\"])\n   *        .do();\n   * ```\n   * @param nextToken - provided by the previous results.\n   * @category query\n   */\n  nextToken(nextToken: string) {\n    this.query.next = nextToken;\n    return this;\n  }\n\n  /**\n   * Includes all items including closed accounts, deleted applications, destroyed assets, opted-out asset holdings, and closed-out application localstates\n   *\n   * #### Example 1\n   * ```typescript\n   * const assets = await indexerClient\n   *        .searchForAssets()\n   *        .includeAll(false)\n   *        .do();\n   * ```\n   *\n   * #### Example 2\n   * ```typescript\n   * const assets = await indexerClient\n   *        .searchForAssets()\n   *        .includeAll()\n   *        .do();\n   * ```\n   *\n   * @param value - default true when called without passing a value\n   * @category query\n   */\n  includeAll(value = true) {\n    this.query['include-all'] = value;\n    return this;\n  }\n}\n","import JSONRequest from '../jsonrequest';\n\n/**\n * Returns information about indexed applications.\n *\n * #### Example\n * ```typescript\n * const apps = await indexerClient.searchForApplications().do();\n * ```\n *\n * [Response data schema details](https://developer.algorand.org/docs/rest-apis/indexer/#get-v2applications)\n * @category GET\n */\nexport default class SearchForApplications extends JSONRequest {\n  /**\n   * @returns `/v2/applications`\n   */\n  // eslint-disable-next-line class-methods-use-this\n  path() {\n    return '/v2/applications';\n  }\n\n  /**\n   * Application ID for filter, as int\n   *\n   * #### Example\n   * ```typescript\n   * const appId = 60553466;\n   * const apps = await indexerClient\n   *        .searchForApplications()\n   *        .index(appId)\n   *        .do();\n   * ```\n   * @remarks Alternatively, use `indexerClient.lookupApplications(appId).do()`\n   * @param index\n   * @category query\n   */\n  index(index: number) {\n    this.query['application-id'] = index;\n    return this;\n  }\n\n  /**\n   * Creator for filter, as string\n   *\n   * #### Example\n   * ```typescript\n   * const creator = \"XBYLS2E6YI6XXL5BWCAMOA4GTWHXWENZMX5UHXMRNWWUQ7BXCY5WC5TEPA\";\n   * const apps = await indexerClient\n   *        .searchForApplications()\n   *        .creator(creator)\n   *        .do();\n   * ```\n   * @param creator\n   * @category query\n   */\n  creator(creator: string) {\n    this.query.creator = creator;\n    return this;\n  }\n\n  /**\n   * Specify the next page of results.\n   *\n   * #### Example\n   * ```typescript\n   * const maxResults = 20;\n   *\n   * const appsPage1 = await indexerClient\n   *        .searchForApplications()\n   *        .limit(maxResults)\n   *        .do();\n   *\n   * const appsPage2 = await indexerClient\n   *        .searchForApplications()\n   *        .limit(maxResults)\n   *        .nextToken(appsPage1[\"next-token\"])\n   *        .do();\n   * ```\n   * @param nextToken - provided by the previous results.\n   * @category query\n   */\n  nextToken(next: string) {\n    this.query.next = next;\n    return this;\n  }\n\n  /**\n   * Limit results for pagination.\n   *\n   * #### Example\n   * ```typescript\n   * const maxResults = 20;\n   * const apps = await indexerClient\n   *        .searchForApplications()\n   *        .limit(maxResults)\n   *        .do();\n   * ```\n   *\n   * @param limit - maximum number of results to return.\n   * @category query\n   */\n  limit(limit: number) {\n    this.query.limit = limit;\n    return this;\n  }\n\n  /**\n   * Includes all items including closed accounts, deleted applications, destroyed assets, opted-out asset holdings, and closed-out application localstates\n   *\n   * #### Example 1\n   * ```typescript\n   * const apps = await indexerClient\n   *        .searchForApplications()\n   *        .includeAll(false)\n   *        .do();\n   * ```\n   *\n   * #### Example 2\n   * ```typescript\n   * const apps = await indexerClient\n   *        .searchForApplications()\n   *        .includeAll()\n   *        .do();\n   * ```\n   *\n   * @param value - default true when called without passing a value\n   * @category query\n   */\n  includeAll(value = true) {\n    this.query['include-all'] = value;\n    return this;\n  }\n}\n","import JSONRequest from '../jsonrequest';\nimport HTTPClient from '../../client';\nimport IntDecoding from '../../../types/intDecoding';\nimport { BoxesResponse } from './models/types';\n\nexport default class SearchForApplicationBoxes extends JSONRequest<\n  BoxesResponse,\n  Record<string, any>\n> {\n  /**\n   * Returns information about indexed application boxes.\n   *\n   * #### Example\n   * ```typescript\n   * const maxResults = 20;\n   * const appID = 1234;\n   *\n   * const responsePage1 = await indexerClient\n   *        .searchForApplicationBoxes(appID)\n   *        .limit(maxResults)\n   *        .do();\n   * const boxNamesPage1 = responsePage1.boxes.map(box => box.name);\n   *\n   * const responsePage2 = await indexerClient\n   *        .searchForApplicationBoxes(appID)\n   *        .limit(maxResults)\n   *        .nextToken(responsePage1.nextToken)\n   *        .do();\n   * const boxNamesPage2 = responsePage2.boxes.map(box => box.name);\n   * ```\n   *\n   * [Response data schema details](https://developer.algorand.org/docs/rest-apis/indexer/#get-v2applicationsapplication-idboxes)\n   * @oaram index - application index.\n   * @category GET\n   */\n  constructor(c: HTTPClient, intDecoding: IntDecoding, private index: number) {\n    super(c, intDecoding);\n    this.index = index;\n  }\n\n  /**\n   * @returns `/v2/applications/${index}/boxes`\n   */\n  path() {\n    return `/v2/applications/${this.index}/boxes`;\n  }\n\n  /**\n   * Specify the next page of results.\n   *\n   * #### Example\n   * ```typescript\n   * const maxResults = 20;\n   * const appID = 1234;\n   *\n   * const responsePage1 = await indexerClient\n   *        .searchForApplicationBoxes(appID)\n   *        .limit(maxResults)\n   *        .do();\n   * const boxNamesPage1 = responsePage1.boxes.map(box => box.name);\n   *\n   * const responsePage2 = await indexerClient\n   *        .searchForApplicationBoxes(appID)\n   *        .limit(maxResults)\n   *        .nextToken(responsePage1.nextToken)\n   *        .do();\n   * const boxNamesPage2 = responsePage2.boxes.map(box => box.name);\n   * ```\n   * @param nextToken - provided by the previous results.\n   * @category query\n   */\n  nextToken(next: string) {\n    this.query.next = next;\n    return this;\n  }\n\n  /**\n   * Limit results for pagination.\n   *\n   * #### Example\n   * ```typescript\n   * const maxResults = 20;\n   * const boxesResponse = await indexerClient\n   *        .searchForApplicationBoxes(1234)\n   *        .limit(maxResults)\n   *        .do();\n   * ```\n   *\n   * @param limit - maximum number of results to return.\n   * @category query\n   */\n  limit(limit: number) {\n    this.query.limit = limit;\n    return this;\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  prepare(body: Record<string, any>): BoxesResponse {\n    return BoxesResponse.from_obj_for_encoding(body);\n  }\n}\n","import ServiceClient from '../serviceClient';\nimport MakeHealthCheck from './makeHealthCheck';\nimport LookupAssetBalances from './lookupAssetBalances';\nimport LookupAssetTransactions from './lookupAssetTransactions';\nimport LookupAccountTransactions from './lookupAccountTransactions';\nimport LookupBlock from './lookupBlock';\nimport LookupTransactionByID from './lookupTransactionByID';\nimport LookupAccountByID from './lookupAccountByID';\nimport LookupAccountAssets from './lookupAccountAssets';\nimport LookupAccountCreatedAssets from './lookupAccountCreatedAssets';\nimport LookupAccountAppLocalStates from './lookupAccountAppLocalStates';\nimport LookupAccountCreatedApplications from './lookupAccountCreatedApplications';\nimport LookupAssetByID from './lookupAssetByID';\nimport LookupApplications from './lookupApplications';\nimport LookupApplicationLogs from './lookupApplicationLogs';\nimport LookupApplicationBoxByIDandName from './lookupApplicationBoxByIDandName';\nimport SearchAccounts from './searchAccounts';\nimport SearchForTransactions from './searchForTransactions';\nimport SearchForAssets from './searchForAssets';\nimport SearchForApplications from './searchForApplications';\nimport SearchForApplicationBoxes from './searchForApplicationBoxes';\nimport { BaseHTTPClient } from '../../baseHTTPClient';\nimport {\n  CustomTokenHeader,\n  IndexerTokenHeader,\n} from '../../urlTokenBaseHTTPClient';\n\n/**\n * The Indexer provides a REST API interface of API calls to support searching the Algorand Blockchain.\n *\n * The Indexer REST APIs retrieve the blockchain data from a PostgreSQL compatible database that must be populated.\n *\n * This database is populated using the same indexer instance or a separate instance of the indexer which must connect to the algod process of a running Algorand node to read block data.\n *\n * This node must also be an Archival node to make searching the entire blockchain possible.\n *\n * #### Relevant Information\n * [Learn more about Indexer](https://developer.algorand.org/docs/get-details/indexer/)\n *\n * [Run Indexer in Postman OAS3](https://developer.algorand.org/docs/rest-apis/restendpoints/#algod-indexer-and-kmd-rest-endpoints)\n */\nexport default class IndexerClient extends ServiceClient {\n  /**\n   * Create an IndexerClient from\n   * * either a token, baseServer, port, and optional headers\n   * * or a base client server for interoperability with external dApp wallets\n   *\n   * #### Example\n   * ```typescript\n   * const token  = \"\";\n   * const server = \"http://localhost\";\n   * const port   = 8980;\n   * const indexerClient = new algosdk.Indexer(token, server, port);\n   * ```\n   * @remarks\n   * The above configuration is for a sandbox private network.\n   * For applications on production, you are encouraged to run your own node with indexer, or use an Algorand REST API provider with a dedicated API key.\n   *\n   * @param tokenOrBaseClient - The API token for the Indexer API\n   * @param baseServer - REST endpoint\n   * @param port - Port number if specifically configured by the server\n   * @param headers - Optional headers\n   */\n  constructor(\n    tokenOrBaseClient:\n      | string\n      | IndexerTokenHeader\n      | CustomTokenHeader\n      | BaseHTTPClient,\n    baseServer = 'http://127.0.0.1',\n    port: string | number = 8080,\n    headers: Record<string, string> = {}\n  ) {\n    super('X-Indexer-API-Token', tokenOrBaseClient, baseServer, port, headers);\n  }\n\n  /**\n   * Returns the health object for the service.\n   * Returns 200 if healthy.\n   *\n   * #### Example\n   * ```typescript\n   * const health = await indexerClient.makeHealthCheck().do();\n   * ```\n   *\n   * [Response data schema details](https://developer.algorand.org/docs/rest-apis/indexer/#get-health)\n   * @category GET\n   */\n  makeHealthCheck() {\n    return new MakeHealthCheck(this.c, this.intDecoding);\n  }\n\n  /**\n   * Returns the list of accounts who hold the given asset and their balance.\n   *\n   * #### Example\n   * ```typescript\n   * const assetId = 163650;\n   * const assetBalances = await indexerClient.lookupAssetBalances(assetId).do();\n   * ```\n   *\n   * [Response data schema details](https://developer.algorand.org/docs/rest-apis/indexer/#get-v2assetsasset-idbalances)\n   * @param index - The asset ID to look up.\n   * @category GET\n   */\n  lookupAssetBalances(index: number) {\n    return new LookupAssetBalances(this.c, this.intDecoding, index);\n  }\n\n  /**\n   * Returns transactions relating to the given asset.\n   *\n   * #### Example\n   * ```typescript\n   * const assetId = 163650;\n   * const assetTxns = await indexerClient.lookupAssetTransactions(assetId).do();\n   * ```\n   *\n   * [Response data schema details](https://developer.algorand.org/docs/rest-apis/indexer/#get-v2assetsasset-idtransactions)\n   * @param index - The asset ID to look up.\n   * @category GET\n   */\n  lookupAssetTransactions(index: number) {\n    return new LookupAssetTransactions(this.c, this.intDecoding, index);\n  }\n\n  /**\n   * Returns transactions relating to the given account.\n   *\n   * #### Example\n   * ```typescript\n   * const address = \"XBYLS2E6YI6XXL5BWCAMOA4GTWHXWENZMX5UHXMRNWWUQ7BXCY5WC5TEPA\";\n   * const accountTxns = await indexerClient.lookupAccountTransactions(address).do();\n   * ```\n   *\n   * [Response data schema details](https://developer.algorand.org/docs/rest-apis/indexer/#get-v2accountsaccount-idtransactions)\n   * @param account - The address of the account.\n   * @category GET\n   */\n  lookupAccountTransactions(account: string) {\n    return new LookupAccountTransactions(this.c, this.intDecoding, account);\n  }\n\n  /**\n   * Returns the block for the passed round.\n   *\n   * #### Example\n   * ```typescript\n   * const targetBlock = 18309917;\n   * const blockInfo = await indexerClient.lookupBlock(targetBlock).do();\n   * ```\n   *\n   * [Response data schema details](https://developer.algorand.org/docs/rest-apis/indexer/#get-v2blocksround-number)\n   * @param round - The number of the round to look up.\n   * @category GET\n   */\n  lookupBlock(round: number) {\n    return new LookupBlock(this.c, this.intDecoding, round);\n  }\n\n  /**\n   * Returns information about the given transaction.\n   *\n   * #### Example\n   * ```typescript\n   * const txnId = \"MEUOC4RQJB23CQZRFRKYEI6WBO73VTTPST5A7B3S5OKBUY6LFUDA\";\n   * const txnInfo = await indexerClient.lookupTransactionByID(txnId).do();\n   * ```\n   *\n   * [Response data schema details](https://developer.algorand.org/docs/rest-apis/indexer/#get-v2transactionstxid)\n   * @param txID - The ID of the transaction to look up.\n   * @category GET\n   */\n  lookupTransactionByID(txID: string) {\n    return new LookupTransactionByID(this.c, this.intDecoding, txID);\n  }\n\n  /**\n   * Returns information about the given account.\n   *\n   * #### Example\n   * ```typescript\n   * const address = \"XBYLS2E6YI6XXL5BWCAMOA4GTWHXWENZMX5UHXMRNWWUQ7BXCY5WC5TEPA\";\n   * const accountInfo = await indexerClient.lookupAccountByID(address).do();\n   * ```\n   *\n   * [Response data schema details](https://developer.algorand.org/docs/rest-apis/indexer/#get-v2accountsaccount-id)\n   * @param account - The address of the account to look up.\n   * @category GET\n   */\n  lookupAccountByID(account: string) {\n    return new LookupAccountByID(this.c, this.intDecoding, account);\n  }\n\n  /**\n   * Returns asset about the given account.\n   *\n   * #### Example\n   * ```typescript\n   * const address = \"XBYLS2E6YI6XXL5BWCAMOA4GTWHXWENZMX5UHXMRNWWUQ7BXCY5WC5TEPA\";\n   * const accountAssets = await indexerClient.lookupAccountAssets(address).do();\n   * ```\n   *\n   * [Response data schema details](https://developer.algorand.org/docs/rest-apis/indexer/#get-v2accountsaccount-idassets)\n   * @param account - The address of the account to look up.\n   * @category GET\n   */\n  lookupAccountAssets(account: string) {\n    return new LookupAccountAssets(this.c, this.intDecoding, account);\n  }\n\n  /**\n   * Returns asset information created by the given account.\n   *\n   * #### Example\n   * ```typescript\n   * const address = \"XBYLS2E6YI6XXL5BWCAMOA4GTWHXWENZMX5UHXMRNWWUQ7BXCY5WC5TEPA\";\n   * const accountCreatedAssets = await indexerClient.lookupAccountCreatedAssets(address).do();\n   * ```\n   *\n   * [Response data schema details](https://developer.algorand.org/docs/rest-apis/indexer/#get-v2accountsaccount-idcreated-assets)\n   * @param account - The address of the account to look up.\n   * @category GET\n   */\n  lookupAccountCreatedAssets(account: string) {\n    return new LookupAccountCreatedAssets(this.c, this.intDecoding, account);\n  }\n\n  /**\n   * Returns application local state about the given account.\n   *\n   * #### Example\n   * ```typescript\n   * const address = \"XBYLS2E6YI6XXL5BWCAMOA4GTWHXWENZMX5UHXMRNWWUQ7BXCY5WC5TEPA\";\n   * const accountAppLocalStates = await indexerClient.lookupAccountAppLocalStates(address).do();\n   * ```\n   *\n   * [Response data schema details](https://developer.algorand.org/docs/rest-apis/indexer/#get-v2accountsaccount-idapps-local-state)\n   * @param account - The address of the account to look up.\n   * @category GET\n   */\n  lookupAccountAppLocalStates(account: string) {\n    return new LookupAccountAppLocalStates(this.c, this.intDecoding, account);\n  }\n\n  /**\n   * Returns application information created by the given account.\n   *\n   * #### Example\n   * ```typescript\n   * const address = \"XBYLS2E6YI6XXL5BWCAMOA4GTWHXWENZMX5UHXMRNWWUQ7BXCY5WC5TEPA\";\n   * const accountCreatedApps = await indexerClient.lookupAccountCreatedApplications(address).do();\n   * ```\n   *\n   * [Response data schema details](https://developer.algorand.org/docs/rest-apis/indexer/#get-v2accountsaccount-idcreated-applications)\n   * @param account - The address of the account to look up.\n   * @category GET\n   */\n  lookupAccountCreatedApplications(account: string) {\n    return new LookupAccountCreatedApplications(\n      this.c,\n      this.intDecoding,\n      account\n    );\n  }\n\n  /**\n   * Returns information about the passed asset.\n   *\n   * #### Example\n   * ```typescript\n   * const assetId = 163650;\n   * const assetInfo = await indexerClient.lookupAssetByID(assetId).do();\n   * ```\n   *\n   * [Response data schema details](https://developer.algorand.org/docs/rest-apis/indexer/#get-v2assetsasset-id)\n   * @param index - The ID of the asset ot look up.\n   * @category GET\n   */\n  lookupAssetByID(index: number) {\n    return new LookupAssetByID(this.c, this.intDecoding, index);\n  }\n\n  /**\n   * Returns information about the passed application.\n   *\n   * #### Example\n   * ```typescript\n   * const appId = 60553466;\n   * const appInfo = await indexerClient.lookupApplications(appId).do();\n   * ```\n   *\n   * [Response data schema details](https://developer.algorand.org/docs/rest-apis/indexer/#get-v2applicationsapplication-id)\n   * @param index - The ID of the application to look up.\n   * @category GET\n   */\n  lookupApplications(index: number) {\n    return new LookupApplications(this.c, this.intDecoding, index);\n  }\n\n  /**\n   * Returns log messages generated by the passed in application.\n   *\n   * #### Example\n   * ```typescript\n   * const appId = 60553466;\n   * const appLogs = await indexerClient.lookupApplicationLogs(appId).do();\n   * ```\n   *\n   * [Response data schema details](https://developer.algorand.org/docs/rest-apis/indexer/#get-v2applicationsapplication-idlogs)\n   * @param appID - The ID of the application which generated the logs.\n   * @category GET\n   */\n  lookupApplicationLogs(appID: number) {\n    return new LookupApplicationLogs(this.c, this.intDecoding, appID);\n  }\n\n  /**\n   * Returns information about indexed accounts.\n   *\n   * #### Example\n   * ```typescript\n   * const accounts = await indexerClient.searchAccounts().do();\n   * ```\n   *\n   * [Response data schema details](https://developer.algorand.org/docs/rest-apis/indexer/#get-v2accounts)\n   * @category GET\n   */\n  searchAccounts() {\n    return new SearchAccounts(this.c, this.intDecoding);\n  }\n\n  /**\n   * Returns information about indexed transactions.\n   *\n   * #### Example\n   * ```typescript\n   * const txns = await indexerClient.searchForTransactions().do();\n   * ```\n   *\n   * [Response data schema details](https://developer.algorand.org/docs/rest-apis/indexer/#get-v2transactions)\n   * @category GET\n   */\n  searchForTransactions() {\n    return new SearchForTransactions(this.c, this.intDecoding);\n  }\n\n  /**\n   * Returns information about indexed assets.\n   *\n   * #### Example\n   * ```typescript\n   * const assets = await indexerClient.searchForAssets().do();\n   * ```\n   *\n   * [Response data schema details](https://developer.algorand.org/docs/rest-apis/indexer/#get-v2assets)\n   * @category GET\n   */\n  searchForAssets() {\n    return new SearchForAssets(this.c, this.intDecoding);\n  }\n\n  /**\n   * Returns information about indexed applications.\n   *\n   * #### Example\n   * ```typescript\n   * const apps = await indexerClient.searchForApplications().do();\n   * ```\n   *\n   * [Response data schema details](https://developer.algorand.org/docs/rest-apis/indexer/#get-v2applications)\n   * @category GET\n   */\n  searchForApplications() {\n    return new SearchForApplications(this.c, this.intDecoding);\n  }\n\n  /**\n   * Returns information about indexed application boxes.\n   *\n   * #### Example\n   * ```typescript\n   * const maxResults = 20;\n   * const appID = 1234;\n   *\n   * const responsePage1 = await indexerClient\n   *        .searchForApplicationBoxes(appID)\n   *        .limit(maxResults)\n   *        .do();\n   * const boxNamesPage1 = responsePage1.boxes.map(box => box.name);\n   *\n   * const responsePage2 = await indexerClient\n   *        .searchForApplicationBoxes(appID)\n   *        .limit(maxResults)\n   *        .nextToken(responsePage1.nextToken)\n   *        .do();\n   * const boxNamesPage2 = responsePage2.boxes.map(box => box.name);\n   * ```\n   *\n   * [Response data schema details](https://developer.algorand.org/docs/rest-apis/indexer/#get-v2applicationsapplication-idboxes)\n   * @param appID - The ID of the application with boxes.\n   * @category GET\n   */\n  searchForApplicationBoxes(appID: number) {\n    return new SearchForApplicationBoxes(this.c, this.intDecoding, appID);\n  }\n\n  /**\n   * Returns information about the application box given its name.\n   *\n   * #### Example\n   * ```typescript\n   * const boxName = Buffer.from(\"foo\");\n   * const boxResponse = await indexerClient\n   *        .LookupApplicationBoxByIDandName(1234, boxName)\n   *        .do();\n   * const boxValue = boxResponse.value;\n   * ```\n   *\n   * [Response data schema details](https://developer.algorand.org/docs/rest-apis/indexer/#get-v2applicationsapplication-idbox)\n   * @param appID - The ID of the application with boxes.\n   * @category GET\n   */\n  lookupApplicationBoxByIDandName(appID: number, boxName: Uint8Array) {\n    return new LookupApplicationBoxByIDandName(\n      this.c,\n      this.intDecoding,\n      appID,\n      boxName\n    );\n  }\n}\n","import Algodv2 from './client/v2/algod/algod';\n\n/**\n * Wait until a transaction has been confirmed or rejected by the network, or\n * until 'waitRounds' number of rounds have passed.\n * @param client - An Algodv2 client\n * @param txid - The ID of the transaction to wait for.\n * @param waitRounds - The maximum number of rounds to wait for.\n * @returns A promise that, upon success, will resolve to the output of the\n *   `pendingTransactionInformation` call for the confirmed transaction.\n */\nexport async function waitForConfirmation(\n  client: Algodv2,\n  txid: string,\n  waitRounds: number\n): Promise<Record<string, any>> {\n  // Wait until the transaction is confirmed or rejected, or until 'waitRounds'\n  // number of rounds have passed.\n\n  const status = await client.status().do();\n  if (typeof status === 'undefined') {\n    throw new Error('Unable to get node status');\n  }\n  const startRound = status['last-round'] + 1;\n  let currentRound = startRound;\n\n  /* eslint-disable no-await-in-loop */\n  while (currentRound < startRound + waitRounds) {\n    let poolError = false;\n    try {\n      const pendingInfo = await client.pendingTransactionInformation(txid).do();\n\n      if (pendingInfo['confirmed-round']) {\n        // Got the completed Transaction\n        return pendingInfo;\n      }\n\n      if (pendingInfo['pool-error']) {\n        // If there was a pool error, then the transaction has been rejected\n        poolError = true;\n        throw new Error(`Transaction Rejected: ${pendingInfo['pool-error']}`);\n      }\n    } catch (err) {\n      // Ignore errors from PendingTransactionInformation, since it may return 404 if the algod\n      // instance is behind a load balancer and the request goes to a different algod than the\n      // one we submitted the transaction to\n      if (poolError) {\n        // Rethrow error only if it's because the transaction was rejected\n        throw err;\n      }\n    }\n\n    await client.statusAfterBlock(currentRound).do();\n    currentRound += 1;\n  }\n  /* eslint-enable no-await-in-loop */\n  throw new Error(`Transaction not confirmed after ${waitRounds} rounds`);\n}\n","import { Buffer } from 'buffer';\n\n/**\n * bigIntToBytes converts a BigInt to a big-endian Uint8Array for encoding.\n * @param bi - The bigint to convert.\n * @param size - The size of the resulting byte array.\n * @returns A byte array containing the big-endian encoding of the input bigint\n */\nexport function bigIntToBytes(bi: bigint | number, size: number) {\n  let hex = bi.toString(16);\n  // Pad the hex with zeros so it matches the size in bytes\n  if (hex.length !== size * 2) {\n    hex = hex.padStart(size * 2, '0');\n  }\n  const byteArray = new Uint8Array(hex.length / 2);\n  for (let i = 0, j = 0; i < hex.length / 2; i++, j += 2) {\n    byteArray[i] = parseInt(hex.slice(j, j + 2), 16);\n  }\n  return byteArray;\n}\n\n/**\n * bytesToBigInt produces a bigint from a binary representation.\n *\n * @param bytes - The Uint8Array to convert.\n * @returns The bigint that was encoded in the input data.\n */\nexport function bytesToBigInt(bytes: Uint8Array) {\n  let res = BigInt(0);\n  const buf = Buffer.from(bytes);\n  for (let i = 0; i < bytes.length; i++) {\n    res = BigInt(Number(buf.readUIntBE(i, 1))) + res * BigInt(256);\n  }\n  return res;\n}\n","import * as nacl from './nacl/naclWrappers';\nimport * as address from './encoding/address';\nimport Account from './types/account';\n\n/**\n * generateAccount returns a new Algorand address and its corresponding secret key\n */\nexport default function generateAccount(): Account {\n  const keys = nacl.keyPair();\n  const encodedPk = address.encodeAddress(keys.publicKey);\n  return { addr: encodedPk, sk: keys.secretKey };\n}\n","const english = [\n  'abandon',\n  'ability',\n  'able',\n  'about',\n  'above',\n  'absent',\n  'absorb',\n  'abstract',\n  'absurd',\n  'abuse',\n  'access',\n  'accident',\n  'account',\n  'accuse',\n  'achieve',\n  'acid',\n  'acoustic',\n  'acquire',\n  'across',\n  'act',\n  'action',\n  'actor',\n  'actress',\n  'actual',\n  'adapt',\n  'add',\n  'addict',\n  'address',\n  'adjust',\n  'admit',\n  'adult',\n  'advance',\n  'advice',\n  'aerobic',\n  'affair',\n  'afford',\n  'afraid',\n  'again',\n  'age',\n  'agent',\n  'agree',\n  'ahead',\n  'aim',\n  'air',\n  'airport',\n  'aisle',\n  'alarm',\n  'album',\n  'alcohol',\n  'alert',\n  'alien',\n  'all',\n  'alley',\n  'allow',\n  'almost',\n  'alone',\n  'alpha',\n  'already',\n  'also',\n  'alter',\n  'always',\n  'amateur',\n  'amazing',\n  'among',\n  'amount',\n  'amused',\n  'analyst',\n  'anchor',\n  'ancient',\n  'anger',\n  'angle',\n  'angry',\n  'animal',\n  'ankle',\n  'announce',\n  'annual',\n  'another',\n  'answer',\n  'antenna',\n  'antique',\n  'anxiety',\n  'any',\n  'apart',\n  'apology',\n  'appear',\n  'apple',\n  'approve',\n  'april',\n  'arch',\n  'arctic',\n  'area',\n  'arena',\n  'argue',\n  'arm',\n  'armed',\n  'armor',\n  'army',\n  'around',\n  'arrange',\n  'arrest',\n  'arrive',\n  'arrow',\n  'art',\n  'artefact',\n  'artist',\n  'artwork',\n  'ask',\n  'aspect',\n  'assault',\n  'asset',\n  'assist',\n  'assume',\n  'asthma',\n  'athlete',\n  'atom',\n  'attack',\n  'attend',\n  'attitude',\n  'attract',\n  'auction',\n  'audit',\n  'august',\n  'aunt',\n  'author',\n  'auto',\n  'autumn',\n  'average',\n  'avocado',\n  'avoid',\n  'awake',\n  'aware',\n  'away',\n  'awesome',\n  'awful',\n  'awkward',\n  'axis',\n  'baby',\n  'bachelor',\n  'bacon',\n  'badge',\n  'bag',\n  'balance',\n  'balcony',\n  'ball',\n  'bamboo',\n  'banana',\n  'banner',\n  'bar',\n  'barely',\n  'bargain',\n  'barrel',\n  'base',\n  'basic',\n  'basket',\n  'battle',\n  'beach',\n  'bean',\n  'beauty',\n  'because',\n  'become',\n  'beef',\n  'before',\n  'begin',\n  'behave',\n  'behind',\n  'believe',\n  'below',\n  'belt',\n  'bench',\n  'benefit',\n  'best',\n  'betray',\n  'better',\n  'between',\n  'beyond',\n  'bicycle',\n  'bid',\n  'bike',\n  'bind',\n  'biology',\n  'bird',\n  'birth',\n  'bitter',\n  'black',\n  'blade',\n  'blame',\n  'blanket',\n  'blast',\n  'bleak',\n  'bless',\n  'blind',\n  'blood',\n  'blossom',\n  'blouse',\n  'blue',\n  'blur',\n  'blush',\n  'board',\n  'boat',\n  'body',\n  'boil',\n  'bomb',\n  'bone',\n  'bonus',\n  'book',\n  'boost',\n  'border',\n  'boring',\n  'borrow',\n  'boss',\n  'bottom',\n  'bounce',\n  'box',\n  'boy',\n  'bracket',\n  'brain',\n  'brand',\n  'brass',\n  'brave',\n  'bread',\n  'breeze',\n  'brick',\n  'bridge',\n  'brief',\n  'bright',\n  'bring',\n  'brisk',\n  'broccoli',\n  'broken',\n  'bronze',\n  'broom',\n  'brother',\n  'brown',\n  'brush',\n  'bubble',\n  'buddy',\n  'budget',\n  'buffalo',\n  'build',\n  'bulb',\n  'bulk',\n  'bullet',\n  'bundle',\n  'bunker',\n  'burden',\n  'burger',\n  'burst',\n  'bus',\n  'business',\n  'busy',\n  'butter',\n  'buyer',\n  'buzz',\n  'cabbage',\n  'cabin',\n  'cable',\n  'cactus',\n  'cage',\n  'cake',\n  'call',\n  'calm',\n  'camera',\n  'camp',\n  'can',\n  'canal',\n  'cancel',\n  'candy',\n  'cannon',\n  'canoe',\n  'canvas',\n  'canyon',\n  'capable',\n  'capital',\n  'captain',\n  'car',\n  'carbon',\n  'card',\n  'cargo',\n  'carpet',\n  'carry',\n  'cart',\n  'case',\n  'cash',\n  'casino',\n  'castle',\n  'casual',\n  'cat',\n  'catalog',\n  'catch',\n  'category',\n  'cattle',\n  'caught',\n  'cause',\n  'caution',\n  'cave',\n  'ceiling',\n  'celery',\n  'cement',\n  'census',\n  'century',\n  'cereal',\n  'certain',\n  'chair',\n  'chalk',\n  'champion',\n  'change',\n  'chaos',\n  'chapter',\n  'charge',\n  'chase',\n  'chat',\n  'cheap',\n  'check',\n  'cheese',\n  'chef',\n  'cherry',\n  'chest',\n  'chicken',\n  'chief',\n  'child',\n  'chimney',\n  'choice',\n  'choose',\n  'chronic',\n  'chuckle',\n  'chunk',\n  'churn',\n  'cigar',\n  'cinnamon',\n  'circle',\n  'citizen',\n  'city',\n  'civil',\n  'claim',\n  'clap',\n  'clarify',\n  'claw',\n  'clay',\n  'clean',\n  'clerk',\n  'clever',\n  'click',\n  'client',\n  'cliff',\n  'climb',\n  'clinic',\n  'clip',\n  'clock',\n  'clog',\n  'close',\n  'cloth',\n  'cloud',\n  'clown',\n  'club',\n  'clump',\n  'cluster',\n  'clutch',\n  'coach',\n  'coast',\n  'coconut',\n  'code',\n  'coffee',\n  'coil',\n  'coin',\n  'collect',\n  'color',\n  'column',\n  'combine',\n  'come',\n  'comfort',\n  'comic',\n  'common',\n  'company',\n  'concert',\n  'conduct',\n  'confirm',\n  'congress',\n  'connect',\n  'consider',\n  'control',\n  'convince',\n  'cook',\n  'cool',\n  'copper',\n  'copy',\n  'coral',\n  'core',\n  'corn',\n  'correct',\n  'cost',\n  'cotton',\n  'couch',\n  'country',\n  'couple',\n  'course',\n  'cousin',\n  'cover',\n  'coyote',\n  'crack',\n  'cradle',\n  'craft',\n  'cram',\n  'crane',\n  'crash',\n  'crater',\n  'crawl',\n  'crazy',\n  'cream',\n  'credit',\n  'creek',\n  'crew',\n  'cricket',\n  'crime',\n  'crisp',\n  'critic',\n  'crop',\n  'cross',\n  'crouch',\n  'crowd',\n  'crucial',\n  'cruel',\n  'cruise',\n  'crumble',\n  'crunch',\n  'crush',\n  'cry',\n  'crystal',\n  'cube',\n  'culture',\n  'cup',\n  'cupboard',\n  'curious',\n  'current',\n  'curtain',\n  'curve',\n  'cushion',\n  'custom',\n  'cute',\n  'cycle',\n  'dad',\n  'damage',\n  'damp',\n  'dance',\n  'danger',\n  'daring',\n  'dash',\n  'daughter',\n  'dawn',\n  'day',\n  'deal',\n  'debate',\n  'debris',\n  'decade',\n  'december',\n  'decide',\n  'decline',\n  'decorate',\n  'decrease',\n  'deer',\n  'defense',\n  'define',\n  'defy',\n  'degree',\n  'delay',\n  'deliver',\n  'demand',\n  'demise',\n  'denial',\n  'dentist',\n  'deny',\n  'depart',\n  'depend',\n  'deposit',\n  'depth',\n  'deputy',\n  'derive',\n  'describe',\n  'desert',\n  'design',\n  'desk',\n  'despair',\n  'destroy',\n  'detail',\n  'detect',\n  'develop',\n  'device',\n  'devote',\n  'diagram',\n  'dial',\n  'diamond',\n  'diary',\n  'dice',\n  'diesel',\n  'diet',\n  'differ',\n  'digital',\n  'dignity',\n  'dilemma',\n  'dinner',\n  'dinosaur',\n  'direct',\n  'dirt',\n  'disagree',\n  'discover',\n  'disease',\n  'dish',\n  'dismiss',\n  'disorder',\n  'display',\n  'distance',\n  'divert',\n  'divide',\n  'divorce',\n  'dizzy',\n  'doctor',\n  'document',\n  'dog',\n  'doll',\n  'dolphin',\n  'domain',\n  'donate',\n  'donkey',\n  'donor',\n  'door',\n  'dose',\n  'double',\n  'dove',\n  'draft',\n  'dragon',\n  'drama',\n  'drastic',\n  'draw',\n  'dream',\n  'dress',\n  'drift',\n  'drill',\n  'drink',\n  'drip',\n  'drive',\n  'drop',\n  'drum',\n  'dry',\n  'duck',\n  'dumb',\n  'dune',\n  'during',\n  'dust',\n  'dutch',\n  'duty',\n  'dwarf',\n  'dynamic',\n  'eager',\n  'eagle',\n  'early',\n  'earn',\n  'earth',\n  'easily',\n  'east',\n  'easy',\n  'echo',\n  'ecology',\n  'economy',\n  'edge',\n  'edit',\n  'educate',\n  'effort',\n  'egg',\n  'eight',\n  'either',\n  'elbow',\n  'elder',\n  'electric',\n  'elegant',\n  'element',\n  'elephant',\n  'elevator',\n  'elite',\n  'else',\n  'embark',\n  'embody',\n  'embrace',\n  'emerge',\n  'emotion',\n  'employ',\n  'empower',\n  'empty',\n  'enable',\n  'enact',\n  'end',\n  'endless',\n  'endorse',\n  'enemy',\n  'energy',\n  'enforce',\n  'engage',\n  'engine',\n  'enhance',\n  'enjoy',\n  'enlist',\n  'enough',\n  'enrich',\n  'enroll',\n  'ensure',\n  'enter',\n  'entire',\n  'entry',\n  'envelope',\n  'episode',\n  'equal',\n  'equip',\n  'era',\n  'erase',\n  'erode',\n  'erosion',\n  'error',\n  'erupt',\n  'escape',\n  'essay',\n  'essence',\n  'estate',\n  'eternal',\n  'ethics',\n  'evidence',\n  'evil',\n  'evoke',\n  'evolve',\n  'exact',\n  'example',\n  'excess',\n  'exchange',\n  'excite',\n  'exclude',\n  'excuse',\n  'execute',\n  'exercise',\n  'exhaust',\n  'exhibit',\n  'exile',\n  'exist',\n  'exit',\n  'exotic',\n  'expand',\n  'expect',\n  'expire',\n  'explain',\n  'expose',\n  'express',\n  'extend',\n  'extra',\n  'eye',\n  'eyebrow',\n  'fabric',\n  'face',\n  'faculty',\n  'fade',\n  'faint',\n  'faith',\n  'fall',\n  'false',\n  'fame',\n  'family',\n  'famous',\n  'fan',\n  'fancy',\n  'fantasy',\n  'farm',\n  'fashion',\n  'fat',\n  'fatal',\n  'father',\n  'fatigue',\n  'fault',\n  'favorite',\n  'feature',\n  'february',\n  'federal',\n  'fee',\n  'feed',\n  'feel',\n  'female',\n  'fence',\n  'festival',\n  'fetch',\n  'fever',\n  'few',\n  'fiber',\n  'fiction',\n  'field',\n  'figure',\n  'file',\n  'film',\n  'filter',\n  'final',\n  'find',\n  'fine',\n  'finger',\n  'finish',\n  'fire',\n  'firm',\n  'first',\n  'fiscal',\n  'fish',\n  'fit',\n  'fitness',\n  'fix',\n  'flag',\n  'flame',\n  'flash',\n  'flat',\n  'flavor',\n  'flee',\n  'flight',\n  'flip',\n  'float',\n  'flock',\n  'floor',\n  'flower',\n  'fluid',\n  'flush',\n  'fly',\n  'foam',\n  'focus',\n  'fog',\n  'foil',\n  'fold',\n  'follow',\n  'food',\n  'foot',\n  'force',\n  'forest',\n  'forget',\n  'fork',\n  'fortune',\n  'forum',\n  'forward',\n  'fossil',\n  'foster',\n  'found',\n  'fox',\n  'fragile',\n  'frame',\n  'frequent',\n  'fresh',\n  'friend',\n  'fringe',\n  'frog',\n  'front',\n  'frost',\n  'frown',\n  'frozen',\n  'fruit',\n  'fuel',\n  'fun',\n  'funny',\n  'furnace',\n  'fury',\n  'future',\n  'gadget',\n  'gain',\n  'galaxy',\n  'gallery',\n  'game',\n  'gap',\n  'garage',\n  'garbage',\n  'garden',\n  'garlic',\n  'garment',\n  'gas',\n  'gasp',\n  'gate',\n  'gather',\n  'gauge',\n  'gaze',\n  'general',\n  'genius',\n  'genre',\n  'gentle',\n  'genuine',\n  'gesture',\n  'ghost',\n  'giant',\n  'gift',\n  'giggle',\n  'ginger',\n  'giraffe',\n  'girl',\n  'give',\n  'glad',\n  'glance',\n  'glare',\n  'glass',\n  'glide',\n  'glimpse',\n  'globe',\n  'gloom',\n  'glory',\n  'glove',\n  'glow',\n  'glue',\n  'goat',\n  'goddess',\n  'gold',\n  'good',\n  'goose',\n  'gorilla',\n  'gospel',\n  'gossip',\n  'govern',\n  'gown',\n  'grab',\n  'grace',\n  'grain',\n  'grant',\n  'grape',\n  'grass',\n  'gravity',\n  'great',\n  'green',\n  'grid',\n  'grief',\n  'grit',\n  'grocery',\n  'group',\n  'grow',\n  'grunt',\n  'guard',\n  'guess',\n  'guide',\n  'guilt',\n  'guitar',\n  'gun',\n  'gym',\n  'habit',\n  'hair',\n  'half',\n  'hammer',\n  'hamster',\n  'hand',\n  'happy',\n  'harbor',\n  'hard',\n  'harsh',\n  'harvest',\n  'hat',\n  'have',\n  'hawk',\n  'hazard',\n  'head',\n  'health',\n  'heart',\n  'heavy',\n  'hedgehog',\n  'height',\n  'hello',\n  'helmet',\n  'help',\n  'hen',\n  'hero',\n  'hidden',\n  'high',\n  'hill',\n  'hint',\n  'hip',\n  'hire',\n  'history',\n  'hobby',\n  'hockey',\n  'hold',\n  'hole',\n  'holiday',\n  'hollow',\n  'home',\n  'honey',\n  'hood',\n  'hope',\n  'horn',\n  'horror',\n  'horse',\n  'hospital',\n  'host',\n  'hotel',\n  'hour',\n  'hover',\n  'hub',\n  'huge',\n  'human',\n  'humble',\n  'humor',\n  'hundred',\n  'hungry',\n  'hunt',\n  'hurdle',\n  'hurry',\n  'hurt',\n  'husband',\n  'hybrid',\n  'ice',\n  'icon',\n  'idea',\n  'identify',\n  'idle',\n  'ignore',\n  'ill',\n  'illegal',\n  'illness',\n  'image',\n  'imitate',\n  'immense',\n  'immune',\n  'impact',\n  'impose',\n  'improve',\n  'impulse',\n  'inch',\n  'include',\n  'income',\n  'increase',\n  'index',\n  'indicate',\n  'indoor',\n  'industry',\n  'infant',\n  'inflict',\n  'inform',\n  'inhale',\n  'inherit',\n  'initial',\n  'inject',\n  'injury',\n  'inmate',\n  'inner',\n  'innocent',\n  'input',\n  'inquiry',\n  'insane',\n  'insect',\n  'inside',\n  'inspire',\n  'install',\n  'intact',\n  'interest',\n  'into',\n  'invest',\n  'invite',\n  'involve',\n  'iron',\n  'island',\n  'isolate',\n  'issue',\n  'item',\n  'ivory',\n  'jacket',\n  'jaguar',\n  'jar',\n  'jazz',\n  'jealous',\n  'jeans',\n  'jelly',\n  'jewel',\n  'job',\n  'join',\n  'joke',\n  'journey',\n  'joy',\n  'judge',\n  'juice',\n  'jump',\n  'jungle',\n  'junior',\n  'junk',\n  'just',\n  'kangaroo',\n  'keen',\n  'keep',\n  'ketchup',\n  'key',\n  'kick',\n  'kid',\n  'kidney',\n  'kind',\n  'kingdom',\n  'kiss',\n  'kit',\n  'kitchen',\n  'kite',\n  'kitten',\n  'kiwi',\n  'knee',\n  'knife',\n  'knock',\n  'know',\n  'lab',\n  'label',\n  'labor',\n  'ladder',\n  'lady',\n  'lake',\n  'lamp',\n  'language',\n  'laptop',\n  'large',\n  'later',\n  'latin',\n  'laugh',\n  'laundry',\n  'lava',\n  'law',\n  'lawn',\n  'lawsuit',\n  'layer',\n  'lazy',\n  'leader',\n  'leaf',\n  'learn',\n  'leave',\n  'lecture',\n  'left',\n  'leg',\n  'legal',\n  'legend',\n  'leisure',\n  'lemon',\n  'lend',\n  'length',\n  'lens',\n  'leopard',\n  'lesson',\n  'letter',\n  'level',\n  'liar',\n  'liberty',\n  'library',\n  'license',\n  'life',\n  'lift',\n  'light',\n  'like',\n  'limb',\n  'limit',\n  'link',\n  'lion',\n  'liquid',\n  'list',\n  'little',\n  'live',\n  'lizard',\n  'load',\n  'loan',\n  'lobster',\n  'local',\n  'lock',\n  'logic',\n  'lonely',\n  'long',\n  'loop',\n  'lottery',\n  'loud',\n  'lounge',\n  'love',\n  'loyal',\n  'lucky',\n  'luggage',\n  'lumber',\n  'lunar',\n  'lunch',\n  'luxury',\n  'lyrics',\n  'machine',\n  'mad',\n  'magic',\n  'magnet',\n  'maid',\n  'mail',\n  'main',\n  'major',\n  'make',\n  'mammal',\n  'man',\n  'manage',\n  'mandate',\n  'mango',\n  'mansion',\n  'manual',\n  'maple',\n  'marble',\n  'march',\n  'margin',\n  'marine',\n  'market',\n  'marriage',\n  'mask',\n  'mass',\n  'master',\n  'match',\n  'material',\n  'math',\n  'matrix',\n  'matter',\n  'maximum',\n  'maze',\n  'meadow',\n  'mean',\n  'measure',\n  'meat',\n  'mechanic',\n  'medal',\n  'media',\n  'melody',\n  'melt',\n  'member',\n  'memory',\n  'mention',\n  'menu',\n  'mercy',\n  'merge',\n  'merit',\n  'merry',\n  'mesh',\n  'message',\n  'metal',\n  'method',\n  'middle',\n  'midnight',\n  'milk',\n  'million',\n  'mimic',\n  'mind',\n  'minimum',\n  'minor',\n  'minute',\n  'miracle',\n  'mirror',\n  'misery',\n  'miss',\n  'mistake',\n  'mix',\n  'mixed',\n  'mixture',\n  'mobile',\n  'model',\n  'modify',\n  'mom',\n  'moment',\n  'monitor',\n  'monkey',\n  'monster',\n  'month',\n  'moon',\n  'moral',\n  'more',\n  'morning',\n  'mosquito',\n  'mother',\n  'motion',\n  'motor',\n  'mountain',\n  'mouse',\n  'move',\n  'movie',\n  'much',\n  'muffin',\n  'mule',\n  'multiply',\n  'muscle',\n  'museum',\n  'mushroom',\n  'music',\n  'must',\n  'mutual',\n  'myself',\n  'mystery',\n  'myth',\n  'naive',\n  'name',\n  'napkin',\n  'narrow',\n  'nasty',\n  'nation',\n  'nature',\n  'near',\n  'neck',\n  'need',\n  'negative',\n  'neglect',\n  'neither',\n  'nephew',\n  'nerve',\n  'nest',\n  'net',\n  'network',\n  'neutral',\n  'never',\n  'news',\n  'next',\n  'nice',\n  'night',\n  'noble',\n  'noise',\n  'nominee',\n  'noodle',\n  'normal',\n  'north',\n  'nose',\n  'notable',\n  'note',\n  'nothing',\n  'notice',\n  'novel',\n  'now',\n  'nuclear',\n  'number',\n  'nurse',\n  'nut',\n  'oak',\n  'obey',\n  'object',\n  'oblige',\n  'obscure',\n  'observe',\n  'obtain',\n  'obvious',\n  'occur',\n  'ocean',\n  'october',\n  'odor',\n  'off',\n  'offer',\n  'office',\n  'often',\n  'oil',\n  'okay',\n  'old',\n  'olive',\n  'olympic',\n  'omit',\n  'once',\n  'one',\n  'onion',\n  'online',\n  'only',\n  'open',\n  'opera',\n  'opinion',\n  'oppose',\n  'option',\n  'orange',\n  'orbit',\n  'orchard',\n  'order',\n  'ordinary',\n  'organ',\n  'orient',\n  'original',\n  'orphan',\n  'ostrich',\n  'other',\n  'outdoor',\n  'outer',\n  'output',\n  'outside',\n  'oval',\n  'oven',\n  'over',\n  'own',\n  'owner',\n  'oxygen',\n  'oyster',\n  'ozone',\n  'pact',\n  'paddle',\n  'page',\n  'pair',\n  'palace',\n  'palm',\n  'panda',\n  'panel',\n  'panic',\n  'panther',\n  'paper',\n  'parade',\n  'parent',\n  'park',\n  'parrot',\n  'party',\n  'pass',\n  'patch',\n  'path',\n  'patient',\n  'patrol',\n  'pattern',\n  'pause',\n  'pave',\n  'payment',\n  'peace',\n  'peanut',\n  'pear',\n  'peasant',\n  'pelican',\n  'pen',\n  'penalty',\n  'pencil',\n  'people',\n  'pepper',\n  'perfect',\n  'permit',\n  'person',\n  'pet',\n  'phone',\n  'photo',\n  'phrase',\n  'physical',\n  'piano',\n  'picnic',\n  'picture',\n  'piece',\n  'pig',\n  'pigeon',\n  'pill',\n  'pilot',\n  'pink',\n  'pioneer',\n  'pipe',\n  'pistol',\n  'pitch',\n  'pizza',\n  'place',\n  'planet',\n  'plastic',\n  'plate',\n  'play',\n  'please',\n  'pledge',\n  'pluck',\n  'plug',\n  'plunge',\n  'poem',\n  'poet',\n  'point',\n  'polar',\n  'pole',\n  'police',\n  'pond',\n  'pony',\n  'pool',\n  'popular',\n  'portion',\n  'position',\n  'possible',\n  'post',\n  'potato',\n  'pottery',\n  'poverty',\n  'powder',\n  'power',\n  'practice',\n  'praise',\n  'predict',\n  'prefer',\n  'prepare',\n  'present',\n  'pretty',\n  'prevent',\n  'price',\n  'pride',\n  'primary',\n  'print',\n  'priority',\n  'prison',\n  'private',\n  'prize',\n  'problem',\n  'process',\n  'produce',\n  'profit',\n  'program',\n  'project',\n  'promote',\n  'proof',\n  'property',\n  'prosper',\n  'protect',\n  'proud',\n  'provide',\n  'public',\n  'pudding',\n  'pull',\n  'pulp',\n  'pulse',\n  'pumpkin',\n  'punch',\n  'pupil',\n  'puppy',\n  'purchase',\n  'purity',\n  'purpose',\n  'purse',\n  'push',\n  'put',\n  'puzzle',\n  'pyramid',\n  'quality',\n  'quantum',\n  'quarter',\n  'question',\n  'quick',\n  'quit',\n  'quiz',\n  'quote',\n  'rabbit',\n  'raccoon',\n  'race',\n  'rack',\n  'radar',\n  'radio',\n  'rail',\n  'rain',\n  'raise',\n  'rally',\n  'ramp',\n  'ranch',\n  'random',\n  'range',\n  'rapid',\n  'rare',\n  'rate',\n  'rather',\n  'raven',\n  'raw',\n  'razor',\n  'ready',\n  'real',\n  'reason',\n  'rebel',\n  'rebuild',\n  'recall',\n  'receive',\n  'recipe',\n  'record',\n  'recycle',\n  'reduce',\n  'reflect',\n  'reform',\n  'refuse',\n  'region',\n  'regret',\n  'regular',\n  'reject',\n  'relax',\n  'release',\n  'relief',\n  'rely',\n  'remain',\n  'remember',\n  'remind',\n  'remove',\n  'render',\n  'renew',\n  'rent',\n  'reopen',\n  'repair',\n  'repeat',\n  'replace',\n  'report',\n  'require',\n  'rescue',\n  'resemble',\n  'resist',\n  'resource',\n  'response',\n  'result',\n  'retire',\n  'retreat',\n  'return',\n  'reunion',\n  'reveal',\n  'review',\n  'reward',\n  'rhythm',\n  'rib',\n  'ribbon',\n  'rice',\n  'rich',\n  'ride',\n  'ridge',\n  'rifle',\n  'right',\n  'rigid',\n  'ring',\n  'riot',\n  'ripple',\n  'risk',\n  'ritual',\n  'rival',\n  'river',\n  'road',\n  'roast',\n  'robot',\n  'robust',\n  'rocket',\n  'romance',\n  'roof',\n  'rookie',\n  'room',\n  'rose',\n  'rotate',\n  'rough',\n  'round',\n  'route',\n  'royal',\n  'rubber',\n  'rude',\n  'rug',\n  'rule',\n  'run',\n  'runway',\n  'rural',\n  'sad',\n  'saddle',\n  'sadness',\n  'safe',\n  'sail',\n  'salad',\n  'salmon',\n  'salon',\n  'salt',\n  'salute',\n  'same',\n  'sample',\n  'sand',\n  'satisfy',\n  'satoshi',\n  'sauce',\n  'sausage',\n  'save',\n  'say',\n  'scale',\n  'scan',\n  'scare',\n  'scatter',\n  'scene',\n  'scheme',\n  'school',\n  'science',\n  'scissors',\n  'scorpion',\n  'scout',\n  'scrap',\n  'screen',\n  'script',\n  'scrub',\n  'sea',\n  'search',\n  'season',\n  'seat',\n  'second',\n  'secret',\n  'section',\n  'security',\n  'seed',\n  'seek',\n  'segment',\n  'select',\n  'sell',\n  'seminar',\n  'senior',\n  'sense',\n  'sentence',\n  'series',\n  'service',\n  'session',\n  'settle',\n  'setup',\n  'seven',\n  'shadow',\n  'shaft',\n  'shallow',\n  'share',\n  'shed',\n  'shell',\n  'sheriff',\n  'shield',\n  'shift',\n  'shine',\n  'ship',\n  'shiver',\n  'shock',\n  'shoe',\n  'shoot',\n  'shop',\n  'short',\n  'shoulder',\n  'shove',\n  'shrimp',\n  'shrug',\n  'shuffle',\n  'shy',\n  'sibling',\n  'sick',\n  'side',\n  'siege',\n  'sight',\n  'sign',\n  'silent',\n  'silk',\n  'silly',\n  'silver',\n  'similar',\n  'simple',\n  'since',\n  'sing',\n  'siren',\n  'sister',\n  'situate',\n  'six',\n  'size',\n  'skate',\n  'sketch',\n  'ski',\n  'skill',\n  'skin',\n  'skirt',\n  'skull',\n  'slab',\n  'slam',\n  'sleep',\n  'slender',\n  'slice',\n  'slide',\n  'slight',\n  'slim',\n  'slogan',\n  'slot',\n  'slow',\n  'slush',\n  'small',\n  'smart',\n  'smile',\n  'smoke',\n  'smooth',\n  'snack',\n  'snake',\n  'snap',\n  'sniff',\n  'snow',\n  'soap',\n  'soccer',\n  'social',\n  'sock',\n  'soda',\n  'soft',\n  'solar',\n  'soldier',\n  'solid',\n  'solution',\n  'solve',\n  'someone',\n  'song',\n  'soon',\n  'sorry',\n  'sort',\n  'soul',\n  'sound',\n  'soup',\n  'source',\n  'south',\n  'space',\n  'spare',\n  'spatial',\n  'spawn',\n  'speak',\n  'special',\n  'speed',\n  'spell',\n  'spend',\n  'sphere',\n  'spice',\n  'spider',\n  'spike',\n  'spin',\n  'spirit',\n  'split',\n  'spoil',\n  'sponsor',\n  'spoon',\n  'sport',\n  'spot',\n  'spray',\n  'spread',\n  'spring',\n  'spy',\n  'square',\n  'squeeze',\n  'squirrel',\n  'stable',\n  'stadium',\n  'staff',\n  'stage',\n  'stairs',\n  'stamp',\n  'stand',\n  'start',\n  'state',\n  'stay',\n  'steak',\n  'steel',\n  'stem',\n  'step',\n  'stereo',\n  'stick',\n  'still',\n  'sting',\n  'stock',\n  'stomach',\n  'stone',\n  'stool',\n  'story',\n  'stove',\n  'strategy',\n  'street',\n  'strike',\n  'strong',\n  'struggle',\n  'student',\n  'stuff',\n  'stumble',\n  'style',\n  'subject',\n  'submit',\n  'subway',\n  'success',\n  'such',\n  'sudden',\n  'suffer',\n  'sugar',\n  'suggest',\n  'suit',\n  'summer',\n  'sun',\n  'sunny',\n  'sunset',\n  'super',\n  'supply',\n  'supreme',\n  'sure',\n  'surface',\n  'surge',\n  'surprise',\n  'surround',\n  'survey',\n  'suspect',\n  'sustain',\n  'swallow',\n  'swamp',\n  'swap',\n  'swarm',\n  'swear',\n  'sweet',\n  'swift',\n  'swim',\n  'swing',\n  'switch',\n  'sword',\n  'symbol',\n  'symptom',\n  'syrup',\n  'system',\n  'table',\n  'tackle',\n  'tag',\n  'tail',\n  'talent',\n  'talk',\n  'tank',\n  'tape',\n  'target',\n  'task',\n  'taste',\n  'tattoo',\n  'taxi',\n  'teach',\n  'team',\n  'tell',\n  'ten',\n  'tenant',\n  'tennis',\n  'tent',\n  'term',\n  'test',\n  'text',\n  'thank',\n  'that',\n  'theme',\n  'then',\n  'theory',\n  'there',\n  'they',\n  'thing',\n  'this',\n  'thought',\n  'three',\n  'thrive',\n  'throw',\n  'thumb',\n  'thunder',\n  'ticket',\n  'tide',\n  'tiger',\n  'tilt',\n  'timber',\n  'time',\n  'tiny',\n  'tip',\n  'tired',\n  'tissue',\n  'title',\n  'toast',\n  'tobacco',\n  'today',\n  'toddler',\n  'toe',\n  'together',\n  'toilet',\n  'token',\n  'tomato',\n  'tomorrow',\n  'tone',\n  'tongue',\n  'tonight',\n  'tool',\n  'tooth',\n  'top',\n  'topic',\n  'topple',\n  'torch',\n  'tornado',\n  'tortoise',\n  'toss',\n  'total',\n  'tourist',\n  'toward',\n  'tower',\n  'town',\n  'toy',\n  'track',\n  'trade',\n  'traffic',\n  'tragic',\n  'train',\n  'transfer',\n  'trap',\n  'trash',\n  'travel',\n  'tray',\n  'treat',\n  'tree',\n  'trend',\n  'trial',\n  'tribe',\n  'trick',\n  'trigger',\n  'trim',\n  'trip',\n  'trophy',\n  'trouble',\n  'truck',\n  'true',\n  'truly',\n  'trumpet',\n  'trust',\n  'truth',\n  'try',\n  'tube',\n  'tuition',\n  'tumble',\n  'tuna',\n  'tunnel',\n  'turkey',\n  'turn',\n  'turtle',\n  'twelve',\n  'twenty',\n  'twice',\n  'twin',\n  'twist',\n  'two',\n  'type',\n  'typical',\n  'ugly',\n  'umbrella',\n  'unable',\n  'unaware',\n  'uncle',\n  'uncover',\n  'under',\n  'undo',\n  'unfair',\n  'unfold',\n  'unhappy',\n  'uniform',\n  'unique',\n  'unit',\n  'universe',\n  'unknown',\n  'unlock',\n  'until',\n  'unusual',\n  'unveil',\n  'update',\n  'upgrade',\n  'uphold',\n  'upon',\n  'upper',\n  'upset',\n  'urban',\n  'urge',\n  'usage',\n  'use',\n  'used',\n  'useful',\n  'useless',\n  'usual',\n  'utility',\n  'vacant',\n  'vacuum',\n  'vague',\n  'valid',\n  'valley',\n  'valve',\n  'van',\n  'vanish',\n  'vapor',\n  'various',\n  'vast',\n  'vault',\n  'vehicle',\n  'velvet',\n  'vendor',\n  'venture',\n  'venue',\n  'verb',\n  'verify',\n  'version',\n  'very',\n  'vessel',\n  'veteran',\n  'viable',\n  'vibrant',\n  'vicious',\n  'victory',\n  'video',\n  'view',\n  'village',\n  'vintage',\n  'violin',\n  'virtual',\n  'virus',\n  'visa',\n  'visit',\n  'visual',\n  'vital',\n  'vivid',\n  'vocal',\n  'voice',\n  'void',\n  'volcano',\n  'volume',\n  'vote',\n  'voyage',\n  'wage',\n  'wagon',\n  'wait',\n  'walk',\n  'wall',\n  'walnut',\n  'want',\n  'warfare',\n  'warm',\n  'warrior',\n  'wash',\n  'wasp',\n  'waste',\n  'water',\n  'wave',\n  'way',\n  'wealth',\n  'weapon',\n  'wear',\n  'weasel',\n  'weather',\n  'web',\n  'wedding',\n  'weekend',\n  'weird',\n  'welcome',\n  'west',\n  'wet',\n  'whale',\n  'what',\n  'wheat',\n  'wheel',\n  'when',\n  'where',\n  'whip',\n  'whisper',\n  'wide',\n  'width',\n  'wife',\n  'wild',\n  'will',\n  'win',\n  'window',\n  'wine',\n  'wing',\n  'wink',\n  'winner',\n  'winter',\n  'wire',\n  'wisdom',\n  'wise',\n  'wish',\n  'witness',\n  'wolf',\n  'woman',\n  'wonder',\n  'wood',\n  'wool',\n  'word',\n  'work',\n  'world',\n  'worry',\n  'worth',\n  'wrap',\n  'wreck',\n  'wrestle',\n  'wrist',\n  'write',\n  'wrong',\n  'yard',\n  'year',\n  'yellow',\n  'you',\n  'young',\n  'youth',\n  'zebra',\n  'zero',\n  'zone',\n  'zoo',\n];\n\nexport default english;\n","/* eslint-disable no-bitwise */\nimport english from './wordlists/english';\nimport * as nacl from '../nacl/naclWrappers';\nimport * as address from '../encoding/address';\nimport Account from '../types/account';\n\nexport const FAIL_TO_DECODE_MNEMONIC_ERROR_MSG = 'failed to decode mnemonic';\nexport const NOT_IN_WORDS_LIST_ERROR_MSG =\n  'the mnemonic contains a word that is not in the wordlist';\n\n// https://stackoverflow.com/a/51452614\nfunction toUint11Array(buffer8: Uint8Array | number[]) {\n  const buffer11 = [];\n  let acc = 0;\n  let accBits = 0;\n  function add(octet) {\n    acc |= octet << accBits;\n    accBits += 8;\n    if (accBits >= 11) {\n      buffer11.push(acc & 0x7ff);\n      acc >>= 11;\n      accBits -= 11;\n    }\n  }\n  function flush() {\n    if (accBits) {\n      buffer11.push(acc);\n    }\n  }\n\n  buffer8.forEach(add);\n  flush();\n  return buffer11;\n}\n\nfunction applyWords(nums: number[]) {\n  return nums.map((n) => english[n]);\n}\n\nfunction computeChecksum(seed: Uint8Array) {\n  const hashBuffer = nacl.genericHash(seed);\n  const uint11Hash = toUint11Array(hashBuffer);\n  const words = applyWords(uint11Hash);\n\n  return words[0];\n}\n\n/**\n * mnemonicFromSeed converts a 32-byte key into a 25 word mnemonic. The generated mnemonic includes a checksum.\n * Each word in the mnemonic represents 11 bits of data, and the last 11 bits are reserved for the checksum.\n * @param seed - 32 bytes long seed\n * @returns 25 words mnemonic\n */\nexport function mnemonicFromSeed(seed: Uint8Array) {\n  // Sanity length check\n  if (seed.length !== nacl.SEED_BTYES_LENGTH) {\n    throw new RangeError(`Seed length must be ${nacl.SEED_BTYES_LENGTH}`);\n  }\n\n  const uint11Array = toUint11Array(seed);\n  const words = applyWords(uint11Array);\n  const checksumWord = computeChecksum(seed);\n\n  return `${words.join(' ')} ${checksumWord}`;\n}\n\n// from Uint11Array\n// https://stackoverflow.com/a/51452614\nfunction toUint8Array(buffer11: number[]) {\n  const buffer8 = [];\n  let acc = 0;\n  let accBits = 0;\n  function add(ui11) {\n    acc |= ui11 << accBits;\n    accBits += 11;\n    while (accBits >= 8) {\n      buffer8.push(acc & 0xff);\n      acc >>= 8;\n      accBits -= 8;\n    }\n  }\n  function flush() {\n    if (accBits) {\n      buffer8.push(acc);\n    }\n  }\n\n  buffer11.forEach(add);\n  flush();\n  return new Uint8Array(buffer8);\n}\n\n/**\n * seedFromMnemonic converts a mnemonic generated using this library into the source key used to create it.\n * It returns an error if the passed mnemonic has an incorrect checksum, if the number of words is unexpected, or if one\n * of the passed words is not found in the words list.\n * @param mnemonic - 25 words mnemonic\n * @returns 32 bytes long seed\n */\nexport function seedFromMnemonic(mnemonic: string) {\n  const words = mnemonic.split(' ');\n  const key = words.slice(0, 24);\n\n  // Check that all words are in list\n  for (const w of key) {\n    if (english.indexOf(w) === -1) throw new Error(NOT_IN_WORDS_LIST_ERROR_MSG);\n  }\n\n  const checksum = words[words.length - 1];\n  const uint11Array = key.map((word) => english.indexOf(word));\n\n  // Convert the key to uint8Array\n  let uint8Array = toUint8Array(uint11Array);\n\n  // We need to chop the last byte -\n  // the short explanation - Since 256 is not divisible by 11, we have an extra 0x0 byte.\n  // The longer explanation - When splitting the 256 bits to chunks of 11, we get 23 words and a left over of 3 bits.\n  // This left gets padded with another 8 bits to the create the 24th word.\n  // While converting back to byte array, our new 264 bits array is divisible by 8 but the last byte is just the padding.\n\n  // check that we have 33 bytes long array as expected\n  if (uint8Array.length !== 33)\n    throw new Error(FAIL_TO_DECODE_MNEMONIC_ERROR_MSG);\n\n  // check that the last byte is actually 0x0\n  if (uint8Array[uint8Array.length - 1] !== 0x0)\n    throw new Error(FAIL_TO_DECODE_MNEMONIC_ERROR_MSG);\n\n  // chop it !\n  uint8Array = uint8Array.slice(0, uint8Array.length - 1);\n\n  // compute checksum\n  const cs = computeChecksum(uint8Array);\n\n  // success!\n  if (cs === checksum) return uint8Array;\n\n  throw new Error(FAIL_TO_DECODE_MNEMONIC_ERROR_MSG);\n}\n\n/**\n * mnemonicToSecretKey takes a mnemonic string and returns the corresponding Algorand address and its secret key.\n * @param mn - 25 words Algorand mnemonic\n * @throws error if fails to decode the mnemonic\n */\nexport function mnemonicToSecretKey(mn: string): Account {\n  const seed = seedFromMnemonic(mn);\n  const keys = nacl.keyPairFromSeed(seed);\n  const encodedPk = address.encodeAddress(keys.publicKey);\n  return { addr: encodedPk, sk: keys.secretKey };\n}\n\n/**\n * secretKeyToMnemonic takes an Algorand secret key and returns the corresponding mnemonic.\n * @param sk - Algorand secret key\n * @returns Secret key's associated mnemonic\n */\nexport function secretKeyToMnemonic(sk: Uint8Array) {\n  // get the seed from the sk\n  const seed = sk.slice(0, nacl.SEED_BTYES_LENGTH);\n  return mnemonicFromSeed(seed);\n}\n\n/**\n * mnemonicToMasterDerivationKey takes a mnemonic string and returns the corresponding master derivation key.\n * @param mn - 25 words Algorand mnemonic\n * @returns Uint8Array\n * @throws error if fails to decode the mnemonic\n */\nexport function mnemonicToMasterDerivationKey(mn: string) {\n  return seedFromMnemonic(mn);\n}\n\n/**\n * masterDerivationKeyToMnemonic takes a master derivation key and returns the corresponding mnemonic.\n * @param mdk - Uint8Array\n * @returns string mnemonic\n */\nexport function masterDerivationKeyToMnemonic(mdk: Uint8Array) {\n  return mnemonicFromSeed(mdk);\n}\n","import { Buffer } from 'buffer';\nimport * as txnBuilder from './transaction';\nimport * as nacl from './nacl/naclWrappers';\nimport * as encoding from './encoding/encoding';\nimport * as address from './encoding/address';\nimport * as utils from './utils/utils';\n\nconst ALGORAND_MAX_TX_GROUP_SIZE = 16;\n\ninterface EncodedTxGroup {\n  txlist: Buffer[];\n}\n\n/**\n * Aux class for group id calculation of a group of transactions\n */\nexport class TxGroup {\n  name = 'Transaction group';\n  tag = Buffer.from('TG');\n  txGroupHashes: Buffer[];\n\n  constructor(hashes: Buffer[]) {\n    if (hashes.length > ALGORAND_MAX_TX_GROUP_SIZE) {\n      const errorMsg = `${hashes.length.toString()} transactions grouped together but max group size is ${ALGORAND_MAX_TX_GROUP_SIZE.toString()}`;\n      throw Error(errorMsg);\n    }\n\n    this.txGroupHashes = hashes;\n  }\n\n  // eslint-disable-next-line camelcase\n  get_obj_for_encoding() {\n    const txgroup: EncodedTxGroup = {\n      txlist: this.txGroupHashes,\n    };\n    return txgroup;\n  }\n\n  // eslint-disable-next-line camelcase\n  static from_obj_for_encoding(txgroupForEnc: EncodedTxGroup) {\n    const txn = Object.create(this.prototype);\n    txn.name = 'Transaction group';\n    txn.tag = Buffer.from('TG');\n    txn.txGroupHashes = [];\n    for (const hash of txgroupForEnc.txlist) {\n      txn.txGroupHashes.push(Buffer.from(hash));\n    }\n    return txn;\n  }\n\n  toByte() {\n    return encoding.encode(this.get_obj_for_encoding());\n  }\n}\n\n/**\n * computeGroupID returns group ID for a group of transactions\n * @param txns - array of transactions (every element is a dict or Transaction)\n * @returns Buffer\n */\nexport function computeGroupID(txns: txnBuilder.TransactionLike[]) {\n  const hashes = [];\n  for (const txn of txns) {\n    const tx = txnBuilder.instantiateTxnIfNeeded(txn);\n    hashes.push(tx.rawTxID());\n  }\n\n  const txgroup = new TxGroup(hashes);\n\n  const bytes = txgroup.toByte();\n  const toBeHashed = Buffer.from(utils.concatArrays(txgroup.tag, bytes));\n  const gid = nacl.genericHash(toBeHashed);\n  return Buffer.from(gid);\n}\n\n/**\n * assignGroupID assigns group id to a given list of unsigned transactions\n * @param txns - array of transactions (every element is a dict or Transaction)\n * @param from - optional sender address specifying which transaction return\n * @returns possible list of matching transactions\n */\nexport function assignGroupID(\n  txns: txnBuilder.TransactionLike[],\n  from?: string\n) {\n  const gid = computeGroupID(txns);\n  const result: txnBuilder.Transaction[] = [];\n  for (const txn of txns) {\n    const tx = txnBuilder.instantiateTxnIfNeeded(txn);\n    if (!from || address.encodeAddress(tx.from.publicKey) === from) {\n      tx.group = gid;\n      result.push(tx);\n    }\n  }\n  return result;\n}\n\nexport default TxGroup;\n","import { Buffer } from 'buffer';\nimport * as nacl from './nacl/naclWrappers';\nimport * as address from './encoding/address';\nimport * as encoding from './encoding/encoding';\nimport * as txnBuilder from './transaction';\nimport * as utils from './utils/utils';\nimport AnyTransaction, { EncodedTransaction } from './types/transactions';\nimport { MultisigMetadata } from './types/multisig';\nimport {\n  EncodedMultisig,\n  EncodedSignedTransaction,\n} from './types/transactions/encoded';\n\n/**\n Utilities for manipulating multisig transaction blobs.\n */\n\nexport const MULTISIG_MERGE_LESSTHANTWO_ERROR_MSG =\n  'Not enough multisig transactions to merge. Need at least two';\nexport const MULTISIG_MERGE_MISMATCH_ERROR_MSG =\n  'Cannot merge txs. txIDs differ';\nexport const MULTISIG_MERGE_MISMATCH_AUTH_ADDR_MSG =\n  'Cannot merge txs. Auth addrs differ';\nexport const MULTISIG_MERGE_WRONG_PREIMAGE_ERROR_MSG =\n  'Cannot merge txs. Multisig preimages differ';\nexport const MULTISIG_MERGE_SIG_MISMATCH_ERROR_MSG =\n  'Cannot merge txs. subsigs are mismatched.';\nconst MULTISIG_KEY_NOT_EXIST_ERROR_MSG = 'Key does not exist';\nexport const MULTISIG_NO_MUTATE_ERROR_MSG =\n  'Cannot mutate a multisig field as it would invalidate all existing signatures.';\nexport const MULTISIG_USE_PARTIAL_SIGN_ERROR_MSG =\n  'Cannot sign a multisig transaction using `signTxn`. Use `partialSignTxn` instead.';\nexport const MULTISIG_SIGNATURE_LENGTH_ERROR_MSG =\n  'Cannot add multisig signature. Signature is not of the correct length.';\n\ninterface MultisigOptions {\n  rawSig: Uint8Array;\n  myPk: Uint8Array;\n}\n\ninterface MultisigMetadataWithPks extends Omit<MultisigMetadata, 'addrs'> {\n  pks: Uint8Array[];\n}\n\n/**\n * createMultisigTransaction creates a raw, unsigned multisig transaction blob.\n * @param txn - the actual transaction.\n * @param version - multisig version\n * @param threshold - multisig threshold\n * @param pks - ordered list of public keys in this multisig\n * @returns encoded multisig blob\n */\nexport function createMultisigTransaction(\n  txn: txnBuilder.Transaction,\n  { version, threshold, addrs }: MultisigMetadata\n) {\n  // construct the appendable multisigned transaction format\n  const pks = addrs.map((addr) => address.decodeAddress(addr).publicKey);\n  const subsigs = pks.map((pk) => ({ pk: Buffer.from(pk) }));\n\n  const msig: EncodedMultisig = {\n    v: version,\n    thr: threshold,\n    subsig: subsigs,\n  };\n  const txnForEncoding = txn.get_obj_for_encoding();\n  const signedTxn: EncodedSignedTransaction = {\n    msig,\n    txn: txnForEncoding,\n  };\n\n  // if the address of this multisig is different from the transaction sender,\n  // we need to add the auth-addr field\n  const msigAddr = address.fromMultisigPreImg({\n    version,\n    threshold,\n    pks,\n  });\n  if (\n    address.encodeAddress(txnForEncoding.snd) !==\n    address.encodeAddress(msigAddr)\n  ) {\n    signedTxn.sgnr = Buffer.from(msigAddr);\n  }\n\n  return new Uint8Array(encoding.encode(signedTxn));\n}\n\n/**\n * createMultisigTransactionWithSignature creates a multisig transaction blob with an included signature.\n * @param txn - the actual transaction to sign.\n * @param rawSig - a Buffer raw signature of that transaction\n * @param myPk - a public key that corresponds with rawSig\n * @param version - multisig version\n * @param threshold - multisig threshold\n * @param pks - ordered list of public keys in this multisig\n * @returns encoded multisig blob\n */\nfunction createMultisigTransactionWithSignature(\n  txn: txnBuilder.Transaction,\n  { rawSig, myPk }: MultisigOptions,\n  { version, threshold, pks }: MultisigMetadataWithPks\n) {\n  // Create an empty encoded multisig transaction\n  const encodedMsig = createMultisigTransaction(txn, {\n    version,\n    threshold,\n    addrs: pks.map((pk) => address.encodeAddress(pk)),\n  });\n  // note: this is not signed yet, but will be shortly\n  const signedTxn = encoding.decode(encodedMsig) as EncodedSignedTransaction;\n\n  let keyExist = false;\n  // append the multisig signature to the corresponding public key in the multisig blob\n  signedTxn.msig.subsig.forEach((subsig, i) => {\n    if (nacl.bytesEqual(subsig.pk, myPk)) {\n      keyExist = true;\n      signedTxn.msig.subsig[i].s = rawSig;\n    }\n  });\n  if (keyExist === false) {\n    throw new Error(MULTISIG_KEY_NOT_EXIST_ERROR_MSG);\n  }\n\n  // if the address of this multisig is different from the transaction sender,\n  // we need to add the auth-addr field\n  const msigAddr = address.fromMultisigPreImg({\n    version,\n    threshold,\n    pks,\n  });\n  if (\n    address.encodeAddress(signedTxn.txn.snd) !== address.encodeAddress(msigAddr)\n  ) {\n    signedTxn.sgnr = Buffer.from(msigAddr);\n  }\n\n  return new Uint8Array(encoding.encode(signedTxn));\n}\n\n/**\n * MultisigTransaction is a Transaction that also supports creating partially-signed multisig transactions.\n */\nexport class MultisigTransaction extends txnBuilder.Transaction {\n  /* eslint-disable class-methods-use-this,@typescript-eslint/no-unused-vars,no-dupe-class-members */\n  /**\n   * Override inherited method to throw an error, as mutating transactions are prohibited in this context\n   */\n  addLease() {\n    throw new Error(MULTISIG_NO_MUTATE_ERROR_MSG);\n  }\n\n  /**\n   * Override inherited method to throw an error, as mutating transactions are prohibited in this context\n   */\n  addRekey() {\n    throw new Error(MULTISIG_NO_MUTATE_ERROR_MSG);\n  }\n\n  /**\n   * Override inherited method to throw an error, as traditional signing is not allowed\n   */\n  signTxn(sk: Uint8Array): Uint8Array; // This overload ensures that the override has a compatible type definition with the parent method\n  signTxn(sk: any): any {\n    throw new Error(MULTISIG_USE_PARTIAL_SIGN_ERROR_MSG);\n  }\n  /* eslint-enable class-methods-use-this,@typescript-eslint/no-unused-vars,no-dupe-class-members */\n\n  /**\n   * partialSignTxn partially signs this transaction and returns a partially-signed multisig transaction,\n   * encoded with msgpack as a typed array.\n   * @param version - multisig version\n   * @param threshold - multisig threshold\n   * @param pks - multisig public key list, order is important.\n   * @param sk - an Algorand secret key to sign with.\n   * @returns an encoded, partially signed multisig transaction.\n   */\n  partialSignTxn(\n    { version, threshold, pks }: MultisigMetadataWithPks,\n    sk: Uint8Array\n  ) {\n    // get signature verifier\n    const myPk = nacl.keyPairFromSecretKey(sk).publicKey;\n    return createMultisigTransactionWithSignature(\n      this,\n      { rawSig: this.rawSignTxn(sk), myPk },\n      { version, threshold, pks }\n    );\n  }\n\n  /**\n   * partialSignWithMultisigSignature partially signs this transaction with an external raw multisig signature and returns\n   * a partially-signed multisig transaction, encoded with msgpack as a typed array.\n   * @param metadata - multisig metadata\n   * @param signerAddr - address of the signer\n   * @param signature - raw multisig signature\n   * @returns an encoded, partially signed multisig transaction.\n   */\n  partialSignWithMultisigSignature(\n    metadata: MultisigMetadataWithPks,\n    signerAddr: string,\n    signature: Uint8Array\n  ) {\n    if (!nacl.isValidSignatureLength(signature.length)) {\n      throw new Error(MULTISIG_SIGNATURE_LENGTH_ERROR_MSG);\n    }\n    return createMultisigTransactionWithSignature(\n      this,\n      {\n        rawSig: signature,\n        myPk: address.decodeAddress(signerAddr).publicKey,\n      },\n      metadata\n    );\n  }\n\n  // eslint-disable-next-line camelcase\n  static from_obj_for_encoding(\n    txnForEnc: EncodedTransaction\n  ): MultisigTransaction {\n    return super.from_obj_for_encoding(txnForEnc) as MultisigTransaction;\n  }\n}\n\n/**\n * mergeMultisigTransactions takes a list of multisig transaction blobs, and merges them.\n * @param multisigTxnBlobs - a list of blobs representing encoded multisig txns\n * @returns typed array msg-pack encoded multisig txn\n */\nexport function mergeMultisigTransactions(multisigTxnBlobs: Uint8Array[]) {\n  if (multisigTxnBlobs.length < 2) {\n    throw new Error(MULTISIG_MERGE_LESSTHANTWO_ERROR_MSG);\n  }\n  const refSigTx = encoding.decode(\n    multisigTxnBlobs[0]\n  ) as EncodedSignedTransaction;\n  const refTxID = MultisigTransaction.from_obj_for_encoding(\n    refSigTx.txn\n  ).txID();\n  const refAuthAddr = refSigTx.sgnr\n    ? address.encodeAddress(refSigTx.sgnr)\n    : undefined;\n  const refPreImage = {\n    version: refSigTx.msig.v,\n    threshold: refSigTx.msig.thr,\n    pks: refSigTx.msig.subsig.map((subsig) => subsig.pk),\n  };\n  const refMsigAddr = address.encodeAddress(\n    address.fromMultisigPreImg(refPreImage)\n  );\n\n  const newSubsigs = refSigTx.msig.subsig.map((sig) => ({ ...sig }));\n  for (let i = 1; i < multisigTxnBlobs.length; i++) {\n    const unisig = encoding.decode(\n      multisigTxnBlobs[i]\n    ) as EncodedSignedTransaction;\n\n    const unisigAlgoTxn = MultisigTransaction.from_obj_for_encoding(unisig.txn);\n    if (unisigAlgoTxn.txID() !== refTxID) {\n      throw new Error(MULTISIG_MERGE_MISMATCH_ERROR_MSG);\n    }\n\n    const authAddr = unisig.sgnr\n      ? address.encodeAddress(unisig.sgnr)\n      : undefined;\n    if (refAuthAddr !== authAddr) {\n      throw new Error(MULTISIG_MERGE_MISMATCH_AUTH_ADDR_MSG);\n    }\n\n    // check multisig has same preimage as reference\n    if (unisig.msig.subsig.length !== refSigTx.msig.subsig.length) {\n      throw new Error(MULTISIG_MERGE_WRONG_PREIMAGE_ERROR_MSG);\n    }\n    const preimg: MultisigMetadataWithPks = {\n      version: unisig.msig.v,\n      threshold: unisig.msig.thr,\n      pks: unisig.msig.subsig.map((subsig) => subsig.pk),\n    };\n    const msgigAddr = address.encodeAddress(address.fromMultisigPreImg(preimg));\n    if (refMsigAddr !== msgigAddr) {\n      throw new Error(MULTISIG_MERGE_WRONG_PREIMAGE_ERROR_MSG);\n    }\n\n    // now, we can merge\n    unisig.msig.subsig.forEach((uniSubsig, index) => {\n      if (!uniSubsig.s) return;\n      const current = newSubsigs[index];\n      // we convert the Uint8Arrays uniSubsig.s and current.s to Buffers here because (as\n      // of Dec 2020) React overrides the buffer package with an older version that does\n      // not support Uint8Arrays in the comparison function. See this thread for more\n      // info: https://github.com/algorand/js-algorand-sdk/issues/252\n      if (\n        current.s &&\n        Buffer.compare(Buffer.from(uniSubsig.s), Buffer.from(current.s)) !== 0\n      ) {\n        // mismatch\n        throw new Error(MULTISIG_MERGE_SIG_MISMATCH_ERROR_MSG);\n      }\n      current.s = uniSubsig.s;\n    });\n  }\n  const msig: EncodedMultisig = {\n    v: refSigTx.msig.v,\n    thr: refSigTx.msig.thr,\n    subsig: newSubsigs,\n  };\n  const signedTxn: EncodedSignedTransaction = {\n    msig,\n    txn: refSigTx.txn,\n  };\n  if (typeof refAuthAddr !== 'undefined') {\n    signedTxn.sgnr = Buffer.from(address.decodeAddress(refAuthAddr).publicKey);\n  }\n  return new Uint8Array(encoding.encode(signedTxn));\n}\n\nexport function verifyMultisig(\n  toBeVerified: Uint8Array,\n  msig: EncodedMultisig,\n  publicKey: Uint8Array\n) {\n  const version = msig.v;\n  const threshold = msig.thr;\n  const subsigs = msig.subsig;\n\n  const pks = subsigs.map((subsig) => subsig.pk);\n  if (msig.subsig.length < threshold) {\n    return false;\n  }\n\n  let pk: Uint8Array;\n  try {\n    pk = address.fromMultisigPreImg({ version, threshold, pks });\n  } catch (e) {\n    return false;\n  }\n\n  if (!utils.arrayEqual(pk, publicKey)) {\n    return false;\n  }\n\n  let counter = 0;\n  for (const subsig of subsigs) {\n    if (subsig.s !== undefined) {\n      counter += 1;\n    }\n  }\n  if (counter < threshold) {\n    return false;\n  }\n\n  let verifiedCounter = 0;\n  for (const subsig of subsigs) {\n    if (subsig.s !== undefined) {\n      if (nacl.verify(toBeVerified, subsig.s, subsig.pk)) {\n        verifiedCounter += 1;\n      }\n    }\n  }\n\n  if (verifiedCounter < threshold) {\n    return false;\n  }\n\n  return true;\n}\n\n/**\n * signMultisigTransaction takes a raw transaction (see signTransaction), a multisig preimage, a secret key, and returns\n * a multisig transaction, which is a blob representing a transaction and multisignature account preimage. The returned\n * multisig txn can accumulate additional signatures through mergeMultisigTransactions or appendSignMultisigTransaction.\n * @param txn - object with either payment or key registration fields\n * @param version - multisig version\n * @param threshold - multisig threshold\n * @param addrs - a list of Algorand addresses representing possible signers for this multisig. Order is important.\n * @param sk - Algorand secret key. The corresponding pk should be in the pre image.\n * @returns object containing txID, and blob of partially signed multisig transaction (with multisig preimage information)\n * If the final calculated fee is lower than the protocol minimum fee, the fee will be increased to match the minimum.\n */\nexport function signMultisigTransaction(\n  txn: txnBuilder.TransactionLike,\n  { version, threshold, addrs }: MultisigMetadata,\n  sk: Uint8Array\n) {\n  // check that the from field matches the mSigPreImage. If from field is not populated, fill it in.\n  const expectedFromRaw = address.fromMultisigPreImgAddrs({\n    version,\n    threshold,\n    addrs,\n  });\n  if (!Object.prototype.hasOwnProperty.call(txn, 'from')) {\n    // eslint-disable-next-line no-param-reassign\n    txn.from = expectedFromRaw;\n  }\n  // build pks for partialSign\n  const pks = addrs.map((addr) => address.decodeAddress(addr).publicKey);\n  // `txn` needs to be handled differently if it's a constructed `Transaction` vs a dict of constructor args\n  const txnAlreadyBuilt = txn instanceof txnBuilder.Transaction;\n  let algoTxn: MultisigTransaction;\n  let blob: Uint8Array;\n  if (txnAlreadyBuilt) {\n    algoTxn = (txn as unknown) as MultisigTransaction;\n    blob = MultisigTransaction.prototype.partialSignTxn.call(\n      algoTxn,\n      { version, threshold, pks },\n      sk\n    );\n  } else {\n    algoTxn = new MultisigTransaction(txn as AnyTransaction);\n    blob = algoTxn.partialSignTxn({ version, threshold, pks }, sk);\n  }\n  return {\n    txID: algoTxn.txID().toString(),\n    blob,\n  };\n}\n\n/**\n * appendSignMultisigTransaction takes a multisig transaction blob, and appends our signature to it.\n * While we could derive public key preimagery from the partially-signed multisig transaction,\n * we ask the caller to pass it back in, to ensure they know what they are signing.\n * @param multisigTxnBlob - an encoded multisig txn. Supports non-payment txn types.\n * @param version - multisig version\n * @param threshold - multisig threshold\n * @param addrs - a list of Algorand addresses representing possible signers for this multisig. Order is important.\n * @param sk - Algorand secret key\n * @returns object containing txID, and blob representing encoded multisig txn\n */\nexport function appendSignMultisigTransaction(\n  multisigTxnBlob: Uint8Array,\n  { version, threshold, addrs }: MultisigMetadata,\n  sk: Uint8Array\n) {\n  const pks = addrs.map((addr) => address.decodeAddress(addr).publicKey);\n  // obtain underlying txn, sign it, and merge it\n  const multisigTxObj = encoding.decode(\n    multisigTxnBlob\n  ) as EncodedSignedTransaction;\n  const msigTxn = MultisigTransaction.from_obj_for_encoding(multisigTxObj.txn);\n  const partialSignedBlob = msigTxn.partialSignTxn(\n    { version, threshold, pks },\n    sk\n  );\n  return {\n    txID: msigTxn.txID().toString(),\n    blob: mergeMultisigTransactions([multisigTxnBlob, partialSignedBlob]),\n  };\n}\n\n/**\n * appendMultisigTransactionSignature takes a multisig transaction blob, and appends a given raw signature to it.\n * This makes it possible to compile a multisig signature using only raw signatures from external methods.\n * @param multisigTxnBlob - an encoded multisig txn. Supports non-payment txn types.\n * @param version - multisig version\n * @param threshold - multisig threshold\n * @param addrs - a list of Algorand addresses representing possible signers for this multisig. Order is important.\n * @param signerAddr - address of the signer\n * @param signature - raw multisig signature\n * @returns object containing txID, and blob representing encoded multisig txn\n */\nexport function appendSignRawMultisigSignature(\n  multisigTxnBlob: Uint8Array,\n  { version, threshold, addrs }: MultisigMetadata,\n  signerAddr: string,\n  signature: Uint8Array\n) {\n  const pks = addrs.map((addr) => address.decodeAddress(addr).publicKey);\n  // obtain underlying txn, sign it, and merge it\n  const multisigTxObj = encoding.decode(\n    multisigTxnBlob\n  ) as EncodedSignedTransaction;\n  const msigTxn = MultisigTransaction.from_obj_for_encoding(multisigTxObj.txn);\n  const partialSignedBlob = msigTxn.partialSignWithMultisigSignature(\n    { version, threshold, pks },\n    signerAddr,\n    signature\n  );\n  return {\n    txID: msigTxn.txID().toString(),\n    blob: mergeMultisigTransactions([multisigTxnBlob, partialSignedBlob]),\n  };\n}\n\n/**\n * multisigAddress takes multisig metadata (preimage) and returns the corresponding human readable Algorand address.\n * @param version - multisig version\n * @param threshold - multisig threshold\n * @param addrs - list of Algorand addresses\n */\nexport function multisigAddress({\n  version,\n  threshold,\n  addrs,\n}: MultisigMetadata) {\n  return address.fromMultisigPreImgAddrs({ version, threshold, addrs });\n}\n","import { Buffer } from 'buffer';\nimport * as nacl from './nacl/naclWrappers';\nimport * as address from './encoding/address';\nimport * as encoding from './encoding/encoding';\nimport { verifyMultisig } from './multisig';\nimport * as utils from './utils/utils';\nimport * as txnBuilder from './transaction';\nimport { isValidAddress } from './encoding/address';\nimport {\n  EncodedLogicSig,\n  EncodedLogicSigAccount,\n  EncodedMultisig,\n  EncodedSignedTransaction,\n} from './types/transactions/encoded';\nimport { MultisigMetadata } from './types/multisig';\n\ninterface LogicSigStorageStructure {\n  logic: Uint8Array;\n  args: Uint8Array[];\n  sig?: Uint8Array;\n  msig?: EncodedMultisig;\n}\n\n/** sanityCheckProgram performs heuristic program validation:\n * check if passed in bytes are Algorand address or is B64 encoded, rather than Teal bytes\n *\n * @param program - Program bytes to check\n */\nexport function sanityCheckProgram(program: Uint8Array) {\n  if (!program || program.length === 0) throw new Error('empty program');\n\n  const lineBreakOrd = '\\n'.charCodeAt(0);\n  const blankSpaceOrd = ' '.charCodeAt(0);\n  const tildeOrd = '~'.charCodeAt(0);\n\n  const isPrintable = (x: number) => blankSpaceOrd <= x && x <= tildeOrd;\n  const isAsciiPrintable = program.every(\n    (x: number) => x === lineBreakOrd || isPrintable(x)\n  );\n\n  if (isAsciiPrintable) {\n    const programStr = Buffer.from(program).toString();\n\n    if (isValidAddress(programStr))\n      throw new Error('requesting program bytes, get Algorand address');\n\n    if (Buffer.from(programStr, 'base64').toString('base64') === programStr)\n      throw new Error('program should not be b64 encoded');\n\n    throw new Error(\n      'program bytes are all ASCII printable characters, not looking like Teal byte code'\n    );\n  }\n}\n\n/**\n LogicSig implementation\n\n LogicSig cannot sign transactions in all cases.  Instead, use LogicSigAccount as a safe, general purpose signing mechanism.  Since LogicSig does not track the provided signature's public key, LogicSig cannot sign transactions when delegated to a non-multisig account _and_ the sender is not the delegating account.\n */\nexport class LogicSig implements LogicSigStorageStructure {\n  tag = Buffer.from('Program');\n\n  logic: Uint8Array;\n  args: Uint8Array[];\n  sig?: Uint8Array;\n  msig?: EncodedMultisig;\n\n  constructor(\n    program: Uint8Array,\n    programArgs?: Array<Uint8Array | Buffer> | null\n  ) {\n    if (\n      programArgs &&\n      (!Array.isArray(programArgs) ||\n        !programArgs.every(\n          (arg) => arg.constructor === Uint8Array || Buffer.isBuffer(arg)\n        ))\n    ) {\n      throw new TypeError('Invalid arguments');\n    }\n\n    let args: Uint8Array[] | undefined;\n    if (programArgs != null)\n      args = programArgs.map((arg) => new Uint8Array(arg));\n\n    sanityCheckProgram(program);\n\n    this.logic = program;\n    this.args = args;\n    this.sig = undefined;\n    this.msig = undefined;\n  }\n\n  // eslint-disable-next-line camelcase\n  get_obj_for_encoding() {\n    const obj: EncodedLogicSig = {\n      l: this.logic,\n    };\n    if (this.args) {\n      obj.arg = this.args;\n    }\n    if (this.sig) {\n      obj.sig = this.sig;\n    } else if (this.msig) {\n      obj.msig = this.msig;\n    }\n    return obj;\n  }\n\n  // eslint-disable-next-line camelcase\n  static from_obj_for_encoding(encoded: EncodedLogicSig) {\n    const lsig = new LogicSig(encoded.l, encoded.arg);\n    lsig.sig = encoded.sig;\n    lsig.msig = encoded.msig;\n    return lsig;\n  }\n\n  /**\n   * Performs signature verification\n   * @param publicKey - Verification key (derived from sender address or escrow address)\n   */\n  verify(publicKey: Uint8Array) {\n    if (this.sig && this.msig) {\n      return false;\n    }\n\n    try {\n      sanityCheckProgram(this.logic);\n    } catch (e) {\n      return false;\n    }\n\n    const toBeSigned = utils.concatArrays(this.tag, this.logic);\n\n    if (!this.sig && !this.msig) {\n      const hash = nacl.genericHash(toBeSigned);\n      return utils.arrayEqual(hash, publicKey);\n    }\n\n    if (this.sig) {\n      return nacl.verify(toBeSigned, this.sig, publicKey);\n    }\n\n    return verifyMultisig(toBeSigned, this.msig, publicKey);\n  }\n\n  /**\n   * Compute hash of the logic sig program (that is the same as escrow account address) as string address\n   * @returns String representation of the address\n   */\n  address() {\n    const toBeSigned = utils.concatArrays(this.tag, this.logic);\n    const hash = nacl.genericHash(toBeSigned);\n    return address.encodeAddress(new Uint8Array(hash));\n  }\n\n  /**\n   * Creates signature (if no msig provided) or multi signature otherwise\n   * @param secretKey - Secret key to sign with\n   * @param msig - Multisig account as \\{version, threshold, addrs\\}\n   */\n  sign(secretKey: Uint8Array, msig?: MultisigMetadata) {\n    if (msig == null) {\n      this.sig = this.signProgram(secretKey);\n    } else {\n      const subsigs = msig.addrs.map((addr) => ({\n        pk: address.decodeAddress(addr).publicKey,\n      }));\n\n      this.msig = {\n        v: msig.version,\n        thr: msig.threshold,\n        subsig: subsigs,\n      };\n\n      const [sig, index] = this.singleSignMultisig(secretKey, this.msig);\n      this.msig.subsig[index].s = sig;\n    }\n  }\n\n  /**\n   * Appends a signature to multi signature\n   * @param secretKey - Secret key to sign with\n   */\n  appendToMultisig(secretKey: Uint8Array) {\n    if (this.msig === undefined) {\n      throw new Error('no multisig present');\n    }\n    const [sig, index] = this.singleSignMultisig(secretKey, this.msig);\n    this.msig.subsig[index].s = sig;\n  }\n\n  signProgram(secretKey: Uint8Array) {\n    const toBeSigned = utils.concatArrays(this.tag, this.logic);\n    const sig = nacl.sign(toBeSigned, secretKey);\n    return sig;\n  }\n\n  singleSignMultisig(\n    secretKey: Uint8Array,\n    msig: EncodedMultisig\n  ): [sig: Uint8Array, index: number] {\n    let index = -1;\n    const myPk = nacl.keyPairFromSecretKey(secretKey).publicKey;\n    for (let i = 0; i < msig.subsig.length; i++) {\n      const { pk } = msig.subsig[i];\n      if (utils.arrayEqual(pk, myPk)) {\n        index = i;\n        break;\n      }\n    }\n    if (index === -1) {\n      throw new Error('invalid secret key');\n    }\n    const sig = this.signProgram(secretKey);\n    return [sig, index];\n  }\n\n  toByte() {\n    return encoding.encode(this.get_obj_for_encoding());\n  }\n\n  static fromByte(encoded: ArrayLike<any>) {\n    const decodedObj = encoding.decode(encoded) as EncodedLogicSig;\n    return LogicSig.from_obj_for_encoding(decodedObj);\n  }\n}\n\n/**\n * Represents an account that can sign with a LogicSig program.\n */\nexport class LogicSigAccount {\n  lsig: LogicSig;\n  sigkey?: Uint8Array;\n\n  /**\n   * Create a new LogicSigAccount. By default this will create an escrow\n   * LogicSig account. Call `sign` or `signMultisig` on the newly created\n   * LogicSigAccount to make it a delegated account.\n   *\n   * @param program - The compiled TEAL program which contains the logic for\n   *   this LogicSig.\n   * @param args - An optional array of arguments for the program.\n   */\n  constructor(program: Uint8Array, args?: Array<Uint8Array | Buffer> | null) {\n    this.lsig = new LogicSig(program, args);\n    this.sigkey = undefined;\n  }\n\n  // eslint-disable-next-line camelcase\n  get_obj_for_encoding() {\n    const obj: EncodedLogicSigAccount = {\n      lsig: this.lsig.get_obj_for_encoding(),\n    };\n    if (this.sigkey) {\n      obj.sigkey = this.sigkey;\n    }\n    return obj;\n  }\n\n  // eslint-disable-next-line camelcase\n  static from_obj_for_encoding(encoded: EncodedLogicSigAccount) {\n    const lsigAccount = new LogicSigAccount(encoded.lsig.l, encoded.lsig.arg);\n    lsigAccount.lsig = LogicSig.from_obj_for_encoding(encoded.lsig);\n    lsigAccount.sigkey = encoded.sigkey;\n    return lsigAccount;\n  }\n\n  /**\n   * Encode this object into msgpack.\n   */\n  toByte() {\n    return encoding.encode(this.get_obj_for_encoding());\n  }\n\n  /**\n   * Decode a msgpack object into a LogicSigAccount.\n   * @param encoded - The encoded LogicSigAccount.\n   */\n  static fromByte(encoded: ArrayLike<any>) {\n    const decodedObj = encoding.decode(encoded) as EncodedLogicSigAccount;\n    return LogicSigAccount.from_obj_for_encoding(decodedObj);\n  }\n\n  /**\n   * Check if this LogicSigAccount has been delegated to another account with a\n   * signature.\n   *\n   * Note this function only checks for the presence of a delegation signature.\n   * To verify the delegation signature, use `verify`.\n   */\n  isDelegated() {\n    return !!(this.lsig.sig || this.lsig.msig);\n  }\n\n  /**\n   * Verifies this LogicSig's program and signatures.\n   * @returns true if and only if the LogicSig program and signatures are valid.\n   */\n  verify() {\n    const addr = this.address();\n    return this.lsig.verify(address.decodeAddress(addr).publicKey);\n  }\n\n  /**\n   * Get the address of this LogicSigAccount.\n   *\n   * If the LogicSig is delegated to another account, this will return the\n   * address of that account.\n   *\n   * If the LogicSig is not delegated to another account, this will return an\n   *  escrow address that is the hash of the LogicSig's program code.\n   */\n  address() {\n    if (this.lsig.sig && this.lsig.msig) {\n      throw new Error(\n        'LogicSig has too many signatures. At most one of sig or msig may be present'\n      );\n    }\n\n    if (this.lsig.sig) {\n      if (!this.sigkey) {\n        throw new Error('Signing key for delegated account is missing');\n      }\n      return address.encodeAddress(this.sigkey);\n    }\n\n    if (this.lsig.msig) {\n      const msigMetadata = {\n        version: this.lsig.msig.v,\n        threshold: this.lsig.msig.thr,\n        pks: this.lsig.msig.subsig.map((subsig) => subsig.pk),\n      };\n      return address.encodeAddress(address.fromMultisigPreImg(msigMetadata));\n    }\n\n    return this.lsig.address();\n  }\n\n  /**\n   * Turns this LogicSigAccount into a delegated LogicSig. This type of LogicSig\n   * has the authority to sign transactions on behalf of another account, called\n   * the delegating account. Use this function if the delegating account is a\n   * multisig account.\n   *\n   * @param msig - The multisig delegating account\n   * @param secretKey - The secret key of one of the members of the delegating\n   *   multisig account. Use `appendToMultisig` to add additional signatures\n   *   from other members.\n   */\n  signMultisig(msig: MultisigMetadata, secretKey: Uint8Array) {\n    this.lsig.sign(secretKey, msig);\n  }\n\n  /**\n   * Adds an additional signature from a member of the delegating multisig\n   * account.\n   *\n   * @param secretKey - The secret key of one of the members of the delegating\n   *   multisig account.\n   */\n  appendToMultisig(secretKey: Uint8Array) {\n    this.lsig.appendToMultisig(secretKey);\n  }\n\n  /**\n   * Turns this LogicSigAccount into a delegated LogicSig. This type of LogicSig\n   * has the authority to sign transactions on behalf of another account, called\n   * the delegating account. If the delegating account is a multisig account,\n   * use `signMultisig` instead.\n   *\n   * @param secretKey - The secret key of the delegating account.\n   */\n  sign(secretKey: Uint8Array) {\n    this.lsig.sign(secretKey);\n    this.sigkey = nacl.keyPairFromSecretKey(secretKey).publicKey;\n  }\n}\n\nfunction signLogicSigTransactionWithAddress(\n  txn: txnBuilder.Transaction,\n  lsig: LogicSig,\n  lsigAddress: Uint8Array\n) {\n  if (!lsig.verify(lsigAddress)) {\n    throw new Error(\n      'Logic signature verification failed. Ensure the program and signature are valid.'\n    );\n  }\n\n  const signedTxn: EncodedSignedTransaction = {\n    lsig: lsig.get_obj_for_encoding(),\n    txn: txn.get_obj_for_encoding(),\n  };\n\n  if (!nacl.bytesEqual(lsigAddress, txn.from.publicKey)) {\n    signedTxn.sgnr = Buffer.from(lsigAddress);\n  }\n\n  return {\n    txID: txn.txID().toString(),\n    blob: encoding.encode(signedTxn),\n  };\n}\n\n/**\n * signLogicSigTransactionObject takes a transaction and a LogicSig object and\n * returns a signed transaction.\n *\n * @param txn - The transaction to sign.\n * @param lsigObject - The LogicSig object that will sign the transaction.\n *\n * @returns Object containing txID and blob representing signed transaction.\n */\nexport function signLogicSigTransactionObject(\n  txn: txnBuilder.Transaction,\n  lsigObject: LogicSig | LogicSigAccount\n) {\n  let lsig: LogicSig;\n  let lsigAddress: Uint8Array;\n\n  if (lsigObject instanceof LogicSigAccount) {\n    lsig = lsigObject.lsig;\n    lsigAddress = address.decodeAddress(lsigObject.address()).publicKey;\n  } else {\n    lsig = lsigObject;\n\n    if (lsig.sig) {\n      // For a LogicSig with a non-multisig delegating account, we cannot derive\n      // the address of that account from only its signature, so assume the\n      // delegating account is the sender. If that's not the case, the signing\n      // will fail.\n      lsigAddress = txn.from.publicKey;\n    } else if (lsig.msig) {\n      const msigMetadata = {\n        version: lsig.msig.v,\n        threshold: lsig.msig.thr,\n        pks: lsig.msig.subsig.map((subsig) => subsig.pk),\n      };\n      lsigAddress = address.fromMultisigPreImg(msigMetadata);\n    } else {\n      lsigAddress = address.decodeAddress(lsig.address()).publicKey;\n    }\n  }\n\n  return signLogicSigTransactionWithAddress(txn, lsig, lsigAddress);\n}\n\n/**\n * signLogicSigTransaction takes a transaction and a LogicSig object and returns\n * a signed transaction.\n *\n * @param txn - The transaction to sign.\n * @param lsigObject - The LogicSig object that will sign the transaction.\n *\n * @returns Object containing txID and blob representing signed transaction.\n * @throws error on failure\n */\nexport function signLogicSigTransaction(\n  txn: txnBuilder.TransactionLike,\n  lsigObject: LogicSig | LogicSigAccount\n) {\n  const algoTxn = txnBuilder.instantiateTxnIfNeeded(txn);\n  return signLogicSigTransactionObject(algoTxn, lsigObject);\n}\n\n/**\n * logicSigFromByte accepts encoded logic sig bytes and attempts to call logicsig.fromByte on it,\n * returning the result\n */\nexport function logicSigFromByte(encoded: Uint8Array) {\n  return LogicSig.fromByte(encoded);\n}\n\nconst SIGN_PROGRAM_DATA_PREFIX = Buffer.from('ProgData');\n\n/**\n * tealSign creates a signature compatible with ed25519verify opcode from program hash\n * @param sk - uint8array with secret key\n * @param data - buffer with data to sign\n * @param programHash - string representation of teal program hash (= contract address for LogicSigs)\n */\nexport function tealSign(\n  sk: Uint8Array,\n  data: Uint8Array | Buffer,\n  programHash: string\n) {\n  const parts = utils.concatArrays(\n    address.decodeAddress(programHash).publicKey,\n    data\n  );\n  const toBeSigned = Buffer.from(\n    utils.concatArrays(SIGN_PROGRAM_DATA_PREFIX, parts)\n  );\n  return nacl.sign(toBeSigned, sk);\n}\n\n/**\n * verifyTealSign verifies a signature as would the ed25519verify opcode\n * @param data - buffer with original signed data\n * @param programHash - string representation of teal program hash (= contract address for LogicSigs)\n * @param sig - uint8array with the signature to verify (produced by tealSign/tealSignFromProgram)\n * @param pk - uint8array with public key to verify against\n */\nexport function verifyTealSign(\n  data: Uint8Array | Buffer,\n  programHash: string,\n  sig: Uint8Array,\n  pk: Uint8Array\n) {\n  const parts = utils.concatArrays(\n    address.decodeAddress(programHash).publicKey,\n    data\n  );\n  const toBeSigned = Buffer.from(\n    utils.concatArrays(SIGN_PROGRAM_DATA_PREFIX, parts)\n  );\n  return nacl.verify(toBeSigned, sig, pk);\n}\n\n/**\n * tealSignFromProgram creates a signature compatible with ed25519verify opcode from raw program bytes\n * @param sk - uint8array with secret key\n * @param data - buffer with data to sign\n * @param program - buffer with teal program\n */\nexport function tealSignFromProgram(\n  sk: Uint8Array,\n  data: Uint8Array | Buffer,\n  program: Uint8Array\n) {\n  const lsig = new LogicSig(program);\n  const contractAddress = lsig.address();\n  return tealSign(sk, data, contractAddress);\n}\n","/** @type {Record<string, number>} */\nlet char_to_integer = {};\n\n/** @type {Record<number, string>} */\nlet integer_to_char = {};\n\n'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/='\n\t.split('')\n\t.forEach(function (char, i) {\n\t\tchar_to_integer[char] = i;\n\t\tinteger_to_char[i] = char;\n\t});\n\n/** @param {string} string */\nexport function decode(string) {\n\t/** @type {number[]} */\n\tlet result = [];\n\n\tlet shift = 0;\n\tlet value = 0;\n\n\tfor (let i = 0; i < string.length; i += 1) {\n\t\tlet integer = char_to_integer[string[i]];\n\n\t\tif (integer === undefined) {\n\t\t\tthrow new Error('Invalid character (' + string[i] + ')');\n\t\t}\n\n\t\tconst has_continuation_bit = integer & 32;\n\n\t\tinteger &= 31;\n\t\tvalue += integer << shift;\n\n\t\tif (has_continuation_bit) {\n\t\t\tshift += 5;\n\t\t} else {\n\t\t\tconst should_negate = value & 1;\n\t\t\tvalue >>>= 1;\n\n\t\t\tif (should_negate) {\n\t\t\t\tresult.push(value === 0 ? -0x80000000 : -value);\n\t\t\t} else {\n\t\t\t\tresult.push(value);\n\t\t\t}\n\n\t\t\t// reset\n\t\t\tvalue = shift = 0;\n\t\t}\n\t}\n\n\treturn result;\n}\n\n/** @param {number | number[]} value */\nexport function encode(value) {\n\tif (typeof value === 'number') {\n\t\treturn encode_integer(value);\n\t}\n\n\tlet result = '';\n\tfor (let i = 0; i < value.length; i += 1) {\n\t\tresult += encode_integer(value[i]);\n\t}\n\n\treturn result;\n}\n\n/** @param {number} num */\nfunction encode_integer(num) {\n\tlet result = '';\n\n\tif (num < 0) {\n\t\tnum = (-num << 1) | 1;\n\t} else {\n\t\tnum <<= 1;\n\t}\n\n\tdo {\n\t\tlet clamped = num & 31;\n\t\tnum >>>= 5;\n\n\t\tif (num > 0) {\n\t\t\tclamped |= 32;\n\t\t}\n\n\t\tresult += integer_to_char[clamped];\n\t} while (num > 0);\n\n\treturn result;\n}\n","import * as vlq from 'vlq';\n\nexport class SourceMap {\n  version: number;\n  sources: string[];\n  names: string[];\n  mappings: string;\n\n  pcToLine: { [key: number]: number };\n  lineToPc: { [key: number]: number[] };\n\n  constructor({\n    version,\n    sources,\n    names,\n    mappings,\n  }: {\n    version: number;\n    sources: string[];\n    names: string[];\n    mappings: string;\n  }) {\n    this.version = version;\n    this.sources = sources;\n    this.names = names;\n    this.mappings = mappings;\n\n    if (this.version !== 3)\n      throw new Error(`Only version 3 is supported, got ${this.version}`);\n\n    if (this.mappings === undefined)\n      throw new Error(\n        'mapping undefined, cannot build source map without `mapping`'\n      );\n\n    const pcList = this.mappings.split(';').map((m) => {\n      const decoded = vlq.decode(m);\n      if (decoded.length > 2) return decoded[2];\n      return undefined;\n    });\n\n    this.pcToLine = {};\n    this.lineToPc = {};\n\n    let lastLine = 0;\n    for (const [pc, lineDelta] of pcList.entries()) {\n      // If the delta is not undefined, the lastLine should be updated with\n      // lastLine + the delta\n      if (lineDelta !== undefined) {\n        lastLine += lineDelta;\n      }\n\n      if (!(lastLine in this.lineToPc)) this.lineToPc[lastLine] = [];\n\n      this.lineToPc[lastLine].push(pc);\n      this.pcToLine[pc] = lastLine;\n    }\n  }\n\n  getLineForPc(pc: number): number | undefined {\n    return this.pcToLine[pc];\n  }\n\n  getPcsForLine(line: number): number[] | undefined {\n    return this.lineToPc[line];\n  }\n}\n","import PaymentTxn from './payment';\nimport KeyRegistrationTxn from './keyreg';\nimport {\n  AssetCreateTransaction as AssetCreateTxn,\n  AssetConfigurationTransaction as AssetConfigTxn,\n  AssetDestroyTransaction as AssetDestroyTxn,\n  AssetFreezeTransaction as AssetFreezeTxn,\n  AssetTransferTransaction as AssetTransferTxn,\n} from './asset';\nimport {\n  ApplicationCreateTransaction as AppCreateTxn,\n  ApplicationUpdateTransaction as AppUpdateTxn,\n  ApplicationDeleteTransaction as AppDeleteTxn,\n  ApplicationOptInTransaction as AppOptInTxn,\n  ApplicationCloseOutTransaction as AppCloseOutTxn,\n  ApplicationClearStateTransaction as AppClearStateTxn,\n  ApplicationNoOpTransaction as AppNoOpTxn,\n} from './application';\nimport StateProofTxn from './stateproof';\n\n// Utilities\nexport {\n  TransactionParams,\n  TransactionType,\n  SuggestedParams,\n  BoxReference,\n} from './base';\nexport {\n  MustHaveSuggestedParams,\n  MustHaveSuggestedParamsInline,\n} from './builder';\nexport * from './encoded';\n\n// Transaction types\nexport { default as PaymentTxn } from './payment';\nexport { default as KeyRegistrationTxn } from './keyreg';\nexport {\n  AssetCreateTransaction as AssetCreateTxn,\n  AssetConfigurationTransaction as AssetConfigTxn,\n  AssetDestroyTransaction as AssetDestroyTxn,\n  AssetFreezeTransaction as AssetFreezeTxn,\n  AssetTransferTransaction as AssetTransferTxn,\n} from './asset';\nexport {\n  ApplicationCreateTransaction as AppCreateTxn,\n  ApplicationUpdateTransaction as AppUpdateTxn,\n  ApplicationDeleteTransaction as AppDeleteTxn,\n  ApplicationOptInTransaction as AppOptInTxn,\n  ApplicationCloseOutTransaction as AppCloseOutTxn,\n  ApplicationClearStateTransaction as AppClearStateTxn,\n  ApplicationNoOpTransaction as AppNoOpTxn,\n} from './application';\nexport { default as StateProofTxn } from './stateproof';\n\n// All possible transaction types\ntype AnyTransaction =\n  | PaymentTxn\n  | KeyRegistrationTxn\n  | AssetCreateTxn\n  | AssetConfigTxn\n  | AssetDestroyTxn\n  | AssetFreezeTxn\n  | AssetTransferTxn\n  | AppCreateTxn\n  | AppUpdateTxn\n  | AppDeleteTxn\n  | AppOptInTxn\n  | AppCloseOutTxn\n  | AppClearStateTxn\n  | AppNoOpTxn\n  | StateProofTxn;\nexport default AnyTransaction;\n","import { Buffer } from 'buffer';\nimport AlgodClient from './client/v2/algod/algod';\nimport {\n  AccountStateDelta,\n  Application,\n  ApplicationParams,\n  ApplicationStateSchema,\n  DryrunRequest,\n  DryrunSource,\n  EvalDeltaKeyValue,\n  TealValue,\n} from './client/v2/algod/models/types';\nimport { SignedTransaction } from './transaction';\nimport { TransactionType } from './types/transactions';\nimport { encodeAddress, getApplicationAddress } from './encoding/address';\n\nconst defaultAppId = 1380011588;\nconst defaultMaxWidth = 30;\n\n// When writing the DryrunRequest object as msgpack the output needs to be the byte arrays not b64 string\ninterface AppParamsWithPrograms {\n  ['approval-program']: string | Uint8Array;\n  ['clear-state-program']: string | Uint8Array;\n  ['creator']: string;\n}\n\ninterface AppWithAppParams {\n  ['params']: AppParamsWithPrograms;\n}\n\nfunction decodePrograms(ap: AppWithAppParams): AppWithAppParams {\n  // eslint-disable-next-line no-param-reassign\n  ap.params['approval-program'] = Buffer.from(\n    ap.params['approval-program'].toString(),\n    'base64'\n  );\n  // eslint-disable-next-line no-param-reassign\n  ap.params['clear-state-program'] = Buffer.from(\n    ap.params['clear-state-program'].toString(),\n    'base64'\n  );\n\n  return ap;\n}\n\n/**\n * createDryrun takes an Algod Client (from algod.AlgodV2Client) and an array of Signed Transactions\n * from (transaction.SignedTransaction) and creates a DryrunRequest object with relevant balances\n * @param client - the AlgodClient to make requests against\n * @param txns - the array of SignedTransaction to use for generating the DryrunRequest object\n * @param protocolVersion - the string representing the protocol version to use\n * @param latestTimestamp - the timestamp\n * @returns the DryrunRequest object constructed from the SignedTransactions passed\n */\nexport async function createDryrun({\n  client,\n  txns,\n  protocolVersion,\n  latestTimestamp,\n  round,\n  sources,\n}: {\n  client: AlgodClient;\n  txns: SignedTransaction[];\n  protocolVersion?: string;\n  latestTimestamp?: number | bigint;\n  round?: number | bigint;\n  sources?: DryrunSource[];\n}): Promise<DryrunRequest> {\n  const appInfos = [];\n  const acctInfos = [];\n\n  const apps: number[] = [];\n  const assets: number[] = [];\n  const accts: string[] = [];\n\n  for (const t of txns) {\n    if (t.txn.type === TransactionType.appl) {\n      accts.push(encodeAddress(t.txn.from.publicKey));\n\n      if (t.txn.appAccounts)\n        accts.push(...t.txn.appAccounts.map((a) => encodeAddress(a.publicKey)));\n\n      if (t.txn.appForeignApps) {\n        apps.push(...t.txn.appForeignApps);\n        accts.push(\n          ...t.txn.appForeignApps.map((aidx) => getApplicationAddress(aidx))\n        );\n      }\n\n      if (t.txn.appForeignAssets) assets.push(...t.txn.appForeignAssets);\n\n      // Create application,\n      if (t.txn.appIndex === undefined || t.txn.appIndex === 0) {\n        appInfos.push(\n          new Application({\n            id: defaultAppId,\n            params: new ApplicationParams({\n              creator: encodeAddress(t.txn.from.publicKey),\n              approvalProgram: t.txn.appApprovalProgram,\n              clearStateProgram: t.txn.appClearProgram,\n              localStateSchema: new ApplicationStateSchema({\n                numUint: t.txn.appLocalInts,\n                numByteSlice: t.txn.appLocalByteSlices,\n              }),\n              globalStateSchema: new ApplicationStateSchema({\n                numUint: t.txn.appGlobalInts,\n                numByteSlice: t.txn.appGlobalByteSlices,\n              }),\n            }),\n          })\n        );\n      } else {\n        apps.push(t.txn.appIndex);\n        accts.push(getApplicationAddress(t.txn.appIndex));\n      }\n    }\n  }\n\n  // Dedupe and add creator to accts array\n  const assetPromises = [];\n  for (const assetId of [...new Set(assets)]) {\n    assetPromises.push(\n      client\n        .getAssetByID(assetId)\n        .do()\n        .then((assetInfo) => {\n          accts.push(assetInfo.params.creator);\n        })\n    );\n  }\n  // Wait for assets to finish since we append to accts array\n  await Promise.all(assetPromises);\n\n  // Dedupe and get app info for all apps\n  const appPromises = [];\n  for (const appId of [...new Set(apps)]) {\n    appPromises.push(\n      client\n        .getApplicationByID(appId)\n        .do()\n        .then((appInfo) => {\n          const ai = decodePrograms(appInfo as AppWithAppParams);\n          appInfos.push(ai);\n          accts.push(ai.params.creator);\n        })\n    );\n  }\n  await Promise.all(appPromises);\n\n  const acctPromises = [];\n  for (const acct of [...new Set(accts)]) {\n    acctPromises.push(\n      client\n        .accountInformation(acct)\n        .do()\n        .then((acctInfo) => {\n          if ('created-apps' in acctInfo) {\n            // eslint-disable-next-line no-param-reassign\n            acctInfo['created-apps'] = acctInfo['created-apps'].map((app) =>\n              decodePrograms(app)\n            );\n          }\n          acctInfos.push(acctInfo);\n        })\n    );\n  }\n  await Promise.all(acctPromises);\n\n  return new DryrunRequest({\n    txns: txns.map((st) => ({ ...st, txn: st.txn.get_obj_for_encoding() })),\n    accounts: acctInfos,\n    apps: appInfos,\n    latestTimestamp,\n    round,\n    protocolVersion,\n    sources,\n  });\n}\n\ninterface StackValueResponse {\n  type: number;\n  bytes: string;\n  uint: number;\n}\n\nclass DryrunStackValue {\n  type: number = 0;\n  bytes: string = '';\n  uint: number = 0;\n\n  constructor(sv: StackValueResponse) {\n    this.type = sv.type;\n    this.bytes = sv.bytes;\n    this.uint = sv.uint;\n  }\n\n  toString(): string {\n    if (this.type === 1) {\n      return `0x${Buffer.from(this.bytes, 'base64').toString('hex')}`;\n    }\n    return this.uint.toString();\n  }\n}\n\ninterface DryrunTraceLineResponse {\n  error: string;\n  line: number;\n  pc: number;\n  scratch: TealValue[];\n  stack: StackValueResponse[];\n}\n\nclass DryrunTraceLine {\n  error: string = '';\n  line: number = 0;\n  pc: number = 0;\n  scratch: TealValue[] = [];\n  stack: DryrunStackValue[] = [];\n\n  constructor(line: DryrunTraceLineResponse) {\n    this.error = line.error === undefined ? '' : line.error;\n    this.line = line.line;\n    this.pc = line.pc;\n    this.scratch = line.scratch;\n    this.stack = line.stack.map(\n      (sv: StackValueResponse) => new DryrunStackValue(sv)\n    );\n  }\n}\n\nclass DryrunTrace {\n  trace: DryrunTraceLine[] = [];\n  constructor(t: DryrunTraceLineResponse[]) {\n    if (t == null) return;\n    this.trace = t.map((line) => new DryrunTraceLine(line));\n  }\n}\n\ninterface DryrunTransactionResultResponse {\n  disassembly: string[];\n  appCallMessages: string[] | undefined;\n  localDeltas: AccountStateDelta[] | undefined;\n  globalDelta: EvalDeltaKeyValue[] | undefined;\n  cost: number | undefined;\n  logicSigMessages: string[] | undefined;\n  logicSigDisassembly: string[] | undefined;\n  logs: string[] | undefined;\n  appCallTrace: DryrunTrace | undefined;\n  logicSigTrace: DryrunTrace | undefined;\n}\n\ninterface StackPrinterConfig {\n  maxValueWidth: number | undefined;\n  topOfStackFirst: boolean | undefined;\n}\n\nfunction truncate(str: string, maxValueWidth: number): string {\n  if (str.length > maxValueWidth && maxValueWidth > 0) {\n    return `${str.slice(0, maxValueWidth)}...`;\n  }\n  return str;\n}\n\nfunction scratchToString(\n  prevScratch: TealValue[],\n  currScratch: TealValue[]\n): string {\n  if (currScratch.length === 0) return '';\n\n  let newScratchIdx = null;\n  for (let idx = 0; idx < currScratch.length; idx++) {\n    if (idx > prevScratch.length) {\n      newScratchIdx = idx;\n      continue;\n    }\n\n    if (JSON.stringify(prevScratch[idx]) !== JSON.stringify(currScratch[idx])) {\n      newScratchIdx = idx;\n    }\n  }\n\n  if (newScratchIdx == null) return '';\n\n  const newScratch = currScratch[newScratchIdx];\n  if (newScratch.bytes.length > 0) {\n    return `${newScratchIdx} = 0x${Buffer.from(\n      newScratch.bytes,\n      'base64'\n    ).toString('hex')}`;\n  }\n  return `${newScratchIdx} = ${newScratch.uint.toString()}`;\n}\n\nfunction stackToString(stack: DryrunStackValue[], reverse: boolean): string {\n  const svs = reverse ? stack.reverse() : stack;\n  return `[${svs\n    .map((sv: DryrunStackValue) => {\n      switch (sv.type) {\n        case 1:\n          return `0x${Buffer.from(sv.bytes, 'base64').toString('hex')}`;\n        case 2:\n          return `${sv.uint.toString()}`;\n        default:\n          return '';\n      }\n    })\n    .join(', ')}]`;\n}\n\nclass DryrunTransactionResult {\n  disassembly: string[] = [];\n  appCallMessages: string[] | undefined = [];\n  localDeltas: AccountStateDelta[] | undefined = [];\n  globalDelta: EvalDeltaKeyValue[] | undefined = [];\n  cost: number | undefined = 0;\n  logicSigMessages: string[] | undefined = [];\n  logicSigDisassembly: string[] | undefined = [];\n  logs: string[] | undefined = [];\n\n  appCallTrace: DryrunTrace | undefined = undefined;\n  logicSigTrace: DryrunTrace | undefined = undefined;\n\n  required = ['disassembly'];\n  optionals = [\n    'app-call-messages',\n    'local-deltas',\n    'global-delta',\n    'cost',\n    'logic-sig-messages',\n    'logic-sig-disassembly',\n    'logs',\n  ];\n\n  traces = ['app-call-trace', 'logic-sig-trace'];\n\n  constructor(dtr: DryrunTransactionResultResponse) {\n    this.disassembly = dtr.disassembly;\n    this.appCallMessages = dtr['app-call-messages'];\n    this.localDeltas = dtr['local-deltas'];\n    this.globalDelta = dtr['global-delta'];\n    this.cost = dtr.cost;\n    this.logicSigMessages = dtr['logic-sig-messages'];\n    this.logicSigDisassembly = dtr['logic-sig-disassembly'];\n    this.logs = dtr.logs;\n    this.appCallTrace = new DryrunTrace(dtr['app-call-trace']);\n    this.logicSigTrace = new DryrunTrace(dtr['logic-sig-trace']);\n  }\n\n  appCallRejected(): boolean {\n    return (\n      this.appCallMessages !== undefined &&\n      this.appCallMessages.includes('REJECT')\n    );\n  }\n\n  logicSigRejected(): boolean {\n    return (\n      this.logicSigMessages !== undefined &&\n      this.logicSigMessages.includes('REJECT')\n    );\n  }\n\n  static trace(\n    drt: DryrunTrace,\n    disassembly: string[],\n    spc: StackPrinterConfig\n  ): string {\n    const maxWidth = spc.maxValueWidth || defaultMaxWidth;\n\n    // Create the array of arrays, each sub array contains N columns\n    const lines = [['pc#', 'ln#', 'source', 'scratch', 'stack']];\n    for (let idx = 0; idx < drt.trace.length; idx++) {\n      const { line, error, pc, scratch, stack } = drt.trace[idx];\n\n      const currScratch = scratch !== undefined ? scratch : [];\n      const prevScratch =\n        idx > 0 && drt.trace[idx - 1].scratch !== undefined\n          ? drt.trace[idx - 1].scratch\n          : [];\n\n      const src = error === '' ? disassembly[line] : `!! ${error} !!`;\n\n      lines.push([\n        pc.toString().padEnd(3, ' '),\n        line.toString().padEnd(3, ' '),\n        truncate(src, maxWidth),\n        truncate(scratchToString(prevScratch, currScratch), maxWidth),\n        truncate(stackToString(stack, spc.topOfStackFirst), maxWidth),\n      ]);\n    }\n\n    // Get the max length for each column\n    const maxLengths = lines.reduce((prev, curr) => {\n      const newVal = new Array(lines[0].length).fill(0);\n      for (let idx = 0; idx < prev.length; idx++) {\n        newVal[idx] =\n          curr[idx].length > prev[idx] ? curr[idx].length : prev[idx];\n      }\n      return newVal;\n    }, new Array(lines[0].length).fill(0));\n\n    return `${lines\n      .map((line) =>\n        line\n          .map((v, idx) => v.padEnd(maxLengths[idx] + 1, ' '))\n          .join('|')\n          .trim()\n      )\n      .join('\\n')}\\n`;\n  }\n\n  appTrace(spc?: StackPrinterConfig): string {\n    if (this.appCallTrace === undefined || !this.disassembly) return '';\n\n    let conf = spc;\n    if (spc === undefined)\n      conf = {\n        maxValueWidth: defaultMaxWidth,\n        topOfStackFirst: false,\n      } as StackPrinterConfig;\n\n    return DryrunTransactionResult.trace(\n      this.appCallTrace,\n      this.disassembly,\n      conf\n    );\n  }\n\n  lsigTrace(spc?: StackPrinterConfig): string {\n    if (\n      this.logicSigTrace === undefined ||\n      this.logicSigDisassembly === undefined\n    )\n      return '';\n\n    let conf = spc;\n    if (spc === undefined)\n      conf = {\n        maxValueWidth: defaultMaxWidth,\n        topOfStackFirst: true,\n      } as StackPrinterConfig;\n\n    return DryrunTransactionResult.trace(\n      this.logicSigTrace,\n      this.logicSigDisassembly,\n      conf\n    );\n  }\n}\n\ninterface DryrunResultResponse {\n  ['error']: string;\n  ['protocol-version']: string;\n  ['txns']: DryrunTransactionResultResponse[];\n}\n\nexport class DryrunResult {\n  error: string = '';\n  protocolVersion: string = '';\n  txns: DryrunTransactionResult[] = [];\n  constructor(drrResp: DryrunResultResponse) {\n    this.error = drrResp.error;\n    this.protocolVersion = drrResp['protocol-version'];\n    this.txns = drrResp.txns.map(\n      (txn: DryrunTransactionResultResponse) => new DryrunTransactionResult(txn)\n    );\n  }\n}\n","import * as txnBuilder from './transaction';\nimport { OnApplicationComplete } from './types/transactions/base';\nimport {\n  // Transaction types\n  PaymentTxn,\n  KeyRegistrationTxn,\n\n  // Utilities\n  TransactionType,\n  MustHaveSuggestedParams,\n  AssetCreateTxn,\n  AssetConfigTxn,\n  AssetDestroyTxn,\n  AssetFreezeTxn,\n  AssetTransferTxn,\n  AppCreateTxn,\n  AppUpdateTxn,\n  AppDeleteTxn,\n  AppOptInTxn,\n  AppCloseOutTxn,\n  AppClearStateTxn,\n  AppNoOpTxn,\n} from './types/transactions';\nimport { RenameProperties, RenameProperty, Expand } from './types/utils';\n\n/**\n * makePaymentTxnWithSuggestedParams takes payment arguments and returns a Transaction object\n * @param from - string representation of Algorand address of sender\n * @param to - string representation of Algorand address of recipient\n * @param amount - integer amount to send, in microAlgos\n * @param closeRemainderTo - optionally close out remaining account balance to this account, represented as string rep of Algorand address\n * @param note - uint8array of arbitrary data for sender to store\n * @param suggestedParams - a dict holding common-to-all-txns args:\n * fee - integer fee per byte, in microAlgos. for a flat fee, set flatFee to true\n * flatFee - bool optionally set this to true to specify fee as microalgos-per-txn\n *       If true, txn fee may fall below the ALGORAND_MIN_TX_FEE\n * firstRound - integer first protocol round on which this txn is valid\n * lastRound - integer last protocol round on which this txn is valid\n * genesisHash - string specifies hash genesis block of network in use\n * genesisID - string specifies genesis ID of network in use\n * @param rekeyTo - rekeyTo address, optional\n */\nexport function makePaymentTxnWithSuggestedParams(\n  from: PaymentTxn['from'],\n  to: PaymentTxn['to'],\n  amount: PaymentTxn['amount'],\n  closeRemainderTo: PaymentTxn['closeRemainderTo'],\n  note: PaymentTxn['note'],\n  suggestedParams: MustHaveSuggestedParams<PaymentTxn>['suggestedParams'],\n  rekeyTo?: PaymentTxn['reKeyTo']\n) {\n  const o: PaymentTxn = {\n    from,\n    to,\n    amount,\n    closeRemainderTo,\n    note,\n    suggestedParams,\n    type: TransactionType.pay,\n    reKeyTo: rekeyTo,\n  };\n  return new txnBuilder.Transaction(o);\n}\n\n// helper for above makePaymentTxnWithSuggestedParams, instead accepting an arguments object\nexport function makePaymentTxnWithSuggestedParamsFromObject(\n  o: Expand<\n    Pick<\n      RenameProperty<MustHaveSuggestedParams<PaymentTxn>, 'reKeyTo', 'rekeyTo'>,\n      | 'from'\n      | 'to'\n      | 'amount'\n      | 'closeRemainderTo'\n      | 'note'\n      | 'suggestedParams'\n      | 'rekeyTo'\n    >\n  >\n) {\n  return makePaymentTxnWithSuggestedParams(\n    o.from,\n    o.to,\n    o.amount,\n    o.closeRemainderTo,\n    o.note,\n    o.suggestedParams,\n    o.rekeyTo\n  );\n}\n\n/**\n * makeKeyRegistrationTxnWithSuggestedParams takes key registration arguments and returns a Transaction object for\n * that key registration operation\n *\n * @param from - string representation of Algorand address of sender\n * @param note - uint8array of arbitrary data for sender to store\n * @param voteKey - voting key. for key deregistration, leave undefined\n * @param selectionKey - selection key. for key deregistration, leave undefined\n * @param voteFirst - first round on which voteKey is valid\n * @param voteLast - last round on which voteKey is valid\n * @param voteKeyDilution - integer\n * @param suggestedParams - a dict holding common-to-all-txns args:\n * fee - integer fee per byte, in microAlgos. for a flat fee, set flatFee to true\n * flatFee - bool optionally set this to true to specify fee as microalgos-per-txn\n *       If true, txn fee may fall below the ALGORAND_MIN_TX_FEE\n * firstRound - integer first protocol round on which this txn is valid\n * lastRound - integer last protocol round on which this txn is valid\n * genesisHash - string specifies hash genesis block of network in use\n * genesisID - string specifies genesis ID of network in use\n * @param rekeyTo - rekeyTo address, optional\n * @param nonParticipation - configure whether the address wants to stop participating. If true,\n *   voteKey, selectionKey, voteFirst, voteLast, and voteKeyDilution must be undefined.\n * @param stateProofKey - state proof key. for key deregistration, leave undefined\n */\nexport function makeKeyRegistrationTxnWithSuggestedParams(\n  from: KeyRegistrationTxn['from'],\n  note: KeyRegistrationTxn['note'],\n  voteKey: KeyRegistrationTxn['voteKey'],\n  selectionKey: KeyRegistrationTxn['selectionKey'],\n  voteFirst: KeyRegistrationTxn['voteFirst'],\n  voteLast: KeyRegistrationTxn['voteLast'],\n  voteKeyDilution: KeyRegistrationTxn['voteKeyDilution'],\n  suggestedParams: MustHaveSuggestedParams<KeyRegistrationTxn>['suggestedParams'],\n  rekeyTo?: KeyRegistrationTxn['reKeyTo'],\n  nonParticipation?: false,\n  stateProofKey?: KeyRegistrationTxn['stateProofKey']\n): txnBuilder.Transaction;\nexport function makeKeyRegistrationTxnWithSuggestedParams(\n  from: KeyRegistrationTxn['from'],\n  note: KeyRegistrationTxn['note'],\n  voteKey: undefined,\n  selectionKey: undefined,\n  voteFirst: undefined,\n  voteLast: undefined,\n  voteKeyDilution: undefined,\n  suggestedParams: MustHaveSuggestedParams<KeyRegistrationTxn>['suggestedParams'],\n  rekeyTo?: KeyRegistrationTxn['reKeyTo'],\n  nonParticipation?: true,\n  stateProofKey?: undefined\n): txnBuilder.Transaction;\nexport function makeKeyRegistrationTxnWithSuggestedParams(\n  from: any,\n  note: any,\n  voteKey: any,\n  selectionKey: any,\n  voteFirst: any,\n  voteLast: any,\n  voteKeyDilution: any,\n  suggestedParams: any,\n  rekeyTo?: any,\n  nonParticipation = false,\n  stateProofKey: any = undefined\n) {\n  const o: KeyRegistrationTxn = {\n    from,\n    note,\n    voteKey,\n    selectionKey,\n    voteFirst,\n    voteLast,\n    voteKeyDilution,\n    suggestedParams,\n    type: TransactionType.keyreg,\n    reKeyTo: rekeyTo,\n    nonParticipation,\n    stateProofKey,\n  };\n  return new txnBuilder.Transaction(o);\n}\n\n// helper for above makeKeyRegistrationTxnWithSuggestedParams, instead accepting an arguments object\nexport function makeKeyRegistrationTxnWithSuggestedParamsFromObject(\n  o: Expand<\n    Pick<\n      RenameProperty<\n        MustHaveSuggestedParams<KeyRegistrationTxn>,\n        'reKeyTo',\n        'rekeyTo'\n      >,\n      | 'from'\n      | 'note'\n      | 'voteKey'\n      | 'selectionKey'\n      | 'stateProofKey'\n      | 'voteFirst'\n      | 'voteLast'\n      | 'voteKeyDilution'\n      | 'suggestedParams'\n      | 'rekeyTo'\n    > & {\n      nonParticipation?: false;\n    }\n  >\n): txnBuilder.Transaction;\nexport function makeKeyRegistrationTxnWithSuggestedParamsFromObject(\n  o: Expand<\n    Pick<\n      RenameProperty<\n        MustHaveSuggestedParams<KeyRegistrationTxn>,\n        'reKeyTo',\n        'rekeyTo'\n      >,\n      'from' | 'note' | 'suggestedParams' | 'rekeyTo' | 'nonParticipation'\n    >\n  >\n): txnBuilder.Transaction;\nexport function makeKeyRegistrationTxnWithSuggestedParamsFromObject(o: any) {\n  return makeKeyRegistrationTxnWithSuggestedParams(\n    o.from,\n    o.note,\n    o.voteKey,\n    o.selectionKey,\n    o.voteFirst,\n    o.voteLast,\n    o.voteKeyDilution,\n    o.suggestedParams,\n    o.rekeyTo,\n    o.nonParticipation,\n    o.stateProofKey\n  );\n}\n\n/** makeAssetCreateTxnWithSuggestedParams takes asset creation arguments and returns a Transaction object\n * for creating that asset\n *\n * @param from - string representation of Algorand address of sender\n * @param note - uint8array of arbitrary data for sender to store\n * @param total - integer total supply of the asset\n * @param decimals - integer number of decimals for asset unit calculation\n * @param defaultFrozen - boolean whether asset accounts should default to being frozen\n * @param manager - string representation of Algorand address in charge of reserve, freeze, clawback, destruction, etc\n * @param reserve - string representation of Algorand address representing asset reserve\n * @param freeze - string representation of Algorand address with power to freeze/unfreeze asset holdings\n * @param clawback - string representation of Algorand address with power to revoke asset holdings\n * @param unitName - string units name for this asset\n * @param assetName - string name for this asset\n * @param assetURL - string URL relating to this asset\n * @param assetMetadataHash - Uint8Array or UTF-8 string representation of a hash commitment with respect to the asset. Must be exactly 32 bytes long.\n * @param suggestedParams - a dict holding common-to-all-txns args:\n * fee - integer fee per byte, in microAlgos. for a flat fee, set flatFee to true\n * flatFee - bool optionally set this to true to specify fee as microalgos-per-txn\n *       If true, txn fee may fall below the ALGORAND_MIN_TX_FEE\n * firstRound - integer first protocol round on which this txn is valid\n * lastRound - integer last protocol round on which this txn is valid\n * genesisHash - string specifies hash genesis block of network in use\n * genesisID - string specifies genesis ID of network in use\n * @param rekeyTo - rekeyTo address, optional\n */\nexport function makeAssetCreateTxnWithSuggestedParams(\n  from: AssetCreateTxn['from'],\n  note: AssetCreateTxn['note'],\n  total: AssetCreateTxn['assetTotal'],\n  decimals: AssetCreateTxn['assetDecimals'],\n  defaultFrozen: AssetCreateTxn['assetDefaultFrozen'],\n  manager: AssetCreateTxn['assetManager'],\n  reserve: AssetCreateTxn['assetReserve'],\n  freeze: AssetCreateTxn['assetFreeze'],\n  clawback: AssetCreateTxn['assetClawback'],\n  unitName: AssetCreateTxn['assetUnitName'],\n  assetName: AssetCreateTxn['assetName'],\n  assetURL: AssetCreateTxn['assetURL'],\n  assetMetadataHash: AssetCreateTxn['assetMetadataHash'] | undefined,\n  suggestedParams: MustHaveSuggestedParams<AssetCreateTxn>['suggestedParams'],\n  rekeyTo?: AssetCreateTxn['reKeyTo']\n) {\n  const o: AssetCreateTxn = {\n    from,\n    note,\n    suggestedParams,\n    assetTotal: total,\n    assetDecimals: decimals,\n    assetDefaultFrozen: defaultFrozen,\n    assetUnitName: unitName,\n    assetName,\n    assetURL,\n    assetMetadataHash,\n    assetManager: manager,\n    assetReserve: reserve,\n    assetFreeze: freeze,\n    assetClawback: clawback,\n    type: TransactionType.acfg,\n    reKeyTo: rekeyTo,\n  };\n  return new txnBuilder.Transaction(o);\n}\n\n// helper for above makeAssetCreateTxnWithSuggestedParams, instead accepting an arguments object\nexport function makeAssetCreateTxnWithSuggestedParamsFromObject(\n  o: Expand<\n    Pick<\n      RenameProperties<\n        MustHaveSuggestedParams<AssetCreateTxn>,\n        {\n          reKeyTo: 'rekeyTo';\n          assetTotal: 'total';\n          assetDecimals: 'decimals';\n          assetDefaultFrozen: 'defaultFrozen';\n          assetManager: 'manager';\n          assetReserve: 'reserve';\n          assetFreeze: 'freeze';\n          assetClawback: 'clawback';\n          assetUnitName: 'unitName';\n        }\n      >,\n      | 'from'\n      | 'note'\n      | 'total'\n      | 'decimals'\n      | 'defaultFrozen'\n      | 'manager'\n      | 'reserve'\n      | 'freeze'\n      | 'clawback'\n      | 'unitName'\n      | 'assetName'\n      | 'assetURL'\n      | 'assetMetadataHash'\n      | 'suggestedParams'\n      | 'rekeyTo'\n    >\n  >\n) {\n  return makeAssetCreateTxnWithSuggestedParams(\n    o.from,\n    o.note,\n    o.total,\n    o.decimals,\n    o.defaultFrozen,\n    o.manager,\n    o.reserve,\n    o.freeze,\n    o.clawback,\n    o.unitName,\n    o.assetName,\n    o.assetURL,\n    o.assetMetadataHash,\n    o.suggestedParams,\n    o.rekeyTo\n  );\n}\n\n/** makeAssetConfigTxnWithSuggestedParams can be issued by the asset manager to change the manager, reserve, freeze, or clawback\n * you must respecify existing addresses to keep them the same; leaving a field blank is the same as turning\n * that feature off for this asset\n *\n * @param from - string representation of Algorand address of sender\n * @param note - uint8array of arbitrary data for sender to store\n * @param assetIndex - int asset index uniquely specifying the asset\n * @param manager - string representation of new asset manager Algorand address\n * @param reserve - string representation of new reserve Algorand address\n * @param freeze - string representation of new freeze manager Algorand address\n * @param clawback - string representation of new revocation manager Algorand address\n * @param strictEmptyAddressChecking - boolean - throw an error if any of manager, reserve, freeze, or clawback are undefined. optional, defaults to true.\n * @param suggestedParams - a dict holding common-to-all-txns args:\n * fee - integer fee per byte, in microAlgos. for a flat fee, set flatFee to true\n * flatFee - bool optionally set this to true to specify fee as microalgos-per-txn\n *       If true, txn fee may fall below the ALGORAND_MIN_TX_FEE\n * firstRound - integer first protocol round on which this txn is valid\n * lastRound - integer last protocol round on which this txn is valid\n * genesisHash - string specifies hash genesis block of network in use\n * genesisID - string specifies genesis ID of network in use\n * @param rekeyTo - rekeyTo address, optional\n */\nexport function makeAssetConfigTxnWithSuggestedParams(\n  from: AssetConfigTxn['from'],\n  note: AssetConfigTxn['note'],\n  assetIndex: AssetConfigTxn['assetIndex'],\n  manager: AssetConfigTxn['assetManager'],\n  reserve: AssetConfigTxn['assetReserve'],\n  freeze: AssetConfigTxn['assetFreeze'],\n  clawback: AssetConfigTxn['assetClawback'],\n  suggestedParams: MustHaveSuggestedParams<AssetConfigTxn>['suggestedParams'],\n  strictEmptyAddressChecking = true,\n  rekeyTo?: AssetConfigTxn['reKeyTo']\n) {\n  if (\n    strictEmptyAddressChecking &&\n    (manager === undefined ||\n      reserve === undefined ||\n      freeze === undefined ||\n      clawback === undefined)\n  ) {\n    throw Error(\n      'strict empty address checking was turned on, but at least one empty address was provided'\n    );\n  }\n  const o: AssetConfigTxn = {\n    from,\n    suggestedParams,\n    assetIndex,\n    assetManager: manager,\n    assetReserve: reserve,\n    assetFreeze: freeze,\n    assetClawback: clawback,\n    type: TransactionType.acfg,\n    note,\n    reKeyTo: rekeyTo,\n  };\n  return new txnBuilder.Transaction(o);\n}\n\n// helper for above makeAssetConfigTxnWithSuggestedParams, instead accepting an arguments object\nexport function makeAssetConfigTxnWithSuggestedParamsFromObject(\n  o: Expand<\n    Pick<\n      RenameProperties<\n        MustHaveSuggestedParams<AssetConfigTxn>,\n        {\n          reKeyTo: 'rekeyTo';\n          assetManager: 'manager';\n          assetReserve: 'reserve';\n          assetFreeze: 'freeze';\n          assetClawback: 'clawback';\n        }\n      >,\n      | 'from'\n      | 'note'\n      | 'assetIndex'\n      | 'manager'\n      | 'reserve'\n      | 'freeze'\n      | 'clawback'\n      | 'suggestedParams'\n      | 'rekeyTo'\n    > & {\n      strictEmptyAddressChecking: boolean;\n    }\n  >\n) {\n  return makeAssetConfigTxnWithSuggestedParams(\n    o.from,\n    o.note,\n    o.assetIndex,\n    o.manager,\n    o.reserve,\n    o.freeze,\n    o.clawback,\n    o.suggestedParams,\n    o.strictEmptyAddressChecking,\n    o.rekeyTo\n  );\n}\n\n/** makeAssetDestroyTxnWithSuggestedParams will allow the asset's manager to remove this asset from the ledger, so long\n * as all outstanding assets are held by the creator.\n *\n * @param from - string representation of Algorand address of sender\n * @param note - uint8array of arbitrary data for sender to store\n * @param assetIndex - int asset index uniquely specifying the asset\n * @param suggestedParams - a dict holding common-to-all-txns args:\n * fee - integer fee per byte, in microAlgos. for a flat fee, set flatFee to true\n * flatFee - bool optionally set this to true to specify fee as microalgos-per-txn\n *       If true, txn fee may fall below the ALGORAND_MIN_TX_FEE\n * firstRound - integer first protocol round on which this txn is valid\n * lastRound - integer last protocol round on which this txn is valid\n * genesisHash - string specifies hash genesis block of network in use\n * genesisID - string specifies genesis ID of network in use\n * @param rekeyTo - rekeyTo address, optional\n */\nexport function makeAssetDestroyTxnWithSuggestedParams(\n  from: AssetDestroyTxn['from'],\n  note: AssetDestroyTxn['note'],\n  assetIndex: AssetDestroyTxn['assetIndex'],\n  suggestedParams: MustHaveSuggestedParams<AssetDestroyTxn>['suggestedParams'],\n  rekeyTo?: AssetDestroyTxn['reKeyTo']\n) {\n  const o: AssetDestroyTxn = {\n    from,\n    suggestedParams,\n    assetIndex,\n    type: TransactionType.acfg,\n    note,\n    reKeyTo: rekeyTo,\n  };\n  return new txnBuilder.Transaction(o);\n}\n\n// helper for above makeAssetDestroyTxnWithSuggestedParams, instead accepting an arguments object\nexport function makeAssetDestroyTxnWithSuggestedParamsFromObject(\n  o: Expand<\n    Pick<\n      RenameProperty<\n        MustHaveSuggestedParams<AssetDestroyTxn>,\n        'reKeyTo',\n        'rekeyTo'\n      >,\n      'from' | 'note' | 'assetIndex' | 'suggestedParams' | 'rekeyTo'\n    >\n  >\n) {\n  return makeAssetDestroyTxnWithSuggestedParams(\n    o.from,\n    o.note,\n    o.assetIndex,\n    o.suggestedParams,\n    o.rekeyTo\n  );\n}\n\n/** makeAssetFreezeTxnWithSuggestedParams will allow the asset's freeze manager to freeze or un-freeze an account,\n * blocking or allowing asset transfers to and from the targeted account.\n *\n * @param from - string representation of Algorand address of sender\n * @param note - uint8array of arbitrary data for sender to store\n * @param assetIndex - int asset index uniquely specifying the asset\n * @param freezeTarget - string representation of Algorand address being frozen or unfrozen\n * @param freezeState - true if freezeTarget should be frozen, false if freezeTarget should be allowed to transact\n * @param suggestedParams - a dict holding common-to-all-txns args:\n * fee - integer fee per byte, in microAlgos. for a flat fee, set flatFee to true\n * flatFee - bool optionally set this to true to specify fee as microalgos-per-txn\n *       If true, txn fee may fall below the ALGORAND_MIN_TX_FEE\n * firstRound - integer first protocol round on which this txn is valid\n * lastRound - integer last protocol round on which this txn is valid\n * genesisHash - string specifies hash genesis block of network in use\n * genesisID - string specifies genesis ID of network in use\n * @param rekeyTo - rekeyTo address, optional\n */\nexport function makeAssetFreezeTxnWithSuggestedParams(\n  from: AssetFreezeTxn['from'],\n  note: AssetFreezeTxn['note'],\n  assetIndex: AssetFreezeTxn['assetIndex'],\n  freezeTarget: AssetFreezeTxn['freezeAccount'],\n  freezeState: AssetFreezeTxn['freezeState'],\n  suggestedParams: MustHaveSuggestedParams<AssetFreezeTxn>['suggestedParams'],\n  rekeyTo?: AssetFreezeTxn['reKeyTo']\n) {\n  const o: AssetFreezeTxn = {\n    from,\n    type: TransactionType.afrz,\n    freezeAccount: freezeTarget,\n    assetIndex,\n    freezeState,\n    note,\n    suggestedParams,\n    reKeyTo: rekeyTo,\n  };\n  return new txnBuilder.Transaction(o);\n}\n\n// helper for above makeAssetFreezeTxnWithSuggestedParams, instead accepting an arguments object\nexport function makeAssetFreezeTxnWithSuggestedParamsFromObject(\n  o: Expand<\n    Pick<\n      RenameProperties<\n        MustHaveSuggestedParams<AssetFreezeTxn>,\n        {\n          freezeAccount: 'freezeTarget';\n          reKeyTo: 'rekeyTo';\n        }\n      >,\n      | 'from'\n      | 'note'\n      | 'assetIndex'\n      | 'freezeTarget'\n      | 'freezeState'\n      | 'suggestedParams'\n      | 'rekeyTo'\n    >\n  >\n) {\n  return makeAssetFreezeTxnWithSuggestedParams(\n    o.from,\n    o.note,\n    o.assetIndex,\n    o.freezeTarget,\n    o.freezeState,\n    o.suggestedParams,\n    o.rekeyTo\n  );\n}\n\n/** makeAssetTransferTxnWithSuggestedParams allows for the creation of an asset transfer transaction.\n * Special case: to begin accepting assets, set amount=0 and from=to.\n *\n * @param from - string representation of Algorand address of sender\n * @param to - string representation of Algorand address of asset recipient\n * @param closeRemainderTo - optional - string representation of Algorand address - if provided,\n * send all remaining assets after transfer to the \"closeRemainderTo\" address and close \"from\"'s asset holdings\n * @param revocationTarget - optional - string representation of Algorand address - if provided,\n * and if \"from\" is the asset's revocation manager, then deduct from \"revocationTarget\" rather than \"from\"\n * @param amount - integer amount of assets to send\n * @param note - uint8array of arbitrary data for sender to store\n * @param assetIndex - int asset index uniquely specifying the asset\n * @param suggestedParams - a dict holding common-to-all-txns args:\n * fee - integer fee per byte, in microAlgos. for a flat fee, set flatFee to true\n * flatFee - bool optionally set this to true to specify fee as microalgos-per-txn\n *       If true, txn fee may fall below the ALGORAND_MIN_TX_FEE\n * * flatFee - bool optionally set this to true to specify fee as microalgos-per-txn\n *       If true, txn fee may fall below the ALGORAND_MIN_TX_FEE\n * firstRound - integer first protocol round on which this txn is valid\n * lastRound - integer last protocol round on which this txn is valid\n * genesisHash - string specifies hash genesis block of network in use\n * genesisID - string specifies genesis ID of network in use\n * @param rekeyTo - rekeyTo address, optional\n */\nexport function makeAssetTransferTxnWithSuggestedParams(\n  from: AssetTransferTxn['from'],\n  to: AssetTransferTxn['to'],\n  closeRemainderTo: AssetTransferTxn['closeRemainderTo'],\n  revocationTarget: AssetTransferTxn['assetRevocationTarget'],\n  amount: AssetTransferTxn['amount'],\n  note: AssetTransferTxn['note'],\n  assetIndex: AssetTransferTxn['assetIndex'],\n  suggestedParams: MustHaveSuggestedParams<AssetTransferTxn>['suggestedParams'],\n  rekeyTo?: AssetTransferTxn['reKeyTo']\n) {\n  const o: AssetTransferTxn = {\n    type: TransactionType.axfer,\n    from,\n    to,\n    amount,\n    suggestedParams,\n    assetIndex,\n    note,\n    assetRevocationTarget: revocationTarget,\n    closeRemainderTo,\n    reKeyTo: rekeyTo,\n  };\n  return new txnBuilder.Transaction(o);\n}\n\n// helper for above makeAssetTransferTxnWithSuggestedParams, instead accepting an arguments object\nexport function makeAssetTransferTxnWithSuggestedParamsFromObject(\n  o: Expand<\n    Pick<\n      RenameProperties<\n        MustHaveSuggestedParams<AssetTransferTxn>,\n        {\n          assetRevocationTarget: 'revocationTarget';\n          reKeyTo: 'rekeyTo';\n        }\n      >,\n      | 'from'\n      | 'to'\n      | 'closeRemainderTo'\n      | 'revocationTarget'\n      | 'amount'\n      | 'note'\n      | 'assetIndex'\n      | 'suggestedParams'\n      | 'rekeyTo'\n    >\n  >\n) {\n  return makeAssetTransferTxnWithSuggestedParams(\n    o.from,\n    o.to,\n    o.closeRemainderTo,\n    o.revocationTarget,\n    o.amount,\n    o.note,\n    o.assetIndex,\n    o.suggestedParams,\n    o.rekeyTo\n  );\n}\n\n/**\n * Make a transaction that will create an application.\n * @param from - address of sender\n * @param suggestedParams - a dict holding common-to-all-txns args:\n * fee - integer fee per byte, in microAlgos. for a flat fee, set flatFee to true\n * flatFee - bool optionally set this to true to specify fee as microalgos-per-txn\n *       If true, txn fee may fall below the ALGORAND_MIN_TX_FEE\n * firstRound - integer first protocol round on which this txn is valid\n * lastRound - integer last protocol round on which this txn is valid\n * genesisHash - string specifies hash genesis block of network in use\n * genesisID - string specifies genesis ID of network in use\n * @param onComplete - algosdk.OnApplicationComplete, what application should do once the program is done being run\n * @param approvalProgram - Uint8Array, the compiled TEAL that approves a transaction\n * @param clearProgram - Uint8Array, the compiled TEAL that runs when clearing state\n * @param numLocalInts - restricts number of ints in per-user local state\n * @param numLocalByteSlices - restricts number of byte slices in per-user local state\n * @param numGlobalInts - restricts number of ints in global state\n * @param numGlobalByteSlices - restricts number of byte slices in global state\n * @param appArgs - Array of Uint8Array, any additional arguments to the application\n * @param accounts - Array of Address strings, any additional accounts to supply to the application\n * @param foreignApps - Array of int, any other apps used by the application, identified by index\n * @param foreignAssets - Array of int, any assets used by the application, identified by index\n * @param note - Arbitrary data for sender to store\n * @param lease - Lease a transaction\n * @param rekeyTo - String representation of the Algorand address that will be used to authorize all future transactions\n * @param extraPages - integer extra pages of memory to rent on creation of application\n * @param boxes - Array of BoxReference, app ID and name of box to be accessed\n */\nexport function makeApplicationCreateTxn(\n  from: AppCreateTxn['from'],\n  suggestedParams: MustHaveSuggestedParams<AppCreateTxn>['suggestedParams'],\n  onComplete: AppCreateTxn['appOnComplete'],\n  approvalProgram: AppCreateTxn['appApprovalProgram'],\n  clearProgram: AppCreateTxn['appClearProgram'],\n  numLocalInts: AppCreateTxn['appLocalInts'],\n  numLocalByteSlices: AppCreateTxn['appLocalByteSlices'],\n  numGlobalInts: AppCreateTxn['appGlobalInts'],\n  numGlobalByteSlices: AppCreateTxn['appGlobalByteSlices'],\n  appArgs?: AppCreateTxn['appArgs'],\n  accounts?: AppCreateTxn['appAccounts'],\n  foreignApps?: AppCreateTxn['appForeignApps'],\n  foreignAssets?: AppCreateTxn['appForeignAssets'],\n  note?: AppCreateTxn['note'],\n  lease?: AppCreateTxn['lease'],\n  rekeyTo?: AppCreateTxn['reKeyTo'],\n  extraPages?: AppCreateTxn['extraPages'],\n  boxes?: AppCreateTxn['boxes']\n) {\n  const o: AppCreateTxn = {\n    type: TransactionType.appl,\n    from,\n    suggestedParams,\n    appIndex: 0,\n    appOnComplete: onComplete,\n    appLocalInts: numLocalInts,\n    appLocalByteSlices: numLocalByteSlices,\n    appGlobalInts: numGlobalInts,\n    appGlobalByteSlices: numGlobalByteSlices,\n    appApprovalProgram: approvalProgram,\n    appClearProgram: clearProgram,\n    appArgs,\n    appAccounts: accounts,\n    appForeignApps: foreignApps,\n    appForeignAssets: foreignAssets,\n    boxes,\n    note,\n    lease,\n    reKeyTo: rekeyTo,\n    extraPages,\n  };\n  return new txnBuilder.Transaction(o);\n}\n\n// helper for above makeApplicationCreateTxn, instead accepting an arguments object\nexport function makeApplicationCreateTxnFromObject(\n  o: Expand<\n    Pick<\n      RenameProperties<\n        MustHaveSuggestedParams<AppCreateTxn>,\n        {\n          appOnComplete: 'onComplete';\n          appApprovalProgram: 'approvalProgram';\n          appClearProgram: 'clearProgram';\n          appLocalInts: 'numLocalInts';\n          appLocalByteSlices: 'numLocalByteSlices';\n          appGlobalInts: 'numGlobalInts';\n          appGlobalByteSlices: 'numGlobalByteSlices';\n          appAccounts: 'accounts';\n          appForeignApps: 'foreignApps';\n          appForeignAssets: 'foreignAssets';\n          reKeyTo: 'rekeyTo';\n        }\n      >,\n      | 'from'\n      | 'suggestedParams'\n      | 'onComplete'\n      | 'approvalProgram'\n      | 'clearProgram'\n      | 'numLocalInts'\n      | 'numLocalByteSlices'\n      | 'numGlobalInts'\n      | 'numGlobalByteSlices'\n      | 'appArgs'\n      | 'accounts'\n      | 'foreignApps'\n      | 'foreignAssets'\n      | 'boxes'\n      | 'note'\n      | 'lease'\n      | 'rekeyTo'\n      | 'extraPages'\n    >\n  >\n) {\n  return makeApplicationCreateTxn(\n    o.from,\n    o.suggestedParams,\n    o.onComplete,\n    o.approvalProgram,\n    o.clearProgram,\n    o.numLocalInts,\n    o.numLocalByteSlices,\n    o.numGlobalInts,\n    o.numGlobalByteSlices,\n    o.appArgs,\n    o.accounts,\n    o.foreignApps,\n    o.foreignAssets,\n    o.note,\n    o.lease,\n    o.rekeyTo,\n    o.extraPages,\n    o.boxes\n  );\n}\n\n/**\n * Make a transaction that changes an application's approval and clear programs\n * @param from - address of sender\n * @param suggestedParams - a dict holding common-to-all-txns args:\n * fee - integer fee per byte, in microAlgos. for a flat fee, set flatFee to true\n * flatFee - bool optionally set this to true to specify fee as microalgos-per-txn\n *       If true, txn fee may fall below the ALGORAND_MIN_TX_FEE\n * firstRound - integer first protocol round on which this txn is valid\n * lastRound - integer last protocol round on which this txn is valid\n * genesisHash - string specifies hash genesis block of network in use\n * genesisID - string specifies genesis ID of network in use\n * @param appIndex - the ID of the app to be updated\n * @param approvalProgram - Uint8Array, the compiled TEAL that approves a transaction\n * @param clearProgram - Uint8Array, the compiled TEAL that runs when clearing state\n * @param appArgs - Array of Uint8Array, any additional arguments to the application\n * @param accounts - Array of Address strings, any additional accounts to supply to the application\n * @param foreignApps - Array of int, any other apps used by the application, identified by index\n * @param foreignAssets - Array of int, any assets used by the application, identified by index\n * @param note - Arbitrary data for sender to store\n * @param lease - Lease a transaction\n * @param rekeyTo - String representation of the Algorand address that will be used to authorize all future transactions\n * @param boxes - Array of BoxReference, app ID and name of box to be accessed\n */\nexport function makeApplicationUpdateTxn(\n  from: AppUpdateTxn['from'],\n  suggestedParams: MustHaveSuggestedParams<AppUpdateTxn>['suggestedParams'],\n  appIndex: AppUpdateTxn['appIndex'],\n  approvalProgram: AppUpdateTxn['appApprovalProgram'],\n  clearProgram: AppUpdateTxn['appClearProgram'],\n  appArgs?: AppUpdateTxn['appArgs'],\n  accounts?: AppUpdateTxn['appAccounts'],\n  foreignApps?: AppUpdateTxn['appForeignApps'],\n  foreignAssets?: AppUpdateTxn['appForeignAssets'],\n  note?: AppUpdateTxn['note'],\n  lease?: AppUpdateTxn['lease'],\n  rekeyTo?: AppUpdateTxn['reKeyTo'],\n  boxes?: AppUpdateTxn['boxes']\n) {\n  const o: AppUpdateTxn = {\n    type: TransactionType.appl,\n    from,\n    suggestedParams,\n    appIndex,\n    appApprovalProgram: approvalProgram,\n    appOnComplete: OnApplicationComplete.UpdateApplicationOC,\n    appClearProgram: clearProgram,\n    appArgs,\n    appAccounts: accounts,\n    appForeignApps: foreignApps,\n    appForeignAssets: foreignAssets,\n    boxes,\n    note,\n    lease,\n    reKeyTo: rekeyTo,\n  };\n  return new txnBuilder.Transaction(o);\n}\n\n// helper for above makeApplicationUpdateTxn, instead accepting an arguments object\nexport function makeApplicationUpdateTxnFromObject(\n  o: Expand<\n    Pick<\n      RenameProperties<\n        MustHaveSuggestedParams<AppUpdateTxn>,\n        {\n          appApprovalProgram: 'approvalProgram';\n          appClearProgram: 'clearProgram';\n          appAccounts: 'accounts';\n          appForeignApps: 'foreignApps';\n          appForeignAssets: 'foreignAssets';\n          reKeyTo: 'rekeyTo';\n        }\n      >,\n      | 'from'\n      | 'suggestedParams'\n      | 'appIndex'\n      | 'approvalProgram'\n      | 'clearProgram'\n      | 'appArgs'\n      | 'accounts'\n      | 'foreignApps'\n      | 'foreignAssets'\n      | 'boxes'\n      | 'note'\n      | 'lease'\n      | 'rekeyTo'\n    >\n  >\n) {\n  return makeApplicationUpdateTxn(\n    o.from,\n    o.suggestedParams,\n    o.appIndex,\n    o.approvalProgram,\n    o.clearProgram,\n    o.appArgs,\n    o.accounts,\n    o.foreignApps,\n    o.foreignAssets,\n    o.note,\n    o.lease,\n    o.rekeyTo,\n    o.boxes\n  );\n}\n\n/**\n * Make a transaction that deletes an application\n * @param from - address of sender\n * @param suggestedParams - a dict holding common-to-all-txns args:\n * fee - integer fee per byte, in microAlgos. for a flat fee, set flatFee to true\n * flatFee - bool optionally set this to true to specify fee as microalgos-per-txn\n *       If true, txn fee may fall below the ALGORAND_MIN_TX_FEE\n * firstRound - integer first protocol round on which this txn is valid\n * lastRound - integer last protocol round on which this txn is valid\n * genesisHash - string specifies hash genesis block of network in use\n * genesisID - string specifies genesis ID of network in use\n * @param appIndex - the ID of the app to be deleted\n * @param appArgs - Array of Uint8Array, any additional arguments to the application\n * @param accounts - Array of Address strings, any additional accounts to supply to the application\n * @param foreignApps - Array of int, any other apps used by the application, identified by index\n * @param foreignAssets - Array of int, any assets used by the application, identified by index\n * @param note - Arbitrary data for sender to store\n * @param lease - Lease a transaction\n * @param rekeyTo - String representation of the Algorand address that will be used to authorize all future transactions\n * @param boxes - Array of BoxReference, app ID and name of box to be accessed\n */\nexport function makeApplicationDeleteTxn(\n  from: AppDeleteTxn['from'],\n  suggestedParams: MustHaveSuggestedParams<AppDeleteTxn>['suggestedParams'],\n  appIndex: AppDeleteTxn['appIndex'],\n  appArgs?: AppDeleteTxn['appArgs'],\n  accounts?: AppDeleteTxn['appAccounts'],\n  foreignApps?: AppDeleteTxn['appForeignApps'],\n  foreignAssets?: AppDeleteTxn['appForeignAssets'],\n  note?: AppDeleteTxn['note'],\n  lease?: AppDeleteTxn['lease'],\n  rekeyTo?: AppDeleteTxn['reKeyTo'],\n  boxes?: AppDeleteTxn['boxes']\n) {\n  const o: AppDeleteTxn = {\n    type: TransactionType.appl,\n    from,\n    suggestedParams,\n    appIndex,\n    appOnComplete: OnApplicationComplete.DeleteApplicationOC,\n    appArgs,\n    appAccounts: accounts,\n    appForeignApps: foreignApps,\n    appForeignAssets: foreignAssets,\n    boxes,\n    note,\n    lease,\n    reKeyTo: rekeyTo,\n  };\n  return new txnBuilder.Transaction(o);\n}\n\n// helper for above makeApplicationDeleteTxn, instead accepting an arguments object\nexport function makeApplicationDeleteTxnFromObject(\n  o: Expand<\n    Pick<\n      RenameProperties<\n        MustHaveSuggestedParams<AppDeleteTxn>,\n        {\n          appAccounts: 'accounts';\n          appForeignApps: 'foreignApps';\n          appForeignAssets: 'foreignAssets';\n          reKeyTo: 'rekeyTo';\n        }\n      >,\n      | 'from'\n      | 'suggestedParams'\n      | 'appIndex'\n      | 'appArgs'\n      | 'accounts'\n      | 'foreignApps'\n      | 'foreignAssets'\n      | 'boxes'\n      | 'note'\n      | 'lease'\n      | 'rekeyTo'\n    >\n  >\n) {\n  return makeApplicationDeleteTxn(\n    o.from,\n    o.suggestedParams,\n    o.appIndex,\n    o.appArgs,\n    o.accounts,\n    o.foreignApps,\n    o.foreignAssets,\n    o.note,\n    o.lease,\n    o.rekeyTo,\n    o.boxes\n  );\n}\n\n/**\n * Make a transaction that opts in to use an application\n * @param from - address of sender\n * @param suggestedParams - a dict holding common-to-all-txns args:\n * fee - integer fee per byte, in microAlgos. for a flat fee, set flatFee to true\n * flatFee - bool optionally set this to true to specify fee as microalgos-per-txn\n *       If true, txn fee may fall below the ALGORAND_MIN_TX_FEE\n * firstRound - integer first protocol round on which this txn is valid\n * lastRound - integer last protocol round on which this txn is valid\n * genesisHash - string specifies hash genesis block of network in use\n * genesisID - string specifies genesis ID of network in use\n * @param appIndex - the ID of the app to join\n * @param appArgs - Array of Uint8Array, any additional arguments to the application\n * @param accounts - Array of Address strings, any additional accounts to supply to the application\n * @param foreignApps - Array of int, any other apps used by the application, identified by index\n * @param foreignAssets - Array of int, any assets used by the application, identified by index\n * @param note - Arbitrary data for sender to store\n * @param lease - Lease a transaction\n * @param rekeyTo - String representation of the Algorand address that will be used to authorize all future transactions\n * @param boxes - Array of BoxReference, app ID and name of box to be accessed\n */\nexport function makeApplicationOptInTxn(\n  from: AppOptInTxn['from'],\n  suggestedParams: MustHaveSuggestedParams<AppOptInTxn>['suggestedParams'],\n  appIndex: AppOptInTxn['appIndex'],\n  appArgs?: AppOptInTxn['appArgs'],\n  accounts?: AppOptInTxn['appAccounts'],\n  foreignApps?: AppOptInTxn['appForeignApps'],\n  foreignAssets?: AppOptInTxn['appForeignAssets'],\n  note?: AppOptInTxn['note'],\n  lease?: AppOptInTxn['lease'],\n  rekeyTo?: AppOptInTxn['reKeyTo'],\n  boxes?: AppOptInTxn['boxes']\n) {\n  const o: AppOptInTxn = {\n    type: TransactionType.appl,\n    from,\n    suggestedParams,\n    appIndex,\n    appOnComplete: OnApplicationComplete.OptInOC,\n    appArgs,\n    appAccounts: accounts,\n    appForeignApps: foreignApps,\n    appForeignAssets: foreignAssets,\n    boxes,\n    note,\n    lease,\n    reKeyTo: rekeyTo,\n  };\n  return new txnBuilder.Transaction(o);\n}\n\n// helper for above makeApplicationOptInTxn, instead accepting an argument object\nexport function makeApplicationOptInTxnFromObject(\n  o: Expand<\n    Pick<\n      RenameProperties<\n        MustHaveSuggestedParams<AppOptInTxn>,\n        {\n          appAccounts: 'accounts';\n          appForeignApps: 'foreignApps';\n          appForeignAssets: 'foreignAssets';\n          reKeyTo: 'rekeyTo';\n        }\n      >,\n      | 'from'\n      | 'suggestedParams'\n      | 'appIndex'\n      | 'appArgs'\n      | 'accounts'\n      | 'foreignApps'\n      | 'foreignAssets'\n      | 'boxes'\n      | 'note'\n      | 'lease'\n      | 'rekeyTo'\n    >\n  >\n) {\n  return makeApplicationOptInTxn(\n    o.from,\n    o.suggestedParams,\n    o.appIndex,\n    o.appArgs,\n    o.accounts,\n    o.foreignApps,\n    o.foreignAssets,\n    o.note,\n    o.lease,\n    o.rekeyTo,\n    o.boxes\n  );\n}\n\n/**\n * Make a transaction that closes out a user's state in an application\n * @param from - address of sender\n * @param suggestedParams - a dict holding common-to-all-txns args:\n * fee - integer fee per byte, in microAlgos. for a flat fee, set flatFee to true\n * flatFee - bool optionally set this to true to specify fee as microalgos-per-txn\n *       If true, txn fee may fall below the ALGORAND_MIN_TX_FEE\n * firstRound - integer first protocol round on which this txn is valid\n * lastRound - integer last protocol round on which this txn is valid\n * genesisHash - string specifies hash genesis block of network in use\n * genesisID - string specifies genesis ID of network in use\n * @param appIndex - the ID of the app to use\n * @param appArgs - Array of Uint8Array, any additional arguments to the application\n * @param accounts - Array of Address strings, any additional accounts to supply to the application\n * @param foreignApps - Array of int, any other apps used by the application, identified by index\n * @param foreignAssets - Array of int, any assets used by the application, identified by index\n * @param note - Arbitrary data for sender to store\n * @param lease - Lease a transaction\n * @param rekeyTo - String representation of the Algorand address that will be used to authorize all future transactions\n * @param boxes - Array of BoxReference, app ID and name of box to be accessed\n */\nexport function makeApplicationCloseOutTxn(\n  from: AppCloseOutTxn['from'],\n  suggestedParams: MustHaveSuggestedParams<AppCloseOutTxn>['suggestedParams'],\n  appIndex: AppCloseOutTxn['appIndex'],\n  appArgs?: AppCloseOutTxn['appArgs'],\n  accounts?: AppCloseOutTxn['appAccounts'],\n  foreignApps?: AppCloseOutTxn['appForeignApps'],\n  foreignAssets?: AppCloseOutTxn['appForeignAssets'],\n  note?: AppCloseOutTxn['note'],\n  lease?: AppCloseOutTxn['lease'],\n  rekeyTo?: AppCloseOutTxn['reKeyTo'],\n  boxes?: AppCloseOutTxn['boxes']\n) {\n  const o: AppCloseOutTxn = {\n    type: TransactionType.appl,\n    from,\n    suggestedParams,\n    appIndex,\n    appOnComplete: OnApplicationComplete.CloseOutOC,\n    appArgs,\n    appAccounts: accounts,\n    appForeignApps: foreignApps,\n    appForeignAssets: foreignAssets,\n    boxes,\n    note,\n    lease,\n    reKeyTo: rekeyTo,\n  };\n  return new txnBuilder.Transaction(o);\n}\n\n// helper for above makeApplicationCloseOutTxn, instead accepting an argument object\nexport function makeApplicationCloseOutTxnFromObject(\n  o: Expand<\n    Pick<\n      RenameProperties<\n        MustHaveSuggestedParams<AppOptInTxn>,\n        {\n          appAccounts: 'accounts';\n          appForeignApps: 'foreignApps';\n          appForeignAssets: 'foreignAssets';\n          reKeyTo: 'rekeyTo';\n        }\n      >,\n      | 'from'\n      | 'suggestedParams'\n      | 'appIndex'\n      | 'appArgs'\n      | 'accounts'\n      | 'foreignApps'\n      | 'foreignAssets'\n      | 'boxes'\n      | 'note'\n      | 'lease'\n      | 'rekeyTo'\n    >\n  >\n) {\n  return makeApplicationCloseOutTxn(\n    o.from,\n    o.suggestedParams,\n    o.appIndex,\n    o.appArgs,\n    o.accounts,\n    o.foreignApps,\n    o.foreignAssets,\n    o.note,\n    o.lease,\n    o.rekeyTo,\n    o.boxes\n  );\n}\n\n/**\n * Make a transaction that clears a user's state in an application\n * @param from - address of sender\n * @param suggestedParams - a dict holding common-to-all-txns args:\n * fee - integer fee per byte, in microAlgos. for a flat fee, set flatFee to true\n * flatFee - bool optionally set this to true to specify fee as microalgos-per-txn\n *       If true, txn fee may fall below the ALGORAND_MIN_TX_FEE\n * firstRound - integer first protocol round on which this txn is valid\n * lastRound - integer last protocol round on which this txn is valid\n * genesisHash - string specifies hash genesis block of network in use\n * genesisID - string specifies genesis ID of network in use\n * @param appIndex - the ID of the app to use\n * @param appArgs - Array of Uint8Array, any additional arguments to the application\n * @param accounts - Array of Address strings, any additional accounts to supply to the application\n * @param foreignApps - Array of int, any other apps used by the application, identified by index\n * @param foreignAssets - Array of int, any assets used by the application, identified by index\n * @param note - Arbitrary data for sender to store\n * @param lease - Lease a transaction\n * @param rekeyTo - String representation of the Algorand address that will be used to authorize all future transactions\n * @param boxes - Array of BoxReference, app ID and name of box to be accessed\n */\nexport function makeApplicationClearStateTxn(\n  from: AppClearStateTxn['from'],\n  suggestedParams: MustHaveSuggestedParams<AppClearStateTxn>['suggestedParams'],\n  appIndex: AppClearStateTxn['appIndex'],\n  appArgs?: AppClearStateTxn['appArgs'],\n  accounts?: AppClearStateTxn['appAccounts'],\n  foreignApps?: AppClearStateTxn['appForeignApps'],\n  foreignAssets?: AppClearStateTxn['appForeignAssets'],\n  note?: AppClearStateTxn['note'],\n  lease?: AppClearStateTxn['lease'],\n  rekeyTo?: AppClearStateTxn['reKeyTo'],\n  boxes?: AppClearStateTxn['boxes']\n) {\n  const o: AppClearStateTxn = {\n    type: TransactionType.appl,\n    from,\n    suggestedParams,\n    appIndex,\n    appOnComplete: OnApplicationComplete.ClearStateOC,\n    appArgs,\n    appAccounts: accounts,\n    appForeignApps: foreignApps,\n    appForeignAssets: foreignAssets,\n    boxes,\n    note,\n    lease,\n    reKeyTo: rekeyTo,\n  };\n  return new txnBuilder.Transaction(o);\n}\n\n// helper for above makeApplicationClearStateTxn, instead accepting an argument object\nexport function makeApplicationClearStateTxnFromObject(\n  o: Expand<\n    Pick<\n      RenameProperties<\n        MustHaveSuggestedParams<AppOptInTxn>,\n        {\n          appAccounts: 'accounts';\n          appForeignApps: 'foreignApps';\n          appForeignAssets: 'foreignAssets';\n          reKeyTo: 'rekeyTo';\n        }\n      >,\n      | 'from'\n      | 'suggestedParams'\n      | 'appIndex'\n      | 'appArgs'\n      | 'accounts'\n      | 'foreignApps'\n      | 'foreignAssets'\n      | 'boxes'\n      | 'note'\n      | 'lease'\n      | 'rekeyTo'\n    >\n  >\n) {\n  return makeApplicationClearStateTxn(\n    o.from,\n    o.suggestedParams,\n    o.appIndex,\n    o.appArgs,\n    o.accounts,\n    o.foreignApps,\n    o.foreignAssets,\n    o.note,\n    o.lease,\n    o.rekeyTo,\n    o.boxes\n  );\n}\n\n/**\n * Make a transaction that just calls an application, doing nothing on completion\n * @param from - address of sender\n * @param suggestedParams - a dict holding common-to-all-txns args:\n * fee - integer fee per byte, in microAlgos. for a flat fee, set flatFee to true\n * flatFee - bool optionally set this to true to specify fee as microalgos-per-txn\n *       If true, txn fee may fall below the ALGORAND_MIN_TX_FEE\n * firstRound - integer first protocol round on which this txn is valid\n * lastRound - integer last protocol round on which this txn is valid\n * genesisHash - string specifies hash genesis block of network in use\n * genesisID - string specifies genesis ID of network in use\n * @param appIndex - the ID of the app to use\n * @param appArgs - Array of Uint8Array, any additional arguments to the application\n * @param accounts - Array of Address strings, any additional accounts to supply to the application\n * @param foreignApps - Array of int, any other apps used by the application, identified by index\n * @param foreignAssets - Array of int, any assets used by the application, identified by index\n * @param note - Arbitrary data for sender to store\n * @param lease - Lease a transaction\n * @param rekeyTo - String representation of the Algorand address that will be used to authorize all future transactions\n * @param boxes - Array of BoxReference, app ID and name of box to be accessed\n */\nexport function makeApplicationNoOpTxn(\n  from: AppNoOpTxn['from'],\n  suggestedParams: MustHaveSuggestedParams<AppNoOpTxn>['suggestedParams'],\n  appIndex: AppNoOpTxn['appIndex'],\n  appArgs?: AppNoOpTxn['appArgs'],\n  accounts?: AppNoOpTxn['appAccounts'],\n  foreignApps?: AppNoOpTxn['appForeignApps'],\n  foreignAssets?: AppNoOpTxn['appForeignAssets'],\n  note?: AppNoOpTxn['note'],\n  lease?: AppNoOpTxn['lease'],\n  rekeyTo?: AppNoOpTxn['reKeyTo'],\n  boxes?: AppNoOpTxn['boxes']\n) {\n  const o: AppNoOpTxn = {\n    type: TransactionType.appl,\n    from,\n    suggestedParams,\n    appIndex,\n    appOnComplete: OnApplicationComplete.NoOpOC,\n    appArgs,\n    appAccounts: accounts,\n    appForeignApps: foreignApps,\n    appForeignAssets: foreignAssets,\n    boxes,\n    note,\n    lease,\n    reKeyTo: rekeyTo,\n  };\n  return new txnBuilder.Transaction(o);\n}\n\n// helper for above makeApplicationNoOpTxn, instead accepting an argument object\nexport function makeApplicationNoOpTxnFromObject(\n  o: Expand<\n    Pick<\n      RenameProperties<\n        MustHaveSuggestedParams<AppOptInTxn>,\n        {\n          appAccounts: 'accounts';\n          appForeignApps: 'foreignApps';\n          appForeignAssets: 'foreignAssets';\n          reKeyTo: 'rekeyTo';\n        }\n      >,\n      | 'from'\n      | 'suggestedParams'\n      | 'appIndex'\n      | 'appArgs'\n      | 'accounts'\n      | 'foreignApps'\n      | 'foreignAssets'\n      | 'boxes'\n      | 'note'\n      | 'lease'\n      | 'rekeyTo'\n    >\n  >\n) {\n  return makeApplicationNoOpTxn(\n    o.from,\n    o.suggestedParams,\n    o.appIndex,\n    o.appArgs,\n    o.accounts,\n    o.foreignApps,\n    o.foreignAssets,\n    o.note,\n    o.lease,\n    o.rekeyTo,\n    o.boxes\n  );\n}\n\nexport { OnApplicationComplete } from './types/transactions/base';\n\n/**\n * Generic function for creating any application call transaction.\n */\nexport function makeApplicationCallTxnFromObject(\n  options: Expand<\n    Pick<\n      RenameProperties<\n        MustHaveSuggestedParams<AppCreateTxn>,\n        {\n          appOnComplete: 'onComplete';\n          appAccounts: 'accounts';\n          appForeignApps: 'foreignApps';\n          appForeignAssets: 'foreignAssets';\n          reKeyTo: 'rekeyTo';\n        }\n      >,\n      | 'from'\n      | 'suggestedParams'\n      | 'appIndex'\n      | 'onComplete'\n      | 'appArgs'\n      | 'accounts'\n      | 'foreignApps'\n      | 'foreignAssets'\n      | 'boxes'\n      | 'note'\n      | 'lease'\n      | 'rekeyTo'\n      | 'extraPages'\n    > &\n      Partial<\n        Pick<\n          RenameProperties<\n            MustHaveSuggestedParams<AppCreateTxn>,\n            {\n              appApprovalProgram: 'approvalProgram';\n              appClearProgram: 'clearProgram';\n              appLocalInts: 'numLocalInts';\n              appLocalByteSlices: 'numLocalByteSlices';\n              appGlobalInts: 'numGlobalInts';\n              appGlobalByteSlices: 'numGlobalByteSlices';\n            }\n          >,\n          | 'approvalProgram'\n          | 'clearProgram'\n          | 'numLocalInts'\n          | 'numLocalByteSlices'\n          | 'numGlobalInts'\n          | 'numGlobalByteSlices'\n        >\n      >\n  >\n) {\n  const o: AppCreateTxn = {\n    type: TransactionType.appl,\n    from: options.from,\n    suggestedParams: options.suggestedParams,\n    appIndex: options.appIndex,\n    appOnComplete: options.onComplete,\n    appLocalInts: options.numLocalInts,\n    appLocalByteSlices: options.numLocalByteSlices,\n    appGlobalInts: options.numGlobalInts,\n    appGlobalByteSlices: options.numGlobalByteSlices,\n    appApprovalProgram: options.approvalProgram,\n    appClearProgram: options.clearProgram,\n    appArgs: options.appArgs,\n    appAccounts: options.accounts,\n    appForeignApps: options.foreignApps,\n    appForeignAssets: options.foreignAssets,\n    boxes: options.boxes,\n    note: options.note,\n    lease: options.lease,\n    reKeyTo: options.rekeyTo,\n    extraPages: options.extraPages,\n  };\n  return new txnBuilder.Transaction(o);\n}\n","import { encodeUnsignedSimulateTransaction, Transaction } from './transaction';\nimport Account from './types/account';\nimport { LogicSigAccount, signLogicSigTransactionObject } from './logicsig';\nimport { MultisigMetadata } from './types/multisig';\nimport { signMultisigTransaction, mergeMultisigTransactions } from './multisig';\n\n/**\n * This type represents a function which can sign transactions from an atomic transaction group.\n * @param txnGroup - The atomic group containing transactions to be signed\n * @param indexesToSign - An array of indexes in the atomic transaction group that should be signed\n * @returns A promise which resolves an array of encoded signed transactions. The length of the\n *   array will be the same as the length of indexesToSign, and each index i in the array\n *   corresponds to the signed transaction from txnGroup[indexesToSign[i]]\n */\nexport type TransactionSigner = (\n  txnGroup: Transaction[],\n  indexesToSign: number[]\n) => Promise<Uint8Array[]>;\n\n/**\n * Create a TransactionSigner that can sign transactions for the provided basic Account.\n */\nexport function makeBasicAccountTransactionSigner(\n  account: Account\n): TransactionSigner {\n  return (txnGroup: Transaction[], indexesToSign: number[]) => {\n    const signed: Uint8Array[] = [];\n\n    for (const index of indexesToSign) {\n      signed.push(txnGroup[index].signTxn(account.sk));\n    }\n\n    return Promise.resolve(signed);\n  };\n}\n\n/**\n * Create a TransactionSigner that can sign transactions for the provided LogicSigAccount.\n */\nexport function makeLogicSigAccountTransactionSigner(\n  account: LogicSigAccount\n): TransactionSigner {\n  return (txnGroup: Transaction[], indexesToSign: number[]) => {\n    const signed: Uint8Array[] = [];\n\n    for (const index of indexesToSign) {\n      const { blob } = signLogicSigTransactionObject(txnGroup[index], account);\n      signed.push(blob);\n    }\n\n    return Promise.resolve(signed);\n  };\n}\n\n/**\n * Create a TransactionSigner that can sign transactions for the provided Multisig account.\n * @param msig - The Multisig account metadata\n * @param sks - An array of private keys belonging to the msig which should sign the transactions.\n */\nexport function makeMultiSigAccountTransactionSigner(\n  msig: MultisigMetadata,\n  sks: Uint8Array[]\n): TransactionSigner {\n  return (txnGroup: Transaction[], indexesToSign: number[]) => {\n    const signed: Uint8Array[] = [];\n\n    for (const index of indexesToSign) {\n      const txn = txnGroup[index];\n      const partialSigs: Uint8Array[] = [];\n\n      for (const sk of sks) {\n        const { blob } = signMultisigTransaction(txn, msig, sk);\n        partialSigs.push(blob);\n      }\n\n      signed.push(mergeMultisigTransactions(partialSigs));\n    }\n\n    return Promise.resolve(signed);\n  };\n}\n\n/**\n * Create a makeEmptyTransactionSigner that does not specify any signer or\n * signing capabilities. This should only be used to simulate transactions.\n */\nexport function makeEmptyTransactionSigner(): TransactionSigner {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  return (txnGroup: Transaction[], indexesToSign: number[]) => {\n    const unsigned: Uint8Array[] = [];\n\n    for (const index of indexesToSign) {\n      unsigned.push(encodeUnsignedSimulateTransaction(txnGroup[index]));\n    }\n\n    return Promise.resolve(unsigned);\n  };\n}\n\n/** Represents an unsigned transactions and a signer that can authorize that transaction. */\nexport interface TransactionWithSigner {\n  /** An unsigned transaction */\n  txn: Transaction;\n  /** A transaction signer that can authorize txn */\n  signer: TransactionSigner;\n}\n\n/**\n * Check if a value conforms to the TransactionWithSigner structure.\n * @param value - The value to check.\n * @returns True if an only if the value has the structure of a TransactionWithSigner.\n */\nexport function isTransactionWithSigner(\n  value: any\n): value is TransactionWithSigner {\n  return (\n    typeof value === 'object' &&\n    Object.keys(value).length === 2 &&\n    typeof value.txn === 'object' &&\n    typeof value.signer === 'function'\n  );\n}\n","/* eslint-disable no-bitwise */\n/* eslint-disable no-use-before-define */\n/* eslint-disable class-methods-use-this */\n\n/**\n    //ABI-Types: uint<N>: An N-bit unsigned integer (8 <= N <= 512 and N % 8 = 0).\n    // | byte (alias for uint8)\n    // | ufixed <N> x <M> (8 <= N <= 512, N % 8 = 0, and 0 < M <= 160)\n    // | bool\n    // | address (alias for byte[32])\n    // | <type> [<N>]\n    // | <type> []\n    // | string\n    // | (T1, ..., Tn)\n*/\nimport { Buffer } from 'buffer';\nimport { encodeAddress, decodeAddress } from '../encoding/address';\nimport { bigIntToBytes, bytesToBigInt } from '../encoding/bigint';\nimport { concatArrays } from '../utils/utils';\n\nexport const MAX_LEN = 2 ** 16 - 1;\nexport const ADDR_BYTE_SIZE = 32;\nexport const SINGLE_BYTE_SIZE = 1;\nexport const SINGLE_BOOL_SIZE = 1;\nexport const LENGTH_ENCODE_BYTE_SIZE = 2;\n\ninterface Segment {\n  left: number;\n  right: number;\n}\n\nconst staticArrayRegexp = /^([a-z\\d[\\](),]+)\\[(0|[1-9][\\d]*)]$/;\nconst ufixedRegexp = /^ufixed([1-9][\\d]*)x([1-9][\\d]*)$/;\n\nexport type ABIValue =\n  | boolean\n  | number\n  | bigint\n  | string\n  | Uint8Array\n  | ABIValue[];\n\nexport abstract class ABIType {\n  // Converts a ABIType object to a string\n  abstract toString(): string;\n  // Checks if two ABIType objects are equal in value\n  abstract equals(other: ABIType): boolean;\n  // Checks if the ABIType object (or any of its child types) have dynamic length\n  abstract isDynamic(): boolean;\n  // Returns the size of the ABIType object in bytes\n  abstract byteLen(): number;\n  // Encodes a value for the ABIType object using the ABI specs\n  abstract encode(value: ABIValue): Uint8Array;\n  // Decodes a value for the ABIType object using the ABI specs\n  abstract decode(byteString: Uint8Array): ABIValue;\n  // De-serializes the ABI type from a string using the ABI specs\n  static from(str: string): ABIType {\n    if (str.endsWith('[]')) {\n      const arrayArgType = ABIType.from(str.slice(0, str.length - 2));\n      return new ABIArrayDynamicType(arrayArgType);\n    }\n    if (str.endsWith(']')) {\n      const stringMatches = str.match(staticArrayRegexp);\n      // Match the string itself, array element type, then array length\n      if (stringMatches.length !== 3) {\n        throw new Error(`malformed static array string: ${str}`);\n      }\n      // Parse static array using regex\n      const arrayLengthStr = stringMatches[2];\n      const arrayLength = parseInt(arrayLengthStr, 10);\n      if (arrayLength > MAX_LEN) {\n        throw new Error(`array length exceeds limit ${MAX_LEN}`);\n      }\n      // Parse the array element type\n      const arrayType = ABIType.from(stringMatches[1]);\n      return new ABIArrayStaticType(arrayType, arrayLength);\n    }\n    if (str.startsWith('uint')) {\n      // Checks if the parsed number contains only digits, no whitespaces\n      const digitsOnly = (string) =>\n        [...string].every((c) => '0123456789'.includes(c));\n      const typeSizeStr = str.slice(4, str.length);\n      if (!digitsOnly(typeSizeStr)) {\n        throw new Error(`malformed uint string: ${typeSizeStr}`);\n      }\n      const typeSize = parseInt(typeSizeStr, 10);\n      if (typeSize > MAX_LEN) {\n        throw new Error(`malformed uint string: ${typeSize}`);\n      }\n      return new ABIUintType(typeSize);\n    }\n    if (str === 'byte') {\n      return new ABIByteType();\n    }\n    if (str.startsWith('ufixed')) {\n      const stringMatches = str.match(ufixedRegexp);\n      if (stringMatches.length !== 3) {\n        throw new Error(`malformed ufixed type: ${str}`);\n      }\n      const ufixedSize = parseInt(stringMatches[1], 10);\n      const ufixedPrecision = parseInt(stringMatches[2], 10);\n      return new ABIUfixedType(ufixedSize, ufixedPrecision);\n    }\n    if (str === 'bool') {\n      return new ABIBoolType();\n    }\n    if (str === 'address') {\n      return new ABIAddressType();\n    }\n    if (str === 'string') {\n      return new ABIStringType();\n    }\n    if (str.length >= 2 && str[0] === '(' && str[str.length - 1] === ')') {\n      const tupleContent = ABITupleType.parseTupleContent(\n        str.slice(1, str.length - 1)\n      );\n      const tupleTypes: ABIType[] = [];\n      for (let i = 0; i < tupleContent.length; i++) {\n        const ti = ABIType.from(tupleContent[i]);\n        tupleTypes.push(ti);\n      }\n      return new ABITupleType(tupleTypes);\n    }\n    throw new Error(`cannot convert a string ${str} to an ABI type`);\n  }\n}\n\nexport class ABIUintType extends ABIType {\n  bitSize: number;\n\n  constructor(size: number) {\n    super();\n    if (size % 8 !== 0 || size < 8 || size > 512) {\n      throw new Error(`unsupported uint type bitSize: ${size}`);\n    }\n    this.bitSize = size;\n  }\n\n  toString() {\n    return `uint${this.bitSize}`;\n  }\n\n  equals(other: ABIType) {\n    return other instanceof ABIUintType && this.bitSize === other.bitSize;\n  }\n\n  isDynamic() {\n    return false;\n  }\n\n  byteLen() {\n    return this.bitSize / 8;\n  }\n\n  encode(value: ABIValue) {\n    if (typeof value !== 'bigint' && typeof value !== 'number') {\n      throw new Error(`Cannot encode value as uint${this.bitSize}: ${value}`);\n    }\n    if (value >= BigInt(2 ** this.bitSize) || value < BigInt(0)) {\n      throw new Error(\n        `${value} is not a non-negative int or too big to fit in size uint${this.bitSize}`\n      );\n    }\n    if (typeof value === 'number' && !Number.isSafeInteger(value)) {\n      throw new Error(\n        `${value} should be converted into a BigInt before it is encoded`\n      );\n    }\n    return bigIntToBytes(value, this.bitSize / 8);\n  }\n\n  decode(byteString: Uint8Array): bigint {\n    if (byteString.length !== this.bitSize / 8) {\n      throw new Error(`byte string must correspond to a uint${this.bitSize}`);\n    }\n    return bytesToBigInt(byteString);\n  }\n}\n\nexport class ABIUfixedType extends ABIType {\n  bitSize: number;\n  precision: number;\n\n  constructor(size: number, denominator: number) {\n    super();\n    if (size % 8 !== 0 || size < 8 || size > 512) {\n      throw new Error(`unsupported ufixed type bitSize: ${size}`);\n    }\n    if (denominator > 160 || denominator < 1) {\n      throw new Error(`unsupported ufixed type precision: ${denominator}`);\n    }\n    this.bitSize = size;\n    this.precision = denominator;\n  }\n\n  toString() {\n    return `ufixed${this.bitSize}x${this.precision}`;\n  }\n\n  equals(other: ABIType) {\n    return (\n      other instanceof ABIUfixedType &&\n      this.bitSize === other.bitSize &&\n      this.precision === other.precision\n    );\n  }\n\n  isDynamic() {\n    return false;\n  }\n\n  byteLen() {\n    return this.bitSize / 8;\n  }\n\n  encode(value: ABIValue) {\n    if (typeof value !== 'bigint' && typeof value !== 'number') {\n      throw new Error(`Cannot encode value as ${this.toString()}: ${value}`);\n    }\n    if (value >= BigInt(2 ** this.bitSize) || value < BigInt(0)) {\n      throw new Error(\n        `${value} is not a non-negative int or too big to fit in size ${this.toString()}`\n      );\n    }\n    if (typeof value === 'number' && !Number.isSafeInteger(value)) {\n      throw new Error(\n        `${value} should be converted into a BigInt before it is encoded`\n      );\n    }\n    return bigIntToBytes(value, this.bitSize / 8);\n  }\n\n  decode(byteString: Uint8Array): bigint {\n    if (byteString.length !== this.bitSize / 8) {\n      throw new Error(`byte string must correspond to a ${this.toString()}`);\n    }\n    return bytesToBigInt(byteString);\n  }\n}\n\nexport class ABIAddressType extends ABIType {\n  toString() {\n    return 'address';\n  }\n\n  equals(other: ABIType) {\n    return other instanceof ABIAddressType;\n  }\n\n  isDynamic() {\n    return false;\n  }\n\n  byteLen() {\n    return ADDR_BYTE_SIZE;\n  }\n\n  encode(value: ABIValue) {\n    if (typeof value !== 'string' && !(value instanceof Uint8Array)) {\n      throw new Error(`Cannot encode value as ${this.toString()}: ${value}`);\n    }\n    if (typeof value === 'string') {\n      const decodedAddress = decodeAddress(value);\n      return decodedAddress.publicKey;\n    }\n    // Return the address if it is already in bytes\n    if (value.byteLength !== 32) {\n      throw new Error(`byte string must be 32 bytes long for an address`);\n    }\n    return value;\n  }\n\n  decode(byteString: Uint8Array): string {\n    if (byteString.byteLength !== 32) {\n      throw new Error(`byte string must be 32 bytes long for an address`);\n    }\n    return encodeAddress(byteString);\n  }\n}\n\nexport class ABIBoolType extends ABIType {\n  toString() {\n    return 'bool';\n  }\n\n  equals(other: ABIType) {\n    return other instanceof ABIBoolType;\n  }\n\n  isDynamic() {\n    return false;\n  }\n\n  byteLen() {\n    return SINGLE_BOOL_SIZE;\n  }\n\n  encode(value: ABIValue) {\n    if (typeof value !== 'boolean') {\n      throw new Error(`Cannot encode value as bool: ${value}`);\n    }\n    if (value) {\n      return new Uint8Array([128]);\n    }\n    return new Uint8Array([0]);\n  }\n\n  decode(byteString: Uint8Array): boolean {\n    if (byteString.byteLength !== 1) {\n      throw new Error(`bool string must be 1 byte long`);\n    }\n    const value = byteString[0];\n    if (value === 128) {\n      return true;\n    }\n    if (value === 0) {\n      return false;\n    }\n    throw new Error(`boolean could not be decoded from the byte string`);\n  }\n}\n\nexport class ABIByteType extends ABIType {\n  toString() {\n    return 'byte';\n  }\n\n  equals(other: ABIType) {\n    return other instanceof ABIByteType;\n  }\n\n  isDynamic() {\n    return false;\n  }\n\n  byteLen() {\n    return SINGLE_BYTE_SIZE;\n  }\n\n  encode(value: ABIValue) {\n    if (typeof value !== 'number' && typeof value !== 'bigint') {\n      throw new Error(`Cannot encode value as byte: ${value}`);\n    }\n    if (typeof value === 'bigint') {\n      // eslint-disable-next-line no-param-reassign\n      value = Number(value);\n    }\n    if (value < 0 || value > 255) {\n      throw new Error(`${value} cannot be encoded into a byte`);\n    }\n    return new Uint8Array([value]);\n  }\n\n  decode(byteString: Uint8Array): number {\n    if (byteString.byteLength !== 1) {\n      throw new Error(`byte string must be 1 byte long`);\n    }\n    return byteString[0];\n  }\n}\n\nexport class ABIStringType extends ABIType {\n  toString() {\n    return 'string';\n  }\n\n  equals(other: ABIType) {\n    return other instanceof ABIStringType;\n  }\n\n  isDynamic() {\n    return true;\n  }\n\n  byteLen(): never {\n    throw new Error(`${this.toString()} is a dynamic type`);\n  }\n\n  encode(value: ABIValue) {\n    if (typeof value !== 'string' && !(value instanceof Uint8Array)) {\n      throw new Error(`Cannot encode value as string: ${value}`);\n    }\n    const encodedBytes = Buffer.from(value);\n    const encodedLength = bigIntToBytes(\n      encodedBytes.length,\n      LENGTH_ENCODE_BYTE_SIZE\n    );\n    const mergedBytes = new Uint8Array(\n      encodedBytes.length + LENGTH_ENCODE_BYTE_SIZE\n    );\n    mergedBytes.set(encodedLength);\n    mergedBytes.set(encodedBytes, LENGTH_ENCODE_BYTE_SIZE);\n    return mergedBytes;\n  }\n\n  decode(byteString: Uint8Array): string {\n    if (byteString.length < LENGTH_ENCODE_BYTE_SIZE) {\n      throw new Error(\n        `byte string is too short to be decoded. Actual length is ${byteString.length}, but expected at least ${LENGTH_ENCODE_BYTE_SIZE}`\n      );\n    }\n    const buf = Buffer.from(byteString);\n    const byteLength = buf.readUIntBE(0, LENGTH_ENCODE_BYTE_SIZE);\n    const byteValue = byteString.slice(\n      LENGTH_ENCODE_BYTE_SIZE,\n      byteString.length\n    );\n    if (byteLength !== byteValue.length) {\n      throw new Error(\n        `string length bytes do not match the actual length of string. Expected ${byteLength}, got ${byteValue.length}`\n      );\n    }\n    return Buffer.from(byteValue).toString('utf-8');\n  }\n}\n\nexport class ABIArrayStaticType extends ABIType {\n  childType: ABIType;\n  staticLength: number;\n\n  constructor(argType: ABIType, arrayLength: number) {\n    super();\n    if (arrayLength < 0) {\n      throw new Error(\n        `static array must have a non negative length: ${arrayLength}`\n      );\n    }\n    this.childType = argType;\n    this.staticLength = arrayLength;\n  }\n\n  toString() {\n    return `${this.childType.toString()}[${this.staticLength}]`;\n  }\n\n  equals(other: ABIType) {\n    return (\n      other instanceof ABIArrayStaticType &&\n      this.staticLength === other.staticLength &&\n      this.childType.equals(other.childType)\n    );\n  }\n\n  isDynamic() {\n    return this.childType.isDynamic();\n  }\n\n  byteLen() {\n    if (this.childType.constructor === ABIBoolType) {\n      return Math.ceil(this.staticLength / 8);\n    }\n    return this.staticLength * this.childType.byteLen();\n  }\n\n  encode(value: ABIValue) {\n    if (!Array.isArray(value) && !(value instanceof Uint8Array)) {\n      throw new Error(`Cannot encode value as ${this.toString()}: ${value}`);\n    }\n    if (value.length !== this.staticLength) {\n      throw new Error(\n        `Value array does not match static array length. Expected ${this.staticLength}, got ${value.length}`\n      );\n    }\n    const convertedTuple = this.toABITupleType();\n    return convertedTuple.encode(value);\n  }\n\n  decode(byteString: Uint8Array): ABIValue[] {\n    const convertedTuple = this.toABITupleType();\n    return convertedTuple.decode(byteString);\n  }\n\n  toABITupleType() {\n    return new ABITupleType(Array(this.staticLength).fill(this.childType));\n  }\n}\n\nexport class ABIArrayDynamicType extends ABIType {\n  childType: ABIType;\n\n  constructor(argType: ABIType) {\n    super();\n    this.childType = argType;\n  }\n\n  toString() {\n    return `${this.childType.toString()}[]`;\n  }\n\n  equals(other: ABIType) {\n    return (\n      other instanceof ABIArrayDynamicType &&\n      this.childType.equals(other.childType)\n    );\n  }\n\n  isDynamic() {\n    return true;\n  }\n\n  byteLen(): never {\n    throw new Error(`${this.toString()} is a dynamic type`);\n  }\n\n  encode(value: ABIValue) {\n    if (!Array.isArray(value) && !(value instanceof Uint8Array)) {\n      throw new Error(`Cannot encode value as ${this.toString()}: ${value}`);\n    }\n    const convertedTuple = this.toABITupleType(value.length);\n    const encodedTuple = convertedTuple.encode(value);\n    const encodedLength = bigIntToBytes(\n      convertedTuple.childTypes.length,\n      LENGTH_ENCODE_BYTE_SIZE\n    );\n    const mergedBytes = concatArrays(encodedLength, encodedTuple);\n    return mergedBytes;\n  }\n\n  decode(byteString: Uint8Array): ABIValue[] {\n    const buf = Buffer.from(byteString);\n    const byteLength = buf.readUIntBE(0, LENGTH_ENCODE_BYTE_SIZE);\n    const convertedTuple = this.toABITupleType(byteLength);\n    return convertedTuple.decode(\n      byteString.slice(LENGTH_ENCODE_BYTE_SIZE, byteString.length)\n    );\n  }\n\n  toABITupleType(length: number) {\n    return new ABITupleType(Array(length).fill(this.childType));\n  }\n}\n\nexport class ABITupleType extends ABIType {\n  childTypes: ABIType[];\n\n  constructor(argTypes: ABIType[]) {\n    super();\n    if (argTypes.length >= MAX_LEN) {\n      throw new Error(\n        'tuple type child type number larger than maximum uint16 error'\n      );\n    }\n    this.childTypes = argTypes;\n  }\n\n  toString() {\n    const typeStrings: string[] = [];\n    for (let i = 0; i < this.childTypes.length; i++) {\n      typeStrings[i] = this.childTypes[i].toString();\n    }\n    return `(${typeStrings.join(',')})`;\n  }\n\n  equals(other: ABIType) {\n    return (\n      other instanceof ABITupleType &&\n      this.childTypes.length === other.childTypes.length &&\n      this.childTypes.every((child, index) =>\n        child.equals(other.childTypes[index])\n      )\n    );\n  }\n\n  isDynamic() {\n    const isDynamic = (child: ABIType) => child.isDynamic();\n    return this.childTypes.some(isDynamic);\n  }\n\n  byteLen() {\n    let size = 0;\n    for (let i = 0; i < this.childTypes.length; i++) {\n      if (this.childTypes[i].constructor === ABIBoolType) {\n        const after = findBoolLR(this.childTypes, i, 1);\n        const boolNum = after + 1;\n        i += after;\n        size += Math.trunc((boolNum + 7) / 8);\n      } else {\n        const childByteSize = this.childTypes[i].byteLen();\n        size += childByteSize;\n      }\n    }\n    return size;\n  }\n\n  encode(value: ABIValue) {\n    if (!Array.isArray(value) && !(value instanceof Uint8Array)) {\n      throw new Error(`Cannot encode value as ${this.toString()}: ${value}`);\n    }\n    const values = Array.from(value);\n    if (value.length > MAX_LEN) {\n      throw new Error('length of tuple array should not exceed a uint16');\n    }\n    const tupleTypes = this.childTypes;\n    const heads: Uint8Array[] = [];\n    const tails: Uint8Array[] = [];\n    const isDynamicIndex = new Map<number, boolean>();\n    let i = 0;\n\n    while (i < tupleTypes.length) {\n      const tupleType = tupleTypes[i];\n      if (tupleType.isDynamic()) {\n        // Head is not pre-determined for dynamic types; store a placeholder for now\n        isDynamicIndex.set(heads.length, true);\n        heads.push(new Uint8Array([0, 0]));\n        tails.push(tupleType.encode(values[i]));\n      } else {\n        if (tupleType.constructor === ABIBoolType) {\n          const before = findBoolLR(tupleTypes, i, -1);\n          let after = findBoolLR(tupleTypes, i, 1);\n\n          // Pack bytes to heads and tails\n          if (before % 8 !== 0) {\n            throw new Error(\n              'expected before index should have number of bool mod 8 equal 0'\n            );\n          }\n          after = Math.min(7, after);\n          const compressedInt = compressMultipleBool(\n            values.slice(i, i + after + 1)\n          );\n          heads.push(bigIntToBytes(compressedInt, 1));\n          i += after;\n        } else {\n          const encodedTupleValue = tupleType.encode(values[i]);\n          heads.push(encodedTupleValue);\n        }\n        isDynamicIndex.set(i, false);\n        tails.push(new Uint8Array());\n      }\n      i += 1;\n    }\n\n    // Adjust head lengths for dynamic types\n    let headLength = 0;\n    for (const headElement of heads) {\n      headLength += headElement.length;\n    }\n\n    // encode any placeholders for dynamic types\n    let tailLength = 0;\n    for (let j = 0; j < heads.length; j++) {\n      if (isDynamicIndex.get(j)) {\n        const headValue = headLength + tailLength;\n        if (headValue > MAX_LEN) {\n          throw new Error(\n            `byte length of ${headValue} should not exceed a uint16`\n          );\n        }\n        heads[j] = bigIntToBytes(headValue, LENGTH_ENCODE_BYTE_SIZE);\n      }\n      tailLength += tails[j].length;\n    }\n\n    return concatArrays(...heads, ...tails);\n  }\n\n  decode(byteString: Uint8Array): ABIValue[] {\n    const tupleTypes = this.childTypes;\n    const dynamicSegments: Segment[] = [];\n    const valuePartition: Uint8Array[] = [];\n    let i = 0;\n    let iterIndex = 0;\n    const buf = Buffer.from(byteString);\n\n    while (i < tupleTypes.length) {\n      const tupleType = tupleTypes[i];\n      if (tupleType.isDynamic()) {\n        if (\n          byteString.slice(iterIndex, byteString.length).length <\n          LENGTH_ENCODE_BYTE_SIZE\n        ) {\n          throw new Error('dynamic type in tuple is too short to be decoded');\n        }\n        const dynamicIndex = buf.readUIntBE(iterIndex, LENGTH_ENCODE_BYTE_SIZE);\n        if (dynamicSegments.length > 0) {\n          dynamicSegments[dynamicSegments.length - 1].right = dynamicIndex;\n          // Check that right side of segment is greater than the left side\n          if (dynamicIndex < dynamicSegments[dynamicSegments.length - 1].left) {\n            throw new Error(\n              'dynamic index segment miscalculation: left is greater than right index'\n            );\n          }\n        }\n        // Since we do not know where the current dynamic element ends, put a placeholder and update later\n        const seg: Segment = {\n          left: dynamicIndex,\n          right: -1,\n        };\n        dynamicSegments.push(seg);\n        valuePartition.push(null);\n        iterIndex += LENGTH_ENCODE_BYTE_SIZE;\n      } else {\n        // eslint-disable-next-line no-lonely-if\n        if (tupleType.constructor === ABIBoolType) {\n          const before = findBoolLR(this.childTypes, i, -1);\n          let after = findBoolLR(this.childTypes, i, 1);\n\n          if (before % 8 !== 0) {\n            throw new Error('expected before bool number mod 8 === 0');\n          }\n          after = Math.min(7, after);\n          // Parse bool in a byte to multiple byte strings\n          for (let boolIndex = 0; boolIndex <= after; boolIndex++) {\n            const boolMask = 0x80 >> boolIndex;\n            if ((byteString[iterIndex] & boolMask) > 0) {\n              valuePartition.push(new Uint8Array([128]));\n            } else {\n              valuePartition.push(new Uint8Array([0]));\n            }\n          }\n          i += after;\n          iterIndex += 1;\n        } else {\n          const currLen = tupleType.byteLen();\n          valuePartition.push(byteString.slice(iterIndex, iterIndex + currLen));\n          iterIndex += currLen;\n        }\n      }\n      if (i !== tupleTypes.length - 1 && iterIndex >= byteString.length) {\n        throw new Error('input byte not enough to decode');\n      }\n      i += 1;\n    }\n    if (dynamicSegments.length > 0) {\n      dynamicSegments[dynamicSegments.length - 1].right = byteString.length;\n      iterIndex = byteString.length;\n    }\n    if (iterIndex < byteString.length) {\n      throw new Error('input byte not fully consumed');\n    }\n\n    // Check segment indices are valid\n    // If the dynamic segment are not consecutive and well-ordered, we return error\n    for (let j = 0; j < dynamicSegments.length; j++) {\n      const seg = dynamicSegments[j];\n      if (seg.left > seg.right) {\n        throw new Error(\n          'dynamic segment should display a [l, r] space with l <= r'\n        );\n      }\n      if (\n        j !== dynamicSegments.length - 1 &&\n        seg.right !== dynamicSegments[j + 1].left\n      ) {\n        throw new Error('dynamic segment should be consecutive');\n      }\n    }\n\n    // Check dynamic element partitions\n    let segIndex = 0;\n    for (let j = 0; j < tupleTypes.length; j++) {\n      if (tupleTypes[j].isDynamic()) {\n        valuePartition[j] = byteString.slice(\n          dynamicSegments[segIndex].left,\n          dynamicSegments[segIndex].right\n        );\n        segIndex += 1;\n      }\n    }\n\n    // Decode each tuple element\n    const returnValues: ABIValue[] = [];\n    for (let j = 0; j < tupleTypes.length; j++) {\n      const valueTi = tupleTypes[j].decode(valuePartition[j]);\n      returnValues.push(valueTi);\n    }\n    return returnValues;\n  }\n\n  static parseTupleContent(str: string): string[] {\n    if (str.length === 0) {\n      return [];\n    }\n    if (str.endsWith(',') || str.startsWith(',')) {\n      throw new Error('tuple string should not start with comma');\n    }\n    if (str.includes(',,')) {\n      throw new Error('tuple string should not have consecutive commas');\n    }\n\n    const tupleStrings: string[] = [];\n    let depth = 0;\n    let word = '';\n\n    for (const char of str) {\n      word += char;\n      if (char === '(') {\n        depth += 1;\n      } else if (char === ')') {\n        depth -= 1;\n      } else if (char === ',') {\n        // If the comma is at depth 0, then append the word as token.\n        if (depth === 0) {\n          tupleStrings.push(word.slice(0, word.length - 1));\n          word = '';\n        }\n      }\n    }\n    if (word.length !== 0) {\n      tupleStrings.push(word);\n    }\n    if (depth !== 0) {\n      throw new Error('tuple string has mismatched parentheses');\n    }\n    return tupleStrings;\n  }\n}\n\n// compressMultipleBool compresses consecutive bool values into a byte in ABI tuple / array value.\nfunction compressMultipleBool(valueList: ABIValue[]): number {\n  let res = 0;\n  if (valueList.length > 8) {\n    throw new Error('value list passed in should be no greater than length 8');\n  }\n  for (let i = 0; i < valueList.length; i++) {\n    const boolVal = valueList[i];\n    if (typeof boolVal !== 'boolean') {\n      throw new Error('non-boolean values cannot be compressed into a byte');\n    }\n    if (boolVal) {\n      res |= 1 << (7 - i);\n    }\n  }\n  return res;\n}\n\n// Assume that the current index on the list of type is an ABI bool type.\n// It returns the difference between the current index and the index of the furthest consecutive Bool type.\nfunction findBoolLR(typeList: ABIType[], index: number, delta: -1 | 1): number {\n  let until = 0;\n  while (true) {\n    const curr = index + delta * until;\n    if (typeList[curr].constructor === ABIBoolType) {\n      if (curr !== typeList.length - 1 && delta === 1) {\n        until += 1;\n      } else if (curr > 0 && delta === -1) {\n        until += 1;\n      } else {\n        break;\n      }\n    } else {\n      until -= 1;\n      break;\n    }\n  }\n  return until;\n}\n","import { Transaction } from '../transaction';\n\nexport enum ABITransactionType {\n  /**\n   * Any transaction type\n   */\n  any = 'txn',\n\n  /**\n   * Payment transaction type\n   */\n  pay = 'pay',\n\n  /**\n   * Key registration transaction type\n   */\n  keyreg = 'keyreg',\n\n  /**\n   * Asset configuration transaction type\n   */\n  acfg = 'acfg',\n\n  /**\n   * Asset transfer transaction type\n   */\n  axfer = 'axfer',\n\n  /**\n   * Asset freeze transaction type\n   */\n  afrz = 'afrz',\n\n  /**\n   * Application transaction type\n   */\n  appl = 'appl',\n}\n\nexport function abiTypeIsTransaction(type: any): type is ABITransactionType {\n  return (\n    type === ABITransactionType.any ||\n    type === ABITransactionType.pay ||\n    type === ABITransactionType.keyreg ||\n    type === ABITransactionType.acfg ||\n    type === ABITransactionType.axfer ||\n    type === ABITransactionType.afrz ||\n    type === ABITransactionType.appl\n  );\n}\n\nexport function abiCheckTransactionType(\n  type: ABITransactionType,\n  txn: Transaction\n): boolean {\n  if (type === ABITransactionType.any) {\n    return true;\n  }\n\n  return txn.type && txn.type.toString() === type.toString();\n}\n","export enum ABIReferenceType {\n  /**\n   * Account reference type\n   */\n  account = 'account',\n\n  /**\n   * Application reference type\n   */\n  application = 'application',\n\n  /**\n   * Asset reference type\n   */\n  asset = 'asset',\n}\n\nexport function abiTypeIsReference(type: any): type is ABIReferenceType {\n  return (\n    type === ABIReferenceType.account ||\n    type === ABIReferenceType.application ||\n    type === ABIReferenceType.asset\n  );\n}\n","import { genericHash } from '../nacl/naclWrappers';\nimport { ABIType, ABITupleType } from './abi_type';\nimport { ABITransactionType, abiTypeIsTransaction } from './transaction';\nimport { ABIReferenceType, abiTypeIsReference } from './reference';\n\nfunction parseMethodSignature(\n  signature: string\n): { name: string; args: string[]; returns: string } {\n  const argsStart = signature.indexOf('(');\n  if (argsStart === -1) {\n    throw new Error(`Invalid method signature: ${signature}`);\n  }\n\n  let argsEnd = -1;\n  let depth = 0;\n  for (let i = argsStart; i < signature.length; i++) {\n    const char = signature[i];\n\n    if (char === '(') {\n      depth += 1;\n    } else if (char === ')') {\n      if (depth === 0) {\n        // unpaired parenthesis\n        break;\n      }\n\n      depth -= 1;\n      if (depth === 0) {\n        argsEnd = i;\n        break;\n      }\n    }\n  }\n\n  if (argsEnd === -1) {\n    throw new Error(`Invalid method signature: ${signature}`);\n  }\n\n  return {\n    name: signature.slice(0, argsStart),\n    args: ABITupleType.parseTupleContent(\n      signature.slice(argsStart + 1, argsEnd)\n    ),\n    returns: signature.slice(argsEnd + 1),\n  };\n}\n\nexport interface ABIMethodArgParams {\n  type: string;\n  name?: string;\n  desc?: string;\n}\n\nexport interface ABIMethodReturnParams {\n  type: string;\n  desc?: string;\n}\n\nexport interface ABIMethodParams {\n  name: string;\n  desc?: string;\n  args: ABIMethodArgParams[];\n  returns: ABIMethodReturnParams;\n}\n\nexport type ABIArgumentType = ABIType | ABITransactionType | ABIReferenceType;\n\nexport type ABIReturnType = ABIType | 'void';\n\nexport class ABIMethod {\n  public readonly name: string;\n  public readonly description?: string;\n  public readonly args: Array<{\n    type: ABIArgumentType;\n    name?: string;\n    description?: string;\n  }>;\n\n  public readonly returns: { type: ABIReturnType; description?: string };\n\n  constructor(params: ABIMethodParams) {\n    if (\n      typeof params.name !== 'string' ||\n      typeof params.returns !== 'object' ||\n      !Array.isArray(params.args)\n    ) {\n      throw new Error('Invalid ABIMethod parameters');\n    }\n\n    this.name = params.name;\n    this.description = params.desc;\n    this.args = params.args.map(({ type, name, desc }) => {\n      if (abiTypeIsTransaction(type) || abiTypeIsReference(type)) {\n        return {\n          type,\n          name,\n          description: desc,\n        };\n      }\n\n      return {\n        type: ABIType.from(type),\n        name,\n        description: desc,\n      };\n    });\n    this.returns = {\n      type:\n        params.returns.type === 'void'\n          ? params.returns.type\n          : ABIType.from(params.returns.type),\n      description: params.returns.desc,\n    };\n  }\n\n  getSignature(): string {\n    const args = this.args.map((arg) => arg.type.toString()).join(',');\n    const returns = this.returns.type.toString();\n    return `${this.name}(${args})${returns}`;\n  }\n\n  getSelector(): Uint8Array {\n    const hash = genericHash(this.getSignature());\n    return new Uint8Array(hash.slice(0, 4));\n  }\n\n  txnCount(): number {\n    let count = 1;\n    for (const arg of this.args) {\n      if (typeof arg.type === 'string' && abiTypeIsTransaction(arg.type)) {\n        count += 1;\n      }\n    }\n    return count;\n  }\n\n  toJSON(): ABIMethodParams {\n    return {\n      name: this.name,\n      desc: this.description,\n      args: this.args.map(({ type, name, description }) => ({\n        type: type.toString(),\n        name,\n        desc: description,\n      })),\n      returns: {\n        type: this.returns.type.toString(),\n        desc: this.returns.description,\n      },\n    };\n  }\n\n  static fromSignature(signature: string): ABIMethod {\n    const { name, args, returns } = parseMethodSignature(signature);\n\n    return new ABIMethod({\n      name,\n      args: args.map((arg) => ({ type: arg })),\n      returns: { type: returns },\n    });\n  }\n}\n\nexport function getMethodByName(methods: ABIMethod[], name: string): ABIMethod {\n  if (\n    methods === null ||\n    !Array.isArray(methods) ||\n    !methods.every((item) => item instanceof ABIMethod)\n  )\n    throw new Error('Methods list provided is null or not the correct type');\n\n  const filteredMethods = methods.filter((m: ABIMethod) => m.name === name);\n  if (filteredMethods.length > 1)\n    throw new Error(\n      `found ${\n        filteredMethods.length\n      } methods with the same name ${filteredMethods\n        .map((m: ABIMethod) => m.getSignature())\n        .join(',')}`\n    );\n\n  if (filteredMethods.length === 0)\n    throw new Error(`found 0 methods with the name ${name}`);\n\n  return filteredMethods[0];\n}\n","import { ABIMethod, ABIMethodParams, getMethodByName } from './method';\n\nexport interface ABIContractNetworkInfo {\n  appID: number;\n}\n\nexport interface ABIContractNetworks {\n  [network: string]: ABIContractNetworkInfo;\n}\n\nexport interface ABIContractParams {\n  name: string;\n  desc?: string;\n  networks?: ABIContractNetworks;\n  methods: ABIMethodParams[];\n}\n\nexport class ABIContract {\n  public readonly name: string;\n  public readonly description?: string;\n  public readonly networks: ABIContractNetworks;\n  public readonly methods: ABIMethod[];\n\n  constructor(params: ABIContractParams) {\n    if (\n      typeof params.name !== 'string' ||\n      !Array.isArray(params.methods) ||\n      (params.networks && typeof params.networks !== 'object')\n    ) {\n      throw new Error('Invalid ABIContract parameters');\n    }\n\n    this.name = params.name;\n    this.description = params.desc;\n    this.networks = params.networks ? { ...params.networks } : {};\n    this.methods = params.methods.map((method) => new ABIMethod(method));\n  }\n\n  toJSON(): ABIContractParams {\n    return {\n      name: this.name,\n      desc: this.description,\n      networks: this.networks,\n      methods: this.methods.map((method) => method.toJSON()),\n    };\n  }\n\n  getMethodByName(name: string): ABIMethod {\n    return getMethodByName(this.methods, name);\n  }\n}\n","import { ABIMethod, ABIMethodParams, getMethodByName } from './method';\n\nexport interface ABIInterfaceParams {\n  name: string;\n  desc?: string;\n  methods: ABIMethodParams[];\n}\n\nexport class ABIInterface {\n  public readonly name: string;\n  public readonly description?: string;\n  public readonly methods: ABIMethod[];\n\n  constructor(params: ABIInterfaceParams) {\n    if (typeof params.name !== 'string' || !Array.isArray(params.methods)) {\n      throw new Error('Invalid ABIInterface parameters');\n    }\n\n    this.name = params.name;\n    this.description = params.desc;\n    this.methods = params.methods.map((method) => new ABIMethod(method));\n  }\n\n  toJSON(): ABIInterfaceParams {\n    return {\n      name: this.name,\n      desc: this.description,\n      methods: this.methods.map((method) => method.toJSON()),\n    };\n  }\n\n  getMethodByName(name: string): ABIMethod {\n    return getMethodByName(this.methods, name);\n  }\n}\n","export * from './abi_type';\nexport * from './contract';\nexport * from './interface';\nexport * from './method';\nexport * from './transaction';\nexport * from './reference';\n","import { Buffer } from 'buffer';\nimport {\n  ABIAddressType,\n  abiCheckTransactionType,\n  ABIMethod,\n  ABIReferenceType,\n  ABITupleType,\n  ABIType,\n  abiTypeIsReference,\n  abiTypeIsTransaction,\n  ABIUintType,\n  ABIValue,\n} from './abi';\nimport Algodv2 from './client/v2/algod/algod';\nimport {\n  SimulateResponse,\n  SimulateRequest,\n  SimulateRequestTransactionGroup,\n} from './client/v2/algod/models/types';\nimport { EncodedSignedTransaction } from './types';\nimport { assignGroupID } from './group';\nimport { makeApplicationCallTxnFromObject } from './makeTxn';\nimport {\n  isTransactionWithSigner,\n  TransactionSigner,\n  TransactionWithSigner,\n} from './signer';\nimport { decodeSignedTransaction, Transaction } from './transaction';\nimport {\n  BoxReference,\n  OnApplicationComplete,\n  SuggestedParams,\n} from './types/transactions/base';\nimport { waitForConfirmation } from './wait';\nimport * as encoding from './encoding/encoding';\n\n// First 4 bytes of SHA-512/256 hash of \"return\"\nconst RETURN_PREFIX = Buffer.from([21, 31, 124, 117]);\n\n// The maximum number of arguments for an application call transaction\nconst MAX_APP_ARGS = 16;\n\nexport type ABIArgument = ABIValue | TransactionWithSigner;\n\n/** Represents the output from a successful ABI method call. */\nexport interface ABIResult {\n  /** The TxID of the transaction that invoked the ABI method call. */\n  txID: string;\n  /**\n   * The raw bytes of the return value from the ABI method call. This will be empty if the method\n   * does not return a value (return type \"void\").\n   */\n  rawReturnValue: Uint8Array;\n  /**\n   * The method that was called for this result\n   */\n  method: ABIMethod;\n  /**\n   * The return value from the ABI method call. This will be undefined if the method does not return\n   * a value (return type \"void\"), or if the SDK was unable to decode the returned value.\n   */\n  returnValue?: ABIValue;\n  /** If the SDK was unable to decode a return value, the error will be here. */\n  decodeError?: Error;\n  /** The pending transaction information from the method transaction */\n  txInfo?: Record<string, any>;\n}\n\nexport enum AtomicTransactionComposerStatus {\n  /** The atomic group is still under construction. */\n  BUILDING,\n\n  /** The atomic group has been finalized, but not yet signed. */\n  BUILT,\n\n  /** The atomic group has been finalized and signed, but not yet submitted to the network. */\n  SIGNED,\n\n  /** The atomic group has been finalized, signed, and submitted to the network. */\n  SUBMITTED,\n\n  /** The atomic group has been finalized, signed, submitted, and successfully committed to a block. */\n  COMMITTED,\n}\n\n/**\n * Add a value to an application call's foreign array. The addition will be as compact as possible,\n * and this function will return an index that can be used to reference `valueToAdd` in `array`.\n *\n * @param valueToAdd - The value to add to the array. If this value is already present in the array,\n *   it will not be added again. Instead, the existing index will be returned.\n * @param array - The existing foreign array. This input may be modified to append `valueToAdd`.\n * @param zeroValue - If provided, this value indicated two things: the 0 value is special for this\n *   array, so all indexes into `array` must start at 1; additionally, if `valueToAdd` equals\n *   `zeroValue`, then `valueToAdd` will not be added to the array, and instead the 0 indexes will\n *   be returned.\n * @returns An index that can be used to reference `valueToAdd` in `array`.\n */\nfunction populateForeignArray<Type>(\n  valueToAdd: Type,\n  array: Type[],\n  zeroValue?: Type\n): number {\n  if (zeroValue != null && valueToAdd === zeroValue) {\n    return 0;\n  }\n\n  const offset = zeroValue == null ? 0 : 1;\n\n  for (let i = 0; i < array.length; i++) {\n    if (valueToAdd === array[i]) {\n      return i + offset;\n    }\n  }\n\n  array.push(valueToAdd);\n  return array.length - 1 + offset;\n}\n\n/** A class used to construct and execute atomic transaction groups */\nexport class AtomicTransactionComposer {\n  /** The maximum size of an atomic transaction group. */\n  static MAX_GROUP_SIZE: number = 16;\n\n  private status = AtomicTransactionComposerStatus.BUILDING;\n  private transactions: TransactionWithSigner[] = [];\n  private methodCalls: Map<number, ABIMethod> = new Map();\n  private signedTxns: Uint8Array[] = [];\n  private txIDs: string[] = [];\n\n  /**\n   * Get the status of this composer's transaction group.\n   */\n  getStatus(): AtomicTransactionComposerStatus {\n    return this.status;\n  }\n\n  /**\n   * Get the number of transactions currently in this atomic group.\n   */\n  count(): number {\n    return this.transactions.length;\n  }\n\n  /**\n   * Create a new composer with the same underlying transactions. The new composer's status will be\n   * BUILDING, so additional transactions may be added to it.\n   */\n  clone(): AtomicTransactionComposer {\n    const theClone = new AtomicTransactionComposer();\n\n    theClone.transactions = this.transactions.map(({ txn, signer }) => ({\n      // not quite a deep copy, but good enough for our purposes (modifying txn.group in buildGroup)\n      txn: Transaction.from_obj_for_encoding({\n        ...txn.get_obj_for_encoding(),\n        // erase the group ID\n        grp: undefined,\n      }),\n      signer,\n    }));\n    theClone.methodCalls = new Map(this.methodCalls);\n\n    return theClone;\n  }\n\n  /**\n   * Add a transaction to this atomic group.\n   *\n   * An error will be thrown if the transaction has a nonzero group ID, the composer's status is\n   * not BUILDING, or if adding this transaction causes the current group to exceed MAX_GROUP_SIZE.\n   */\n  addTransaction(txnAndSigner: TransactionWithSigner): void {\n    if (this.status !== AtomicTransactionComposerStatus.BUILDING) {\n      throw new Error(\n        'Cannot add transactions when composer status is not BUILDING'\n      );\n    }\n\n    if (this.transactions.length === AtomicTransactionComposer.MAX_GROUP_SIZE) {\n      throw new Error(\n        `Adding an additional transaction exceeds the maximum atomic group size of ${AtomicTransactionComposer.MAX_GROUP_SIZE}`\n      );\n    }\n\n    if (txnAndSigner.txn.group && txnAndSigner.txn.group.some((v) => v !== 0)) {\n      throw new Error('Cannot add a transaction with nonzero group ID');\n    }\n\n    this.transactions.push(txnAndSigner);\n  }\n\n  /**\n   * Add a smart contract method call to this atomic group.\n   *\n   * An error will be thrown if the composer's status is not BUILDING, if adding this transaction\n   * causes the current group to exceed MAX_GROUP_SIZE, or if the provided arguments are invalid\n   * for the given method.\n   */\n  addMethodCall({\n    appID,\n    method,\n    methodArgs,\n    sender,\n    suggestedParams,\n    onComplete,\n    approvalProgram,\n    clearProgram,\n    numGlobalInts,\n    numGlobalByteSlices,\n    numLocalInts,\n    numLocalByteSlices,\n    extraPages,\n    appAccounts,\n    appForeignApps,\n    appForeignAssets,\n    boxes,\n    note,\n    lease,\n    rekeyTo,\n    signer,\n  }: {\n    /** The ID of the smart contract to call. Set this to 0 to indicate an application creation call. */\n    appID: number;\n    /** The method to call on the smart contract */\n    method: ABIMethod;\n    /** The arguments to include in the method call. If omitted, no arguments will be passed to the method. */\n    methodArgs?: ABIArgument[];\n    /** The address of the sender of this application call */\n    sender: string;\n    /** Transactions params to use for this application call */\n    suggestedParams: SuggestedParams;\n    /** The OnComplete action to take for this application call. If omitted, OnApplicationComplete.NoOpOC will be used. */\n    onComplete?: OnApplicationComplete;\n    /** The approval program for this application call. Only set this if this is an application creation call, or if onComplete is OnApplicationComplete.UpdateApplicationOC */\n    approvalProgram?: Uint8Array;\n    /** The clear program for this application call. Only set this if this is an application creation call, or if onComplete is OnApplicationComplete.UpdateApplicationOC */\n    clearProgram?: Uint8Array;\n    /** The global integer schema size. Only set this if this is an application creation call. */\n    numGlobalInts?: number;\n    /** The global byte slice schema size. Only set this if this is an application creation call. */\n    numGlobalByteSlices?: number;\n    /** The local integer schema size. Only set this if this is an application creation call. */\n    numLocalInts?: number;\n    /** The local byte slice schema size. Only set this if this is an application creation call. */\n    numLocalByteSlices?: number;\n    /** The number of extra pages to allocate for the application's programs. Only set this if this is an application creation call. If omitted, defaults to 0. */\n    extraPages?: number;\n    /** Array of Address strings that represent external accounts supplied to this application. If accounts are provided here, the accounts specified in the method args will appear after these. */\n    appAccounts?: string[];\n    /** Array of App ID numbers that represent external apps supplied to this application. If apps are provided here, the apps specified in the method args will appear after these. */\n    appForeignApps?: number[];\n    /** Array of Asset ID numbers that represent external assets supplied to this application. If assets are provided here, the assets specified in the method args will appear after these. */\n    appForeignAssets?: number[];\n    /** The box references for this application call */\n    boxes?: BoxReference[];\n    /** The note value for this application call */\n    note?: Uint8Array;\n    /** The lease value for this application call */\n    lease?: Uint8Array;\n    /** If provided, the address that the sender will be rekeyed to at the conclusion of this application call */\n    rekeyTo?: string;\n    /** A transaction signer that can authorize this application call from sender */\n    signer: TransactionSigner;\n  }): void {\n    if (this.status !== AtomicTransactionComposerStatus.BUILDING) {\n      throw new Error(\n        'Cannot add transactions when composer status is not BUILDING'\n      );\n    }\n\n    if (\n      this.transactions.length + method.txnCount() >\n      AtomicTransactionComposer.MAX_GROUP_SIZE\n    ) {\n      throw new Error(\n        `Adding additional transactions exceeds the maximum atomic group size of ${AtomicTransactionComposer.MAX_GROUP_SIZE}`\n      );\n    }\n\n    if (appID === 0) {\n      if (\n        approvalProgram == null ||\n        clearProgram == null ||\n        numGlobalInts == null ||\n        numGlobalByteSlices == null ||\n        numLocalInts == null ||\n        numLocalByteSlices == null\n      ) {\n        throw new Error(\n          'One of the following required parameters for application creation is missing: approvalProgram, clearProgram, numGlobalInts, numGlobalByteSlices, numLocalInts, numLocalByteSlices'\n        );\n      }\n    } else if (onComplete === OnApplicationComplete.UpdateApplicationOC) {\n      if (approvalProgram == null || clearProgram == null) {\n        throw new Error(\n          'One of the following required parameters for OnApplicationComplete.UpdateApplicationOC is missing: approvalProgram, clearProgram'\n        );\n      }\n      if (\n        numGlobalInts != null ||\n        numGlobalByteSlices != null ||\n        numLocalInts != null ||\n        numLocalByteSlices != null ||\n        extraPages != null\n      ) {\n        throw new Error(\n          'One of the following application creation parameters were set on a non-creation call: numGlobalInts, numGlobalByteSlices, numLocalInts, numLocalByteSlices, extraPages'\n        );\n      }\n    } else if (\n      approvalProgram != null ||\n      clearProgram != null ||\n      numGlobalInts != null ||\n      numGlobalByteSlices != null ||\n      numLocalInts != null ||\n      numLocalByteSlices != null ||\n      extraPages != null\n    ) {\n      throw new Error(\n        'One of the following application creation parameters were set on a non-creation call: approvalProgram, clearProgram, numGlobalInts, numGlobalByteSlices, numLocalInts, numLocalByteSlices, extraPages'\n      );\n    }\n\n    if (methodArgs == null) {\n      // eslint-disable-next-line no-param-reassign\n      methodArgs = [];\n    }\n\n    if (methodArgs.length !== method.args.length) {\n      throw new Error(\n        `Incorrect number of method arguments. Expected ${method.args.length}, got ${methodArgs.length}`\n      );\n    }\n\n    let basicArgTypes: ABIType[] = [];\n    let basicArgValues: ABIValue[] = [];\n    const txnArgs: TransactionWithSigner[] = [];\n    const refArgTypes: ABIReferenceType[] = [];\n    const refArgValues: ABIValue[] = [];\n    const refArgIndexToBasicArgIndex: Map<number, number> = new Map();\n    // TODO: Box encoding for ABI\n    const boxReferences: BoxReference[] = !boxes ? [] : boxes;\n\n    for (let i = 0; i < methodArgs.length; i++) {\n      let argType = method.args[i].type;\n      const argValue = methodArgs[i];\n\n      if (abiTypeIsTransaction(argType)) {\n        if (\n          !isTransactionWithSigner(argValue) ||\n          !abiCheckTransactionType(argType, argValue.txn)\n        ) {\n          throw new Error(\n            `Expected ${argType} transaction for argument at index ${i}`\n          );\n        }\n        if (argValue.txn.group && argValue.txn.group.some((v) => v !== 0)) {\n          throw new Error('Cannot add a transaction with nonzero group ID');\n        }\n        txnArgs.push(argValue);\n        continue;\n      }\n\n      if (isTransactionWithSigner(argValue)) {\n        throw new Error(\n          `Expected non-transaction value for argument at index ${i}`\n        );\n      }\n\n      if (abiTypeIsReference(argType)) {\n        refArgIndexToBasicArgIndex.set(\n          refArgTypes.length,\n          basicArgTypes.length\n        );\n        refArgTypes.push(argType);\n        refArgValues.push(argValue);\n        // treat the reference as a uint8 for encoding purposes\n        argType = new ABIUintType(8);\n      }\n\n      if (typeof argType === 'string') {\n        throw new Error(`Unknown ABI type: ${argType}`);\n      }\n\n      basicArgTypes.push(argType);\n      basicArgValues.push(argValue);\n    }\n\n    const resolvedRefIndexes: number[] = [];\n    const foreignAccounts: string[] =\n      appAccounts == null ? [] : appAccounts.slice();\n    const foreignApps: number[] =\n      appForeignApps == null ? [] : appForeignApps.slice();\n    const foreignAssets: number[] =\n      appForeignAssets == null ? [] : appForeignAssets.slice();\n    for (let i = 0; i < refArgTypes.length; i++) {\n      const refType = refArgTypes[i];\n      const refValue = refArgValues[i];\n      let resolved = 0;\n\n      switch (refType) {\n        case ABIReferenceType.account: {\n          const addressType = new ABIAddressType();\n          const address = addressType.decode(addressType.encode(refValue));\n          resolved = populateForeignArray(address, foreignAccounts, sender);\n          break;\n        }\n        case ABIReferenceType.application: {\n          const uint64Type = new ABIUintType(64);\n          const refAppID = uint64Type.decode(uint64Type.encode(refValue));\n          if (refAppID > Number.MAX_SAFE_INTEGER) {\n            throw new Error(\n              `Expected safe integer for application value, got ${refAppID}`\n            );\n          }\n          resolved = populateForeignArray(Number(refAppID), foreignApps, appID);\n          break;\n        }\n        case ABIReferenceType.asset: {\n          const uint64Type = new ABIUintType(64);\n          const refAssetID = uint64Type.decode(uint64Type.encode(refValue));\n          if (refAssetID > Number.MAX_SAFE_INTEGER) {\n            throw new Error(\n              `Expected safe integer for asset value, got ${refAssetID}`\n            );\n          }\n          resolved = populateForeignArray(Number(refAssetID), foreignAssets);\n          break;\n        }\n        default:\n          throw new Error(`Unknown reference type: ${refType}`);\n      }\n\n      resolvedRefIndexes.push(resolved);\n    }\n\n    for (let i = 0; i < resolvedRefIndexes.length; i++) {\n      const basicArgIndex = refArgIndexToBasicArgIndex.get(i);\n      basicArgValues[basicArgIndex] = resolvedRefIndexes[i];\n    }\n\n    if (basicArgTypes.length > MAX_APP_ARGS - 1) {\n      const lastArgTupleTypes = basicArgTypes.slice(MAX_APP_ARGS - 2);\n      const lastArgTupleValues = basicArgValues.slice(MAX_APP_ARGS - 2);\n\n      basicArgTypes = basicArgTypes.slice(0, MAX_APP_ARGS - 2);\n      basicArgValues = basicArgValues.slice(0, MAX_APP_ARGS - 2);\n\n      basicArgTypes.push(new ABITupleType(lastArgTupleTypes));\n      basicArgValues.push(lastArgTupleValues);\n    }\n\n    const appArgsEncoded: Uint8Array[] = [method.getSelector()];\n    for (let i = 0; i < basicArgTypes.length; i++) {\n      appArgsEncoded.push(basicArgTypes[i].encode(basicArgValues[i]));\n    }\n\n    const appCall = {\n      txn: makeApplicationCallTxnFromObject({\n        from: sender,\n        appIndex: appID,\n        appArgs: appArgsEncoded,\n        accounts: foreignAccounts,\n        foreignApps,\n        foreignAssets,\n        boxes: boxReferences,\n        onComplete:\n          onComplete == null ? OnApplicationComplete.NoOpOC : onComplete,\n        approvalProgram,\n        clearProgram,\n        numGlobalInts,\n        numGlobalByteSlices,\n        numLocalInts,\n        numLocalByteSlices,\n        extraPages,\n        lease,\n        note,\n        rekeyTo,\n        suggestedParams,\n      }),\n      signer,\n    };\n\n    this.transactions.push(...txnArgs, appCall);\n    this.methodCalls.set(this.transactions.length - 1, method);\n  }\n\n  /**\n   * Finalize the transaction group and returned the finalized transactions.\n   *\n   * The composer's status will be at least BUILT after executing this method.\n   */\n  buildGroup(): TransactionWithSigner[] {\n    if (this.status === AtomicTransactionComposerStatus.BUILDING) {\n      if (this.transactions.length === 0) {\n        throw new Error('Cannot build a group with 0 transactions');\n      }\n      if (this.transactions.length > 1) {\n        assignGroupID(\n          this.transactions.map((txnWithSigner) => txnWithSigner.txn)\n        );\n      }\n      this.status = AtomicTransactionComposerStatus.BUILT;\n    }\n    return this.transactions;\n  }\n\n  /**\n   * Obtain signatures for each transaction in this group. If signatures have already been obtained,\n   * this method will return cached versions of the signatures.\n   *\n   * The composer's status will be at least SIGNED after executing this method.\n   *\n   * An error will be thrown if signing any of the transactions fails.\n   *\n   * @returns A promise that resolves to an array of signed transactions.\n   */\n  async gatherSignatures(): Promise<Uint8Array[]> {\n    if (this.status >= AtomicTransactionComposerStatus.SIGNED) {\n      return this.signedTxns;\n    }\n\n    // retrieve built transactions and verify status is BUILT\n    const txnsWithSigners = this.buildGroup();\n    const txnGroup = txnsWithSigners.map((txnWithSigner) => txnWithSigner.txn);\n\n    const indexesPerSigner: Map<TransactionSigner, number[]> = new Map();\n\n    for (let i = 0; i < txnsWithSigners.length; i++) {\n      const { signer } = txnsWithSigners[i];\n\n      if (!indexesPerSigner.has(signer)) {\n        indexesPerSigner.set(signer, []);\n      }\n\n      indexesPerSigner.get(signer).push(i);\n    }\n\n    const orderedSigners = Array.from(indexesPerSigner);\n\n    const batchedSigs = await Promise.all(\n      orderedSigners.map(([signer, indexes]) => signer(txnGroup, indexes))\n    );\n\n    const signedTxns: Array<Uint8Array | null> = txnsWithSigners.map(\n      () => null\n    );\n\n    for (\n      let signerIndex = 0;\n      signerIndex < orderedSigners.length;\n      signerIndex++\n    ) {\n      const indexes = orderedSigners[signerIndex][1];\n      const sigs = batchedSigs[signerIndex];\n\n      for (let i = 0; i < indexes.length; i++) {\n        signedTxns[indexes[i]] = sigs[i];\n      }\n    }\n\n    if (!signedTxns.every((sig) => sig != null)) {\n      throw new Error(`Missing signatures. Got ${signedTxns}`);\n    }\n\n    const txIDs = signedTxns.map((stxn, index) => {\n      try {\n        return decodeSignedTransaction(stxn).txn.txID();\n      } catch (err) {\n        throw new Error(\n          `Cannot decode signed transaction at index ${index}. ${err}`\n        );\n      }\n    });\n\n    this.signedTxns = signedTxns;\n    this.txIDs = txIDs;\n    this.status = AtomicTransactionComposerStatus.SIGNED;\n\n    return signedTxns;\n  }\n\n  /**\n   * Send the transaction group to the network, but don't wait for it to be committed to a block. An\n   * error will be thrown if submission fails.\n   *\n   * The composer's status must be SUBMITTED or lower before calling this method. If submission is\n   * successful, this composer's status will update to SUBMITTED.\n   *\n   * Note: a group can only be submitted again if it fails.\n   *\n   * @param client - An Algodv2 client\n   *\n   * @returns A promise that, upon success, resolves to a list of TxIDs of the submitted transactions.\n   */\n  async submit(client: Algodv2): Promise<string[]> {\n    if (this.status > AtomicTransactionComposerStatus.SUBMITTED) {\n      throw new Error('Transaction group cannot be resubmitted');\n    }\n\n    const stxns = await this.gatherSignatures();\n\n    await client.sendRawTransaction(stxns).do();\n\n    this.status = AtomicTransactionComposerStatus.SUBMITTED;\n\n    return this.txIDs;\n  }\n\n  /**\n   * Simulates the transaction group in the network.\n   *\n   * The composer will try to sign any transactions in the group, then simulate\n   * the results.\n   * Simulating the group will not change the composer's status.\n   *\n   * @param client - An Algodv2 client\n   * @param request - SimulateRequest with options in simulation.\n   *   If provided, the request's transaction group will be overrwritten by the composer's group,\n   *   only simulation related options will be used.\n   *\n   * @returns A promise that, upon success, resolves to an object containing an\n   *   array of results containing one element for each method call transaction\n   *   in this group (ABIResult[]) and the SimulateResponse object.\n   */\n  async simulate(\n    client: Algodv2,\n    request?: SimulateRequest\n  ): Promise<{\n    methodResults: ABIResult[];\n    simulateResponse: SimulateResponse;\n  }> {\n    if (this.status > AtomicTransactionComposerStatus.SUBMITTED) {\n      throw new Error(\n        'Simulated Transaction group has already been submitted to the network'\n      );\n    }\n\n    const stxns = await this.gatherSignatures();\n    const txnObjects: EncodedSignedTransaction[] = stxns.map(\n      (stxn) => encoding.decode(stxn) as EncodedSignedTransaction\n    );\n\n    const currentRequest: SimulateRequest =\n      request == null ? new SimulateRequest({ txnGroups: [] }) : request;\n\n    currentRequest.txnGroups = [\n      new SimulateRequestTransactionGroup({\n        txns: txnObjects,\n      }),\n    ];\n\n    const simulateResponse = await client\n      .simulateTransactions(currentRequest)\n      .do();\n\n    // Parse method response\n    const methodResults: ABIResult[] = [];\n    for (const [txnIndex, method] of this.methodCalls) {\n      const txID = this.txIDs[txnIndex];\n      const pendingInfo =\n        simulateResponse.txnGroups[0].txnResults[txnIndex].txnResult;\n\n      const methodResult: ABIResult = {\n        txID,\n        rawReturnValue: new Uint8Array(),\n        method,\n      };\n\n      methodResults.push(\n        AtomicTransactionComposer.parseMethodResponse(\n          method,\n          methodResult,\n          pendingInfo.get_obj_for_encoding()\n        )\n      );\n    }\n\n    return { methodResults, simulateResponse };\n  }\n\n  /**\n   * Send the transaction group to the network and wait until it's committed to a block. An error\n   * will be thrown if submission or execution fails.\n   *\n   * The composer's status must be SUBMITTED or lower before calling this method, since execution is\n   * only allowed once. If submission is successful, this composer's status will update to SUBMITTED.\n   * If the execution is also successful, this composer's status will update to COMMITTED.\n   *\n   * Note: a group can only be submitted again if it fails.\n   *\n   * @param client - An Algodv2 client\n   * @param waitRounds - The maximum number of rounds to wait for transaction confirmation\n   *\n   * @returns A promise that, upon success, resolves to an object containing the confirmed round for\n   *   this transaction, the txIDs of the submitted transactions, and an array of results containing\n   *   one element for each method call transaction in this group.\n   */\n  async execute(\n    client: Algodv2,\n    waitRounds: number\n  ): Promise<{\n    confirmedRound: number;\n    txIDs: string[];\n    methodResults: ABIResult[];\n  }> {\n    if (this.status === AtomicTransactionComposerStatus.COMMITTED) {\n      throw new Error(\n        'Transaction group has already been executed successfully'\n      );\n    }\n\n    const txIDs = await this.submit(client);\n    this.status = AtomicTransactionComposerStatus.SUBMITTED;\n\n    const firstMethodCallIndex = this.transactions.findIndex((_, index) =>\n      this.methodCalls.has(index)\n    );\n    const indexToWaitFor =\n      firstMethodCallIndex === -1 ? 0 : firstMethodCallIndex;\n    const confirmedTxnInfo = await waitForConfirmation(\n      client,\n      txIDs[indexToWaitFor],\n      waitRounds\n    );\n    this.status = AtomicTransactionComposerStatus.COMMITTED;\n\n    const confirmedRound: number = confirmedTxnInfo['confirmed-round'];\n\n    const methodResults: ABIResult[] = [];\n\n    for (const [txnIndex, method] of this.methodCalls) {\n      const txID = txIDs[txnIndex];\n\n      let methodResult: ABIResult = {\n        txID,\n        rawReturnValue: new Uint8Array(),\n        method,\n      };\n\n      try {\n        const pendingInfo =\n          txnIndex === firstMethodCallIndex\n            ? confirmedTxnInfo\n            : // eslint-disable-next-line no-await-in-loop\n              await client.pendingTransactionInformation(txID).do();\n\n        methodResult = AtomicTransactionComposer.parseMethodResponse(\n          method,\n          methodResult,\n          pendingInfo\n        );\n      } catch (err) {\n        methodResult.decodeError = err;\n      }\n\n      methodResults.push(methodResult);\n    }\n\n    return {\n      confirmedRound,\n      txIDs,\n      methodResults,\n    };\n  }\n\n  /**\n   * Parses a single ABI Method transaction log into a ABI result object.\n   *\n   * @param method\n   * @param methodResult\n   * @param pendingInfo\n   * @returns An ABIResult object\n   */\n  static parseMethodResponse(\n    method: ABIMethod,\n    methodResult: ABIResult,\n    pendingInfo: Record<string, any>\n  ): ABIResult {\n    const returnedResult: ABIResult = methodResult;\n    try {\n      returnedResult.txInfo = pendingInfo;\n      if (method.returns.type !== 'void') {\n        const logs: string[] = pendingInfo.logs || [];\n        if (logs.length === 0) {\n          throw new Error('App call transaction did not log a return value');\n        }\n\n        const lastLog = Buffer.from(logs[logs.length - 1], 'base64');\n        if (\n          lastLog.byteLength < 4 ||\n          !lastLog.slice(0, 4).equals(RETURN_PREFIX)\n        ) {\n          throw new Error('App call transaction did not log a return value');\n        }\n\n        returnedResult.rawReturnValue = new Uint8Array(lastLog.slice(4));\n        returnedResult.returnValue = method.returns.type.decode(\n          methodResult.rawReturnValue\n        );\n      }\n    } catch (err) {\n      returnedResult.decodeError = err;\n    }\n\n    return returnedResult;\n  }\n}\n","export * from './transactions';\nexport * from './multisig';\nexport * from './address';\n","import { Buffer } from 'buffer';\nimport * as nacl from './nacl/naclWrappers';\nimport * as address from './encoding/address';\nimport * as encoding from './encoding/encoding';\nimport * as txnBuilder from './transaction';\nimport Bid, { BidOptions } from './bid';\nimport * as convert from './convert';\nimport * as utils from './utils/utils';\n\nconst SIGN_BYTES_PREFIX = Buffer.from([77, 88]); // \"MX\"\n\n// Errors\nexport const MULTISIG_BAD_SENDER_ERROR_MSG =\n  'The transaction sender address and multisig preimage do not match.';\n\n/**\n * signTransaction takes an object with either payment or key registration fields and\n * a secret key and returns a signed blob.\n *\n * Payment transaction fields: from, to, amount, fee, firstRound, lastRound, genesisHash,\n * note(optional), GenesisID(optional), closeRemainderTo(optional)\n *\n * Key registration fields: fee, firstRound, lastRound, voteKey, selectionKey, voteFirst,\n * voteLast, voteKeyDilution, genesisHash, note(optional), GenesisID(optional)\n *\n * If flatFee is not set and the final calculated fee is lower than the protocol minimum fee, the fee will be increased to match the minimum.\n * @param txn - object with either payment or key registration fields\n * @param sk - Algorand Secret Key\n * @returns object contains the binary signed transaction and its txID\n */\nexport function signTransaction(\n  txn: txnBuilder.TransactionLike,\n  sk: Uint8Array\n) {\n  if (typeof txn.from === 'undefined') {\n    // Get pk from sk if no sender specified\n    const key = nacl.keyPairFromSecretKey(sk);\n    // eslint-disable-next-line no-param-reassign\n    txn.from = address.encodeAddress(key.publicKey);\n  }\n  const algoTxn = txnBuilder.instantiateTxnIfNeeded(txn);\n\n  return {\n    txID: algoTxn.txID().toString(),\n    blob: algoTxn.signTxn(sk),\n  };\n}\n\n/**\n * signBid takes an object with the following fields: bidder key, bid amount, max price, bid ID, auctionKey, auction ID,\n * and a secret key and returns a signed blob to be inserted into a transaction Algorand note field.\n * @param bid - Algorand Bid\n * @param sk - Algorand secret key\n * @returns Uint8Array binary signed bid\n */\nexport function signBid(bid: BidOptions, sk: Uint8Array) {\n  const signedBid = new Bid(bid);\n  return signedBid.signBid(sk);\n}\n\n/**\n * signBytes takes arbitrary bytes and a secret key, prepends the bytes with \"MX\" for domain separation, signs the bytes\n * with the private key, and returns the signature.\n * @param bytes - Uint8array\n * @param sk - Algorand secret key\n * @returns binary signature\n */\nexport function signBytes(bytes: Uint8Array, sk: Uint8Array) {\n  const toBeSigned = Buffer.from(utils.concatArrays(SIGN_BYTES_PREFIX, bytes));\n  const sig = nacl.sign(toBeSigned, sk);\n  return sig;\n}\n\n/**\n * verifyBytes takes array of bytes, an address, and a signature and verifies if the signature is correct for the public\n * key and the bytes (the bytes should have been signed with \"MX\" prepended for domain separation).\n * @param bytes - Uint8Array\n * @param signature - binary signature\n * @param addr - string address\n * @returns bool\n */\nexport function verifyBytes(\n  bytes: Uint8Array,\n  signature: Uint8Array,\n  addr: string\n) {\n  const toBeVerified = Buffer.from(\n    utils.concatArrays(SIGN_BYTES_PREFIX, bytes)\n  );\n  const pk = address.decodeAddress(addr).publicKey;\n  return nacl.verify(toBeVerified, signature, pk);\n}\n\n/**\n * encodeObj takes a javascript object and returns its msgpack encoding\n * Note that the encoding sorts the fields alphabetically\n * @param o - js obj\n * @returns Uint8Array binary representation\n */\nexport function encodeObj(o: Record<string | number | symbol, any>) {\n  return new Uint8Array(encoding.encode(o));\n}\n\n/**\n * decodeObj takes a Uint8Array and returns its javascript obj\n * @param o - Uint8Array to decode\n * @returns object\n */\nexport function decodeObj(o: ArrayLike<number>) {\n  return encoding.decode(o);\n}\n\nexport const ERROR_MULTISIG_BAD_SENDER = new Error(\n  MULTISIG_BAD_SENDER_ERROR_MSG\n);\nexport const ERROR_INVALID_MICROALGOS = new Error(\n  convert.INVALID_MICROALGOS_ERROR_MSG\n);\n\nexport { default as Algodv2 } from './client/v2/algod/algod';\nexport { default as Kmd } from './client/kmd';\nexport { default as IntDecoding } from './types/intDecoding';\nexport { default as Account } from './types/account';\nexport { default as Indexer } from './client/v2/indexer/indexer';\nexport {\n  BaseHTTPClient,\n  BaseHTTPClientResponse,\n  BaseHTTPClientError,\n} from './client/baseHTTPClient';\nexport {\n  AlgodTokenHeader,\n  IndexerTokenHeader,\n  KMDTokenHeader,\n  CustomTokenHeader,\n  TokenHeader,\n} from './client/urlTokenBaseHTTPClient';\nexport { waitForConfirmation } from './wait';\nexport {\n  isValidAddress,\n  encodeAddress,\n  decodeAddress,\n  getApplicationAddress,\n} from './encoding/address';\nexport { bytesToBigInt, bigIntToBytes } from './encoding/bigint';\nexport { encodeUint64, decodeUint64 } from './encoding/uint64';\nexport { default as generateAccount } from './account';\nexport * as modelsv2 from './client/v2/algod/models/types';\nexport * as indexerModels from './client/v2/indexer/models/types';\nexport {\n  mnemonicToMasterDerivationKey,\n  masterDerivationKeyToMnemonic,\n  secretKeyToMnemonic,\n  mnemonicToSecretKey,\n  seedFromMnemonic,\n  mnemonicFromSeed,\n} from './mnemonic/mnemonic';\nexport {\n  microalgosToAlgos,\n  algosToMicroalgos,\n  INVALID_MICROALGOS_ERROR_MSG,\n} from './convert';\nexport { computeGroupID, assignGroupID } from './group';\nexport {\n  LogicSig,\n  LogicSigAccount,\n  signLogicSigTransaction,\n  signLogicSigTransactionObject,\n  logicSigFromByte,\n  tealSign,\n  tealSignFromProgram,\n  verifyTealSign,\n} from './logicsig';\nexport {\n  signMultisigTransaction,\n  mergeMultisigTransactions,\n  appendSignMultisigTransaction,\n  createMultisigTransaction,\n  appendSignRawMultisigSignature,\n  verifyMultisig,\n  multisigAddress,\n} from './multisig';\nexport { SourceMap } from './logic/sourcemap';\n\nexport * from './dryrun';\nexport * from './makeTxn';\nexport * from './transaction';\nexport * from './signer';\nexport * from './composer';\nexport * from './types';\nexport * from './abi';\n","import algosdk from 'algosdk'\r\n\r\nexport default function createAsaTxn(params,args={}){\r\n\r\n      let txn = {}\r\n\r\n      let addr = args.creator\r\n      let note = args.note || \"\"\r\n      let totalIssuance = args.amount || 1\r\n      let decimals = (args.decimals !== undefined)?args.decimals:6\r\n      let defaultFrozen = args.defaultFrozen || false\r\n      let manager = args.manager || undefined\r\n      let clawback = args.clawback || undefined\r\n      let reserve = args.reserve || undefined\r\n      let freeze = args.freeze || undefined\r\n      let assetName = args.assetName || \"\"\r\n      let unitName = args.unitName || args.assetName\r\n      let assetURL = args.assetURL || undefined\r\n      let assetMetadataHash = args.assetMetadataHash || undefined\r\n\r\n      console.log(\"Preparing create ASA transaction...\")\r\n\r\n      txn = algosdk.makeAssetCreateTxnWithSuggestedParams(\r\n        addr,\r\n        note,\r\n        totalIssuance,\r\n        decimals,\r\n        defaultFrozen,\r\n        manager,\r\n        reserve,\r\n        freeze,\r\n        clawback,\r\n        unitName,\r\n        assetName,\r\n        assetURL,\r\n        assetMetadataHash,\r\n        params,\r\n        undefined\r\n        );\r\n\r\n      return txn\r\n\r\n  }","function sleep(milliseconds) {\r\n  return new Promise(resolve => setTimeout(resolve, milliseconds));\r\n}\r\n\r\nasync function getAppIndex(txn, net, ref) {\r\n\r\n    let data = undefined\r\n    let dataObj = undefined\r\n    let id = undefined\r\n\r\n    let url = \"\"\r\n\r\n    await sleep(15000)\r\n\r\n    if (ref.EnableDeveloperAPI) {\r\n      url = ref.indexer\r\n    }\r\n    else {\r\n      if (!net) {\r\n        url = \"https://testnet-idx.algonode.cloud\"\r\n      }\r\n      else {\r\n        url = \"https://mainnet-idx.algonode.cloud\"\r\n      }\r\n    }\r\n\r\n    data = await fetch(url + '/v2/transactions/' + txn)\r\n    dataObj = await data.json()\r\n    id = await dataObj.transaction[\"created-application-index\"]\r\n    return id\r\n  }\r\n\r\n  function u8array(text) {\r\n    return Uint8Array.from(Array.from(text).map(letter => letter.charCodeAt(0)));\r\n  }\r\n\r\n  async function readGlobalState(net,index,ref) {\r\n\r\n    let url = \"\"\r\n\r\n    if (ref.EnableDeveloperAPI) {\r\n      url = ref.indexer\r\n    }\r\n    else {\r\n      if (!net) {\r\n        url = \"https://testnet-idx.algonode.cloud\"\r\n      }\r\n      else {\r\n        url = \"https://mainnet-idx.algonode.cloud\"\r\n      }\r\n    }\r\n\r\n    let appData = await fetch(url + '/v2/applications/' + index)\r\n    let appJSON = await appData.json()\r\n    return appJSON.application.params[\"global-state\"]\r\n  }\r\n\r\n  async function getAsaIndex(txn, net, ref) {\r\n\r\n    let data = undefined\r\n    let dataObj = undefined\r\n    let id = undefined\r\n\r\n    let url = \"\"\r\n\r\n    await sleep(15000)\r\n\r\n    if (ref.EnableDeveloperAPI) {\r\n      url = ref.indexer\r\n    }\r\n    else {\r\n      if (!net) {\r\n        url = \"https://testnet-idx.algonode.cloud\"\r\n      }\r\n      else {\r\n        url = \"https://mainnet-idx.algonode.cloud\"\r\n      }\r\n    }\r\n\r\n    data = await fetch(url + '/v2/transactions/' + txn)\r\n    dataObj = await data.json()\r\n    id = await dataObj.transaction[\"created-asset-index\"]\r\n    return id\r\n  }\r\n\r\n  export {getAppIndex, getAsaIndex, u8array, readGlobalState}","import algosdk from 'algosdk'\r\nimport { Buffer }  from 'buffer'\r\n\r\nasync function configClient(main, api, ref) {\r\n\r\n    let paramServer = ''\r\n    let transServer = ''\r\n\r\n    if (main) {\r\n        paramServer = 'https://mainnet-api.algonode.cloud/v2/transactions/params'\r\n        transServer = 'https://mainnet-api.algonode.cloud/v2/transactions'\r\n    }\r\n    else {\r\n        paramServer = \"https://testnet-api.algonode.network/v2/transactions/params\"\r\n        transServer = \"https://testnet-api.algonode.network/v2/transactions\"\r\n    }\r\n\r\n    if (api) {\r\n        paramServer = ref.algod + \"/v2/transactions/params\";\r\n        transServer = ref.algod + \"/v2/transactions\";\r\n    }\r\n\r\n    let fetchObject = {}\r\n    if (api) {\r\n        fetchObject = {\r\n            method: \"GET\",\r\n            headers: {\r\n                'X-Algo-API-Token': ref.token,\r\n            }\r\n        }\r\n    }\r\n\r\n    let params = await (await fetch(paramServer, fetchObject)).json()\r\n\r\n    if (!main) {\r\n        params.genesisID = 'testnet-v1.0';\r\n        params.genesisHash = 'SGO1GKSzyE7IEPItTxCByw9x8FmnrCDexi9/cOUJOiI=';\r\n    }\r\n    else {\r\n        params.genesisID = 'mainnet-v1.0'\r\n        params.genesisHash = 'wGHE2Pwdvd7S12BL5FaOP20EGYesN73ktiC1qzkkit8='\r\n    }\r\n\r\n    if (api) {\r\n        params.genesisID = ref.devGenId;\r\n        params.genesisHash = ref.devGenHash;\r\n    }\r\n\r\n    params.firstRound = params[\"last-round\"]\r\n    params.lastRound = params[\"last-round\"] + 1000\r\n\r\n    return {\r\n        paramServer: paramServer,\r\n        tranServer: transServer,\r\n        params: params\r\n    }\r\n}\r\n\r\nfunction configIndexer(main, api, ref) {\r\n    let indexerURL = \"\"\r\n\r\n    if (main) {\r\n        indexerURL = \"https://mainnet-idx.algonode.cloud\"\r\n    }\r\n    else {\r\n        indexerURL = \"https://testnet-idx.algonode.cloud\"\r\n    }\r\n\r\n    if (api) { indexerURL = ref.indexer }\r\n\r\n    return indexerURL\r\n}\r\n\r\nasync function sendTxns(txns, transServer, api = false, token = \"\", alerts) {\r\n    let requestHeaders = { 'Content-Type': 'application/x-binary' };\r\n\r\n    if (api) {\r\n        requestHeaders = {\r\n            'X-Algo-API-Token': token\r\n        }\r\n    }\r\n\r\n    let transactionID = await fetch(transServer, {\r\n        method: 'POST',\r\n        headers: requestHeaders,\r\n        body: txns\r\n    })\r\n        .then(response => response.json())\r\n        .then(data => {\r\n            if (data.txId !== undefined) {\r\n                return data.txId\r\n            }\r\n            else {\r\n                if (data.message !== undefined) {\r\n                    if (alerts) {\r\n                        alert(data.message)\r\n                    }\r\n                    return undefined\r\n                }\r\n            }\r\n        })\r\n        .catch(error => {\r\n            console.error('Error:', error)\r\n        })\r\n\r\n    return transactionID\r\n\r\n}\r\n\r\nfunction configAlgosdk(ref) {\r\n\r\n    let algodClient = \"\"\r\n\r\n    if (ref.EnableDeveloperAPI) {\r\n        algodClient = new algosdk.Algodv2(\"\", ref.algod, ref.token);\r\n    }\r\n    else {\r\n        if (!ref.main) {\r\n            algodClient = new algosdk.Algodv2(\"\", 'https://testnet-api.algonode.network', '');\r\n        }\r\n        else {\r\n            algodClient = new algosdk.Algodv2(\"\", 'https://mainnet-api.algonode.cloud', '');\r\n        }\r\n    }\r\n    return algodClient\r\n\r\n}\r\n\r\nexport { configClient, configIndexer, sendTxns, configAlgosdk }","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var defineProperty = Object.defineProperty || function (obj, key, desc) { obj[key] = desc.value; };\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n    return obj[key];\n  }\n  try {\n    // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n    define({}, \"\");\n  } catch (err) {\n    define = function(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    defineProperty(generator, \"_invoke\", { value: makeInvokeMethod(innerFn, self, context) });\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  define(IteratorPrototype, iteratorSymbol, function () {\n    return this;\n  });\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = GeneratorFunctionPrototype;\n  defineProperty(Gp, \"constructor\", { value: GeneratorFunctionPrototype, configurable: true });\n  defineProperty(\n    GeneratorFunctionPrototype,\n    \"constructor\",\n    { value: GeneratorFunction, configurable: true }\n  );\n  GeneratorFunction.displayName = define(\n    GeneratorFunctionPrototype,\n    toStringTagSymbol,\n    \"GeneratorFunction\"\n  );\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      define(prototype, method, function(arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      define(genFun, toStringTagSymbol, \"GeneratorFunction\");\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    defineProperty(this, \"_invoke\", { value: enqueue });\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  define(AsyncIterator.prototype, asyncIteratorSymbol, function () {\n    return this;\n  });\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var methodName = context.method;\n    var method = delegate.iterator[methodName];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method, or a missing .next mehtod, always terminate the\n      // yield* loop.\n      context.delegate = null;\n\n      // Note: [\"return\"] must be used for ES3 parsing compatibility.\n      if (methodName === \"throw\" && delegate.iterator[\"return\"]) {\n        // If the delegate iterator has a return method, give it a\n        // chance to clean up.\n        context.method = \"return\";\n        context.arg = undefined;\n        maybeInvokeDelegate(delegate, context);\n\n        if (context.method === \"throw\") {\n          // If maybeInvokeDelegate(context) changed context.method from\n          // \"return\" to \"throw\", let that override the TypeError below.\n          return ContinueSentinel;\n        }\n      }\n      if (methodName !== \"return\") {\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a '\" + methodName + \"' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  define(Gp, toStringTagSymbol, \"Generator\");\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  define(Gp, iteratorSymbol, function() {\n    return this;\n  });\n\n  define(Gp, \"toString\", function() {\n    return \"[object Generator]\";\n  });\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(val) {\n    var object = Object(val);\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, in modern engines\n  // we can explicitly access globalThis. In older engines we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  if (typeof globalThis === \"object\") {\n    globalThis.regeneratorRuntime = runtime;\n  } else {\n    Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n  }\n}\n","import algosdk from \"algosdk\";\r\nimport Pipeline from \"./index.js\";\r\n\r\nexport default class Escrow {\r\n\r\n    static address = \"\"\r\n    static secret = undefined\r\n\r\n    static importAccount(mnemonicString){\r\n        let account = algosdk.mnemonicToSecretKey(mnemonicString)\r\n        this.address = account.addr\r\n        this.secret = account.sk\r\n    }\r\n\r\n    static createAccount(){\r\n        let newAccount = algosdk.generateAccount();\r\n\r\n        let mnemonic = algosdk.secretKeyToMnemonic(newAccount.sk)\r\n        this.address = newAccount.addr\r\n        this.secret = newAccount.sk\r\n        return {\r\n            address: newAccount.addr,\r\n            mnemonic: mnemonic,\r\n            sk:newAccount.sk\r\n        }\r\n    }\r\n\r\n    static sign(mytxnb, group = false) {\r\n\r\n        if (!group) {\r\n            let signedTxn = algosdk.signTransaction(mytxnb, this.secret)\r\n            return signedTxn.blob;\r\n        } else {\r\n            let signedGroup = [];\r\n\r\n            mytxnb.forEach((transaction) => {\r\n                let signed = algosdk.signTransaction(transaction, this.secret);\r\n                signedGroup.push(signed.blob);\r\n            });\r\n\r\n            console.log(\"Signed Group:\");\r\n            console.log(signedGroup);\r\n            return signedGroup;\r\n        }\r\n    }\r\n\r\n    static async fund(amount){\r\n        let txid = await Pipeline.send(this.address,parseInt(amount),\"\",undefined,undefined,0)\r\n        return txid\r\n    }\r\n}","!function(e,t){\"object\"==typeof exports&&\"object\"==typeof module?module.exports=t():\"function\"==typeof define&&define.amd?define([],t):\"object\"==typeof exports?exports.bowser=t():e.bowser=t()}(this,(function(){return function(e){var t={};function r(n){if(t[n])return t[n].exports;var i=t[n]={i:n,l:!1,exports:{}};return e[n].call(i.exports,i,i.exports,r),i.l=!0,i.exports}return r.m=e,r.c=t,r.d=function(e,t,n){r.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:n})},r.r=function(e){\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(e,\"__esModule\",{value:!0})},r.t=function(e,t){if(1&t&&(e=r(e)),8&t)return e;if(4&t&&\"object\"==typeof e&&e&&e.__esModule)return e;var n=Object.create(null);if(r.r(n),Object.defineProperty(n,\"default\",{enumerable:!0,value:e}),2&t&&\"string\"!=typeof e)for(var i in e)r.d(n,i,function(t){return e[t]}.bind(null,i));return n},r.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return r.d(t,\"a\",t),t},r.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},r.p=\"\",r(r.s=90)}({17:function(e,t,r){\"use strict\";t.__esModule=!0,t.default=void 0;var n=r(18),i=function(){function e(){}return e.getFirstMatch=function(e,t){var r=t.match(e);return r&&r.length>0&&r[1]||\"\"},e.getSecondMatch=function(e,t){var r=t.match(e);return r&&r.length>1&&r[2]||\"\"},e.matchAndReturnConst=function(e,t,r){if(e.test(t))return r},e.getWindowsVersionName=function(e){switch(e){case\"NT\":return\"NT\";case\"XP\":return\"XP\";case\"NT 5.0\":return\"2000\";case\"NT 5.1\":return\"XP\";case\"NT 5.2\":return\"2003\";case\"NT 6.0\":return\"Vista\";case\"NT 6.1\":return\"7\";case\"NT 6.2\":return\"8\";case\"NT 6.3\":return\"8.1\";case\"NT 10.0\":return\"10\";default:return}},e.getMacOSVersionName=function(e){var t=e.split(\".\").splice(0,2).map((function(e){return parseInt(e,10)||0}));if(t.push(0),10===t[0])switch(t[1]){case 5:return\"Leopard\";case 6:return\"Snow Leopard\";case 7:return\"Lion\";case 8:return\"Mountain Lion\";case 9:return\"Mavericks\";case 10:return\"Yosemite\";case 11:return\"El Capitan\";case 12:return\"Sierra\";case 13:return\"High Sierra\";case 14:return\"Mojave\";case 15:return\"Catalina\";default:return}},e.getAndroidVersionName=function(e){var t=e.split(\".\").splice(0,2).map((function(e){return parseInt(e,10)||0}));if(t.push(0),!(1===t[0]&&t[1]<5))return 1===t[0]&&t[1]<6?\"Cupcake\":1===t[0]&&t[1]>=6?\"Donut\":2===t[0]&&t[1]<2?\"Eclair\":2===t[0]&&2===t[1]?\"Froyo\":2===t[0]&&t[1]>2?\"Gingerbread\":3===t[0]?\"Honeycomb\":4===t[0]&&t[1]<1?\"Ice Cream Sandwich\":4===t[0]&&t[1]<4?\"Jelly Bean\":4===t[0]&&t[1]>=4?\"KitKat\":5===t[0]?\"Lollipop\":6===t[0]?\"Marshmallow\":7===t[0]?\"Nougat\":8===t[0]?\"Oreo\":9===t[0]?\"Pie\":void 0},e.getVersionPrecision=function(e){return e.split(\".\").length},e.compareVersions=function(t,r,n){void 0===n&&(n=!1);var i=e.getVersionPrecision(t),s=e.getVersionPrecision(r),a=Math.max(i,s),o=0,u=e.map([t,r],(function(t){var r=a-e.getVersionPrecision(t),n=t+new Array(r+1).join(\".0\");return e.map(n.split(\".\"),(function(e){return new Array(20-e.length).join(\"0\")+e})).reverse()}));for(n&&(o=a-Math.min(i,s)),a-=1;a>=o;){if(u[0][a]>u[1][a])return 1;if(u[0][a]===u[1][a]){if(a===o)return 0;a-=1}else if(u[0][a]<u[1][a])return-1}},e.map=function(e,t){var r,n=[];if(Array.prototype.map)return Array.prototype.map.call(e,t);for(r=0;r<e.length;r+=1)n.push(t(e[r]));return n},e.find=function(e,t){var r,n;if(Array.prototype.find)return Array.prototype.find.call(e,t);for(r=0,n=e.length;r<n;r+=1){var i=e[r];if(t(i,r))return i}},e.assign=function(e){for(var t,r,n=e,i=arguments.length,s=new Array(i>1?i-1:0),a=1;a<i;a++)s[a-1]=arguments[a];if(Object.assign)return Object.assign.apply(Object,[e].concat(s));var o=function(){var e=s[t];\"object\"==typeof e&&null!==e&&Object.keys(e).forEach((function(t){n[t]=e[t]}))};for(t=0,r=s.length;t<r;t+=1)o();return e},e.getBrowserAlias=function(e){return n.BROWSER_ALIASES_MAP[e]},e.getBrowserTypeByAlias=function(e){return n.BROWSER_MAP[e]||\"\"},e}();t.default=i,e.exports=t.default},18:function(e,t,r){\"use strict\";t.__esModule=!0,t.ENGINE_MAP=t.OS_MAP=t.PLATFORMS_MAP=t.BROWSER_MAP=t.BROWSER_ALIASES_MAP=void 0;t.BROWSER_ALIASES_MAP={\"Amazon Silk\":\"amazon_silk\",\"Android Browser\":\"android\",Bada:\"bada\",BlackBerry:\"blackberry\",Chrome:\"chrome\",Chromium:\"chromium\",Electron:\"electron\",Epiphany:\"epiphany\",Firefox:\"firefox\",Focus:\"focus\",Generic:\"generic\",\"Google Search\":\"google_search\",Googlebot:\"googlebot\",\"Internet Explorer\":\"ie\",\"K-Meleon\":\"k_meleon\",Maxthon:\"maxthon\",\"Microsoft Edge\":\"edge\",\"MZ Browser\":\"mz\",\"NAVER Whale Browser\":\"naver\",Opera:\"opera\",\"Opera Coast\":\"opera_coast\",PhantomJS:\"phantomjs\",Puffin:\"puffin\",QupZilla:\"qupzilla\",QQ:\"qq\",QQLite:\"qqlite\",Safari:\"safari\",Sailfish:\"sailfish\",\"Samsung Internet for Android\":\"samsung_internet\",SeaMonkey:\"seamonkey\",Sleipnir:\"sleipnir\",Swing:\"swing\",Tizen:\"tizen\",\"UC Browser\":\"uc\",Vivaldi:\"vivaldi\",\"WebOS Browser\":\"webos\",WeChat:\"wechat\",\"Yandex Browser\":\"yandex\",Roku:\"roku\"};t.BROWSER_MAP={amazon_silk:\"Amazon Silk\",android:\"Android Browser\",bada:\"Bada\",blackberry:\"BlackBerry\",chrome:\"Chrome\",chromium:\"Chromium\",electron:\"Electron\",epiphany:\"Epiphany\",firefox:\"Firefox\",focus:\"Focus\",generic:\"Generic\",googlebot:\"Googlebot\",google_search:\"Google Search\",ie:\"Internet Explorer\",k_meleon:\"K-Meleon\",maxthon:\"Maxthon\",edge:\"Microsoft Edge\",mz:\"MZ Browser\",naver:\"NAVER Whale Browser\",opera:\"Opera\",opera_coast:\"Opera Coast\",phantomjs:\"PhantomJS\",puffin:\"Puffin\",qupzilla:\"QupZilla\",qq:\"QQ Browser\",qqlite:\"QQ Browser Lite\",safari:\"Safari\",sailfish:\"Sailfish\",samsung_internet:\"Samsung Internet for Android\",seamonkey:\"SeaMonkey\",sleipnir:\"Sleipnir\",swing:\"Swing\",tizen:\"Tizen\",uc:\"UC Browser\",vivaldi:\"Vivaldi\",webos:\"WebOS Browser\",wechat:\"WeChat\",yandex:\"Yandex Browser\"};t.PLATFORMS_MAP={tablet:\"tablet\",mobile:\"mobile\",desktop:\"desktop\",tv:\"tv\"};t.OS_MAP={WindowsPhone:\"Windows Phone\",Windows:\"Windows\",MacOS:\"macOS\",iOS:\"iOS\",Android:\"Android\",WebOS:\"WebOS\",BlackBerry:\"BlackBerry\",Bada:\"Bada\",Tizen:\"Tizen\",Linux:\"Linux\",ChromeOS:\"Chrome OS\",PlayStation4:\"PlayStation 4\",Roku:\"Roku\"};t.ENGINE_MAP={EdgeHTML:\"EdgeHTML\",Blink:\"Blink\",Trident:\"Trident\",Presto:\"Presto\",Gecko:\"Gecko\",WebKit:\"WebKit\"}},90:function(e,t,r){\"use strict\";t.__esModule=!0,t.default=void 0;var n,i=(n=r(91))&&n.__esModule?n:{default:n},s=r(18);function a(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,\"value\"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}var o=function(){function e(){}var t,r,n;return e.getParser=function(e,t){if(void 0===t&&(t=!1),\"string\"!=typeof e)throw new Error(\"UserAgent should be a string\");return new i.default(e,t)},e.parse=function(e){return new i.default(e).getResult()},t=e,n=[{key:\"BROWSER_MAP\",get:function(){return s.BROWSER_MAP}},{key:\"ENGINE_MAP\",get:function(){return s.ENGINE_MAP}},{key:\"OS_MAP\",get:function(){return s.OS_MAP}},{key:\"PLATFORMS_MAP\",get:function(){return s.PLATFORMS_MAP}}],(r=null)&&a(t.prototype,r),n&&a(t,n),e}();t.default=o,e.exports=t.default},91:function(e,t,r){\"use strict\";t.__esModule=!0,t.default=void 0;var n=u(r(92)),i=u(r(93)),s=u(r(94)),a=u(r(95)),o=u(r(17));function u(e){return e&&e.__esModule?e:{default:e}}var d=function(){function e(e,t){if(void 0===t&&(t=!1),null==e||\"\"===e)throw new Error(\"UserAgent parameter can't be empty\");this._ua=e,this.parsedResult={},!0!==t&&this.parse()}var t=e.prototype;return t.getUA=function(){return this._ua},t.test=function(e){return e.test(this._ua)},t.parseBrowser=function(){var e=this;this.parsedResult.browser={};var t=o.default.find(n.default,(function(t){if(\"function\"==typeof t.test)return t.test(e);if(t.test instanceof Array)return t.test.some((function(t){return e.test(t)}));throw new Error(\"Browser's test function is not valid\")}));return t&&(this.parsedResult.browser=t.describe(this.getUA())),this.parsedResult.browser},t.getBrowser=function(){return this.parsedResult.browser?this.parsedResult.browser:this.parseBrowser()},t.getBrowserName=function(e){return e?String(this.getBrowser().name).toLowerCase()||\"\":this.getBrowser().name||\"\"},t.getBrowserVersion=function(){return this.getBrowser().version},t.getOS=function(){return this.parsedResult.os?this.parsedResult.os:this.parseOS()},t.parseOS=function(){var e=this;this.parsedResult.os={};var t=o.default.find(i.default,(function(t){if(\"function\"==typeof t.test)return t.test(e);if(t.test instanceof Array)return t.test.some((function(t){return e.test(t)}));throw new Error(\"Browser's test function is not valid\")}));return t&&(this.parsedResult.os=t.describe(this.getUA())),this.parsedResult.os},t.getOSName=function(e){var t=this.getOS().name;return e?String(t).toLowerCase()||\"\":t||\"\"},t.getOSVersion=function(){return this.getOS().version},t.getPlatform=function(){return this.parsedResult.platform?this.parsedResult.platform:this.parsePlatform()},t.getPlatformType=function(e){void 0===e&&(e=!1);var t=this.getPlatform().type;return e?String(t).toLowerCase()||\"\":t||\"\"},t.parsePlatform=function(){var e=this;this.parsedResult.platform={};var t=o.default.find(s.default,(function(t){if(\"function\"==typeof t.test)return t.test(e);if(t.test instanceof Array)return t.test.some((function(t){return e.test(t)}));throw new Error(\"Browser's test function is not valid\")}));return t&&(this.parsedResult.platform=t.describe(this.getUA())),this.parsedResult.platform},t.getEngine=function(){return this.parsedResult.engine?this.parsedResult.engine:this.parseEngine()},t.getEngineName=function(e){return e?String(this.getEngine().name).toLowerCase()||\"\":this.getEngine().name||\"\"},t.parseEngine=function(){var e=this;this.parsedResult.engine={};var t=o.default.find(a.default,(function(t){if(\"function\"==typeof t.test)return t.test(e);if(t.test instanceof Array)return t.test.some((function(t){return e.test(t)}));throw new Error(\"Browser's test function is not valid\")}));return t&&(this.parsedResult.engine=t.describe(this.getUA())),this.parsedResult.engine},t.parse=function(){return this.parseBrowser(),this.parseOS(),this.parsePlatform(),this.parseEngine(),this},t.getResult=function(){return o.default.assign({},this.parsedResult)},t.satisfies=function(e){var t=this,r={},n=0,i={},s=0;if(Object.keys(e).forEach((function(t){var a=e[t];\"string\"==typeof a?(i[t]=a,s+=1):\"object\"==typeof a&&(r[t]=a,n+=1)})),n>0){var a=Object.keys(r),u=o.default.find(a,(function(e){return t.isOS(e)}));if(u){var d=this.satisfies(r[u]);if(void 0!==d)return d}var c=o.default.find(a,(function(e){return t.isPlatform(e)}));if(c){var f=this.satisfies(r[c]);if(void 0!==f)return f}}if(s>0){var l=Object.keys(i),h=o.default.find(l,(function(e){return t.isBrowser(e,!0)}));if(void 0!==h)return this.compareVersion(i[h])}},t.isBrowser=function(e,t){void 0===t&&(t=!1);var r=this.getBrowserName().toLowerCase(),n=e.toLowerCase(),i=o.default.getBrowserTypeByAlias(n);return t&&i&&(n=i.toLowerCase()),n===r},t.compareVersion=function(e){var t=[0],r=e,n=!1,i=this.getBrowserVersion();if(\"string\"==typeof i)return\">\"===e[0]||\"<\"===e[0]?(r=e.substr(1),\"=\"===e[1]?(n=!0,r=e.substr(2)):t=[],\">\"===e[0]?t.push(1):t.push(-1)):\"=\"===e[0]?r=e.substr(1):\"~\"===e[0]&&(n=!0,r=e.substr(1)),t.indexOf(o.default.compareVersions(i,r,n))>-1},t.isOS=function(e){return this.getOSName(!0)===String(e).toLowerCase()},t.isPlatform=function(e){return this.getPlatformType(!0)===String(e).toLowerCase()},t.isEngine=function(e){return this.getEngineName(!0)===String(e).toLowerCase()},t.is=function(e,t){return void 0===t&&(t=!1),this.isBrowser(e,t)||this.isOS(e)||this.isPlatform(e)},t.some=function(e){var t=this;return void 0===e&&(e=[]),e.some((function(e){return t.is(e)}))},e}();t.default=d,e.exports=t.default},92:function(e,t,r){\"use strict\";t.__esModule=!0,t.default=void 0;var n,i=(n=r(17))&&n.__esModule?n:{default:n};var s=/version\\/(\\d+(\\.?_?\\d+)+)/i,a=[{test:[/googlebot/i],describe:function(e){var t={name:\"Googlebot\"},r=i.default.getFirstMatch(/googlebot\\/(\\d+(\\.\\d+))/i,e)||i.default.getFirstMatch(s,e);return r&&(t.version=r),t}},{test:[/opera/i],describe:function(e){var t={name:\"Opera\"},r=i.default.getFirstMatch(s,e)||i.default.getFirstMatch(/(?:opera)[\\s/](\\d+(\\.?_?\\d+)+)/i,e);return r&&(t.version=r),t}},{test:[/opr\\/|opios/i],describe:function(e){var t={name:\"Opera\"},r=i.default.getFirstMatch(/(?:opr|opios)[\\s/](\\S+)/i,e)||i.default.getFirstMatch(s,e);return r&&(t.version=r),t}},{test:[/SamsungBrowser/i],describe:function(e){var t={name:\"Samsung Internet for Android\"},r=i.default.getFirstMatch(s,e)||i.default.getFirstMatch(/(?:SamsungBrowser)[\\s/](\\d+(\\.?_?\\d+)+)/i,e);return r&&(t.version=r),t}},{test:[/Whale/i],describe:function(e){var t={name:\"NAVER Whale Browser\"},r=i.default.getFirstMatch(s,e)||i.default.getFirstMatch(/(?:whale)[\\s/](\\d+(?:\\.\\d+)+)/i,e);return r&&(t.version=r),t}},{test:[/MZBrowser/i],describe:function(e){var t={name:\"MZ Browser\"},r=i.default.getFirstMatch(/(?:MZBrowser)[\\s/](\\d+(?:\\.\\d+)+)/i,e)||i.default.getFirstMatch(s,e);return r&&(t.version=r),t}},{test:[/focus/i],describe:function(e){var t={name:\"Focus\"},r=i.default.getFirstMatch(/(?:focus)[\\s/](\\d+(?:\\.\\d+)+)/i,e)||i.default.getFirstMatch(s,e);return r&&(t.version=r),t}},{test:[/swing/i],describe:function(e){var t={name:\"Swing\"},r=i.default.getFirstMatch(/(?:swing)[\\s/](\\d+(?:\\.\\d+)+)/i,e)||i.default.getFirstMatch(s,e);return r&&(t.version=r),t}},{test:[/coast/i],describe:function(e){var t={name:\"Opera Coast\"},r=i.default.getFirstMatch(s,e)||i.default.getFirstMatch(/(?:coast)[\\s/](\\d+(\\.?_?\\d+)+)/i,e);return r&&(t.version=r),t}},{test:[/opt\\/\\d+(?:.?_?\\d+)+/i],describe:function(e){var t={name:\"Opera Touch\"},r=i.default.getFirstMatch(/(?:opt)[\\s/](\\d+(\\.?_?\\d+)+)/i,e)||i.default.getFirstMatch(s,e);return r&&(t.version=r),t}},{test:[/yabrowser/i],describe:function(e){var t={name:\"Yandex Browser\"},r=i.default.getFirstMatch(/(?:yabrowser)[\\s/](\\d+(\\.?_?\\d+)+)/i,e)||i.default.getFirstMatch(s,e);return r&&(t.version=r),t}},{test:[/ucbrowser/i],describe:function(e){var t={name:\"UC Browser\"},r=i.default.getFirstMatch(s,e)||i.default.getFirstMatch(/(?:ucbrowser)[\\s/](\\d+(\\.?_?\\d+)+)/i,e);return r&&(t.version=r),t}},{test:[/Maxthon|mxios/i],describe:function(e){var t={name:\"Maxthon\"},r=i.default.getFirstMatch(s,e)||i.default.getFirstMatch(/(?:Maxthon|mxios)[\\s/](\\d+(\\.?_?\\d+)+)/i,e);return r&&(t.version=r),t}},{test:[/epiphany/i],describe:function(e){var t={name:\"Epiphany\"},r=i.default.getFirstMatch(s,e)||i.default.getFirstMatch(/(?:epiphany)[\\s/](\\d+(\\.?_?\\d+)+)/i,e);return r&&(t.version=r),t}},{test:[/puffin/i],describe:function(e){var t={name:\"Puffin\"},r=i.default.getFirstMatch(s,e)||i.default.getFirstMatch(/(?:puffin)[\\s/](\\d+(\\.?_?\\d+)+)/i,e);return r&&(t.version=r),t}},{test:[/sleipnir/i],describe:function(e){var t={name:\"Sleipnir\"},r=i.default.getFirstMatch(s,e)||i.default.getFirstMatch(/(?:sleipnir)[\\s/](\\d+(\\.?_?\\d+)+)/i,e);return r&&(t.version=r),t}},{test:[/k-meleon/i],describe:function(e){var t={name:\"K-Meleon\"},r=i.default.getFirstMatch(s,e)||i.default.getFirstMatch(/(?:k-meleon)[\\s/](\\d+(\\.?_?\\d+)+)/i,e);return r&&(t.version=r),t}},{test:[/micromessenger/i],describe:function(e){var t={name:\"WeChat\"},r=i.default.getFirstMatch(/(?:micromessenger)[\\s/](\\d+(\\.?_?\\d+)+)/i,e)||i.default.getFirstMatch(s,e);return r&&(t.version=r),t}},{test:[/qqbrowser/i],describe:function(e){var t={name:/qqbrowserlite/i.test(e)?\"QQ Browser Lite\":\"QQ Browser\"},r=i.default.getFirstMatch(/(?:qqbrowserlite|qqbrowser)[/](\\d+(\\.?_?\\d+)+)/i,e)||i.default.getFirstMatch(s,e);return r&&(t.version=r),t}},{test:[/msie|trident/i],describe:function(e){var t={name:\"Internet Explorer\"},r=i.default.getFirstMatch(/(?:msie |rv:)(\\d+(\\.?_?\\d+)+)/i,e);return r&&(t.version=r),t}},{test:[/\\sedg\\//i],describe:function(e){var t={name:\"Microsoft Edge\"},r=i.default.getFirstMatch(/\\sedg\\/(\\d+(\\.?_?\\d+)+)/i,e);return r&&(t.version=r),t}},{test:[/edg([ea]|ios)/i],describe:function(e){var t={name:\"Microsoft Edge\"},r=i.default.getSecondMatch(/edg([ea]|ios)\\/(\\d+(\\.?_?\\d+)+)/i,e);return r&&(t.version=r),t}},{test:[/vivaldi/i],describe:function(e){var t={name:\"Vivaldi\"},r=i.default.getFirstMatch(/vivaldi\\/(\\d+(\\.?_?\\d+)+)/i,e);return r&&(t.version=r),t}},{test:[/seamonkey/i],describe:function(e){var t={name:\"SeaMonkey\"},r=i.default.getFirstMatch(/seamonkey\\/(\\d+(\\.?_?\\d+)+)/i,e);return r&&(t.version=r),t}},{test:[/sailfish/i],describe:function(e){var t={name:\"Sailfish\"},r=i.default.getFirstMatch(/sailfish\\s?browser\\/(\\d+(\\.\\d+)?)/i,e);return r&&(t.version=r),t}},{test:[/silk/i],describe:function(e){var t={name:\"Amazon Silk\"},r=i.default.getFirstMatch(/silk\\/(\\d+(\\.?_?\\d+)+)/i,e);return r&&(t.version=r),t}},{test:[/phantom/i],describe:function(e){var t={name:\"PhantomJS\"},r=i.default.getFirstMatch(/phantomjs\\/(\\d+(\\.?_?\\d+)+)/i,e);return r&&(t.version=r),t}},{test:[/slimerjs/i],describe:function(e){var t={name:\"SlimerJS\"},r=i.default.getFirstMatch(/slimerjs\\/(\\d+(\\.?_?\\d+)+)/i,e);return r&&(t.version=r),t}},{test:[/blackberry|\\bbb\\d+/i,/rim\\stablet/i],describe:function(e){var t={name:\"BlackBerry\"},r=i.default.getFirstMatch(s,e)||i.default.getFirstMatch(/blackberry[\\d]+\\/(\\d+(\\.?_?\\d+)+)/i,e);return r&&(t.version=r),t}},{test:[/(web|hpw)[o0]s/i],describe:function(e){var t={name:\"WebOS Browser\"},r=i.default.getFirstMatch(s,e)||i.default.getFirstMatch(/w(?:eb)?[o0]sbrowser\\/(\\d+(\\.?_?\\d+)+)/i,e);return r&&(t.version=r),t}},{test:[/bada/i],describe:function(e){var t={name:\"Bada\"},r=i.default.getFirstMatch(/dolfin\\/(\\d+(\\.?_?\\d+)+)/i,e);return r&&(t.version=r),t}},{test:[/tizen/i],describe:function(e){var t={name:\"Tizen\"},r=i.default.getFirstMatch(/(?:tizen\\s?)?browser\\/(\\d+(\\.?_?\\d+)+)/i,e)||i.default.getFirstMatch(s,e);return r&&(t.version=r),t}},{test:[/qupzilla/i],describe:function(e){var t={name:\"QupZilla\"},r=i.default.getFirstMatch(/(?:qupzilla)[\\s/](\\d+(\\.?_?\\d+)+)/i,e)||i.default.getFirstMatch(s,e);return r&&(t.version=r),t}},{test:[/firefox|iceweasel|fxios/i],describe:function(e){var t={name:\"Firefox\"},r=i.default.getFirstMatch(/(?:firefox|iceweasel|fxios)[\\s/](\\d+(\\.?_?\\d+)+)/i,e);return r&&(t.version=r),t}},{test:[/electron/i],describe:function(e){var t={name:\"Electron\"},r=i.default.getFirstMatch(/(?:electron)\\/(\\d+(\\.?_?\\d+)+)/i,e);return r&&(t.version=r),t}},{test:[/MiuiBrowser/i],describe:function(e){var t={name:\"Miui\"},r=i.default.getFirstMatch(/(?:MiuiBrowser)[\\s/](\\d+(\\.?_?\\d+)+)/i,e);return r&&(t.version=r),t}},{test:[/chromium/i],describe:function(e){var t={name:\"Chromium\"},r=i.default.getFirstMatch(/(?:chromium)[\\s/](\\d+(\\.?_?\\d+)+)/i,e)||i.default.getFirstMatch(s,e);return r&&(t.version=r),t}},{test:[/chrome|crios|crmo/i],describe:function(e){var t={name:\"Chrome\"},r=i.default.getFirstMatch(/(?:chrome|crios|crmo)\\/(\\d+(\\.?_?\\d+)+)/i,e);return r&&(t.version=r),t}},{test:[/GSA/i],describe:function(e){var t={name:\"Google Search\"},r=i.default.getFirstMatch(/(?:GSA)\\/(\\d+(\\.?_?\\d+)+)/i,e);return r&&(t.version=r),t}},{test:function(e){var t=!e.test(/like android/i),r=e.test(/android/i);return t&&r},describe:function(e){var t={name:\"Android Browser\"},r=i.default.getFirstMatch(s,e);return r&&(t.version=r),t}},{test:[/playstation 4/i],describe:function(e){var t={name:\"PlayStation 4\"},r=i.default.getFirstMatch(s,e);return r&&(t.version=r),t}},{test:[/safari|applewebkit/i],describe:function(e){var t={name:\"Safari\"},r=i.default.getFirstMatch(s,e);return r&&(t.version=r),t}},{test:[/.*/i],describe:function(e){var t=-1!==e.search(\"\\\\(\")?/^(.*)\\/(.*)[ \\t]\\((.*)/:/^(.*)\\/(.*) /;return{name:i.default.getFirstMatch(t,e),version:i.default.getSecondMatch(t,e)}}}];t.default=a,e.exports=t.default},93:function(e,t,r){\"use strict\";t.__esModule=!0,t.default=void 0;var n,i=(n=r(17))&&n.__esModule?n:{default:n},s=r(18);var a=[{test:[/Roku\\/DVP/],describe:function(e){var t=i.default.getFirstMatch(/Roku\\/DVP-(\\d+\\.\\d+)/i,e);return{name:s.OS_MAP.Roku,version:t}}},{test:[/windows phone/i],describe:function(e){var t=i.default.getFirstMatch(/windows phone (?:os)?\\s?(\\d+(\\.\\d+)*)/i,e);return{name:s.OS_MAP.WindowsPhone,version:t}}},{test:[/windows /i],describe:function(e){var t=i.default.getFirstMatch(/Windows ((NT|XP)( \\d\\d?.\\d)?)/i,e),r=i.default.getWindowsVersionName(t);return{name:s.OS_MAP.Windows,version:t,versionName:r}}},{test:[/Macintosh(.*?) FxiOS(.*?)\\//],describe:function(e){var t={name:s.OS_MAP.iOS},r=i.default.getSecondMatch(/(Version\\/)(\\d[\\d.]+)/,e);return r&&(t.version=r),t}},{test:[/macintosh/i],describe:function(e){var t=i.default.getFirstMatch(/mac os x (\\d+(\\.?_?\\d+)+)/i,e).replace(/[_\\s]/g,\".\"),r=i.default.getMacOSVersionName(t),n={name:s.OS_MAP.MacOS,version:t};return r&&(n.versionName=r),n}},{test:[/(ipod|iphone|ipad)/i],describe:function(e){var t=i.default.getFirstMatch(/os (\\d+([_\\s]\\d+)*) like mac os x/i,e).replace(/[_\\s]/g,\".\");return{name:s.OS_MAP.iOS,version:t}}},{test:function(e){var t=!e.test(/like android/i),r=e.test(/android/i);return t&&r},describe:function(e){var t=i.default.getFirstMatch(/android[\\s/-](\\d+(\\.\\d+)*)/i,e),r=i.default.getAndroidVersionName(t),n={name:s.OS_MAP.Android,version:t};return r&&(n.versionName=r),n}},{test:[/(web|hpw)[o0]s/i],describe:function(e){var t=i.default.getFirstMatch(/(?:web|hpw)[o0]s\\/(\\d+(\\.\\d+)*)/i,e),r={name:s.OS_MAP.WebOS};return t&&t.length&&(r.version=t),r}},{test:[/blackberry|\\bbb\\d+/i,/rim\\stablet/i],describe:function(e){var t=i.default.getFirstMatch(/rim\\stablet\\sos\\s(\\d+(\\.\\d+)*)/i,e)||i.default.getFirstMatch(/blackberry\\d+\\/(\\d+([_\\s]\\d+)*)/i,e)||i.default.getFirstMatch(/\\bbb(\\d+)/i,e);return{name:s.OS_MAP.BlackBerry,version:t}}},{test:[/bada/i],describe:function(e){var t=i.default.getFirstMatch(/bada\\/(\\d+(\\.\\d+)*)/i,e);return{name:s.OS_MAP.Bada,version:t}}},{test:[/tizen/i],describe:function(e){var t=i.default.getFirstMatch(/tizen[/\\s](\\d+(\\.\\d+)*)/i,e);return{name:s.OS_MAP.Tizen,version:t}}},{test:[/linux/i],describe:function(){return{name:s.OS_MAP.Linux}}},{test:[/CrOS/],describe:function(){return{name:s.OS_MAP.ChromeOS}}},{test:[/PlayStation 4/],describe:function(e){var t=i.default.getFirstMatch(/PlayStation 4[/\\s](\\d+(\\.\\d+)*)/i,e);return{name:s.OS_MAP.PlayStation4,version:t}}}];t.default=a,e.exports=t.default},94:function(e,t,r){\"use strict\";t.__esModule=!0,t.default=void 0;var n,i=(n=r(17))&&n.__esModule?n:{default:n},s=r(18);var a=[{test:[/googlebot/i],describe:function(){return{type:\"bot\",vendor:\"Google\"}}},{test:[/huawei/i],describe:function(e){var t=i.default.getFirstMatch(/(can-l01)/i,e)&&\"Nova\",r={type:s.PLATFORMS_MAP.mobile,vendor:\"Huawei\"};return t&&(r.model=t),r}},{test:[/nexus\\s*(?:7|8|9|10).*/i],describe:function(){return{type:s.PLATFORMS_MAP.tablet,vendor:\"Nexus\"}}},{test:[/ipad/i],describe:function(){return{type:s.PLATFORMS_MAP.tablet,vendor:\"Apple\",model:\"iPad\"}}},{test:[/Macintosh(.*?) FxiOS(.*?)\\//],describe:function(){return{type:s.PLATFORMS_MAP.tablet,vendor:\"Apple\",model:\"iPad\"}}},{test:[/kftt build/i],describe:function(){return{type:s.PLATFORMS_MAP.tablet,vendor:\"Amazon\",model:\"Kindle Fire HD 7\"}}},{test:[/silk/i],describe:function(){return{type:s.PLATFORMS_MAP.tablet,vendor:\"Amazon\"}}},{test:[/tablet(?! pc)/i],describe:function(){return{type:s.PLATFORMS_MAP.tablet}}},{test:function(e){var t=e.test(/ipod|iphone/i),r=e.test(/like (ipod|iphone)/i);return t&&!r},describe:function(e){var t=i.default.getFirstMatch(/(ipod|iphone)/i,e);return{type:s.PLATFORMS_MAP.mobile,vendor:\"Apple\",model:t}}},{test:[/nexus\\s*[0-6].*/i,/galaxy nexus/i],describe:function(){return{type:s.PLATFORMS_MAP.mobile,vendor:\"Nexus\"}}},{test:[/[^-]mobi/i],describe:function(){return{type:s.PLATFORMS_MAP.mobile}}},{test:function(e){return\"blackberry\"===e.getBrowserName(!0)},describe:function(){return{type:s.PLATFORMS_MAP.mobile,vendor:\"BlackBerry\"}}},{test:function(e){return\"bada\"===e.getBrowserName(!0)},describe:function(){return{type:s.PLATFORMS_MAP.mobile}}},{test:function(e){return\"windows phone\"===e.getBrowserName()},describe:function(){return{type:s.PLATFORMS_MAP.mobile,vendor:\"Microsoft\"}}},{test:function(e){var t=Number(String(e.getOSVersion()).split(\".\")[0]);return\"android\"===e.getOSName(!0)&&t>=3},describe:function(){return{type:s.PLATFORMS_MAP.tablet}}},{test:function(e){return\"android\"===e.getOSName(!0)},describe:function(){return{type:s.PLATFORMS_MAP.mobile}}},{test:function(e){return\"macos\"===e.getOSName(!0)},describe:function(){return{type:s.PLATFORMS_MAP.desktop,vendor:\"Apple\"}}},{test:function(e){return\"windows\"===e.getOSName(!0)},describe:function(){return{type:s.PLATFORMS_MAP.desktop}}},{test:function(e){return\"linux\"===e.getOSName(!0)},describe:function(){return{type:s.PLATFORMS_MAP.desktop}}},{test:function(e){return\"playstation 4\"===e.getOSName(!0)},describe:function(){return{type:s.PLATFORMS_MAP.tv}}},{test:function(e){return\"roku\"===e.getOSName(!0)},describe:function(){return{type:s.PLATFORMS_MAP.tv}}}];t.default=a,e.exports=t.default},95:function(e,t,r){\"use strict\";t.__esModule=!0,t.default=void 0;var n,i=(n=r(17))&&n.__esModule?n:{default:n},s=r(18);var a=[{test:function(e){return\"microsoft edge\"===e.getBrowserName(!0)},describe:function(e){if(/\\sedg\\//i.test(e))return{name:s.ENGINE_MAP.Blink};var t=i.default.getFirstMatch(/edge\\/(\\d+(\\.?_?\\d+)+)/i,e);return{name:s.ENGINE_MAP.EdgeHTML,version:t}}},{test:[/trident/i],describe:function(e){var t={name:s.ENGINE_MAP.Trident},r=i.default.getFirstMatch(/trident\\/(\\d+(\\.?_?\\d+)+)/i,e);return r&&(t.version=r),t}},{test:function(e){return e.test(/presto/i)},describe:function(e){var t={name:s.ENGINE_MAP.Presto},r=i.default.getFirstMatch(/presto\\/(\\d+(\\.?_?\\d+)+)/i,e);return r&&(t.version=r),t}},{test:function(e){var t=e.test(/gecko/i),r=e.test(/like gecko/i);return t&&!r},describe:function(e){var t={name:s.ENGINE_MAP.Gecko},r=i.default.getFirstMatch(/gecko\\/(\\d+(\\.?_?\\d+)+)/i,e);return r&&(t.version=r),t}},{test:[/(apple)?webkit\\/537\\.36/i],describe:function(){return{name:s.ENGINE_MAP.Blink}}},{test:[/(apple)?webkit/i],describe:function(e){var t={name:s.ENGINE_MAP.WebKit},r=i.default.getFirstMatch(/webkit\\/(\\d+(\\.?_?\\d+)+)/i,e);return r&&(t.version=r),t}}];t.default=a,e.exports=t.default}})}));","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"QRCodeStyling\"] = factory();\n\telse\n\t\troot[\"QRCodeStyling\"] = factory();\n})(self, function() {\nreturn ","//---------------------------------------------------------------------\n//\n// QR Code Generator for JavaScript\n//\n// Copyright (c) 2009 Kazuhiko Arase\n//\n// URL: http://www.d-project.com/\n//\n// Licensed under the MIT license:\n//  http://www.opensource.org/licenses/mit-license.php\n//\n// The word 'QR Code' is registered trademark of\n// DENSO WAVE INCORPORATED\n//  http://www.denso-wave.com/qrcode/faqpatent-e.html\n//\n//---------------------------------------------------------------------\n\nvar qrcode = function() {\n\n  //---------------------------------------------------------------------\n  // qrcode\n  //---------------------------------------------------------------------\n\n  /**\n   * qrcode\n   * @param typeNumber 1 to 40\n   * @param errorCorrectionLevel 'L','M','Q','H'\n   */\n  var qrcode = function(typeNumber, errorCorrectionLevel) {\n\n    var PAD0 = 0xEC;\n    var PAD1 = 0x11;\n\n    var _typeNumber = typeNumber;\n    var _errorCorrectionLevel = QRErrorCorrectionLevel[errorCorrectionLevel];\n    var _modules = null;\n    var _moduleCount = 0;\n    var _dataCache = null;\n    var _dataList = [];\n\n    var _this = {};\n\n    var makeImpl = function(test, maskPattern) {\n\n      _moduleCount = _typeNumber * 4 + 17;\n      _modules = function(moduleCount) {\n        var modules = new Array(moduleCount);\n        for (var row = 0; row < moduleCount; row += 1) {\n          modules[row] = new Array(moduleCount);\n          for (var col = 0; col < moduleCount; col += 1) {\n            modules[row][col] = null;\n          }\n        }\n        return modules;\n      }(_moduleCount);\n\n      setupPositionProbePattern(0, 0);\n      setupPositionProbePattern(_moduleCount - 7, 0);\n      setupPositionProbePattern(0, _moduleCount - 7);\n      setupPositionAdjustPattern();\n      setupTimingPattern();\n      setupTypeInfo(test, maskPattern);\n\n      if (_typeNumber >= 7) {\n        setupTypeNumber(test);\n      }\n\n      if (_dataCache == null) {\n        _dataCache = createData(_typeNumber, _errorCorrectionLevel, _dataList);\n      }\n\n      mapData(_dataCache, maskPattern);\n    };\n\n    var setupPositionProbePattern = function(row, col) {\n\n      for (var r = -1; r <= 7; r += 1) {\n\n        if (row + r <= -1 || _moduleCount <= row + r) continue;\n\n        for (var c = -1; c <= 7; c += 1) {\n\n          if (col + c <= -1 || _moduleCount <= col + c) continue;\n\n          if ( (0 <= r && r <= 6 && (c == 0 || c == 6) )\n              || (0 <= c && c <= 6 && (r == 0 || r == 6) )\n              || (2 <= r && r <= 4 && 2 <= c && c <= 4) ) {\n            _modules[row + r][col + c] = true;\n          } else {\n            _modules[row + r][col + c] = false;\n          }\n        }\n      }\n    };\n\n    var getBestMaskPattern = function() {\n\n      var minLostPoint = 0;\n      var pattern = 0;\n\n      for (var i = 0; i < 8; i += 1) {\n\n        makeImpl(true, i);\n\n        var lostPoint = QRUtil.getLostPoint(_this);\n\n        if (i == 0 || minLostPoint > lostPoint) {\n          minLostPoint = lostPoint;\n          pattern = i;\n        }\n      }\n\n      return pattern;\n    };\n\n    var setupTimingPattern = function() {\n\n      for (var r = 8; r < _moduleCount - 8; r += 1) {\n        if (_modules[r][6] != null) {\n          continue;\n        }\n        _modules[r][6] = (r % 2 == 0);\n      }\n\n      for (var c = 8; c < _moduleCount - 8; c += 1) {\n        if (_modules[6][c] != null) {\n          continue;\n        }\n        _modules[6][c] = (c % 2 == 0);\n      }\n    };\n\n    var setupPositionAdjustPattern = function() {\n\n      var pos = QRUtil.getPatternPosition(_typeNumber);\n\n      for (var i = 0; i < pos.length; i += 1) {\n\n        for (var j = 0; j < pos.length; j += 1) {\n\n          var row = pos[i];\n          var col = pos[j];\n\n          if (_modules[row][col] != null) {\n            continue;\n          }\n\n          for (var r = -2; r <= 2; r += 1) {\n\n            for (var c = -2; c <= 2; c += 1) {\n\n              if (r == -2 || r == 2 || c == -2 || c == 2\n                  || (r == 0 && c == 0) ) {\n                _modules[row + r][col + c] = true;\n              } else {\n                _modules[row + r][col + c] = false;\n              }\n            }\n          }\n        }\n      }\n    };\n\n    var setupTypeNumber = function(test) {\n\n      var bits = QRUtil.getBCHTypeNumber(_typeNumber);\n\n      for (var i = 0; i < 18; i += 1) {\n        var mod = (!test && ( (bits >> i) & 1) == 1);\n        _modules[Math.floor(i / 3)][i % 3 + _moduleCount - 8 - 3] = mod;\n      }\n\n      for (var i = 0; i < 18; i += 1) {\n        var mod = (!test && ( (bits >> i) & 1) == 1);\n        _modules[i % 3 + _moduleCount - 8 - 3][Math.floor(i / 3)] = mod;\n      }\n    };\n\n    var setupTypeInfo = function(test, maskPattern) {\n\n      var data = (_errorCorrectionLevel << 3) | maskPattern;\n      var bits = QRUtil.getBCHTypeInfo(data);\n\n      // vertical\n      for (var i = 0; i < 15; i += 1) {\n\n        var mod = (!test && ( (bits >> i) & 1) == 1);\n\n        if (i < 6) {\n          _modules[i][8] = mod;\n        } else if (i < 8) {\n          _modules[i + 1][8] = mod;\n        } else {\n          _modules[_moduleCount - 15 + i][8] = mod;\n        }\n      }\n\n      // horizontal\n      for (var i = 0; i < 15; i += 1) {\n\n        var mod = (!test && ( (bits >> i) & 1) == 1);\n\n        if (i < 8) {\n          _modules[8][_moduleCount - i - 1] = mod;\n        } else if (i < 9) {\n          _modules[8][15 - i - 1 + 1] = mod;\n        } else {\n          _modules[8][15 - i - 1] = mod;\n        }\n      }\n\n      // fixed module\n      _modules[_moduleCount - 8][8] = (!test);\n    };\n\n    var mapData = function(data, maskPattern) {\n\n      var inc = -1;\n      var row = _moduleCount - 1;\n      var bitIndex = 7;\n      var byteIndex = 0;\n      var maskFunc = QRUtil.getMaskFunction(maskPattern);\n\n      for (var col = _moduleCount - 1; col > 0; col -= 2) {\n\n        if (col == 6) col -= 1;\n\n        while (true) {\n\n          for (var c = 0; c < 2; c += 1) {\n\n            if (_modules[row][col - c] == null) {\n\n              var dark = false;\n\n              if (byteIndex < data.length) {\n                dark = ( ( (data[byteIndex] >>> bitIndex) & 1) == 1);\n              }\n\n              var mask = maskFunc(row, col - c);\n\n              if (mask) {\n                dark = !dark;\n              }\n\n              _modules[row][col - c] = dark;\n              bitIndex -= 1;\n\n              if (bitIndex == -1) {\n                byteIndex += 1;\n                bitIndex = 7;\n              }\n            }\n          }\n\n          row += inc;\n\n          if (row < 0 || _moduleCount <= row) {\n            row -= inc;\n            inc = -inc;\n            break;\n          }\n        }\n      }\n    };\n\n    var createBytes = function(buffer, rsBlocks) {\n\n      var offset = 0;\n\n      var maxDcCount = 0;\n      var maxEcCount = 0;\n\n      var dcdata = new Array(rsBlocks.length);\n      var ecdata = new Array(rsBlocks.length);\n\n      for (var r = 0; r < rsBlocks.length; r += 1) {\n\n        var dcCount = rsBlocks[r].dataCount;\n        var ecCount = rsBlocks[r].totalCount - dcCount;\n\n        maxDcCount = Math.max(maxDcCount, dcCount);\n        maxEcCount = Math.max(maxEcCount, ecCount);\n\n        dcdata[r] = new Array(dcCount);\n\n        for (var i = 0; i < dcdata[r].length; i += 1) {\n          dcdata[r][i] = 0xff & buffer.getBuffer()[i + offset];\n        }\n        offset += dcCount;\n\n        var rsPoly = QRUtil.getErrorCorrectPolynomial(ecCount);\n        var rawPoly = qrPolynomial(dcdata[r], rsPoly.getLength() - 1);\n\n        var modPoly = rawPoly.mod(rsPoly);\n        ecdata[r] = new Array(rsPoly.getLength() - 1);\n        for (var i = 0; i < ecdata[r].length; i += 1) {\n          var modIndex = i + modPoly.getLength() - ecdata[r].length;\n          ecdata[r][i] = (modIndex >= 0)? modPoly.getAt(modIndex) : 0;\n        }\n      }\n\n      var totalCodeCount = 0;\n      for (var i = 0; i < rsBlocks.length; i += 1) {\n        totalCodeCount += rsBlocks[i].totalCount;\n      }\n\n      var data = new Array(totalCodeCount);\n      var index = 0;\n\n      for (var i = 0; i < maxDcCount; i += 1) {\n        for (var r = 0; r < rsBlocks.length; r += 1) {\n          if (i < dcdata[r].length) {\n            data[index] = dcdata[r][i];\n            index += 1;\n          }\n        }\n      }\n\n      for (var i = 0; i < maxEcCount; i += 1) {\n        for (var r = 0; r < rsBlocks.length; r += 1) {\n          if (i < ecdata[r].length) {\n            data[index] = ecdata[r][i];\n            index += 1;\n          }\n        }\n      }\n\n      return data;\n    };\n\n    var createData = function(typeNumber, errorCorrectionLevel, dataList) {\n\n      var rsBlocks = QRRSBlock.getRSBlocks(typeNumber, errorCorrectionLevel);\n\n      var buffer = qrBitBuffer();\n\n      for (var i = 0; i < dataList.length; i += 1) {\n        var data = dataList[i];\n        buffer.put(data.getMode(), 4);\n        buffer.put(data.getLength(), QRUtil.getLengthInBits(data.getMode(), typeNumber) );\n        data.write(buffer);\n      }\n\n      // calc num max data.\n      var totalDataCount = 0;\n      for (var i = 0; i < rsBlocks.length; i += 1) {\n        totalDataCount += rsBlocks[i].dataCount;\n      }\n\n      if (buffer.getLengthInBits() > totalDataCount * 8) {\n        throw 'code length overflow. ('\n          + buffer.getLengthInBits()\n          + '>'\n          + totalDataCount * 8\n          + ')';\n      }\n\n      // end code\n      if (buffer.getLengthInBits() + 4 <= totalDataCount * 8) {\n        buffer.put(0, 4);\n      }\n\n      // padding\n      while (buffer.getLengthInBits() % 8 != 0) {\n        buffer.putBit(false);\n      }\n\n      // padding\n      while (true) {\n\n        if (buffer.getLengthInBits() >= totalDataCount * 8) {\n          break;\n        }\n        buffer.put(PAD0, 8);\n\n        if (buffer.getLengthInBits() >= totalDataCount * 8) {\n          break;\n        }\n        buffer.put(PAD1, 8);\n      }\n\n      return createBytes(buffer, rsBlocks);\n    };\n\n    _this.addData = function(data, mode) {\n\n      mode = mode || 'Byte';\n\n      var newData = null;\n\n      switch(mode) {\n      case 'Numeric' :\n        newData = qrNumber(data);\n        break;\n      case 'Alphanumeric' :\n        newData = qrAlphaNum(data);\n        break;\n      case 'Byte' :\n        newData = qr8BitByte(data);\n        break;\n      case 'Kanji' :\n        newData = qrKanji(data);\n        break;\n      default :\n        throw 'mode:' + mode;\n      }\n\n      _dataList.push(newData);\n      _dataCache = null;\n    };\n\n    _this.isDark = function(row, col) {\n      if (row < 0 || _moduleCount <= row || col < 0 || _moduleCount <= col) {\n        throw row + ',' + col;\n      }\n      return _modules[row][col];\n    };\n\n    _this.getModuleCount = function() {\n      return _moduleCount;\n    };\n\n    _this.make = function() {\n      if (_typeNumber < 1) {\n        var typeNumber = 1;\n\n        for (; typeNumber < 40; typeNumber++) {\n          var rsBlocks = QRRSBlock.getRSBlocks(typeNumber, _errorCorrectionLevel);\n          var buffer = qrBitBuffer();\n\n          for (var i = 0; i < _dataList.length; i++) {\n            var data = _dataList[i];\n            buffer.put(data.getMode(), 4);\n            buffer.put(data.getLength(), QRUtil.getLengthInBits(data.getMode(), typeNumber) );\n            data.write(buffer);\n          }\n\n          var totalDataCount = 0;\n          for (var i = 0; i < rsBlocks.length; i++) {\n            totalDataCount += rsBlocks[i].dataCount;\n          }\n\n          if (buffer.getLengthInBits() <= totalDataCount * 8) {\n            break;\n          }\n        }\n\n        _typeNumber = typeNumber;\n      }\n\n      makeImpl(false, getBestMaskPattern() );\n    };\n\n    _this.createTableTag = function(cellSize, margin) {\n\n      cellSize = cellSize || 2;\n      margin = (typeof margin == 'undefined')? cellSize * 4 : margin;\n\n      var qrHtml = '';\n\n      qrHtml += '<table style=\"';\n      qrHtml += ' border-width: 0px; border-style: none;';\n      qrHtml += ' border-collapse: collapse;';\n      qrHtml += ' padding: 0px; margin: ' + margin + 'px;';\n      qrHtml += '\">';\n      qrHtml += '<tbody>';\n\n      for (var r = 0; r < _this.getModuleCount(); r += 1) {\n\n        qrHtml += '<tr>';\n\n        for (var c = 0; c < _this.getModuleCount(); c += 1) {\n          qrHtml += '<td style=\"';\n          qrHtml += ' border-width: 0px; border-style: none;';\n          qrHtml += ' border-collapse: collapse;';\n          qrHtml += ' padding: 0px; margin: 0px;';\n          qrHtml += ' width: ' + cellSize + 'px;';\n          qrHtml += ' height: ' + cellSize + 'px;';\n          qrHtml += ' background-color: ';\n          qrHtml += _this.isDark(r, c)? '#000000' : '#ffffff';\n          qrHtml += ';';\n          qrHtml += '\"/>';\n        }\n\n        qrHtml += '</tr>';\n      }\n\n      qrHtml += '</tbody>';\n      qrHtml += '</table>';\n\n      return qrHtml;\n    };\n\n    _this.createSvgTag = function(cellSize, margin, alt, title) {\n\n      var opts = {};\n      if (typeof arguments[0] == 'object') {\n        // Called by options.\n        opts = arguments[0];\n        // overwrite cellSize and margin.\n        cellSize = opts.cellSize;\n        margin = opts.margin;\n        alt = opts.alt;\n        title = opts.title;\n      }\n\n      cellSize = cellSize || 2;\n      margin = (typeof margin == 'undefined')? cellSize * 4 : margin;\n\n      // Compose alt property surrogate\n      alt = (typeof alt === 'string') ? {text: alt} : alt || {};\n      alt.text = alt.text || null;\n      alt.id = (alt.text) ? alt.id || 'qrcode-description' : null;\n\n      // Compose title property surrogate\n      title = (typeof title === 'string') ? {text: title} : title || {};\n      title.text = title.text || null;\n      title.id = (title.text) ? title.id || 'qrcode-title' : null;\n\n      var size = _this.getModuleCount() * cellSize + margin * 2;\n      var c, mc, r, mr, qrSvg='', rect;\n\n      rect = 'l' + cellSize + ',0 0,' + cellSize +\n        ' -' + cellSize + ',0 0,-' + cellSize + 'z ';\n\n      qrSvg += '<svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\"';\n      qrSvg += !opts.scalable ? ' width=\"' + size + 'px\" height=\"' + size + 'px\"' : '';\n      qrSvg += ' viewBox=\"0 0 ' + size + ' ' + size + '\" ';\n      qrSvg += ' preserveAspectRatio=\"xMinYMin meet\"';\n      qrSvg += (title.text || alt.text) ? ' role=\"img\" aria-labelledby=\"' +\n          escapeXml([title.id, alt.id].join(' ').trim() ) + '\"' : '';\n      qrSvg += '>';\n      qrSvg += (title.text) ? '<title id=\"' + escapeXml(title.id) + '\">' +\n          escapeXml(title.text) + '</title>' : '';\n      qrSvg += (alt.text) ? '<description id=\"' + escapeXml(alt.id) + '\">' +\n          escapeXml(alt.text) + '</description>' : '';\n      qrSvg += '<rect width=\"100%\" height=\"100%\" fill=\"white\" cx=\"0\" cy=\"0\"/>';\n      qrSvg += '<path d=\"';\n\n      for (r = 0; r < _this.getModuleCount(); r += 1) {\n        mr = r * cellSize + margin;\n        for (c = 0; c < _this.getModuleCount(); c += 1) {\n          if (_this.isDark(r, c) ) {\n            mc = c*cellSize+margin;\n            qrSvg += 'M' + mc + ',' + mr + rect;\n          }\n        }\n      }\n\n      qrSvg += '\" stroke=\"transparent\" fill=\"black\"/>';\n      qrSvg += '</svg>';\n\n      return qrSvg;\n    };\n\n    _this.createDataURL = function(cellSize, margin) {\n\n      cellSize = cellSize || 2;\n      margin = (typeof margin == 'undefined')? cellSize * 4 : margin;\n\n      var size = _this.getModuleCount() * cellSize + margin * 2;\n      var min = margin;\n      var max = size - margin;\n\n      return createDataURL(size, size, function(x, y) {\n        if (min <= x && x < max && min <= y && y < max) {\n          var c = Math.floor( (x - min) / cellSize);\n          var r = Math.floor( (y - min) / cellSize);\n          return _this.isDark(r, c)? 0 : 1;\n        } else {\n          return 1;\n        }\n      } );\n    };\n\n    _this.createImgTag = function(cellSize, margin, alt) {\n\n      cellSize = cellSize || 2;\n      margin = (typeof margin == 'undefined')? cellSize * 4 : margin;\n\n      var size = _this.getModuleCount() * cellSize + margin * 2;\n\n      var img = '';\n      img += '<img';\n      img += '\\u0020src=\"';\n      img += _this.createDataURL(cellSize, margin);\n      img += '\"';\n      img += '\\u0020width=\"';\n      img += size;\n      img += '\"';\n      img += '\\u0020height=\"';\n      img += size;\n      img += '\"';\n      if (alt) {\n        img += '\\u0020alt=\"';\n        img += escapeXml(alt);\n        img += '\"';\n      }\n      img += '/>';\n\n      return img;\n    };\n\n    var escapeXml = function(s) {\n      var escaped = '';\n      for (var i = 0; i < s.length; i += 1) {\n        var c = s.charAt(i);\n        switch(c) {\n        case '<': escaped += '&lt;'; break;\n        case '>': escaped += '&gt;'; break;\n        case '&': escaped += '&amp;'; break;\n        case '\"': escaped += '&quot;'; break;\n        default : escaped += c; break;\n        }\n      }\n      return escaped;\n    };\n\n    var _createHalfASCII = function(margin) {\n      var cellSize = 1;\n      margin = (typeof margin == 'undefined')? cellSize * 2 : margin;\n\n      var size = _this.getModuleCount() * cellSize + margin * 2;\n      var min = margin;\n      var max = size - margin;\n\n      var y, x, r1, r2, p;\n\n      var blocks = {\n        '██': '█',\n        '█ ': '▀',\n        ' █': '▄',\n        '  ': ' '\n      };\n\n      var blocksLastLineNoMargin = {\n        '██': '▀',\n        '█ ': '▀',\n        ' █': ' ',\n        '  ': ' '\n      };\n\n      var ascii = '';\n      for (y = 0; y < size; y += 2) {\n        r1 = Math.floor((y - min) / cellSize);\n        r2 = Math.floor((y + 1 - min) / cellSize);\n        for (x = 0; x < size; x += 1) {\n          p = '█';\n\n          if (min <= x && x < max && min <= y && y < max && _this.isDark(r1, Math.floor((x - min) / cellSize))) {\n            p = ' ';\n          }\n\n          if (min <= x && x < max && min <= y+1 && y+1 < max && _this.isDark(r2, Math.floor((x - min) / cellSize))) {\n            p += ' ';\n          }\n          else {\n            p += '█';\n          }\n\n          // Output 2 characters per pixel, to create full square. 1 character per pixels gives only half width of square.\n          ascii += (margin < 1 && y+1 >= max) ? blocksLastLineNoMargin[p] : blocks[p];\n        }\n\n        ascii += '\\n';\n      }\n\n      if (size % 2 && margin > 0) {\n        return ascii.substring(0, ascii.length - size - 1) + Array(size+1).join('▀');\n      }\n\n      return ascii.substring(0, ascii.length-1);\n    };\n\n    _this.createASCII = function(cellSize, margin) {\n      cellSize = cellSize || 1;\n\n      if (cellSize < 2) {\n        return _createHalfASCII(margin);\n      }\n\n      cellSize -= 1;\n      margin = (typeof margin == 'undefined')? cellSize * 2 : margin;\n\n      var size = _this.getModuleCount() * cellSize + margin * 2;\n      var min = margin;\n      var max = size - margin;\n\n      var y, x, r, p;\n\n      var white = Array(cellSize+1).join('██');\n      var black = Array(cellSize+1).join('  ');\n\n      var ascii = '';\n      var line = '';\n      for (y = 0; y < size; y += 1) {\n        r = Math.floor( (y - min) / cellSize);\n        line = '';\n        for (x = 0; x < size; x += 1) {\n          p = 1;\n\n          if (min <= x && x < max && min <= y && y < max && _this.isDark(r, Math.floor((x - min) / cellSize))) {\n            p = 0;\n          }\n\n          // Output 2 characters per pixel, to create full square. 1 character per pixels gives only half width of square.\n          line += p ? white : black;\n        }\n\n        for (r = 0; r < cellSize; r += 1) {\n          ascii += line + '\\n';\n        }\n      }\n\n      return ascii.substring(0, ascii.length-1);\n    };\n\n    _this.renderTo2dContext = function(context, cellSize) {\n      cellSize = cellSize || 2;\n      var length = _this.getModuleCount();\n      for (var row = 0; row < length; row++) {\n        for (var col = 0; col < length; col++) {\n          context.fillStyle = _this.isDark(row, col) ? 'black' : 'white';\n          context.fillRect(row * cellSize, col * cellSize, cellSize, cellSize);\n        }\n      }\n    }\n\n    return _this;\n  };\n\n  //---------------------------------------------------------------------\n  // qrcode.stringToBytes\n  //---------------------------------------------------------------------\n\n  qrcode.stringToBytesFuncs = {\n    'default' : function(s) {\n      var bytes = [];\n      for (var i = 0; i < s.length; i += 1) {\n        var c = s.charCodeAt(i);\n        bytes.push(c & 0xff);\n      }\n      return bytes;\n    }\n  };\n\n  qrcode.stringToBytes = qrcode.stringToBytesFuncs['default'];\n\n  //---------------------------------------------------------------------\n  // qrcode.createStringToBytes\n  //---------------------------------------------------------------------\n\n  /**\n   * @param unicodeData base64 string of byte array.\n   * [16bit Unicode],[16bit Bytes], ...\n   * @param numChars\n   */\n  qrcode.createStringToBytes = function(unicodeData, numChars) {\n\n    // create conversion map.\n\n    var unicodeMap = function() {\n\n      var bin = base64DecodeInputStream(unicodeData);\n      var read = function() {\n        var b = bin.read();\n        if (b == -1) throw 'eof';\n        return b;\n      };\n\n      var count = 0;\n      var unicodeMap = {};\n      while (true) {\n        var b0 = bin.read();\n        if (b0 == -1) break;\n        var b1 = read();\n        var b2 = read();\n        var b3 = read();\n        var k = String.fromCharCode( (b0 << 8) | b1);\n        var v = (b2 << 8) | b3;\n        unicodeMap[k] = v;\n        count += 1;\n      }\n      if (count != numChars) {\n        throw count + ' != ' + numChars;\n      }\n\n      return unicodeMap;\n    }();\n\n    var unknownChar = '?'.charCodeAt(0);\n\n    return function(s) {\n      var bytes = [];\n      for (var i = 0; i < s.length; i += 1) {\n        var c = s.charCodeAt(i);\n        if (c < 128) {\n          bytes.push(c);\n        } else {\n          var b = unicodeMap[s.charAt(i)];\n          if (typeof b == 'number') {\n            if ( (b & 0xff) == b) {\n              // 1byte\n              bytes.push(b);\n            } else {\n              // 2bytes\n              bytes.push(b >>> 8);\n              bytes.push(b & 0xff);\n            }\n          } else {\n            bytes.push(unknownChar);\n          }\n        }\n      }\n      return bytes;\n    };\n  };\n\n  //---------------------------------------------------------------------\n  // QRMode\n  //---------------------------------------------------------------------\n\n  var QRMode = {\n    MODE_NUMBER :    1 << 0,\n    MODE_ALPHA_NUM : 1 << 1,\n    MODE_8BIT_BYTE : 1 << 2,\n    MODE_KANJI :     1 << 3\n  };\n\n  //---------------------------------------------------------------------\n  // QRErrorCorrectionLevel\n  //---------------------------------------------------------------------\n\n  var QRErrorCorrectionLevel = {\n    L : 1,\n    M : 0,\n    Q : 3,\n    H : 2\n  };\n\n  //---------------------------------------------------------------------\n  // QRMaskPattern\n  //---------------------------------------------------------------------\n\n  var QRMaskPattern = {\n    PATTERN000 : 0,\n    PATTERN001 : 1,\n    PATTERN010 : 2,\n    PATTERN011 : 3,\n    PATTERN100 : 4,\n    PATTERN101 : 5,\n    PATTERN110 : 6,\n    PATTERN111 : 7\n  };\n\n  //---------------------------------------------------------------------\n  // QRUtil\n  //---------------------------------------------------------------------\n\n  var QRUtil = function() {\n\n    var PATTERN_POSITION_TABLE = [\n      [],\n      [6, 18],\n      [6, 22],\n      [6, 26],\n      [6, 30],\n      [6, 34],\n      [6, 22, 38],\n      [6, 24, 42],\n      [6, 26, 46],\n      [6, 28, 50],\n      [6, 30, 54],\n      [6, 32, 58],\n      [6, 34, 62],\n      [6, 26, 46, 66],\n      [6, 26, 48, 70],\n      [6, 26, 50, 74],\n      [6, 30, 54, 78],\n      [6, 30, 56, 82],\n      [6, 30, 58, 86],\n      [6, 34, 62, 90],\n      [6, 28, 50, 72, 94],\n      [6, 26, 50, 74, 98],\n      [6, 30, 54, 78, 102],\n      [6, 28, 54, 80, 106],\n      [6, 32, 58, 84, 110],\n      [6, 30, 58, 86, 114],\n      [6, 34, 62, 90, 118],\n      [6, 26, 50, 74, 98, 122],\n      [6, 30, 54, 78, 102, 126],\n      [6, 26, 52, 78, 104, 130],\n      [6, 30, 56, 82, 108, 134],\n      [6, 34, 60, 86, 112, 138],\n      [6, 30, 58, 86, 114, 142],\n      [6, 34, 62, 90, 118, 146],\n      [6, 30, 54, 78, 102, 126, 150],\n      [6, 24, 50, 76, 102, 128, 154],\n      [6, 28, 54, 80, 106, 132, 158],\n      [6, 32, 58, 84, 110, 136, 162],\n      [6, 26, 54, 82, 110, 138, 166],\n      [6, 30, 58, 86, 114, 142, 170]\n    ];\n    var G15 = (1 << 10) | (1 << 8) | (1 << 5) | (1 << 4) | (1 << 2) | (1 << 1) | (1 << 0);\n    var G18 = (1 << 12) | (1 << 11) | (1 << 10) | (1 << 9) | (1 << 8) | (1 << 5) | (1 << 2) | (1 << 0);\n    var G15_MASK = (1 << 14) | (1 << 12) | (1 << 10) | (1 << 4) | (1 << 1);\n\n    var _this = {};\n\n    var getBCHDigit = function(data) {\n      var digit = 0;\n      while (data != 0) {\n        digit += 1;\n        data >>>= 1;\n      }\n      return digit;\n    };\n\n    _this.getBCHTypeInfo = function(data) {\n      var d = data << 10;\n      while (getBCHDigit(d) - getBCHDigit(G15) >= 0) {\n        d ^= (G15 << (getBCHDigit(d) - getBCHDigit(G15) ) );\n      }\n      return ( (data << 10) | d) ^ G15_MASK;\n    };\n\n    _this.getBCHTypeNumber = function(data) {\n      var d = data << 12;\n      while (getBCHDigit(d) - getBCHDigit(G18) >= 0) {\n        d ^= (G18 << (getBCHDigit(d) - getBCHDigit(G18) ) );\n      }\n      return (data << 12) | d;\n    };\n\n    _this.getPatternPosition = function(typeNumber) {\n      return PATTERN_POSITION_TABLE[typeNumber - 1];\n    };\n\n    _this.getMaskFunction = function(maskPattern) {\n\n      switch (maskPattern) {\n\n      case QRMaskPattern.PATTERN000 :\n        return function(i, j) { return (i + j) % 2 == 0; };\n      case QRMaskPattern.PATTERN001 :\n        return function(i, j) { return i % 2 == 0; };\n      case QRMaskPattern.PATTERN010 :\n        return function(i, j) { return j % 3 == 0; };\n      case QRMaskPattern.PATTERN011 :\n        return function(i, j) { return (i + j) % 3 == 0; };\n      case QRMaskPattern.PATTERN100 :\n        return function(i, j) { return (Math.floor(i / 2) + Math.floor(j / 3) ) % 2 == 0; };\n      case QRMaskPattern.PATTERN101 :\n        return function(i, j) { return (i * j) % 2 + (i * j) % 3 == 0; };\n      case QRMaskPattern.PATTERN110 :\n        return function(i, j) { return ( (i * j) % 2 + (i * j) % 3) % 2 == 0; };\n      case QRMaskPattern.PATTERN111 :\n        return function(i, j) { return ( (i * j) % 3 + (i + j) % 2) % 2 == 0; };\n\n      default :\n        throw 'bad maskPattern:' + maskPattern;\n      }\n    };\n\n    _this.getErrorCorrectPolynomial = function(errorCorrectLength) {\n      var a = qrPolynomial([1], 0);\n      for (var i = 0; i < errorCorrectLength; i += 1) {\n        a = a.multiply(qrPolynomial([1, QRMath.gexp(i)], 0) );\n      }\n      return a;\n    };\n\n    _this.getLengthInBits = function(mode, type) {\n\n      if (1 <= type && type < 10) {\n\n        // 1 - 9\n\n        switch(mode) {\n        case QRMode.MODE_NUMBER    : return 10;\n        case QRMode.MODE_ALPHA_NUM : return 9;\n        case QRMode.MODE_8BIT_BYTE : return 8;\n        case QRMode.MODE_KANJI     : return 8;\n        default :\n          throw 'mode:' + mode;\n        }\n\n      } else if (type < 27) {\n\n        // 10 - 26\n\n        switch(mode) {\n        case QRMode.MODE_NUMBER    : return 12;\n        case QRMode.MODE_ALPHA_NUM : return 11;\n        case QRMode.MODE_8BIT_BYTE : return 16;\n        case QRMode.MODE_KANJI     : return 10;\n        default :\n          throw 'mode:' + mode;\n        }\n\n      } else if (type < 41) {\n\n        // 27 - 40\n\n        switch(mode) {\n        case QRMode.MODE_NUMBER    : return 14;\n        case QRMode.MODE_ALPHA_NUM : return 13;\n        case QRMode.MODE_8BIT_BYTE : return 16;\n        case QRMode.MODE_KANJI     : return 12;\n        default :\n          throw 'mode:' + mode;\n        }\n\n      } else {\n        throw 'type:' + type;\n      }\n    };\n\n    _this.getLostPoint = function(qrcode) {\n\n      var moduleCount = qrcode.getModuleCount();\n\n      var lostPoint = 0;\n\n      // LEVEL1\n\n      for (var row = 0; row < moduleCount; row += 1) {\n        for (var col = 0; col < moduleCount; col += 1) {\n\n          var sameCount = 0;\n          var dark = qrcode.isDark(row, col);\n\n          for (var r = -1; r <= 1; r += 1) {\n\n            if (row + r < 0 || moduleCount <= row + r) {\n              continue;\n            }\n\n            for (var c = -1; c <= 1; c += 1) {\n\n              if (col + c < 0 || moduleCount <= col + c) {\n                continue;\n              }\n\n              if (r == 0 && c == 0) {\n                continue;\n              }\n\n              if (dark == qrcode.isDark(row + r, col + c) ) {\n                sameCount += 1;\n              }\n            }\n          }\n\n          if (sameCount > 5) {\n            lostPoint += (3 + sameCount - 5);\n          }\n        }\n      };\n\n      // LEVEL2\n\n      for (var row = 0; row < moduleCount - 1; row += 1) {\n        for (var col = 0; col < moduleCount - 1; col += 1) {\n          var count = 0;\n          if (qrcode.isDark(row, col) ) count += 1;\n          if (qrcode.isDark(row + 1, col) ) count += 1;\n          if (qrcode.isDark(row, col + 1) ) count += 1;\n          if (qrcode.isDark(row + 1, col + 1) ) count += 1;\n          if (count == 0 || count == 4) {\n            lostPoint += 3;\n          }\n        }\n      }\n\n      // LEVEL3\n\n      for (var row = 0; row < moduleCount; row += 1) {\n        for (var col = 0; col < moduleCount - 6; col += 1) {\n          if (qrcode.isDark(row, col)\n              && !qrcode.isDark(row, col + 1)\n              &&  qrcode.isDark(row, col + 2)\n              &&  qrcode.isDark(row, col + 3)\n              &&  qrcode.isDark(row, col + 4)\n              && !qrcode.isDark(row, col + 5)\n              &&  qrcode.isDark(row, col + 6) ) {\n            lostPoint += 40;\n          }\n        }\n      }\n\n      for (var col = 0; col < moduleCount; col += 1) {\n        for (var row = 0; row < moduleCount - 6; row += 1) {\n          if (qrcode.isDark(row, col)\n              && !qrcode.isDark(row + 1, col)\n              &&  qrcode.isDark(row + 2, col)\n              &&  qrcode.isDark(row + 3, col)\n              &&  qrcode.isDark(row + 4, col)\n              && !qrcode.isDark(row + 5, col)\n              &&  qrcode.isDark(row + 6, col) ) {\n            lostPoint += 40;\n          }\n        }\n      }\n\n      // LEVEL4\n\n      var darkCount = 0;\n\n      for (var col = 0; col < moduleCount; col += 1) {\n        for (var row = 0; row < moduleCount; row += 1) {\n          if (qrcode.isDark(row, col) ) {\n            darkCount += 1;\n          }\n        }\n      }\n\n      var ratio = Math.abs(100 * darkCount / moduleCount / moduleCount - 50) / 5;\n      lostPoint += ratio * 10;\n\n      return lostPoint;\n    };\n\n    return _this;\n  }();\n\n  //---------------------------------------------------------------------\n  // QRMath\n  //---------------------------------------------------------------------\n\n  var QRMath = function() {\n\n    var EXP_TABLE = new Array(256);\n    var LOG_TABLE = new Array(256);\n\n    // initialize tables\n    for (var i = 0; i < 8; i += 1) {\n      EXP_TABLE[i] = 1 << i;\n    }\n    for (var i = 8; i < 256; i += 1) {\n      EXP_TABLE[i] = EXP_TABLE[i - 4]\n        ^ EXP_TABLE[i - 5]\n        ^ EXP_TABLE[i - 6]\n        ^ EXP_TABLE[i - 8];\n    }\n    for (var i = 0; i < 255; i += 1) {\n      LOG_TABLE[EXP_TABLE[i] ] = i;\n    }\n\n    var _this = {};\n\n    _this.glog = function(n) {\n\n      if (n < 1) {\n        throw 'glog(' + n + ')';\n      }\n\n      return LOG_TABLE[n];\n    };\n\n    _this.gexp = function(n) {\n\n      while (n < 0) {\n        n += 255;\n      }\n\n      while (n >= 256) {\n        n -= 255;\n      }\n\n      return EXP_TABLE[n];\n    };\n\n    return _this;\n  }();\n\n  //---------------------------------------------------------------------\n  // qrPolynomial\n  //---------------------------------------------------------------------\n\n  function qrPolynomial(num, shift) {\n\n    if (typeof num.length == 'undefined') {\n      throw num.length + '/' + shift;\n    }\n\n    var _num = function() {\n      var offset = 0;\n      while (offset < num.length && num[offset] == 0) {\n        offset += 1;\n      }\n      var _num = new Array(num.length - offset + shift);\n      for (var i = 0; i < num.length - offset; i += 1) {\n        _num[i] = num[i + offset];\n      }\n      return _num;\n    }();\n\n    var _this = {};\n\n    _this.getAt = function(index) {\n      return _num[index];\n    };\n\n    _this.getLength = function() {\n      return _num.length;\n    };\n\n    _this.multiply = function(e) {\n\n      var num = new Array(_this.getLength() + e.getLength() - 1);\n\n      for (var i = 0; i < _this.getLength(); i += 1) {\n        for (var j = 0; j < e.getLength(); j += 1) {\n          num[i + j] ^= QRMath.gexp(QRMath.glog(_this.getAt(i) ) + QRMath.glog(e.getAt(j) ) );\n        }\n      }\n\n      return qrPolynomial(num, 0);\n    };\n\n    _this.mod = function(e) {\n\n      if (_this.getLength() - e.getLength() < 0) {\n        return _this;\n      }\n\n      var ratio = QRMath.glog(_this.getAt(0) ) - QRMath.glog(e.getAt(0) );\n\n      var num = new Array(_this.getLength() );\n      for (var i = 0; i < _this.getLength(); i += 1) {\n        num[i] = _this.getAt(i);\n      }\n\n      for (var i = 0; i < e.getLength(); i += 1) {\n        num[i] ^= QRMath.gexp(QRMath.glog(e.getAt(i) ) + ratio);\n      }\n\n      // recursive call\n      return qrPolynomial(num, 0).mod(e);\n    };\n\n    return _this;\n  };\n\n  //---------------------------------------------------------------------\n  // QRRSBlock\n  //---------------------------------------------------------------------\n\n  var QRRSBlock = function() {\n\n    var RS_BLOCK_TABLE = [\n\n      // L\n      // M\n      // Q\n      // H\n\n      // 1\n      [1, 26, 19],\n      [1, 26, 16],\n      [1, 26, 13],\n      [1, 26, 9],\n\n      // 2\n      [1, 44, 34],\n      [1, 44, 28],\n      [1, 44, 22],\n      [1, 44, 16],\n\n      // 3\n      [1, 70, 55],\n      [1, 70, 44],\n      [2, 35, 17],\n      [2, 35, 13],\n\n      // 4\n      [1, 100, 80],\n      [2, 50, 32],\n      [2, 50, 24],\n      [4, 25, 9],\n\n      // 5\n      [1, 134, 108],\n      [2, 67, 43],\n      [2, 33, 15, 2, 34, 16],\n      [2, 33, 11, 2, 34, 12],\n\n      // 6\n      [2, 86, 68],\n      [4, 43, 27],\n      [4, 43, 19],\n      [4, 43, 15],\n\n      // 7\n      [2, 98, 78],\n      [4, 49, 31],\n      [2, 32, 14, 4, 33, 15],\n      [4, 39, 13, 1, 40, 14],\n\n      // 8\n      [2, 121, 97],\n      [2, 60, 38, 2, 61, 39],\n      [4, 40, 18, 2, 41, 19],\n      [4, 40, 14, 2, 41, 15],\n\n      // 9\n      [2, 146, 116],\n      [3, 58, 36, 2, 59, 37],\n      [4, 36, 16, 4, 37, 17],\n      [4, 36, 12, 4, 37, 13],\n\n      // 10\n      [2, 86, 68, 2, 87, 69],\n      [4, 69, 43, 1, 70, 44],\n      [6, 43, 19, 2, 44, 20],\n      [6, 43, 15, 2, 44, 16],\n\n      // 11\n      [4, 101, 81],\n      [1, 80, 50, 4, 81, 51],\n      [4, 50, 22, 4, 51, 23],\n      [3, 36, 12, 8, 37, 13],\n\n      // 12\n      [2, 116, 92, 2, 117, 93],\n      [6, 58, 36, 2, 59, 37],\n      [4, 46, 20, 6, 47, 21],\n      [7, 42, 14, 4, 43, 15],\n\n      // 13\n      [4, 133, 107],\n      [8, 59, 37, 1, 60, 38],\n      [8, 44, 20, 4, 45, 21],\n      [12, 33, 11, 4, 34, 12],\n\n      // 14\n      [3, 145, 115, 1, 146, 116],\n      [4, 64, 40, 5, 65, 41],\n      [11, 36, 16, 5, 37, 17],\n      [11, 36, 12, 5, 37, 13],\n\n      // 15\n      [5, 109, 87, 1, 110, 88],\n      [5, 65, 41, 5, 66, 42],\n      [5, 54, 24, 7, 55, 25],\n      [11, 36, 12, 7, 37, 13],\n\n      // 16\n      [5, 122, 98, 1, 123, 99],\n      [7, 73, 45, 3, 74, 46],\n      [15, 43, 19, 2, 44, 20],\n      [3, 45, 15, 13, 46, 16],\n\n      // 17\n      [1, 135, 107, 5, 136, 108],\n      [10, 74, 46, 1, 75, 47],\n      [1, 50, 22, 15, 51, 23],\n      [2, 42, 14, 17, 43, 15],\n\n      // 18\n      [5, 150, 120, 1, 151, 121],\n      [9, 69, 43, 4, 70, 44],\n      [17, 50, 22, 1, 51, 23],\n      [2, 42, 14, 19, 43, 15],\n\n      // 19\n      [3, 141, 113, 4, 142, 114],\n      [3, 70, 44, 11, 71, 45],\n      [17, 47, 21, 4, 48, 22],\n      [9, 39, 13, 16, 40, 14],\n\n      // 20\n      [3, 135, 107, 5, 136, 108],\n      [3, 67, 41, 13, 68, 42],\n      [15, 54, 24, 5, 55, 25],\n      [15, 43, 15, 10, 44, 16],\n\n      // 21\n      [4, 144, 116, 4, 145, 117],\n      [17, 68, 42],\n      [17, 50, 22, 6, 51, 23],\n      [19, 46, 16, 6, 47, 17],\n\n      // 22\n      [2, 139, 111, 7, 140, 112],\n      [17, 74, 46],\n      [7, 54, 24, 16, 55, 25],\n      [34, 37, 13],\n\n      // 23\n      [4, 151, 121, 5, 152, 122],\n      [4, 75, 47, 14, 76, 48],\n      [11, 54, 24, 14, 55, 25],\n      [16, 45, 15, 14, 46, 16],\n\n      // 24\n      [6, 147, 117, 4, 148, 118],\n      [6, 73, 45, 14, 74, 46],\n      [11, 54, 24, 16, 55, 25],\n      [30, 46, 16, 2, 47, 17],\n\n      // 25\n      [8, 132, 106, 4, 133, 107],\n      [8, 75, 47, 13, 76, 48],\n      [7, 54, 24, 22, 55, 25],\n      [22, 45, 15, 13, 46, 16],\n\n      // 26\n      [10, 142, 114, 2, 143, 115],\n      [19, 74, 46, 4, 75, 47],\n      [28, 50, 22, 6, 51, 23],\n      [33, 46, 16, 4, 47, 17],\n\n      // 27\n      [8, 152, 122, 4, 153, 123],\n      [22, 73, 45, 3, 74, 46],\n      [8, 53, 23, 26, 54, 24],\n      [12, 45, 15, 28, 46, 16],\n\n      // 28\n      [3, 147, 117, 10, 148, 118],\n      [3, 73, 45, 23, 74, 46],\n      [4, 54, 24, 31, 55, 25],\n      [11, 45, 15, 31, 46, 16],\n\n      // 29\n      [7, 146, 116, 7, 147, 117],\n      [21, 73, 45, 7, 74, 46],\n      [1, 53, 23, 37, 54, 24],\n      [19, 45, 15, 26, 46, 16],\n\n      // 30\n      [5, 145, 115, 10, 146, 116],\n      [19, 75, 47, 10, 76, 48],\n      [15, 54, 24, 25, 55, 25],\n      [23, 45, 15, 25, 46, 16],\n\n      // 31\n      [13, 145, 115, 3, 146, 116],\n      [2, 74, 46, 29, 75, 47],\n      [42, 54, 24, 1, 55, 25],\n      [23, 45, 15, 28, 46, 16],\n\n      // 32\n      [17, 145, 115],\n      [10, 74, 46, 23, 75, 47],\n      [10, 54, 24, 35, 55, 25],\n      [19, 45, 15, 35, 46, 16],\n\n      // 33\n      [17, 145, 115, 1, 146, 116],\n      [14, 74, 46, 21, 75, 47],\n      [29, 54, 24, 19, 55, 25],\n      [11, 45, 15, 46, 46, 16],\n\n      // 34\n      [13, 145, 115, 6, 146, 116],\n      [14, 74, 46, 23, 75, 47],\n      [44, 54, 24, 7, 55, 25],\n      [59, 46, 16, 1, 47, 17],\n\n      // 35\n      [12, 151, 121, 7, 152, 122],\n      [12, 75, 47, 26, 76, 48],\n      [39, 54, 24, 14, 55, 25],\n      [22, 45, 15, 41, 46, 16],\n\n      // 36\n      [6, 151, 121, 14, 152, 122],\n      [6, 75, 47, 34, 76, 48],\n      [46, 54, 24, 10, 55, 25],\n      [2, 45, 15, 64, 46, 16],\n\n      // 37\n      [17, 152, 122, 4, 153, 123],\n      [29, 74, 46, 14, 75, 47],\n      [49, 54, 24, 10, 55, 25],\n      [24, 45, 15, 46, 46, 16],\n\n      // 38\n      [4, 152, 122, 18, 153, 123],\n      [13, 74, 46, 32, 75, 47],\n      [48, 54, 24, 14, 55, 25],\n      [42, 45, 15, 32, 46, 16],\n\n      // 39\n      [20, 147, 117, 4, 148, 118],\n      [40, 75, 47, 7, 76, 48],\n      [43, 54, 24, 22, 55, 25],\n      [10, 45, 15, 67, 46, 16],\n\n      // 40\n      [19, 148, 118, 6, 149, 119],\n      [18, 75, 47, 31, 76, 48],\n      [34, 54, 24, 34, 55, 25],\n      [20, 45, 15, 61, 46, 16]\n    ];\n\n    var qrRSBlock = function(totalCount, dataCount) {\n      var _this = {};\n      _this.totalCount = totalCount;\n      _this.dataCount = dataCount;\n      return _this;\n    };\n\n    var _this = {};\n\n    var getRsBlockTable = function(typeNumber, errorCorrectionLevel) {\n\n      switch(errorCorrectionLevel) {\n      case QRErrorCorrectionLevel.L :\n        return RS_BLOCK_TABLE[(typeNumber - 1) * 4 + 0];\n      case QRErrorCorrectionLevel.M :\n        return RS_BLOCK_TABLE[(typeNumber - 1) * 4 + 1];\n      case QRErrorCorrectionLevel.Q :\n        return RS_BLOCK_TABLE[(typeNumber - 1) * 4 + 2];\n      case QRErrorCorrectionLevel.H :\n        return RS_BLOCK_TABLE[(typeNumber - 1) * 4 + 3];\n      default :\n        return undefined;\n      }\n    };\n\n    _this.getRSBlocks = function(typeNumber, errorCorrectionLevel) {\n\n      var rsBlock = getRsBlockTable(typeNumber, errorCorrectionLevel);\n\n      if (typeof rsBlock == 'undefined') {\n        throw 'bad rs block @ typeNumber:' + typeNumber +\n            '/errorCorrectionLevel:' + errorCorrectionLevel;\n      }\n\n      var length = rsBlock.length / 3;\n\n      var list = [];\n\n      for (var i = 0; i < length; i += 1) {\n\n        var count = rsBlock[i * 3 + 0];\n        var totalCount = rsBlock[i * 3 + 1];\n        var dataCount = rsBlock[i * 3 + 2];\n\n        for (var j = 0; j < count; j += 1) {\n          list.push(qrRSBlock(totalCount, dataCount) );\n        }\n      }\n\n      return list;\n    };\n\n    return _this;\n  }();\n\n  //---------------------------------------------------------------------\n  // qrBitBuffer\n  //---------------------------------------------------------------------\n\n  var qrBitBuffer = function() {\n\n    var _buffer = [];\n    var _length = 0;\n\n    var _this = {};\n\n    _this.getBuffer = function() {\n      return _buffer;\n    };\n\n    _this.getAt = function(index) {\n      var bufIndex = Math.floor(index / 8);\n      return ( (_buffer[bufIndex] >>> (7 - index % 8) ) & 1) == 1;\n    };\n\n    _this.put = function(num, length) {\n      for (var i = 0; i < length; i += 1) {\n        _this.putBit( ( (num >>> (length - i - 1) ) & 1) == 1);\n      }\n    };\n\n    _this.getLengthInBits = function() {\n      return _length;\n    };\n\n    _this.putBit = function(bit) {\n\n      var bufIndex = Math.floor(_length / 8);\n      if (_buffer.length <= bufIndex) {\n        _buffer.push(0);\n      }\n\n      if (bit) {\n        _buffer[bufIndex] |= (0x80 >>> (_length % 8) );\n      }\n\n      _length += 1;\n    };\n\n    return _this;\n  };\n\n  //---------------------------------------------------------------------\n  // qrNumber\n  //---------------------------------------------------------------------\n\n  var qrNumber = function(data) {\n\n    var _mode = QRMode.MODE_NUMBER;\n    var _data = data;\n\n    var _this = {};\n\n    _this.getMode = function() {\n      return _mode;\n    };\n\n    _this.getLength = function(buffer) {\n      return _data.length;\n    };\n\n    _this.write = function(buffer) {\n\n      var data = _data;\n\n      var i = 0;\n\n      while (i + 2 < data.length) {\n        buffer.put(strToNum(data.substring(i, i + 3) ), 10);\n        i += 3;\n      }\n\n      if (i < data.length) {\n        if (data.length - i == 1) {\n          buffer.put(strToNum(data.substring(i, i + 1) ), 4);\n        } else if (data.length - i == 2) {\n          buffer.put(strToNum(data.substring(i, i + 2) ), 7);\n        }\n      }\n    };\n\n    var strToNum = function(s) {\n      var num = 0;\n      for (var i = 0; i < s.length; i += 1) {\n        num = num * 10 + chatToNum(s.charAt(i) );\n      }\n      return num;\n    };\n\n    var chatToNum = function(c) {\n      if ('0' <= c && c <= '9') {\n        return c.charCodeAt(0) - '0'.charCodeAt(0);\n      }\n      throw 'illegal char :' + c;\n    };\n\n    return _this;\n  };\n\n  //---------------------------------------------------------------------\n  // qrAlphaNum\n  //---------------------------------------------------------------------\n\n  var qrAlphaNum = function(data) {\n\n    var _mode = QRMode.MODE_ALPHA_NUM;\n    var _data = data;\n\n    var _this = {};\n\n    _this.getMode = function() {\n      return _mode;\n    };\n\n    _this.getLength = function(buffer) {\n      return _data.length;\n    };\n\n    _this.write = function(buffer) {\n\n      var s = _data;\n\n      var i = 0;\n\n      while (i + 1 < s.length) {\n        buffer.put(\n          getCode(s.charAt(i) ) * 45 +\n          getCode(s.charAt(i + 1) ), 11);\n        i += 2;\n      }\n\n      if (i < s.length) {\n        buffer.put(getCode(s.charAt(i) ), 6);\n      }\n    };\n\n    var getCode = function(c) {\n\n      if ('0' <= c && c <= '9') {\n        return c.charCodeAt(0) - '0'.charCodeAt(0);\n      } else if ('A' <= c && c <= 'Z') {\n        return c.charCodeAt(0) - 'A'.charCodeAt(0) + 10;\n      } else {\n        switch (c) {\n        case ' ' : return 36;\n        case '$' : return 37;\n        case '%' : return 38;\n        case '*' : return 39;\n        case '+' : return 40;\n        case '-' : return 41;\n        case '.' : return 42;\n        case '/' : return 43;\n        case ':' : return 44;\n        default :\n          throw 'illegal char :' + c;\n        }\n      }\n    };\n\n    return _this;\n  };\n\n  //---------------------------------------------------------------------\n  // qr8BitByte\n  //---------------------------------------------------------------------\n\n  var qr8BitByte = function(data) {\n\n    var _mode = QRMode.MODE_8BIT_BYTE;\n    var _data = data;\n    var _bytes = qrcode.stringToBytes(data);\n\n    var _this = {};\n\n    _this.getMode = function() {\n      return _mode;\n    };\n\n    _this.getLength = function(buffer) {\n      return _bytes.length;\n    };\n\n    _this.write = function(buffer) {\n      for (var i = 0; i < _bytes.length; i += 1) {\n        buffer.put(_bytes[i], 8);\n      }\n    };\n\n    return _this;\n  };\n\n  //---------------------------------------------------------------------\n  // qrKanji\n  //---------------------------------------------------------------------\n\n  var qrKanji = function(data) {\n\n    var _mode = QRMode.MODE_KANJI;\n    var _data = data;\n\n    var stringToBytes = qrcode.stringToBytesFuncs['SJIS'];\n    if (!stringToBytes) {\n      throw 'sjis not supported.';\n    }\n    !function(c, code) {\n      // self test for sjis support.\n      var test = stringToBytes(c);\n      if (test.length != 2 || ( (test[0] << 8) | test[1]) != code) {\n        throw 'sjis not supported.';\n      }\n    }('\\u53cb', 0x9746);\n\n    var _bytes = stringToBytes(data);\n\n    var _this = {};\n\n    _this.getMode = function() {\n      return _mode;\n    };\n\n    _this.getLength = function(buffer) {\n      return ~~(_bytes.length / 2);\n    };\n\n    _this.write = function(buffer) {\n\n      var data = _bytes;\n\n      var i = 0;\n\n      while (i + 1 < data.length) {\n\n        var c = ( (0xff & data[i]) << 8) | (0xff & data[i + 1]);\n\n        if (0x8140 <= c && c <= 0x9FFC) {\n          c -= 0x8140;\n        } else if (0xE040 <= c && c <= 0xEBBF) {\n          c -= 0xC140;\n        } else {\n          throw 'illegal char at ' + (i + 1) + '/' + c;\n        }\n\n        c = ( (c >>> 8) & 0xff) * 0xC0 + (c & 0xff);\n\n        buffer.put(c, 13);\n\n        i += 2;\n      }\n\n      if (i < data.length) {\n        throw 'illegal char at ' + (i + 1);\n      }\n    };\n\n    return _this;\n  };\n\n  //=====================================================================\n  // GIF Support etc.\n  //\n\n  //---------------------------------------------------------------------\n  // byteArrayOutputStream\n  //---------------------------------------------------------------------\n\n  var byteArrayOutputStream = function() {\n\n    var _bytes = [];\n\n    var _this = {};\n\n    _this.writeByte = function(b) {\n      _bytes.push(b & 0xff);\n    };\n\n    _this.writeShort = function(i) {\n      _this.writeByte(i);\n      _this.writeByte(i >>> 8);\n    };\n\n    _this.writeBytes = function(b, off, len) {\n      off = off || 0;\n      len = len || b.length;\n      for (var i = 0; i < len; i += 1) {\n        _this.writeByte(b[i + off]);\n      }\n    };\n\n    _this.writeString = function(s) {\n      for (var i = 0; i < s.length; i += 1) {\n        _this.writeByte(s.charCodeAt(i) );\n      }\n    };\n\n    _this.toByteArray = function() {\n      return _bytes;\n    };\n\n    _this.toString = function() {\n      var s = '';\n      s += '[';\n      for (var i = 0; i < _bytes.length; i += 1) {\n        if (i > 0) {\n          s += ',';\n        }\n        s += _bytes[i];\n      }\n      s += ']';\n      return s;\n    };\n\n    return _this;\n  };\n\n  //---------------------------------------------------------------------\n  // base64EncodeOutputStream\n  //---------------------------------------------------------------------\n\n  var base64EncodeOutputStream = function() {\n\n    var _buffer = 0;\n    var _buflen = 0;\n    var _length = 0;\n    var _base64 = '';\n\n    var _this = {};\n\n    var writeEncoded = function(b) {\n      _base64 += String.fromCharCode(encode(b & 0x3f) );\n    };\n\n    var encode = function(n) {\n      if (n < 0) {\n        // error.\n      } else if (n < 26) {\n        return 0x41 + n;\n      } else if (n < 52) {\n        return 0x61 + (n - 26);\n      } else if (n < 62) {\n        return 0x30 + (n - 52);\n      } else if (n == 62) {\n        return 0x2b;\n      } else if (n == 63) {\n        return 0x2f;\n      }\n      throw 'n:' + n;\n    };\n\n    _this.writeByte = function(n) {\n\n      _buffer = (_buffer << 8) | (n & 0xff);\n      _buflen += 8;\n      _length += 1;\n\n      while (_buflen >= 6) {\n        writeEncoded(_buffer >>> (_buflen - 6) );\n        _buflen -= 6;\n      }\n    };\n\n    _this.flush = function() {\n\n      if (_buflen > 0) {\n        writeEncoded(_buffer << (6 - _buflen) );\n        _buffer = 0;\n        _buflen = 0;\n      }\n\n      if (_length % 3 != 0) {\n        // padding\n        var padlen = 3 - _length % 3;\n        for (var i = 0; i < padlen; i += 1) {\n          _base64 += '=';\n        }\n      }\n    };\n\n    _this.toString = function() {\n      return _base64;\n    };\n\n    return _this;\n  };\n\n  //---------------------------------------------------------------------\n  // base64DecodeInputStream\n  //---------------------------------------------------------------------\n\n  var base64DecodeInputStream = function(str) {\n\n    var _str = str;\n    var _pos = 0;\n    var _buffer = 0;\n    var _buflen = 0;\n\n    var _this = {};\n\n    _this.read = function() {\n\n      while (_buflen < 8) {\n\n        if (_pos >= _str.length) {\n          if (_buflen == 0) {\n            return -1;\n          }\n          throw 'unexpected end of file./' + _buflen;\n        }\n\n        var c = _str.charAt(_pos);\n        _pos += 1;\n\n        if (c == '=') {\n          _buflen = 0;\n          return -1;\n        } else if (c.match(/^\\s$/) ) {\n          // ignore if whitespace.\n          continue;\n        }\n\n        _buffer = (_buffer << 6) | decode(c.charCodeAt(0) );\n        _buflen += 6;\n      }\n\n      var n = (_buffer >>> (_buflen - 8) ) & 0xff;\n      _buflen -= 8;\n      return n;\n    };\n\n    var decode = function(c) {\n      if (0x41 <= c && c <= 0x5a) {\n        return c - 0x41;\n      } else if (0x61 <= c && c <= 0x7a) {\n        return c - 0x61 + 26;\n      } else if (0x30 <= c && c <= 0x39) {\n        return c - 0x30 + 52;\n      } else if (c == 0x2b) {\n        return 62;\n      } else if (c == 0x2f) {\n        return 63;\n      } else {\n        throw 'c:' + c;\n      }\n    };\n\n    return _this;\n  };\n\n  //---------------------------------------------------------------------\n  // gifImage (B/W)\n  //---------------------------------------------------------------------\n\n  var gifImage = function(width, height) {\n\n    var _width = width;\n    var _height = height;\n    var _data = new Array(width * height);\n\n    var _this = {};\n\n    _this.setPixel = function(x, y, pixel) {\n      _data[y * _width + x] = pixel;\n    };\n\n    _this.write = function(out) {\n\n      //---------------------------------\n      // GIF Signature\n\n      out.writeString('GIF87a');\n\n      //---------------------------------\n      // Screen Descriptor\n\n      out.writeShort(_width);\n      out.writeShort(_height);\n\n      out.writeByte(0x80); // 2bit\n      out.writeByte(0);\n      out.writeByte(0);\n\n      //---------------------------------\n      // Global Color Map\n\n      // black\n      out.writeByte(0x00);\n      out.writeByte(0x00);\n      out.writeByte(0x00);\n\n      // white\n      out.writeByte(0xff);\n      out.writeByte(0xff);\n      out.writeByte(0xff);\n\n      //---------------------------------\n      // Image Descriptor\n\n      out.writeString(',');\n      out.writeShort(0);\n      out.writeShort(0);\n      out.writeShort(_width);\n      out.writeShort(_height);\n      out.writeByte(0);\n\n      //---------------------------------\n      // Local Color Map\n\n      //---------------------------------\n      // Raster Data\n\n      var lzwMinCodeSize = 2;\n      var raster = getLZWRaster(lzwMinCodeSize);\n\n      out.writeByte(lzwMinCodeSize);\n\n      var offset = 0;\n\n      while (raster.length - offset > 255) {\n        out.writeByte(255);\n        out.writeBytes(raster, offset, 255);\n        offset += 255;\n      }\n\n      out.writeByte(raster.length - offset);\n      out.writeBytes(raster, offset, raster.length - offset);\n      out.writeByte(0x00);\n\n      //---------------------------------\n      // GIF Terminator\n      out.writeString(';');\n    };\n\n    var bitOutputStream = function(out) {\n\n      var _out = out;\n      var _bitLength = 0;\n      var _bitBuffer = 0;\n\n      var _this = {};\n\n      _this.write = function(data, length) {\n\n        if ( (data >>> length) != 0) {\n          throw 'length over';\n        }\n\n        while (_bitLength + length >= 8) {\n          _out.writeByte(0xff & ( (data << _bitLength) | _bitBuffer) );\n          length -= (8 - _bitLength);\n          data >>>= (8 - _bitLength);\n          _bitBuffer = 0;\n          _bitLength = 0;\n        }\n\n        _bitBuffer = (data << _bitLength) | _bitBuffer;\n        _bitLength = _bitLength + length;\n      };\n\n      _this.flush = function() {\n        if (_bitLength > 0) {\n          _out.writeByte(_bitBuffer);\n        }\n      };\n\n      return _this;\n    };\n\n    var getLZWRaster = function(lzwMinCodeSize) {\n\n      var clearCode = 1 << lzwMinCodeSize;\n      var endCode = (1 << lzwMinCodeSize) + 1;\n      var bitLength = lzwMinCodeSize + 1;\n\n      // Setup LZWTable\n      var table = lzwTable();\n\n      for (var i = 0; i < clearCode; i += 1) {\n        table.add(String.fromCharCode(i) );\n      }\n      table.add(String.fromCharCode(clearCode) );\n      table.add(String.fromCharCode(endCode) );\n\n      var byteOut = byteArrayOutputStream();\n      var bitOut = bitOutputStream(byteOut);\n\n      // clear code\n      bitOut.write(clearCode, bitLength);\n\n      var dataIndex = 0;\n\n      var s = String.fromCharCode(_data[dataIndex]);\n      dataIndex += 1;\n\n      while (dataIndex < _data.length) {\n\n        var c = String.fromCharCode(_data[dataIndex]);\n        dataIndex += 1;\n\n        if (table.contains(s + c) ) {\n\n          s = s + c;\n\n        } else {\n\n          bitOut.write(table.indexOf(s), bitLength);\n\n          if (table.size() < 0xfff) {\n\n            if (table.size() == (1 << bitLength) ) {\n              bitLength += 1;\n            }\n\n            table.add(s + c);\n          }\n\n          s = c;\n        }\n      }\n\n      bitOut.write(table.indexOf(s), bitLength);\n\n      // end code\n      bitOut.write(endCode, bitLength);\n\n      bitOut.flush();\n\n      return byteOut.toByteArray();\n    };\n\n    var lzwTable = function() {\n\n      var _map = {};\n      var _size = 0;\n\n      var _this = {};\n\n      _this.add = function(key) {\n        if (_this.contains(key) ) {\n          throw 'dup key:' + key;\n        }\n        _map[key] = _size;\n        _size += 1;\n      };\n\n      _this.size = function() {\n        return _size;\n      };\n\n      _this.indexOf = function(key) {\n        return _map[key];\n      };\n\n      _this.contains = function(key) {\n        return typeof _map[key] != 'undefined';\n      };\n\n      return _this;\n    };\n\n    return _this;\n  };\n\n  var createDataURL = function(width, height, getPixel) {\n    var gif = gifImage(width, height);\n    for (var y = 0; y < height; y += 1) {\n      for (var x = 0; x < width; x += 1) {\n        gif.setPixel(x, y, getPixel(x, y) );\n      }\n    }\n\n    var b = byteArrayOutputStream();\n    gif.write(b);\n\n    var base64 = base64EncodeOutputStream();\n    var bytes = b.toByteArray();\n    for (var i = 0; i < bytes.length; i += 1) {\n      base64.writeByte(bytes[i]);\n    }\n    base64.flush();\n\n    return 'data:image/gif;base64,' + base64;\n  };\n\n  //---------------------------------------------------------------------\n  // returns qrcode function.\n\n  return qrcode;\n}();\n\n// multibyte support\n!function() {\n\n  qrcode.stringToBytesFuncs['UTF-8'] = function(s) {\n    // http://stackoverflow.com/questions/18729405/how-to-convert-utf8-string-to-byte-array\n    function toUTF8Array(str) {\n      var utf8 = [];\n      for (var i=0; i < str.length; i++) {\n        var charcode = str.charCodeAt(i);\n        if (charcode < 0x80) utf8.push(charcode);\n        else if (charcode < 0x800) {\n          utf8.push(0xc0 | (charcode >> 6),\n              0x80 | (charcode & 0x3f));\n        }\n        else if (charcode < 0xd800 || charcode >= 0xe000) {\n          utf8.push(0xe0 | (charcode >> 12),\n              0x80 | ((charcode>>6) & 0x3f),\n              0x80 | (charcode & 0x3f));\n        }\n        // surrogate pair\n        else {\n          i++;\n          // UTF-16 encodes 0x10000-0x10FFFF by\n          // subtracting 0x10000 and splitting the\n          // 20 bits of 0x0-0xFFFFF into two halves\n          charcode = 0x10000 + (((charcode & 0x3ff)<<10)\n            | (str.charCodeAt(i) & 0x3ff));\n          utf8.push(0xf0 | (charcode >>18),\n              0x80 | ((charcode>>12) & 0x3f),\n              0x80 | ((charcode>>6) & 0x3f),\n              0x80 | (charcode & 0x3f));\n        }\n      }\n      return utf8;\n    }\n    return toUTF8Array(s);\n  };\n\n}();\n\n(function (factory) {\n  if (typeof define === 'function' && define.amd) {\n      define([], factory);\n  } else if (typeof exports === 'object') {\n      module.exports = factory();\n  }\n}(function () {\n    return qrcode;\n}));\n","import { UnknownObject } from \"../types\";\n\nconst isObject = (obj: Record<string, unknown>): boolean => !!obj && typeof obj === \"object\" && !Array.isArray(obj);\n\nexport default function mergeDeep(target: UnknownObject, ...sources: UnknownObject[]): UnknownObject {\n  if (!sources.length) return target;\n  const source = sources.shift();\n  if (source === undefined || !isObject(target) || !isObject(source)) return target;\n  target = { ...target };\n  Object.keys(source).forEach((key: string): void => {\n    const targetValue = target[key];\n    const sourceValue = source[key];\n\n    if (Array.isArray(targetValue) && Array.isArray(sourceValue)) {\n      target[key] = sourceValue;\n    } else if (isObject(targetValue) && isObject(sourceValue)) {\n      target[key] = mergeDeep(Object.assign({}, targetValue), sourceValue);\n    } else {\n      target[key] = sourceValue;\n    }\n  });\n\n  return mergeDeep(target, ...sources);\n}\n","export default function downloadURI(uri: string, name: string): void {\n  const link = document.createElement(\"a\");\n  link.download = name;\n  link.href = uri;\n  document.body.appendChild(link);\n  link.click();\n  document.body.removeChild(link);\n}\n","export default async function toDataURL(url: string): Promise<string> {\n  return new Promise((resolve) => {\n    const xhr = new XMLHttpRequest();\n    xhr.onload = function () {\n      const reader = new FileReader();\n      reader.onloadend = function () {\n        resolve(reader.result as string);\n      };\n      reader.readAsDataURL(xhr.response);\n    };\n    xhr.open(\"GET\", url);\n    xhr.responseType = \"blob\";\n    xhr.send();\n  });\n}\n","interface ErrorCorrectionPercents {\n  [key: string]: number;\n}\n\nexport default {\n  L: 0.07,\n  M: 0.15,\n  Q: 0.25,\n  H: 0.3\n} as ErrorCorrectionPercents;\n","import dotTypes from \"../../constants/dotTypes\";\nimport { DotType, GetNeighbor, DrawArgs, BasicFigureDrawArgs, RotateFigureArgs } from \"../../types\";\n\nexport default class QRDot {\n  _element?: SVGElement;\n  _svg: SVGElement;\n  _type: DotType;\n\n  constructor({ svg, type }: { svg: SVGElement; type: DotType }) {\n    this._svg = svg;\n    this._type = type;\n  }\n\n  draw(x: number, y: number, size: number, getNeighbor: GetNeighbor): void {\n    const type = this._type;\n    let drawFunction;\n\n    switch (type) {\n      case dotTypes.dots:\n        drawFunction = this._drawDot;\n        break;\n      case dotTypes.classy:\n        drawFunction = this._drawClassy;\n        break;\n      case dotTypes.classyRounded:\n        drawFunction = this._drawClassyRounded;\n        break;\n      case dotTypes.rounded:\n        drawFunction = this._drawRounded;\n        break;\n      case dotTypes.extraRounded:\n        drawFunction = this._drawExtraRounded;\n        break;\n      case dotTypes.square:\n      default:\n        drawFunction = this._drawSquare;\n    }\n\n    drawFunction.call(this, { x, y, size, getNeighbor });\n  }\n\n  _rotateFigure({ x, y, size, rotation = 0, draw }: RotateFigureArgs): void {\n    const cx = x + size / 2;\n    const cy = y + size / 2;\n\n    draw();\n    this._element?.setAttribute(\"transform\", `rotate(${(180 * rotation) / Math.PI},${cx},${cy})`);\n  }\n\n  _basicDot(args: BasicFigureDrawArgs): void {\n    const { size, x, y } = args;\n\n    this._rotateFigure({\n      ...args,\n      draw: () => {\n        this._element = document.createElementNS(\"http://www.w3.org/2000/svg\", \"circle\");\n        this._element.setAttribute(\"cx\", String(x + size / 2));\n        this._element.setAttribute(\"cy\", String(y + size / 2));\n        this._element.setAttribute(\"r\", String(size / 2));\n      }\n    });\n  }\n\n  _basicSquare(args: BasicFigureDrawArgs): void {\n    const { size, x, y } = args;\n\n    this._rotateFigure({\n      ...args,\n      draw: () => {\n        this._element = document.createElementNS(\"http://www.w3.org/2000/svg\", \"rect\");\n        this._element.setAttribute(\"x\", String(x));\n        this._element.setAttribute(\"y\", String(y));\n        this._element.setAttribute(\"width\", String(size));\n        this._element.setAttribute(\"height\", String(size));\n      }\n    });\n  }\n\n  //if rotation === 0 - right side is rounded\n  _basicSideRounded(args: BasicFigureDrawArgs): void {\n    const { size, x, y } = args;\n\n    this._rotateFigure({\n      ...args,\n      draw: () => {\n        this._element = document.createElementNS(\"http://www.w3.org/2000/svg\", \"path\");\n        this._element.setAttribute(\n          \"d\",\n          `M ${x} ${y}` + //go to top left position\n            `v ${size}` + //draw line to left bottom corner\n            `h ${size / 2}` + //draw line to left bottom corner + half of size right\n            `a ${size / 2} ${size / 2}, 0, 0, 0, 0 ${-size}` // draw rounded corner\n        );\n      }\n    });\n  }\n\n  //if rotation === 0 - top right corner is rounded\n  _basicCornerRounded(args: BasicFigureDrawArgs): void {\n    const { size, x, y } = args;\n\n    this._rotateFigure({\n      ...args,\n      draw: () => {\n        this._element = document.createElementNS(\"http://www.w3.org/2000/svg\", \"path\");\n        this._element.setAttribute(\n          \"d\",\n          `M ${x} ${y}` + //go to top left position\n            `v ${size}` + //draw line to left bottom corner\n            `h ${size}` + //draw line to right bottom corner\n            `v ${-size / 2}` + //draw line to right bottom corner + half of size top\n            `a ${size / 2} ${size / 2}, 0, 0, 0, ${-size / 2} ${-size / 2}` // draw rounded corner\n        );\n      }\n    });\n  }\n\n  //if rotation === 0 - top right corner is rounded\n  _basicCornerExtraRounded(args: BasicFigureDrawArgs): void {\n    const { size, x, y } = args;\n\n    this._rotateFigure({\n      ...args,\n      draw: () => {\n        this._element = document.createElementNS(\"http://www.w3.org/2000/svg\", \"path\");\n        this._element.setAttribute(\n          \"d\",\n          `M ${x} ${y}` + //go to top left position\n            `v ${size}` + //draw line to left bottom corner\n            `h ${size}` + //draw line to right bottom corner\n            `a ${size} ${size}, 0, 0, 0, ${-size} ${-size}` // draw rounded top right corner\n        );\n      }\n    });\n  }\n\n  //if rotation === 0 - left bottom and right top corners are rounded\n  _basicCornersRounded(args: BasicFigureDrawArgs): void {\n    const { size, x, y } = args;\n\n    this._rotateFigure({\n      ...args,\n      draw: () => {\n        this._element = document.createElementNS(\"http://www.w3.org/2000/svg\", \"path\");\n        this._element.setAttribute(\n          \"d\",\n          `M ${x} ${y}` + //go to left top position\n            `v ${size / 2}` + //draw line to left top corner + half of size bottom\n            `a ${size / 2} ${size / 2}, 0, 0, 0, ${size / 2} ${size / 2}` + // draw rounded left bottom corner\n            `h ${size / 2}` + //draw line to right bottom corner\n            `v ${-size / 2}` + //draw line to right bottom corner + half of size top\n            `a ${size / 2} ${size / 2}, 0, 0, 0, ${-size / 2} ${-size / 2}` // draw rounded right top corner\n        );\n      }\n    });\n  }\n\n  _drawDot({ x, y, size }: DrawArgs): void {\n    this._basicDot({ x, y, size, rotation: 0 });\n  }\n\n  _drawSquare({ x, y, size }: DrawArgs): void {\n    this._basicSquare({ x, y, size, rotation: 0 });\n  }\n\n  _drawRounded({ x, y, size, getNeighbor }: DrawArgs): void {\n    const leftNeighbor = getNeighbor ? +getNeighbor(-1, 0) : 0;\n    const rightNeighbor = getNeighbor ? +getNeighbor(1, 0) : 0;\n    const topNeighbor = getNeighbor ? +getNeighbor(0, -1) : 0;\n    const bottomNeighbor = getNeighbor ? +getNeighbor(0, 1) : 0;\n\n    const neighborsCount = leftNeighbor + rightNeighbor + topNeighbor + bottomNeighbor;\n\n    if (neighborsCount === 0) {\n      this._basicDot({ x, y, size, rotation: 0 });\n      return;\n    }\n\n    if (neighborsCount > 2 || (leftNeighbor && rightNeighbor) || (topNeighbor && bottomNeighbor)) {\n      this._basicSquare({ x, y, size, rotation: 0 });\n      return;\n    }\n\n    if (neighborsCount === 2) {\n      let rotation = 0;\n\n      if (leftNeighbor && topNeighbor) {\n        rotation = Math.PI / 2;\n      } else if (topNeighbor && rightNeighbor) {\n        rotation = Math.PI;\n      } else if (rightNeighbor && bottomNeighbor) {\n        rotation = -Math.PI / 2;\n      }\n\n      this._basicCornerRounded({ x, y, size, rotation });\n      return;\n    }\n\n    if (neighborsCount === 1) {\n      let rotation = 0;\n\n      if (topNeighbor) {\n        rotation = Math.PI / 2;\n      } else if (rightNeighbor) {\n        rotation = Math.PI;\n      } else if (bottomNeighbor) {\n        rotation = -Math.PI / 2;\n      }\n\n      this._basicSideRounded({ x, y, size, rotation });\n      return;\n    }\n  }\n\n  _drawExtraRounded({ x, y, size, getNeighbor }: DrawArgs): void {\n    const leftNeighbor = getNeighbor ? +getNeighbor(-1, 0) : 0;\n    const rightNeighbor = getNeighbor ? +getNeighbor(1, 0) : 0;\n    const topNeighbor = getNeighbor ? +getNeighbor(0, -1) : 0;\n    const bottomNeighbor = getNeighbor ? +getNeighbor(0, 1) : 0;\n\n    const neighborsCount = leftNeighbor + rightNeighbor + topNeighbor + bottomNeighbor;\n\n    if (neighborsCount === 0) {\n      this._basicDot({ x, y, size, rotation: 0 });\n      return;\n    }\n\n    if (neighborsCount > 2 || (leftNeighbor && rightNeighbor) || (topNeighbor && bottomNeighbor)) {\n      this._basicSquare({ x, y, size, rotation: 0 });\n      return;\n    }\n\n    if (neighborsCount === 2) {\n      let rotation = 0;\n\n      if (leftNeighbor && topNeighbor) {\n        rotation = Math.PI / 2;\n      } else if (topNeighbor && rightNeighbor) {\n        rotation = Math.PI;\n      } else if (rightNeighbor && bottomNeighbor) {\n        rotation = -Math.PI / 2;\n      }\n\n      this._basicCornerExtraRounded({ x, y, size, rotation });\n      return;\n    }\n\n    if (neighborsCount === 1) {\n      let rotation = 0;\n\n      if (topNeighbor) {\n        rotation = Math.PI / 2;\n      } else if (rightNeighbor) {\n        rotation = Math.PI;\n      } else if (bottomNeighbor) {\n        rotation = -Math.PI / 2;\n      }\n\n      this._basicSideRounded({ x, y, size, rotation });\n      return;\n    }\n  }\n\n  _drawClassy({ x, y, size, getNeighbor }: DrawArgs): void {\n    const leftNeighbor = getNeighbor ? +getNeighbor(-1, 0) : 0;\n    const rightNeighbor = getNeighbor ? +getNeighbor(1, 0) : 0;\n    const topNeighbor = getNeighbor ? +getNeighbor(0, -1) : 0;\n    const bottomNeighbor = getNeighbor ? +getNeighbor(0, 1) : 0;\n\n    const neighborsCount = leftNeighbor + rightNeighbor + topNeighbor + bottomNeighbor;\n\n    if (neighborsCount === 0) {\n      this._basicCornersRounded({ x, y, size, rotation: Math.PI / 2 });\n      return;\n    }\n\n    if (!leftNeighbor && !topNeighbor) {\n      this._basicCornerRounded({ x, y, size, rotation: -Math.PI / 2 });\n      return;\n    }\n\n    if (!rightNeighbor && !bottomNeighbor) {\n      this._basicCornerRounded({ x, y, size, rotation: Math.PI / 2 });\n      return;\n    }\n\n    this._basicSquare({ x, y, size, rotation: 0 });\n  }\n\n  _drawClassyRounded({ x, y, size, getNeighbor }: DrawArgs): void {\n    const leftNeighbor = getNeighbor ? +getNeighbor(-1, 0) : 0;\n    const rightNeighbor = getNeighbor ? +getNeighbor(1, 0) : 0;\n    const topNeighbor = getNeighbor ? +getNeighbor(0, -1) : 0;\n    const bottomNeighbor = getNeighbor ? +getNeighbor(0, 1) : 0;\n\n    const neighborsCount = leftNeighbor + rightNeighbor + topNeighbor + bottomNeighbor;\n\n    if (neighborsCount === 0) {\n      this._basicCornersRounded({ x, y, size, rotation: Math.PI / 2 });\n      return;\n    }\n\n    if (!leftNeighbor && !topNeighbor) {\n      this._basicCornerExtraRounded({ x, y, size, rotation: -Math.PI / 2 });\n      return;\n    }\n\n    if (!rightNeighbor && !bottomNeighbor) {\n      this._basicCornerExtraRounded({ x, y, size, rotation: Math.PI / 2 });\n      return;\n    }\n\n    this._basicSquare({ x, y, size, rotation: 0 });\n  }\n}\n","import { DotTypes } from \"../types\";\n\nexport default {\n  dots: \"dots\",\n  rounded: \"rounded\",\n  classy: \"classy\",\n  classyRounded: \"classy-rounded\",\n  square: \"square\",\n  extraRounded: \"extra-rounded\"\n} as DotTypes;\n","import cornerSquareTypes from \"../../constants/cornerSquareTypes\";\nimport { CornerSquareType, DrawArgs, BasicFigureDrawArgs, RotateFigureArgs } from \"../../types\";\n\nexport default class QRCornerSquare {\n  _element?: SVGElement;\n  _svg: SVGElement;\n  _type: CornerSquareType;\n\n  constructor({ svg, type }: { svg: SVGElement; type: CornerSquareType }) {\n    this._svg = svg;\n    this._type = type;\n  }\n\n  draw(x: number, y: number, size: number, rotation: number): void {\n    const type = this._type;\n    let drawFunction;\n\n    switch (type) {\n      case cornerSquareTypes.square:\n        drawFunction = this._drawSquare;\n        break;\n      case cornerSquareTypes.extraRounded:\n        drawFunction = this._drawExtraRounded;\n        break;\n      case cornerSquareTypes.dot:\n      default:\n        drawFunction = this._drawDot;\n    }\n\n    drawFunction.call(this, { x, y, size, rotation });\n  }\n\n  _rotateFigure({ x, y, size, rotation = 0, draw }: RotateFigureArgs): void {\n    const cx = x + size / 2;\n    const cy = y + size / 2;\n\n    draw();\n    this._element?.setAttribute(\"transform\", `rotate(${(180 * rotation) / Math.PI},${cx},${cy})`);\n  }\n\n  _basicDot(args: BasicFigureDrawArgs): void {\n    const { size, x, y } = args;\n    const dotSize = size / 7;\n\n    this._rotateFigure({\n      ...args,\n      draw: () => {\n        this._element = document.createElementNS(\"http://www.w3.org/2000/svg\", \"path\");\n        this._element.setAttribute(\"clip-rule\", \"evenodd\");\n        this._element.setAttribute(\n          \"d\",\n          `M ${x + size / 2} ${y}` + // M cx, y //  Move to top of ring\n            `a ${size / 2} ${size / 2} 0 1 0 0.1 0` + // a outerRadius, outerRadius, 0, 1, 0, 1, 0 // Draw outer arc, but don't close it\n            `z` + // Z // Close the outer shape\n            `m 0 ${dotSize}` + // m -1 outerRadius-innerRadius // Move to top point of inner radius\n            `a ${size / 2 - dotSize} ${size / 2 - dotSize} 0 1 1 -0.1 0` + // a innerRadius, innerRadius, 0, 1, 1, -1, 0 // Draw inner arc, but don't close it\n            `Z` // Z // Close the inner ring. Actually will still work without, but inner ring will have one unit missing in stroke\n        );\n      }\n    });\n  }\n\n  _basicSquare(args: BasicFigureDrawArgs): void {\n    const { size, x, y } = args;\n    const dotSize = size / 7;\n\n    this._rotateFigure({\n      ...args,\n      draw: () => {\n        this._element = document.createElementNS(\"http://www.w3.org/2000/svg\", \"path\");\n        this._element.setAttribute(\"clip-rule\", \"evenodd\");\n        this._element.setAttribute(\n          \"d\",\n          `M ${x} ${y}` +\n            `v ${size}` +\n            `h ${size}` +\n            `v ${-size}` +\n            `z` +\n            `M ${x + dotSize} ${y + dotSize}` +\n            `h ${size - 2 * dotSize}` +\n            `v ${size - 2 * dotSize}` +\n            `h ${-size + 2 * dotSize}` +\n            `z`\n        );\n      }\n    });\n  }\n\n  _basicExtraRounded(args: BasicFigureDrawArgs): void {\n    const { size, x, y } = args;\n    const dotSize = size / 7;\n\n    this._rotateFigure({\n      ...args,\n      draw: () => {\n        this._element = document.createElementNS(\"http://www.w3.org/2000/svg\", \"path\");\n        this._element.setAttribute(\"clip-rule\", \"evenodd\");\n        this._element.setAttribute(\n          \"d\",\n          `M ${x} ${y + 2.5 * dotSize}` +\n            `v ${2 * dotSize}` +\n            `a ${2.5 * dotSize} ${2.5 * dotSize}, 0, 0, 0, ${dotSize * 2.5} ${dotSize * 2.5}` +\n            `h ${2 * dotSize}` +\n            `a ${2.5 * dotSize} ${2.5 * dotSize}, 0, 0, 0, ${dotSize * 2.5} ${-dotSize * 2.5}` +\n            `v ${-2 * dotSize}` +\n            `a ${2.5 * dotSize} ${2.5 * dotSize}, 0, 0, 0, ${-dotSize * 2.5} ${-dotSize * 2.5}` +\n            `h ${-2 * dotSize}` +\n            `a ${2.5 * dotSize} ${2.5 * dotSize}, 0, 0, 0, ${-dotSize * 2.5} ${dotSize * 2.5}` +\n            `M ${x + 2.5 * dotSize} ${y + dotSize}` +\n            `h ${2 * dotSize}` +\n            `a ${1.5 * dotSize} ${1.5 * dotSize}, 0, 0, 1, ${dotSize * 1.5} ${dotSize * 1.5}` +\n            `v ${2 * dotSize}` +\n            `a ${1.5 * dotSize} ${1.5 * dotSize}, 0, 0, 1, ${-dotSize * 1.5} ${dotSize * 1.5}` +\n            `h ${-2 * dotSize}` +\n            `a ${1.5 * dotSize} ${1.5 * dotSize}, 0, 0, 1, ${-dotSize * 1.5} ${-dotSize * 1.5}` +\n            `v ${-2 * dotSize}` +\n            `a ${1.5 * dotSize} ${1.5 * dotSize}, 0, 0, 1, ${dotSize * 1.5} ${-dotSize * 1.5}`\n        );\n      }\n    });\n  }\n\n  _drawDot({ x, y, size, rotation }: DrawArgs): void {\n    this._basicDot({ x, y, size, rotation });\n  }\n\n  _drawSquare({ x, y, size, rotation }: DrawArgs): void {\n    this._basicSquare({ x, y, size, rotation });\n  }\n\n  _drawExtraRounded({ x, y, size, rotation }: DrawArgs): void {\n    this._basicExtraRounded({ x, y, size, rotation });\n  }\n}\n","import { CornerSquareTypes } from \"../types\";\n\nexport default {\n  dot: \"dot\",\n  square: \"square\",\n  extraRounded: \"extra-rounded\"\n} as CornerSquareTypes;\n","import cornerDotTypes from \"../../constants/cornerDotTypes\";\nimport { CornerDotType, RotateFigureArgs, BasicFigureDrawArgs, DrawArgs } from \"../../types\";\n\nexport default class QRCornerDot {\n  _element?: SVGElement;\n  _svg: SVGElement;\n  _type: CornerDotType;\n\n  constructor({ svg, type }: { svg: SVGElement; type: CornerDotType }) {\n    this._svg = svg;\n    this._type = type;\n  }\n\n  draw(x: number, y: number, size: number, rotation: number): void {\n    const type = this._type;\n    let drawFunction;\n\n    switch (type) {\n      case cornerDotTypes.square:\n        drawFunction = this._drawSquare;\n        break;\n      case cornerDotTypes.dot:\n      default:\n        drawFunction = this._drawDot;\n    }\n\n    drawFunction.call(this, { x, y, size, rotation });\n  }\n\n  _rotateFigure({ x, y, size, rotation = 0, draw }: RotateFigureArgs): void {\n    const cx = x + size / 2;\n    const cy = y + size / 2;\n\n    draw();\n    this._element?.setAttribute(\"transform\", `rotate(${(180 * rotation) / Math.PI},${cx},${cy})`);\n  }\n\n  _basicDot(args: BasicFigureDrawArgs): void {\n    const { size, x, y } = args;\n\n    this._rotateFigure({\n      ...args,\n      draw: () => {\n        this._element = document.createElementNS(\"http://www.w3.org/2000/svg\", \"circle\");\n        this._element.setAttribute(\"cx\", String(x + size / 2));\n        this._element.setAttribute(\"cy\", String(y + size / 2));\n        this._element.setAttribute(\"r\", String(size / 2));\n      }\n    });\n  }\n\n  _basicSquare(args: BasicFigureDrawArgs): void {\n    const { size, x, y } = args;\n\n    this._rotateFigure({\n      ...args,\n      draw: () => {\n        this._element = document.createElementNS(\"http://www.w3.org/2000/svg\", \"rect\");\n        this._element.setAttribute(\"x\", String(x));\n        this._element.setAttribute(\"y\", String(y));\n        this._element.setAttribute(\"width\", String(size));\n        this._element.setAttribute(\"height\", String(size));\n      }\n    });\n  }\n\n  _drawDot({ x, y, size, rotation }: DrawArgs): void {\n    this._basicDot({ x, y, size, rotation });\n  }\n\n  _drawSquare({ x, y, size, rotation }: DrawArgs): void {\n    this._basicSquare({ x, y, size, rotation });\n  }\n}\n","import { CornerDotTypes } from \"../types\";\n\nexport default {\n  dot: \"dot\",\n  square: \"square\"\n} as CornerDotTypes;\n","import { ShapeTypes } from \"../types\";\n\nexport default {\n  square: \"square\",\n  circle: \"circle\"\n} as ShapeTypes;\n","import calculateImageSize from \"../tools/calculateImageSize\";\nimport toDataUrl from \"../tools/toDataUrl\";\nimport errorCorrectionPercents from \"../constants/errorCorrectionPercents\";\nimport QRDot from \"../figures/dot/QRDot\";\nimport QRCornerSquare from \"../figures/cornerSquare/QRCornerSquare\";\nimport QRCornerDot from \"../figures/cornerDot/QRCornerDot\";\nimport { RequiredOptions } from \"./QROptions\";\nimport gradientTypes from \"../constants/gradientTypes\";\nimport shapeTypes from \"../constants/shapeTypes\";\nimport { QRCode, FilterFunction, Gradient } from \"../types\";\n\nconst squareMask = [\n  [1, 1, 1, 1, 1, 1, 1],\n  [1, 0, 0, 0, 0, 0, 1],\n  [1, 0, 0, 0, 0, 0, 1],\n  [1, 0, 0, 0, 0, 0, 1],\n  [1, 0, 0, 0, 0, 0, 1],\n  [1, 0, 0, 0, 0, 0, 1],\n  [1, 1, 1, 1, 1, 1, 1]\n];\n\nconst dotMask = [\n  [0, 0, 0, 0, 0, 0, 0],\n  [0, 0, 0, 0, 0, 0, 0],\n  [0, 0, 1, 1, 1, 0, 0],\n  [0, 0, 1, 1, 1, 0, 0],\n  [0, 0, 1, 1, 1, 0, 0],\n  [0, 0, 0, 0, 0, 0, 0],\n  [0, 0, 0, 0, 0, 0, 0]\n];\n\nexport default class QRSVG {\n  _element: SVGElement;\n  _defs: SVGElement;\n  _backgroundClipPath?: SVGElement;\n  _dotsClipPath?: SVGElement;\n  _cornersSquareClipPath?: SVGElement;\n  _cornersDotClipPath?: SVGElement;\n  _options: RequiredOptions;\n  _qr?: QRCode;\n  _image?: HTMLImageElement;\n\n  //TODO don't pass all options to this class\n  constructor(options: RequiredOptions) {\n    this._element = document.createElementNS(\"http://www.w3.org/2000/svg\", \"svg\");\n    this._element.setAttribute(\"width\", String(options.width));\n    this._element.setAttribute(\"height\", String(options.height));\n    this._defs = document.createElementNS(\"http://www.w3.org/2000/svg\", \"defs\");\n    this._element.appendChild(this._defs);\n\n    this._options = options;\n  }\n\n  get width(): number {\n    return this._options.width;\n  }\n\n  get height(): number {\n    return this._options.height;\n  }\n\n  getElement(): SVGElement {\n    return this._element;\n  }\n\n  async drawQR(qr: QRCode): Promise<void> {\n    const count = qr.getModuleCount();\n    const minSize = Math.min(this._options.width, this._options.height) - this._options.margin * 2;\n    const realQRSize = this._options.shape === shapeTypes.circle ? minSize / Math.sqrt(2) : minSize;\n    const dotSize = Math.floor(realQRSize / count);\n    let drawImageSize = {\n      hideXDots: 0,\n      hideYDots: 0,\n      width: 0,\n      height: 0\n    };\n\n    this._qr = qr;\n\n    if (this._options.image) {\n      //We need it to get image size\n      await this.loadImage();\n      if (!this._image) return;\n      const { imageOptions, qrOptions } = this._options;\n      const coverLevel = imageOptions.imageSize * errorCorrectionPercents[qrOptions.errorCorrectionLevel];\n      const maxHiddenDots = Math.floor(coverLevel * count * count);\n\n      drawImageSize = calculateImageSize({\n        originalWidth: this._image.width,\n        originalHeight: this._image.height,\n        maxHiddenDots,\n        maxHiddenAxisDots: count - 14,\n        dotSize\n      });\n    }\n\n    this.drawBackground();\n    this.drawDots((i: number, j: number): boolean => {\n      if (this._options.imageOptions.hideBackgroundDots) {\n        if (\n          i >= (count - drawImageSize.hideXDots) / 2 &&\n          i < (count + drawImageSize.hideXDots) / 2 &&\n          j >= (count - drawImageSize.hideYDots) / 2 &&\n          j < (count + drawImageSize.hideYDots) / 2\n        ) {\n          return false;\n        }\n      }\n\n      if (squareMask[i]?.[j] || squareMask[i - count + 7]?.[j] || squareMask[i]?.[j - count + 7]) {\n        return false;\n      }\n\n      if (dotMask[i]?.[j] || dotMask[i - count + 7]?.[j] || dotMask[i]?.[j - count + 7]) {\n        return false;\n      }\n\n      return true;\n    });\n    this.drawCorners();\n\n    if (this._options.image) {\n      await this.drawImage({ width: drawImageSize.width, height: drawImageSize.height, count, dotSize });\n    }\n  }\n\n  drawBackground(): void {\n    const element = this._element;\n    const options = this._options;\n\n    if (element) {\n      const gradientOptions = options.backgroundOptions?.gradient;\n      const color = options.backgroundOptions?.color;\n\n      if (gradientOptions || color) {\n        this._createColor({\n          options: gradientOptions,\n          color: color,\n          additionalRotation: 0,\n          x: 0,\n          y: 0,\n          height: options.height,\n          width: options.width,\n          name: \"background-color\"\n        });\n      }\n\n      if (options.backgroundOptions?.round) {\n        const size = Math.min(options.width, options.height);\n        const element = document.createElementNS(\"http://www.w3.org/2000/svg\", \"rect\");\n        this._backgroundClipPath = document.createElementNS(\"http://www.w3.org/2000/svg\", \"clipPath\");\n        this._backgroundClipPath.setAttribute(\"id\", \"clip-path-background-color\");\n        this._defs.appendChild(this._backgroundClipPath);\n\n        element.setAttribute(\"x\", String((options.width - size) / 2));\n        element.setAttribute(\"y\", String((options.height - size) / 2));\n        element.setAttribute(\"width\", String(size));\n        element.setAttribute(\"height\", String(size));\n        element.setAttribute(\"rx\", String((size / 2) * options.backgroundOptions.round));\n\n        this._backgroundClipPath.appendChild(element);\n      }\n    }\n  }\n\n  drawDots(filter?: FilterFunction): void {\n    if (!this._qr) {\n      throw \"QR code is not defined\";\n    }\n\n    const options = this._options;\n    const count = this._qr.getModuleCount();\n\n    if (count > options.width || count > options.height) {\n      throw \"The canvas is too small.\";\n    }\n\n    const minSize = Math.min(options.width, options.height) - options.margin * 2;\n    const realQRSize = options.shape === shapeTypes.circle ? minSize / Math.sqrt(2) : minSize;\n    const dotSize = Math.floor(realQRSize / count);\n    const xBeginning = Math.floor((options.width - count * dotSize) / 2);\n    const yBeginning = Math.floor((options.height - count * dotSize) / 2);\n    const dot = new QRDot({ svg: this._element, type: options.dotsOptions.type });\n\n    this._dotsClipPath = document.createElementNS(\"http://www.w3.org/2000/svg\", \"clipPath\");\n    this._dotsClipPath.setAttribute(\"id\", \"clip-path-dot-color\");\n    this._defs.appendChild(this._dotsClipPath);\n\n    this._createColor({\n      options: options.dotsOptions?.gradient,\n      color: options.dotsOptions.color,\n      additionalRotation: 0,\n      x: 0,\n      y: 0,\n      height: options.height,\n      width: options.width,\n      name: \"dot-color\"\n    });\n\n    for (let i = 0; i < count; i++) {\n      for (let j = 0; j < count; j++) {\n        if (filter && !filter(i, j)) {\n          continue;\n        }\n        if (!this._qr?.isDark(i, j)) {\n          continue;\n        }\n\n        dot.draw(\n          xBeginning + i * dotSize,\n          yBeginning + j * dotSize,\n          dotSize,\n          (xOffset: number, yOffset: number): boolean => {\n            if (i + xOffset < 0 || j + yOffset < 0 || i + xOffset >= count || j + yOffset >= count) return false;\n            if (filter && !filter(i + xOffset, j + yOffset)) return false;\n            return !!this._qr && this._qr.isDark(i + xOffset, j + yOffset);\n          }\n        );\n\n        if (dot._element && this._dotsClipPath) {\n          this._dotsClipPath.appendChild(dot._element);\n        }\n      }\n    }\n\n    if (options.shape === shapeTypes.circle) {\n      const additionalDots = Math.floor((minSize / dotSize - count) / 2);\n      const fakeCount = count + additionalDots * 2;\n      const xFakeBeginning = xBeginning - additionalDots * dotSize;\n      const yFakeBeginning = yBeginning - additionalDots * dotSize;\n      const fakeMatrix: number[][] = [];\n      const center = Math.floor(fakeCount / 2);\n\n      for (let i = 0; i < fakeCount; i++) {\n        fakeMatrix[i] = [];\n        for (let j = 0; j < fakeCount; j++) {\n          if (\n            i >= additionalDots - 1 &&\n            i <= fakeCount - additionalDots &&\n            j >= additionalDots - 1 &&\n            j <= fakeCount - additionalDots\n          ) {\n            fakeMatrix[i][j] = 0;\n            continue;\n          }\n\n          if (Math.sqrt((i - center) * (i - center) + (j - center) * (j - center)) > center) {\n            fakeMatrix[i][j] = 0;\n            continue;\n          }\n\n          //Get random dots from QR code to show it outside of QR code\n          fakeMatrix[i][j] = this._qr.isDark(\n            j - 2 * additionalDots < 0 ? j : j >= count ? j - 2 * additionalDots : j - additionalDots,\n            i - 2 * additionalDots < 0 ? i : i >= count ? i - 2 * additionalDots : i - additionalDots\n          )\n            ? 1\n            : 0;\n        }\n      }\n\n      for (let i = 0; i < fakeCount; i++) {\n        for (let j = 0; j < fakeCount; j++) {\n          if (!fakeMatrix[i][j]) continue;\n\n          dot.draw(\n            xFakeBeginning + i * dotSize,\n            yFakeBeginning + j * dotSize,\n            dotSize,\n            (xOffset: number, yOffset: number): boolean => {\n              return !!fakeMatrix[i + xOffset]?.[j + yOffset];\n            }\n          );\n          if (dot._element && this._dotsClipPath) {\n            this._dotsClipPath.appendChild(dot._element);\n          }\n        }\n      }\n    }\n  }\n\n  drawCorners(): void {\n    if (!this._qr) {\n      throw \"QR code is not defined\";\n    }\n\n    const element = this._element;\n    const options = this._options;\n\n    if (!element) {\n      throw \"Element code is not defined\";\n    }\n\n    const count = this._qr.getModuleCount();\n    const minSize = Math.min(options.width, options.height) - options.margin * 2;\n    const realQRSize = options.shape === shapeTypes.circle ? minSize / Math.sqrt(2) : minSize;\n    const dotSize = Math.floor(realQRSize / count);\n    const cornersSquareSize = dotSize * 7;\n    const cornersDotSize = dotSize * 3;\n    const xBeginning = Math.floor((options.width - count * dotSize) / 2);\n    const yBeginning = Math.floor((options.height - count * dotSize) / 2);\n\n    [\n      [0, 0, 0],\n      [1, 0, Math.PI / 2],\n      [0, 1, -Math.PI / 2]\n    ].forEach(([column, row, rotation]) => {\n      const x = xBeginning + column * dotSize * (count - 7);\n      const y = yBeginning + row * dotSize * (count - 7);\n      let cornersSquareClipPath = this._dotsClipPath;\n      let cornersDotClipPath = this._dotsClipPath;\n\n      if (options.cornersSquareOptions?.gradient || options.cornersSquareOptions?.color) {\n        cornersSquareClipPath = document.createElementNS(\"http://www.w3.org/2000/svg\", \"clipPath\");\n        cornersSquareClipPath.setAttribute(\"id\", `clip-path-corners-square-color-${column}-${row}`);\n        this._defs.appendChild(cornersSquareClipPath);\n        this._cornersSquareClipPath = this._cornersDotClipPath = cornersDotClipPath = cornersSquareClipPath;\n\n        this._createColor({\n          options: options.cornersSquareOptions?.gradient,\n          color: options.cornersSquareOptions?.color,\n          additionalRotation: rotation,\n          x,\n          y,\n          height: cornersSquareSize,\n          width: cornersSquareSize,\n          name: `corners-square-color-${column}-${row}`\n        });\n      }\n\n      if (options.cornersSquareOptions?.type) {\n        const cornersSquare = new QRCornerSquare({ svg: this._element, type: options.cornersSquareOptions.type });\n\n        cornersSquare.draw(x, y, cornersSquareSize, rotation);\n\n        if (cornersSquare._element && cornersSquareClipPath) {\n          cornersSquareClipPath.appendChild(cornersSquare._element);\n        }\n      } else {\n        const dot = new QRDot({ svg: this._element, type: options.dotsOptions.type });\n\n        for (let i = 0; i < squareMask.length; i++) {\n          for (let j = 0; j < squareMask[i].length; j++) {\n            if (!squareMask[i]?.[j]) {\n              continue;\n            }\n\n            dot.draw(\n              x + i * dotSize,\n              y + j * dotSize,\n              dotSize,\n              (xOffset: number, yOffset: number): boolean => !!squareMask[i + xOffset]?.[j + yOffset]\n            );\n\n            if (dot._element && cornersSquareClipPath) {\n              cornersSquareClipPath.appendChild(dot._element);\n            }\n          }\n        }\n      }\n\n      if (options.cornersDotOptions?.gradient || options.cornersDotOptions?.color) {\n        cornersDotClipPath = document.createElementNS(\"http://www.w3.org/2000/svg\", \"clipPath\");\n        cornersDotClipPath.setAttribute(\"id\", `clip-path-corners-dot-color-${column}-${row}`);\n        this._defs.appendChild(cornersDotClipPath);\n        this._cornersDotClipPath = cornersDotClipPath;\n\n        this._createColor({\n          options: options.cornersDotOptions?.gradient,\n          color: options.cornersDotOptions?.color,\n          additionalRotation: rotation,\n          x: x + dotSize * 2,\n          y: y + dotSize * 2,\n          height: cornersDotSize,\n          width: cornersDotSize,\n          name: `corners-dot-color-${column}-${row}`\n        });\n      }\n\n      if (options.cornersDotOptions?.type) {\n        const cornersDot = new QRCornerDot({ svg: this._element, type: options.cornersDotOptions.type });\n\n        cornersDot.draw(x + dotSize * 2, y + dotSize * 2, cornersDotSize, rotation);\n\n        if (cornersDot._element && cornersDotClipPath) {\n          cornersDotClipPath.appendChild(cornersDot._element);\n        }\n      } else {\n        const dot = new QRDot({ svg: this._element, type: options.dotsOptions.type });\n\n        for (let i = 0; i < dotMask.length; i++) {\n          for (let j = 0; j < dotMask[i].length; j++) {\n            if (!dotMask[i]?.[j]) {\n              continue;\n            }\n\n            dot.draw(\n              x + i * dotSize,\n              y + j * dotSize,\n              dotSize,\n              (xOffset: number, yOffset: number): boolean => !!dotMask[i + xOffset]?.[j + yOffset]\n            );\n\n            if (dot._element && cornersDotClipPath) {\n              cornersDotClipPath.appendChild(dot._element);\n            }\n          }\n        }\n      }\n    });\n  }\n\n  loadImage(): Promise<void> {\n    return new Promise((resolve, reject) => {\n      const options = this._options;\n      const image = new Image();\n\n      if (!options.image) {\n        return reject(\"Image is not defined\");\n      }\n\n      if (typeof options.imageOptions.crossOrigin === \"string\") {\n        image.crossOrigin = options.imageOptions.crossOrigin;\n      }\n\n      this._image = image;\n      image.onload = (): void => {\n        resolve();\n      };\n      image.src = options.image;\n    });\n  }\n\n  async drawImage({\n    width,\n    height,\n    count,\n    dotSize\n  }: {\n    width: number;\n    height: number;\n    count: number;\n    dotSize: number;\n  }): Promise<void> {\n    const options = this._options;\n    const xBeginning = Math.floor((options.width - count * dotSize) / 2);\n    const yBeginning = Math.floor((options.height - count * dotSize) / 2);\n    const dx = xBeginning + options.imageOptions.margin + (count * dotSize - width) / 2;\n    const dy = yBeginning + options.imageOptions.margin + (count * dotSize - height) / 2;\n    const dw = width - options.imageOptions.margin * 2;\n    const dh = height - options.imageOptions.margin * 2;\n\n    const image = document.createElementNS(\"http://www.w3.org/2000/svg\", \"image\");\n    image.setAttribute(\"x\", String(dx));\n    image.setAttribute(\"y\", String(dy));\n    image.setAttribute(\"width\", `${dw}px`);\n    image.setAttribute(\"height\", `${dh}px`);\n\n    const imageUrl = await toDataUrl(options.image || \"\");\n\n    image.setAttribute(\"href\", imageUrl || \"\");\n\n    this._element.appendChild(image);\n  }\n\n  _createColor({\n    options,\n    color,\n    additionalRotation,\n    x,\n    y,\n    height,\n    width,\n    name\n  }: {\n    options?: Gradient;\n    color?: string;\n    additionalRotation: number;\n    x: number;\n    y: number;\n    height: number;\n    width: number;\n    name: string;\n  }): void {\n    const size = width > height ? width : height;\n    const rect = document.createElementNS(\"http://www.w3.org/2000/svg\", \"rect\");\n    rect.setAttribute(\"x\", String(x));\n    rect.setAttribute(\"y\", String(y));\n    rect.setAttribute(\"height\", String(height));\n    rect.setAttribute(\"width\", String(width));\n    rect.setAttribute(\"clip-path\", `url('#clip-path-${name}')`);\n\n    if (options) {\n      let gradient: SVGElement;\n      if (options.type === gradientTypes.radial) {\n        gradient = document.createElementNS(\"http://www.w3.org/2000/svg\", \"radialGradient\");\n        gradient.setAttribute(\"id\", name);\n        gradient.setAttribute(\"gradientUnits\", \"userSpaceOnUse\");\n        gradient.setAttribute(\"fx\", String(x + width / 2));\n        gradient.setAttribute(\"fy\", String(y + height / 2));\n        gradient.setAttribute(\"cx\", String(x + width / 2));\n        gradient.setAttribute(\"cy\", String(y + height / 2));\n        gradient.setAttribute(\"r\", String(size / 2));\n      } else {\n        const rotation = ((options.rotation || 0) + additionalRotation) % (2 * Math.PI);\n        const positiveRotation = (rotation + 2 * Math.PI) % (2 * Math.PI);\n        let x0 = x + width / 2;\n        let y0 = y + height / 2;\n        let x1 = x + width / 2;\n        let y1 = y + height / 2;\n\n        if (\n          (positiveRotation >= 0 && positiveRotation <= 0.25 * Math.PI) ||\n          (positiveRotation > 1.75 * Math.PI && positiveRotation <= 2 * Math.PI)\n        ) {\n          x0 = x0 - width / 2;\n          y0 = y0 - (height / 2) * Math.tan(rotation);\n          x1 = x1 + width / 2;\n          y1 = y1 + (height / 2) * Math.tan(rotation);\n        } else if (positiveRotation > 0.25 * Math.PI && positiveRotation <= 0.75 * Math.PI) {\n          y0 = y0 - height / 2;\n          x0 = x0 - width / 2 / Math.tan(rotation);\n          y1 = y1 + height / 2;\n          x1 = x1 + width / 2 / Math.tan(rotation);\n        } else if (positiveRotation > 0.75 * Math.PI && positiveRotation <= 1.25 * Math.PI) {\n          x0 = x0 + width / 2;\n          y0 = y0 + (height / 2) * Math.tan(rotation);\n          x1 = x1 - width / 2;\n          y1 = y1 - (height / 2) * Math.tan(rotation);\n        } else if (positiveRotation > 1.25 * Math.PI && positiveRotation <= 1.75 * Math.PI) {\n          y0 = y0 + height / 2;\n          x0 = x0 + width / 2 / Math.tan(rotation);\n          y1 = y1 - height / 2;\n          x1 = x1 - width / 2 / Math.tan(rotation);\n        }\n\n        gradient = document.createElementNS(\"http://www.w3.org/2000/svg\", \"linearGradient\");\n        gradient.setAttribute(\"id\", name);\n        gradient.setAttribute(\"gradientUnits\", \"userSpaceOnUse\");\n        gradient.setAttribute(\"x1\", String(Math.round(x0)));\n        gradient.setAttribute(\"y1\", String(Math.round(y0)));\n        gradient.setAttribute(\"x2\", String(Math.round(x1)));\n        gradient.setAttribute(\"y2\", String(Math.round(y1)));\n      }\n\n      options.colorStops.forEach(({ offset, color }: { offset: number; color: string }) => {\n        const stop = document.createElementNS(\"http://www.w3.org/2000/svg\", \"stop\");\n        stop.setAttribute(\"offset\", `${100 * offset}%`);\n        stop.setAttribute(\"stop-color\", color);\n        gradient.appendChild(stop);\n      });\n\n      rect.setAttribute(\"fill\", `url('#${name}')`);\n      this._defs.appendChild(gradient);\n    } else if (color) {\n      rect.setAttribute(\"fill\", color);\n    }\n\n    this._element.appendChild(rect);\n  }\n}\n","interface ImageSizeOptions {\n  originalHeight: number;\n  originalWidth: number;\n  maxHiddenDots: number;\n  maxHiddenAxisDots?: number;\n  dotSize: number;\n}\n\ninterface ImageSizeResult {\n  height: number;\n  width: number;\n  hideYDots: number;\n  hideXDots: number;\n}\n\nexport default function calculateImageSize({\n  originalHeight,\n  originalWidth,\n  maxHiddenDots,\n  maxHiddenAxisDots,\n  dotSize\n}: ImageSizeOptions): ImageSizeResult {\n  const hideDots = { x: 0, y: 0 };\n  const imageSize = { x: 0, y: 0 };\n\n  if (originalHeight <= 0 || originalWidth <= 0 || maxHiddenDots <= 0 || dotSize <= 0) {\n    return {\n      height: 0,\n      width: 0,\n      hideYDots: 0,\n      hideXDots: 0\n    };\n  }\n\n  const k = originalHeight / originalWidth;\n\n  //Getting the maximum possible axis hidden dots\n  hideDots.x = Math.floor(Math.sqrt(maxHiddenDots / k));\n  //The count of hidden dot's can't be less than 1\n  if (hideDots.x <= 0) hideDots.x = 1;\n  //Check the limit of the maximum allowed axis hidden dots\n  if (maxHiddenAxisDots && maxHiddenAxisDots < hideDots.x) hideDots.x = maxHiddenAxisDots;\n  //The count of dots should be odd\n  if (hideDots.x % 2 === 0) hideDots.x--;\n  imageSize.x = hideDots.x * dotSize;\n  //Calculate opposite axis hidden dots based on axis value.\n  //The value will be odd.\n  //We use ceil to prevent dots covering by the image.\n  hideDots.y = 1 + 2 * Math.ceil((hideDots.x * k - 1) / 2);\n  imageSize.y = Math.round(imageSize.x * k);\n  //If the result dots count is bigger than max - then decrease size and calculate again\n  if (hideDots.y * hideDots.x > maxHiddenDots || (maxHiddenAxisDots && maxHiddenAxisDots < hideDots.y)) {\n    if (maxHiddenAxisDots && maxHiddenAxisDots < hideDots.y) {\n      hideDots.y = maxHiddenAxisDots;\n      if (hideDots.y % 2 === 0) hideDots.x--;\n    } else {\n      hideDots.y -= 2;\n    }\n    imageSize.y = hideDots.y * dotSize;\n    hideDots.x = 1 + 2 * Math.ceil((hideDots.y / k - 1) / 2);\n    imageSize.x = Math.round(imageSize.y / k);\n  }\n\n  return {\n    height: imageSize.y,\n    width: imageSize.x,\n    hideYDots: hideDots.y,\n    hideXDots: hideDots.x\n  };\n}\n","import { GradientTypes } from \"../types\";\n\nexport default {\n  radial: \"radial\",\n  linear: \"linear\"\n} as GradientTypes;\n","import { DrawTypes } from \"../types\";\n\nexport default {\n  canvas: \"canvas\",\n  svg: \"svg\"\n} as DrawTypes;\n","import { TypeNumber } from \"../types\";\n\ninterface TypesMap {\n  [key: number]: TypeNumber;\n}\n\nconst qrTypes: TypesMap = {};\n\nfor (let type = 0; type <= 40; type++) {\n  qrTypes[type] = type as TypeNumber;\n}\n\n// 0 types is autodetect\n\n// types = {\n//     0: 0,\n//     1: 1,\n//     ...\n//     40: 40\n// }\n\nexport default qrTypes;\n","import qrTypes from \"../constants/qrTypes\";\nimport drawTypes from \"../constants/drawTypes\";\nimport shapeTypes from \"../constants/shapeTypes\";\nimport errorCorrectionLevels from \"../constants/errorCorrectionLevels\";\nimport { ShapeType, DotType, Options, TypeNumber, ErrorCorrectionLevel, Mode, DrawType, Gradient } from \"../types\";\n\nexport interface RequiredOptions extends Options {\n  type: DrawType;\n  shape: ShapeType;\n  width: number;\n  height: number;\n  margin: number;\n  data: string;\n  qrOptions: {\n    typeNumber: TypeNumber;\n    mode?: Mode;\n    errorCorrectionLevel: ErrorCorrectionLevel;\n  };\n  imageOptions: {\n    hideBackgroundDots: boolean;\n    imageSize: number;\n    crossOrigin?: string;\n    margin: number;\n  };\n  dotsOptions: {\n    type: DotType;\n    color: string;\n    gradient?: Gradient;\n  };\n  backgroundOptions: {\n    round: number;\n    color: string;\n    gradient?: Gradient;\n  };\n}\n\nconst defaultOptions: RequiredOptions = {\n  type: drawTypes.canvas,\n  shape: shapeTypes.square,\n  width: 300,\n  height: 300,\n  data: \"\",\n  margin: 0,\n  qrOptions: {\n    typeNumber: qrTypes[0],\n    mode: undefined,\n    errorCorrectionLevel: errorCorrectionLevels.Q\n  },\n  imageOptions: {\n    hideBackgroundDots: true,\n    imageSize: 0.4,\n    crossOrigin: undefined,\n    margin: 0\n  },\n  dotsOptions: {\n    type: \"square\",\n    color: \"#000\"\n  },\n  backgroundOptions: {\n    round: 0,\n    color: \"#fff\"\n  }\n};\n\nexport default defaultOptions;\n","import { ErrorCorrectionLevel } from \"../types\";\n\ninterface ErrorCorrectionLevels {\n  [key: string]: ErrorCorrectionLevel;\n}\n\nexport default {\n  L: \"L\",\n  M: \"M\",\n  Q: \"Q\",\n  H: \"H\"\n} as ErrorCorrectionLevels;\n","import { RequiredOptions } from \"../core/QROptions\";\nimport { Gradient } from \"../types\";\n\nfunction sanitizeGradient(gradient: Gradient): Gradient {\n  const newGradient = { ...gradient };\n\n  if (!newGradient.colorStops || !newGradient.colorStops.length) {\n    throw \"Field 'colorStops' is required in gradient\";\n  }\n\n  if (newGradient.rotation) {\n    newGradient.rotation = Number(newGradient.rotation);\n  } else {\n    newGradient.rotation = 0;\n  }\n\n  newGradient.colorStops = newGradient.colorStops.map((colorStop: { offset: number; color: string }) => ({\n    ...colorStop,\n    offset: Number(colorStop.offset)\n  }));\n\n  return newGradient;\n}\n\nexport default function sanitizeOptions(options: RequiredOptions): RequiredOptions {\n  const newOptions = { ...options };\n\n  newOptions.width = Number(newOptions.width);\n  newOptions.height = Number(newOptions.height);\n  newOptions.margin = Number(newOptions.margin);\n  newOptions.imageOptions = {\n    ...newOptions.imageOptions,\n    hideBackgroundDots: Boolean(newOptions.imageOptions.hideBackgroundDots),\n    imageSize: Number(newOptions.imageOptions.imageSize),\n    margin: Number(newOptions.imageOptions.margin)\n  };\n\n  if (newOptions.margin > Math.min(newOptions.width, newOptions.height)) {\n    newOptions.margin = Math.min(newOptions.width, newOptions.height);\n  }\n\n  newOptions.dotsOptions = {\n    ...newOptions.dotsOptions\n  };\n  if (newOptions.dotsOptions.gradient) {\n    newOptions.dotsOptions.gradient = sanitizeGradient(newOptions.dotsOptions.gradient);\n  }\n\n  if (newOptions.cornersSquareOptions) {\n    newOptions.cornersSquareOptions = {\n      ...newOptions.cornersSquareOptions\n    };\n    if (newOptions.cornersSquareOptions.gradient) {\n      newOptions.cornersSquareOptions.gradient = sanitizeGradient(newOptions.cornersSquareOptions.gradient);\n    }\n  }\n\n  if (newOptions.cornersDotOptions) {\n    newOptions.cornersDotOptions = {\n      ...newOptions.cornersDotOptions\n    };\n    if (newOptions.cornersDotOptions.gradient) {\n      newOptions.cornersDotOptions.gradient = sanitizeGradient(newOptions.cornersDotOptions.gradient);\n    }\n  }\n\n  if (newOptions.backgroundOptions) {\n    newOptions.backgroundOptions = {\n      ...newOptions.backgroundOptions\n    };\n    if (newOptions.backgroundOptions.gradient) {\n      newOptions.backgroundOptions.gradient = sanitizeGradient(newOptions.backgroundOptions.gradient);\n    }\n  }\n\n  return newOptions;\n}\n","import QRCodeStyling from \"./core/QRCodeStyling\";\nimport dotTypes from \"./constants/dotTypes\";\nimport cornerDotTypes from \"./constants/cornerDotTypes\";\nimport cornerSquareTypes from \"./constants/cornerSquareTypes\";\nimport errorCorrectionLevels from \"./constants/errorCorrectionLevels\";\nimport errorCorrectionPercents from \"./constants/errorCorrectionPercents\";\nimport modes from \"./constants/modes\";\nimport qrTypes from \"./constants/qrTypes\";\nimport drawTypes from \"./constants/drawTypes\";\nimport shapeTypes from \"./constants/shapeTypes\";\nimport gradientTypes from \"./constants/gradientTypes\";\n\nexport * from \"./types\";\n\nexport {\n  dotTypes,\n  cornerDotTypes,\n  cornerSquareTypes,\n  errorCorrectionLevels,\n  errorCorrectionPercents,\n  modes,\n  qrTypes,\n  drawTypes,\n  shapeTypes,\n  gradientTypes\n};\n\nexport default QRCodeStyling;\n","import getMode from \"../tools/getMode\";\nimport mergeDeep from \"../tools/merge\";\nimport downloadURI from \"../tools/downloadURI\";\nimport QRSVG from \"./QRSVG\";\nimport drawTypes from \"../constants/drawTypes\";\n\nimport defaultOptions, { RequiredOptions } from \"./QROptions\";\nimport sanitizeOptions from \"../tools/sanitizeOptions\";\nimport { FileExtension, QRCode, Options, DownloadOptions, ExtensionFunction } from \"../types\";\nimport qrcode from \"qrcode-generator\";\n\nexport default class QRCodeStyling {\n  _options: RequiredOptions;\n  _container?: HTMLElement;\n  _canvas?: HTMLCanvasElement;\n  _svg?: SVGElement;\n  _qr?: QRCode;\n  _extension?: ExtensionFunction;\n  _canvasDrawingPromise?: Promise<void>;\n  _svgDrawingPromise?: Promise<void>;\n\n  constructor(options?: Partial<Options>) {\n    this._options = options ? sanitizeOptions(mergeDeep(defaultOptions, options) as RequiredOptions) : defaultOptions;\n    this.update();\n  }\n\n  static _clearContainer(container?: HTMLElement): void {\n    if (container) {\n      container.innerHTML = \"\";\n    }\n  }\n\n  _setupSvg(): void {\n    if (!this._qr) {\n      return;\n    }\n    const qrSVG = new QRSVG(this._options);\n\n    this._svg = qrSVG.getElement();\n    this._svgDrawingPromise = qrSVG.drawQR(this._qr).then(() => {\n      if (!this._svg) return;\n      this._extension?.(qrSVG.getElement(), this._options);\n    });\n  }\n\n  _setupCanvas(): void {\n    if (!this._qr) {\n      return;\n    }\n\n    this._canvas = document.createElement(\"canvas\");\n    this._canvas.width = this._options.width;\n    this._canvas.height = this._options.height;\n\n    this._setupSvg();\n    this._canvasDrawingPromise = this._svgDrawingPromise?.then(() => {\n      if (!this._svg) return;\n\n      const svg = this._svg;\n      const xml = new XMLSerializer().serializeToString(svg);\n      const svg64 = btoa(xml);\n      const image64 = \"data:image/svg+xml;base64,\" + svg64;\n      const image = new Image();\n\n      return new Promise((resolve) => {\n        image.onload = (): void => {\n          this._canvas?.getContext(\"2d\")?.drawImage(image, 0, 0);\n          resolve();\n        };\n\n        image.src = image64;\n      });\n    });\n  }\n\n  async _getElement(extension: FileExtension = \"png\"): Promise<SVGElement | HTMLCanvasElement | undefined> {\n    if (!this._qr) throw \"QR code is empty\";\n\n    if (extension.toLowerCase() === \"svg\") {\n      if (!this._svg || !this._svgDrawingPromise) {\n        this._setupSvg();\n      }\n      await this._svgDrawingPromise;\n      return this._svg;\n    } else {\n      if (!this._canvas || !this._canvasDrawingPromise) {\n        this._setupCanvas();\n      }\n      await this._canvasDrawingPromise;\n      return this._canvas;\n    }\n  }\n\n  update(options?: Partial<Options>): void {\n    QRCodeStyling._clearContainer(this._container);\n    this._options = options ? sanitizeOptions(mergeDeep(this._options, options) as RequiredOptions) : this._options;\n\n    if (!this._options.data) {\n      return;\n    }\n\n    this._qr = qrcode(this._options.qrOptions.typeNumber, this._options.qrOptions.errorCorrectionLevel);\n    this._qr.addData(this._options.data, this._options.qrOptions.mode || getMode(this._options.data));\n    this._qr.make();\n\n    if (this._options.type === drawTypes.canvas) {\n      this._setupCanvas();\n    } else {\n      this._setupSvg();\n    }\n\n    this.append(this._container);\n  }\n\n  append(container?: HTMLElement): void {\n    if (!container) {\n      return;\n    }\n\n    if (typeof container.appendChild !== \"function\") {\n      throw \"Container should be a single DOM node\";\n    }\n\n    if (this._options.type === drawTypes.canvas) {\n      if (this._canvas) {\n        container.appendChild(this._canvas);\n      }\n    } else {\n      if (this._svg) {\n        container.appendChild(this._svg);\n      }\n    }\n\n    this._container = container;\n  }\n\n  applyExtension(extension: ExtensionFunction): void {\n    if (!extension) {\n      throw \"Extension function should be defined.\";\n    }\n\n    this._extension = extension;\n    this.update();\n  }\n\n  deleteExtension(): void {\n    this._extension = undefined;\n    this.update();\n  }\n\n  async getRawData(extension: FileExtension = \"png\"): Promise<Blob | null> {\n    if (!this._qr) throw \"QR code is empty\";\n    const element = await this._getElement(extension);\n\n    if (!element) {\n      return null;\n    }\n\n    if (extension.toLowerCase() === \"svg\") {\n      const serializer = new XMLSerializer();\n      const source = serializer.serializeToString(element);\n\n      return new Blob(['<?xml version=\"1.0\" standalone=\"no\"?>\\r\\n' + source], { type: \"image/svg+xml\" });\n    } else {\n      return new Promise((resolve) => (element as HTMLCanvasElement).toBlob(resolve, `image/${extension}`, 1));\n    }\n  }\n\n  async download(downloadOptions?: Partial<DownloadOptions> | string): Promise<void> {\n    if (!this._qr) throw \"QR code is empty\";\n    let extension = \"png\" as FileExtension;\n    let name = \"qr\";\n\n    //TODO remove deprecated code in the v2\n    if (typeof downloadOptions === \"string\") {\n      extension = downloadOptions as FileExtension;\n      console.warn(\n        \"Extension is deprecated as argument for 'download' method, please pass object { name: '...', extension: '...' } as argument\"\n      );\n    } else if (typeof downloadOptions === \"object\" && downloadOptions !== null) {\n      if (downloadOptions.name) {\n        name = downloadOptions.name;\n      }\n      if (downloadOptions.extension) {\n        extension = downloadOptions.extension;\n      }\n    }\n\n    const element = await this._getElement(extension);\n\n    if (!element) {\n      return;\n    }\n\n    if (extension.toLowerCase() === \"svg\") {\n      const serializer = new XMLSerializer();\n      let source = serializer.serializeToString(element);\n\n      source = '<?xml version=\"1.0\" standalone=\"no\"?>\\r\\n' + source;\n      const url = \"data:image/svg+xml;charset=utf-8,\" + encodeURIComponent(source);\n      downloadURI(url, `${name}.svg`);\n    } else {\n      const url = (element as HTMLCanvasElement).toDataURL(`image/${extension}`);\n      downloadURI(url, `${name}.${extension}`);\n    }\n  }\n}\n","import modes from \"../constants/modes\";\nimport { Mode } from \"../types\";\n\nexport default function getMode(data: string): Mode {\n  switch (true) {\n    case /^[0-9]*$/.test(data):\n      return modes.numeric;\n    case /^[0-9A-Z $%*+\\-./:]*$/.test(data):\n      return modes.alphanumeric;\n    default:\n      return modes.byte;\n  }\n}\n","import { Mode } from \"../types\";\n\ninterface Modes {\n  [key: string]: Mode;\n}\n\nexport default {\n  numeric: \"Numeric\",\n  alphanumeric: \"Alphanumeric\",\n  byte: \"Byte\",\n  kanji: \"Kanji\"\n} as Modes;\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tif(__webpack_module_cache__[moduleId]) {\n\t\treturn __webpack_module_cache__[moduleId].exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// module exports must be returned from runtime so entry inlining is disabled\n// startup\n// Load entry module and return exports\nreturn __webpack_require__(676);\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => module['default'] :\n\t\t() => module;\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop)","(typeof navigator !== \"undefined\") && (function(root, factory) {\n    if (typeof define === \"function\" && define.amd) {\n        define(function() {\n            return factory(root);\n        });\n    } else if (typeof module === \"object\" && module.exports) {\n        module.exports = factory(root);\n    } else {\n        root.lottie = factory(root);\n        root.bodymovin = root.lottie;\n    }\n}((window || {}), function(window) {\n\t/* global locationHref:writable, animationManager, subframeEnabled:writable, defaultCurveSegments:writable, roundValues,\r\nexpressionsPlugin:writable, PropertyFactory, ShapePropertyFactory, Matrix, idPrefix:writable, _useWebWorker:writable */\r\n/* exported locationHref, subframeEnabled, expressionsPlugin, idPrefix, _useWebWorker */\r\n\r\n'use strict';\r\n\r\n/* exported svgNS, locationHref, initialDefaultFrame, _useWebWorker */\r\n\r\nvar svgNS = 'http://www.w3.org/2000/svg';\r\n\r\nvar locationHref = '';\r\n\r\nvar initialDefaultFrame = -999999;\r\n\r\nvar _useWebWorker = false;\r\n\r\n/* global createSizedArray */\r\n/* exported subframeEnabled, expressionsPlugin, isSafari, cachedColors, bmPow, bmSqrt, bmFloor, bmMax, bmMin, ProjectInterface,\r\ndefaultCurveSegments, degToRads, roundCorner, bmRnd, styleDiv, BMEnterFrameEvent, BMCompleteEvent, BMCompleteLoopEvent,\r\nBMSegmentStartEvent, BMDestroyEvent, BMRenderFrameErrorEvent, BMConfigErrorEvent, BMAnimationConfigErrorEvent, createElementID,\r\naddSaturationToRGB, addBrightnessToRGB, addHueToRGB, rgbToHex */\r\n\r\nvar subframeEnabled = true;\r\nvar idPrefix = '';\r\nvar expressionsPlugin;\r\nvar isSafari = /^((?!chrome|android).)*safari/i.test(navigator.userAgent);\r\nvar cachedColors = {};\r\nvar bmRnd;\r\nvar bmPow = Math.pow;\r\nvar bmSqrt = Math.sqrt;\r\nvar bmFloor = Math.floor;\r\nvar bmMax = Math.max;\r\nvar bmMin = Math.min;\r\n\r\nvar BMMath = {};\r\n(function () {\r\n  var propertyNames = ['abs', 'acos', 'acosh', 'asin', 'asinh', 'atan', 'atanh', 'atan2', 'ceil', 'cbrt', 'expm1', 'clz32', 'cos', 'cosh', 'exp', 'floor', 'fround', 'hypot', 'imul', 'log', 'log1p', 'log2', 'log10', 'max', 'min', 'pow', 'random', 'round', 'sign', 'sin', 'sinh', 'sqrt', 'tan', 'tanh', 'trunc', 'E', 'LN10', 'LN2', 'LOG10E', 'LOG2E', 'PI', 'SQRT1_2', 'SQRT2'];\r\n  var i;\r\n  var len = propertyNames.length;\r\n  for (i = 0; i < len; i += 1) {\r\n    BMMath[propertyNames[i]] = Math[propertyNames[i]];\r\n  }\r\n}());\r\n\r\nfunction ProjectInterface() { return {}; }\r\n\r\nBMMath.random = Math.random;\r\nBMMath.abs = function (val) {\r\n  var tOfVal = typeof val;\r\n  if (tOfVal === 'object' && val.length) {\r\n    var absArr = createSizedArray(val.length);\r\n    var i;\r\n    var len = val.length;\r\n    for (i = 0; i < len; i += 1) {\r\n      absArr[i] = Math.abs(val[i]);\r\n    }\r\n    return absArr;\r\n  }\r\n  return Math.abs(val);\r\n};\r\nvar defaultCurveSegments = 150;\r\nvar degToRads = Math.PI / 180;\r\nvar roundCorner = 0.5519;\r\n\r\nfunction roundValues(flag) {\r\n  if (flag) {\r\n    bmRnd = Math.round;\r\n  } else {\r\n    bmRnd = function (val) {\r\n      return val;\r\n    };\r\n  }\r\n}\r\nroundValues(false);\r\n\r\nfunction styleDiv(element) {\r\n  element.style.position = 'absolute';\r\n  element.style.top = 0;\r\n  element.style.left = 0;\r\n  element.style.display = 'block';\r\n  element.style.transformOrigin = '0 0';\r\n  element.style.webkitTransformOrigin = '0 0';\r\n  element.style.backfaceVisibility = 'visible';\r\n  element.style.webkitBackfaceVisibility = 'visible';\r\n  element.style.transformStyle = 'preserve-3d';\r\n  element.style.webkitTransformStyle = 'preserve-3d';\r\n  element.style.mozTransformStyle = 'preserve-3d';\r\n}\r\n\r\nfunction BMEnterFrameEvent(type, currentTime, totalTime, frameMultiplier) {\r\n  this.type = type;\r\n  this.currentTime = currentTime;\r\n  this.totalTime = totalTime;\r\n  this.direction = frameMultiplier < 0 ? -1 : 1;\r\n}\r\n\r\nfunction BMCompleteEvent(type, frameMultiplier) {\r\n  this.type = type;\r\n  this.direction = frameMultiplier < 0 ? -1 : 1;\r\n}\r\n\r\nfunction BMCompleteLoopEvent(type, totalLoops, currentLoop, frameMultiplier) {\r\n  this.type = type;\r\n  this.currentLoop = currentLoop;\r\n  this.totalLoops = totalLoops;\r\n  this.direction = frameMultiplier < 0 ? -1 : 1;\r\n}\r\n\r\nfunction BMSegmentStartEvent(type, firstFrame, totalFrames) {\r\n  this.type = type;\r\n  this.firstFrame = firstFrame;\r\n  this.totalFrames = totalFrames;\r\n}\r\n\r\nfunction BMDestroyEvent(type, target) {\r\n  this.type = type;\r\n  this.target = target;\r\n}\r\n\r\nfunction BMRenderFrameErrorEvent(nativeError, currentTime) {\r\n  this.type = 'renderFrameError';\r\n  this.nativeError = nativeError;\r\n  this.currentTime = currentTime;\r\n}\r\n\r\nfunction BMConfigErrorEvent(nativeError) {\r\n  this.type = 'configError';\r\n  this.nativeError = nativeError;\r\n}\r\n\r\nfunction BMAnimationConfigErrorEvent(type, nativeError) {\r\n  this.type = type;\r\n  this.nativeError = nativeError;\r\n}\r\n\r\nvar createElementID = (function () {\r\n  var _count = 0;\r\n  return function createID() {\r\n    _count += 1;\r\n    return idPrefix + '__lottie_element_' + _count;\r\n  };\r\n}());\r\n\r\nfunction HSVtoRGB(h, s, v) {\r\n  var r;\r\n  var g;\r\n  var b;\r\n  var i;\r\n  var f;\r\n  var p;\r\n  var q;\r\n  var t;\r\n  i = Math.floor(h * 6);\r\n  f = h * 6 - i;\r\n  p = v * (1 - s);\r\n  q = v * (1 - f * s);\r\n  t = v * (1 - (1 - f) * s);\r\n  switch (i % 6) {\r\n    case 0: r = v; g = t; b = p; break;\r\n    case 1: r = q; g = v; b = p; break;\r\n    case 2: r = p; g = v; b = t; break;\r\n    case 3: r = p; g = q; b = v; break;\r\n    case 4: r = t; g = p; b = v; break;\r\n    case 5: r = v; g = p; b = q; break;\r\n    default: break;\r\n  }\r\n  return [r,\r\n    g,\r\n    b];\r\n}\r\n\r\nfunction RGBtoHSV(r, g, b) {\r\n  var max = Math.max(r, g, b);\r\n  var min = Math.min(r, g, b);\r\n  var d = max - min;\r\n  var h;\r\n  var s = (max === 0 ? 0 : d / max);\r\n  var v = max / 255;\r\n\r\n  switch (max) {\r\n    case min: h = 0; break;\r\n    case r: h = (g - b) + d * (g < b ? 6 : 0); h /= 6 * d; break;\r\n    case g: h = (b - r) + d * 2; h /= 6 * d; break;\r\n    case b: h = (r - g) + d * 4; h /= 6 * d; break;\r\n    default: break;\r\n  }\r\n\r\n  return [\r\n    h,\r\n    s,\r\n    v,\r\n  ];\r\n}\r\n\r\nfunction addSaturationToRGB(color, offset) {\r\n  var hsv = RGBtoHSV(color[0] * 255, color[1] * 255, color[2] * 255);\r\n  hsv[1] += offset;\r\n  if (hsv[1] > 1) {\r\n    hsv[1] = 1;\r\n  } else if (hsv[1] <= 0) {\r\n    hsv[1] = 0;\r\n  }\r\n  return HSVtoRGB(hsv[0], hsv[1], hsv[2]);\r\n}\r\n\r\nfunction addBrightnessToRGB(color, offset) {\r\n  var hsv = RGBtoHSV(color[0] * 255, color[1] * 255, color[2] * 255);\r\n  hsv[2] += offset;\r\n  if (hsv[2] > 1) {\r\n    hsv[2] = 1;\r\n  } else if (hsv[2] < 0) {\r\n    hsv[2] = 0;\r\n  }\r\n  return HSVtoRGB(hsv[0], hsv[1], hsv[2]);\r\n}\r\n\r\nfunction addHueToRGB(color, offset) {\r\n  var hsv = RGBtoHSV(color[0] * 255, color[1] * 255, color[2] * 255);\r\n  hsv[0] += offset / 360;\r\n  if (hsv[0] > 1) {\r\n    hsv[0] -= 1;\r\n  } else if (hsv[0] < 0) {\r\n    hsv[0] += 1;\r\n  }\r\n  return HSVtoRGB(hsv[0], hsv[1], hsv[2]);\r\n}\r\n\r\nvar rgbToHex = (function () {\r\n  var colorMap = [];\r\n  var i;\r\n  var hex;\r\n  for (i = 0; i < 256; i += 1) {\r\n    hex = i.toString(16);\r\n    colorMap[i] = hex.length === 1 ? '0' + hex : hex;\r\n  }\r\n\r\n  return function (r, g, b) {\r\n    if (r < 0) {\r\n      r = 0;\r\n    }\r\n    if (g < 0) {\r\n      g = 0;\r\n    }\r\n    if (b < 0) {\r\n      b = 0;\r\n    }\r\n    return '#' + colorMap[r] + colorMap[g] + colorMap[b];\r\n  };\r\n}());\r\n\r\nfunction BaseEvent() {}\r\nBaseEvent.prototype = {\r\n  triggerEvent: function (eventName, args) {\r\n    if (this._cbs[eventName]) {\r\n      var callbacks = this._cbs[eventName];\r\n      for (var i = 0; i < callbacks.length; i += 1) {\r\n        callbacks[i](args);\r\n      }\r\n    }\r\n  },\r\n  addEventListener: function (eventName, callback) {\r\n    if (!this._cbs[eventName]) {\r\n      this._cbs[eventName] = [];\r\n    }\r\n    this._cbs[eventName].push(callback);\r\n\r\n    return function () {\r\n      this.removeEventListener(eventName, callback);\r\n    }.bind(this);\r\n  },\r\n  removeEventListener: function (eventName, callback) {\r\n    if (!callback) {\r\n      this._cbs[eventName] = null;\r\n    } else if (this._cbs[eventName]) {\r\n      var i = 0;\r\n      var len = this._cbs[eventName].length;\r\n      while (i < len) {\r\n        if (this._cbs[eventName][i] === callback) {\r\n          this._cbs[eventName].splice(i, 1);\r\n          i -= 1;\r\n          len -= 1;\r\n        }\r\n        i += 1;\r\n      }\r\n      if (!this._cbs[eventName].length) {\r\n        this._cbs[eventName] = null;\r\n      }\r\n    }\r\n  },\r\n};\r\n\r\n/* exported createTypedArray, createSizedArray */\r\n\r\nvar createTypedArray = (function () {\r\n  function createRegularArray(type, len) {\r\n    var i = 0;\r\n    var arr = [];\r\n    var value;\r\n    switch (type) {\r\n      case 'int16':\r\n      case 'uint8c':\r\n        value = 1;\r\n        break;\r\n      default:\r\n        value = 1.1;\r\n        break;\r\n    }\r\n    for (i = 0; i < len; i += 1) {\r\n      arr.push(value);\r\n    }\r\n    return arr;\r\n  }\r\n  function createTypedArrayFactory(type, len) {\r\n    if (type === 'float32') {\r\n      return new Float32Array(len);\r\n    } if (type === 'int16') {\r\n      return new Int16Array(len);\r\n    } if (type === 'uint8c') {\r\n      return new Uint8ClampedArray(len);\r\n    }\r\n    return createRegularArray(type, len);\r\n  }\r\n  if (typeof Uint8ClampedArray === 'function' && typeof Float32Array === 'function') {\r\n    return createTypedArrayFactory;\r\n  }\r\n  return createRegularArray;\r\n}());\r\n\r\nfunction createSizedArray(len) {\r\n  return Array.apply(null, { length: len });\r\n}\r\n\r\n/* global svgNS */\r\n/* exported createNS */\r\n\r\nfunction createNS(type) {\r\n  // return {appendChild:function(){},setAttribute:function(){},style:{}}\r\n  return document.createElementNS(svgNS, type);\r\n}\r\n\r\n/* exported createTag */\r\n\r\nfunction createTag(type) {\r\n  // return {appendChild:function(){},setAttribute:function(){},style:{}}\r\n  return document.createElement(type);\r\n}\r\n\r\nfunction DynamicPropertyContainer() {}\r\nDynamicPropertyContainer.prototype = {\r\n  addDynamicProperty: function (prop) {\r\n    if (this.dynamicProperties.indexOf(prop) === -1) {\r\n      this.dynamicProperties.push(prop);\r\n      this.container.addDynamicProperty(this);\r\n      this._isAnimated = true;\r\n    }\r\n  },\r\n  iterateDynamicProperties: function () {\r\n    this._mdf = false;\r\n    var i;\r\n    var len = this.dynamicProperties.length;\r\n    for (i = 0; i < len; i += 1) {\r\n      this.dynamicProperties[i].getValue();\r\n      if (this.dynamicProperties[i]._mdf) {\r\n        this._mdf = true;\r\n      }\r\n    }\r\n  },\r\n  initDynamicPropertyContainer: function (container) {\r\n    this.container = container;\r\n    this.dynamicProperties = [];\r\n    this._mdf = false;\r\n    this._isAnimated = false;\r\n  },\r\n};\r\n\r\n/* exported getBlendMode */\r\n\r\nvar getBlendMode = (function () {\r\n  var blendModeEnums = {\r\n    0: 'source-over',\r\n    1: 'multiply',\r\n    2: 'screen',\r\n    3: 'overlay',\r\n    4: 'darken',\r\n    5: 'lighten',\r\n    6: 'color-dodge',\r\n    7: 'color-burn',\r\n    8: 'hard-light',\r\n    9: 'soft-light',\r\n    10: 'difference',\r\n    11: 'exclusion',\r\n    12: 'hue',\r\n    13: 'saturation',\r\n    14: 'color',\r\n    15: 'luminosity',\r\n  };\r\n\r\n  return function (mode) {\r\n    return blendModeEnums[mode] || '';\r\n  };\r\n}());\r\n\r\n/* exported lineCapEnum, lineJoinEnum */\r\n\r\nvar lineCapEnum = {\r\n  1: 'butt',\r\n  2: 'round',\r\n  3: 'square',\r\n};\r\n\r\nvar lineJoinEnum = {\r\n  1: 'miter',\r\n  2: 'round',\r\n  3: 'bevel',\r\n};\r\n\r\n/* global createTypedArray */\r\n\r\n/*!\r\n Transformation Matrix v2.0\r\n (c) Epistemex 2014-2015\r\n www.epistemex.com\r\n By Ken Fyrstenberg\r\n Contributions by leeoniya.\r\n License: MIT, header required.\r\n */\r\n\r\n/**\r\n * 2D transformation matrix object initialized with identity matrix.\r\n *\r\n * The matrix can synchronize a canvas context by supplying the context\r\n * as an argument, or later apply current absolute transform to an\r\n * existing context.\r\n *\r\n * All values are handled as floating point values.\r\n *\r\n * @param {CanvasRenderingContext2D} [context] - Optional context to sync with Matrix\r\n * @prop {number} a - scale x\r\n * @prop {number} b - shear y\r\n * @prop {number} c - shear x\r\n * @prop {number} d - scale y\r\n * @prop {number} e - translate x\r\n * @prop {number} f - translate y\r\n * @prop {CanvasRenderingContext2D|null} [context=null] - set or get current canvas context\r\n * @constructor\r\n */\r\n\r\nvar Matrix = (function () {\r\n  var _cos = Math.cos;\r\n  var _sin = Math.sin;\r\n  var _tan = Math.tan;\r\n  var _rnd = Math.round;\r\n\r\n  function reset() {\r\n    this.props[0] = 1;\r\n    this.props[1] = 0;\r\n    this.props[2] = 0;\r\n    this.props[3] = 0;\r\n    this.props[4] = 0;\r\n    this.props[5] = 1;\r\n    this.props[6] = 0;\r\n    this.props[7] = 0;\r\n    this.props[8] = 0;\r\n    this.props[9] = 0;\r\n    this.props[10] = 1;\r\n    this.props[11] = 0;\r\n    this.props[12] = 0;\r\n    this.props[13] = 0;\r\n    this.props[14] = 0;\r\n    this.props[15] = 1;\r\n    return this;\r\n  }\r\n\r\n  function rotate(angle) {\r\n    if (angle === 0) {\r\n      return this;\r\n    }\r\n    var mCos = _cos(angle);\r\n    var mSin = _sin(angle);\r\n    return this._t(mCos, -mSin, 0, 0, mSin, mCos, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);\r\n  }\r\n\r\n  function rotateX(angle) {\r\n    if (angle === 0) {\r\n      return this;\r\n    }\r\n    var mCos = _cos(angle);\r\n    var mSin = _sin(angle);\r\n    return this._t(1, 0, 0, 0, 0, mCos, -mSin, 0, 0, mSin, mCos, 0, 0, 0, 0, 1);\r\n  }\r\n\r\n  function rotateY(angle) {\r\n    if (angle === 0) {\r\n      return this;\r\n    }\r\n    var mCos = _cos(angle);\r\n    var mSin = _sin(angle);\r\n    return this._t(mCos, 0, mSin, 0, 0, 1, 0, 0, -mSin, 0, mCos, 0, 0, 0, 0, 1);\r\n  }\r\n\r\n  function rotateZ(angle) {\r\n    if (angle === 0) {\r\n      return this;\r\n    }\r\n    var mCos = _cos(angle);\r\n    var mSin = _sin(angle);\r\n    return this._t(mCos, -mSin, 0, 0, mSin, mCos, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);\r\n  }\r\n\r\n  function shear(sx, sy) {\r\n    return this._t(1, sy, sx, 1, 0, 0);\r\n  }\r\n\r\n  function skew(ax, ay) {\r\n    return this.shear(_tan(ax), _tan(ay));\r\n  }\r\n\r\n  function skewFromAxis(ax, angle) {\r\n    var mCos = _cos(angle);\r\n    var mSin = _sin(angle);\r\n    return this._t(mCos, mSin, 0, 0, -mSin, mCos, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1)\r\n      ._t(1, 0, 0, 0, _tan(ax), 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1)\r\n      ._t(mCos, -mSin, 0, 0, mSin, mCos, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);\r\n    // return this._t(mCos, mSin, -mSin, mCos, 0, 0)._t(1, 0, _tan(ax), 1, 0, 0)._t(mCos, -mSin, mSin, mCos, 0, 0);\r\n  }\r\n\r\n  function scale(sx, sy, sz) {\r\n    if (!sz && sz !== 0) {\r\n      sz = 1;\r\n    }\r\n    if (sx === 1 && sy === 1 && sz === 1) {\r\n      return this;\r\n    }\r\n    return this._t(sx, 0, 0, 0, 0, sy, 0, 0, 0, 0, sz, 0, 0, 0, 0, 1);\r\n  }\r\n\r\n  function setTransform(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {\r\n    this.props[0] = a;\r\n    this.props[1] = b;\r\n    this.props[2] = c;\r\n    this.props[3] = d;\r\n    this.props[4] = e;\r\n    this.props[5] = f;\r\n    this.props[6] = g;\r\n    this.props[7] = h;\r\n    this.props[8] = i;\r\n    this.props[9] = j;\r\n    this.props[10] = k;\r\n    this.props[11] = l;\r\n    this.props[12] = m;\r\n    this.props[13] = n;\r\n    this.props[14] = o;\r\n    this.props[15] = p;\r\n    return this;\r\n  }\r\n\r\n  function translate(tx, ty, tz) {\r\n    tz = tz || 0;\r\n    if (tx !== 0 || ty !== 0 || tz !== 0) {\r\n      return this._t(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, tx, ty, tz, 1);\r\n    }\r\n    return this;\r\n  }\r\n\r\n  function transform(a2, b2, c2, d2, e2, f2, g2, h2, i2, j2, k2, l2, m2, n2, o2, p2) {\r\n    var _p = this.props;\r\n\r\n    if (a2 === 1 && b2 === 0 && c2 === 0 && d2 === 0 && e2 === 0 && f2 === 1 && g2 === 0 && h2 === 0 && i2 === 0 && j2 === 0 && k2 === 1 && l2 === 0) {\r\n      // NOTE: commenting this condition because TurboFan deoptimizes code when present\r\n      // if(m2 !== 0 || n2 !== 0 || o2 !== 0){\r\n      _p[12] = _p[12] * a2 + _p[15] * m2;\r\n      _p[13] = _p[13] * f2 + _p[15] * n2;\r\n      _p[14] = _p[14] * k2 + _p[15] * o2;\r\n      _p[15] *= p2;\r\n      // }\r\n      this._identityCalculated = false;\r\n      return this;\r\n    }\r\n\r\n    var a1 = _p[0];\r\n    var b1 = _p[1];\r\n    var c1 = _p[2];\r\n    var d1 = _p[3];\r\n    var e1 = _p[4];\r\n    var f1 = _p[5];\r\n    var g1 = _p[6];\r\n    var h1 = _p[7];\r\n    var i1 = _p[8];\r\n    var j1 = _p[9];\r\n    var k1 = _p[10];\r\n    var l1 = _p[11];\r\n    var m1 = _p[12];\r\n    var n1 = _p[13];\r\n    var o1 = _p[14];\r\n    var p1 = _p[15];\r\n\r\n    /* matrix order (canvas compatible):\r\n         * ace\r\n         * bdf\r\n         * 001\r\n         */\r\n    _p[0] = a1 * a2 + b1 * e2 + c1 * i2 + d1 * m2;\r\n    _p[1] = a1 * b2 + b1 * f2 + c1 * j2 + d1 * n2;\r\n    _p[2] = a1 * c2 + b1 * g2 + c1 * k2 + d1 * o2;\r\n    _p[3] = a1 * d2 + b1 * h2 + c1 * l2 + d1 * p2;\r\n\r\n    _p[4] = e1 * a2 + f1 * e2 + g1 * i2 + h1 * m2;\r\n    _p[5] = e1 * b2 + f1 * f2 + g1 * j2 + h1 * n2;\r\n    _p[6] = e1 * c2 + f1 * g2 + g1 * k2 + h1 * o2;\r\n    _p[7] = e1 * d2 + f1 * h2 + g1 * l2 + h1 * p2;\r\n\r\n    _p[8] = i1 * a2 + j1 * e2 + k1 * i2 + l1 * m2;\r\n    _p[9] = i1 * b2 + j1 * f2 + k1 * j2 + l1 * n2;\r\n    _p[10] = i1 * c2 + j1 * g2 + k1 * k2 + l1 * o2;\r\n    _p[11] = i1 * d2 + j1 * h2 + k1 * l2 + l1 * p2;\r\n\r\n    _p[12] = m1 * a2 + n1 * e2 + o1 * i2 + p1 * m2;\r\n    _p[13] = m1 * b2 + n1 * f2 + o1 * j2 + p1 * n2;\r\n    _p[14] = m1 * c2 + n1 * g2 + o1 * k2 + p1 * o2;\r\n    _p[15] = m1 * d2 + n1 * h2 + o1 * l2 + p1 * p2;\r\n\r\n    this._identityCalculated = false;\r\n    return this;\r\n  }\r\n\r\n  function isIdentity() {\r\n    if (!this._identityCalculated) {\r\n      this._identity = !(this.props[0] !== 1 || this.props[1] !== 0 || this.props[2] !== 0 || this.props[3] !== 0 || this.props[4] !== 0 || this.props[5] !== 1 || this.props[6] !== 0 || this.props[7] !== 0 || this.props[8] !== 0 || this.props[9] !== 0 || this.props[10] !== 1 || this.props[11] !== 0 || this.props[12] !== 0 || this.props[13] !== 0 || this.props[14] !== 0 || this.props[15] !== 1);\r\n      this._identityCalculated = true;\r\n    }\r\n    return this._identity;\r\n  }\r\n\r\n  function equals(matr) {\r\n    var i = 0;\r\n    while (i < 16) {\r\n      if (matr.props[i] !== this.props[i]) {\r\n        return false;\r\n      }\r\n      i += 1;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  function clone(matr) {\r\n    var i;\r\n    for (i = 0; i < 16; i += 1) {\r\n      matr.props[i] = this.props[i];\r\n    }\r\n    return matr;\r\n  }\r\n\r\n  function cloneFromProps(props) {\r\n    var i;\r\n    for (i = 0; i < 16; i += 1) {\r\n      this.props[i] = props[i];\r\n    }\r\n  }\r\n\r\n  function applyToPoint(x, y, z) {\r\n    return {\r\n      x: x * this.props[0] + y * this.props[4] + z * this.props[8] + this.props[12],\r\n      y: x * this.props[1] + y * this.props[5] + z * this.props[9] + this.props[13],\r\n      z: x * this.props[2] + y * this.props[6] + z * this.props[10] + this.props[14],\r\n    };\r\n    /* return {\r\n         x: x * me.a + y * me.c + me.e,\r\n         y: x * me.b + y * me.d + me.f\r\n         }; */\r\n  }\r\n  function applyToX(x, y, z) {\r\n    return x * this.props[0] + y * this.props[4] + z * this.props[8] + this.props[12];\r\n  }\r\n  function applyToY(x, y, z) {\r\n    return x * this.props[1] + y * this.props[5] + z * this.props[9] + this.props[13];\r\n  }\r\n  function applyToZ(x, y, z) {\r\n    return x * this.props[2] + y * this.props[6] + z * this.props[10] + this.props[14];\r\n  }\r\n\r\n  function getInverseMatrix() {\r\n    var determinant = this.props[0] * this.props[5] - this.props[1] * this.props[4];\r\n    var a = this.props[5] / determinant;\r\n    var b = -this.props[1] / determinant;\r\n    var c = -this.props[4] / determinant;\r\n    var d = this.props[0] / determinant;\r\n    var e = (this.props[4] * this.props[13] - this.props[5] * this.props[12]) / determinant;\r\n    var f = -(this.props[0] * this.props[13] - this.props[1] * this.props[12]) / determinant;\r\n    var inverseMatrix = new Matrix();\r\n    inverseMatrix.props[0] = a;\r\n    inverseMatrix.props[1] = b;\r\n    inverseMatrix.props[4] = c;\r\n    inverseMatrix.props[5] = d;\r\n    inverseMatrix.props[12] = e;\r\n    inverseMatrix.props[13] = f;\r\n    return inverseMatrix;\r\n  }\r\n\r\n  function inversePoint(pt) {\r\n    var inverseMatrix = this.getInverseMatrix();\r\n    return inverseMatrix.applyToPointArray(pt[0], pt[1], pt[2] || 0);\r\n  }\r\n\r\n  function inversePoints(pts) {\r\n    var i;\r\n    var len = pts.length;\r\n    var retPts = [];\r\n    for (i = 0; i < len; i += 1) {\r\n      retPts[i] = inversePoint(pts[i]);\r\n    }\r\n    return retPts;\r\n  }\r\n\r\n  function applyToTriplePoints(pt1, pt2, pt3) {\r\n    var arr = createTypedArray('float32', 6);\r\n    if (this.isIdentity()) {\r\n      arr[0] = pt1[0];\r\n      arr[1] = pt1[1];\r\n      arr[2] = pt2[0];\r\n      arr[3] = pt2[1];\r\n      arr[4] = pt3[0];\r\n      arr[5] = pt3[1];\r\n    } else {\r\n      var p0 = this.props[0];\r\n      var p1 = this.props[1];\r\n      var p4 = this.props[4];\r\n      var p5 = this.props[5];\r\n      var p12 = this.props[12];\r\n      var p13 = this.props[13];\r\n      arr[0] = pt1[0] * p0 + pt1[1] * p4 + p12;\r\n      arr[1] = pt1[0] * p1 + pt1[1] * p5 + p13;\r\n      arr[2] = pt2[0] * p0 + pt2[1] * p4 + p12;\r\n      arr[3] = pt2[0] * p1 + pt2[1] * p5 + p13;\r\n      arr[4] = pt3[0] * p0 + pt3[1] * p4 + p12;\r\n      arr[5] = pt3[0] * p1 + pt3[1] * p5 + p13;\r\n    }\r\n    return arr;\r\n  }\r\n\r\n  function applyToPointArray(x, y, z) {\r\n    var arr;\r\n    if (this.isIdentity()) {\r\n      arr = [x, y, z];\r\n    } else {\r\n      arr = [\r\n        x * this.props[0] + y * this.props[4] + z * this.props[8] + this.props[12],\r\n        x * this.props[1] + y * this.props[5] + z * this.props[9] + this.props[13],\r\n        x * this.props[2] + y * this.props[6] + z * this.props[10] + this.props[14],\r\n      ];\r\n    }\r\n    return arr;\r\n  }\r\n\r\n  function applyToPointStringified(x, y) {\r\n    if (this.isIdentity()) {\r\n      return x + ',' + y;\r\n    }\r\n    var _p = this.props;\r\n    return Math.round((x * _p[0] + y * _p[4] + _p[12]) * 100) / 100 + ',' + Math.round((x * _p[1] + y * _p[5] + _p[13]) * 100) / 100;\r\n  }\r\n\r\n  function toCSS() {\r\n    // Doesn't make much sense to add this optimization. If it is an identity matrix, it's very likely this will get called only once since it won't be keyframed.\r\n    /* if(this.isIdentity()) {\r\n            return '';\r\n        } */\r\n    var i = 0;\r\n    var props = this.props;\r\n    var cssValue = 'matrix3d(';\r\n    var v = 10000;\r\n    while (i < 16) {\r\n      cssValue += _rnd(props[i] * v) / v;\r\n      cssValue += i === 15 ? ')' : ',';\r\n      i += 1;\r\n    }\r\n    return cssValue;\r\n  }\r\n\r\n  function roundMatrixProperty(val) {\r\n    var v = 10000;\r\n    if ((val < 0.000001 && val > 0) || (val > -0.000001 && val < 0)) {\r\n      return _rnd(val * v) / v;\r\n    }\r\n    return val;\r\n  }\r\n\r\n  function to2dCSS() {\r\n    // Doesn't make much sense to add this optimization. If it is an identity matrix, it's very likely this will get called only once since it won't be keyframed.\r\n    /* if(this.isIdentity()) {\r\n            return '';\r\n        } */\r\n    var props = this.props;\r\n    var _a = roundMatrixProperty(props[0]);\r\n    var _b = roundMatrixProperty(props[1]);\r\n    var _c = roundMatrixProperty(props[4]);\r\n    var _d = roundMatrixProperty(props[5]);\r\n    var _e = roundMatrixProperty(props[12]);\r\n    var _f = roundMatrixProperty(props[13]);\r\n    return 'matrix(' + _a + ',' + _b + ',' + _c + ',' + _d + ',' + _e + ',' + _f + ')';\r\n  }\r\n\r\n  return function () {\r\n    this.reset = reset;\r\n    this.rotate = rotate;\r\n    this.rotateX = rotateX;\r\n    this.rotateY = rotateY;\r\n    this.rotateZ = rotateZ;\r\n    this.skew = skew;\r\n    this.skewFromAxis = skewFromAxis;\r\n    this.shear = shear;\r\n    this.scale = scale;\r\n    this.setTransform = setTransform;\r\n    this.translate = translate;\r\n    this.transform = transform;\r\n    this.applyToPoint = applyToPoint;\r\n    this.applyToX = applyToX;\r\n    this.applyToY = applyToY;\r\n    this.applyToZ = applyToZ;\r\n    this.applyToPointArray = applyToPointArray;\r\n    this.applyToTriplePoints = applyToTriplePoints;\r\n    this.applyToPointStringified = applyToPointStringified;\r\n    this.toCSS = toCSS;\r\n    this.to2dCSS = to2dCSS;\r\n    this.clone = clone;\r\n    this.cloneFromProps = cloneFromProps;\r\n    this.equals = equals;\r\n    this.inversePoints = inversePoints;\r\n    this.inversePoint = inversePoint;\r\n    this.getInverseMatrix = getInverseMatrix;\r\n    this._t = this.transform;\r\n    this.isIdentity = isIdentity;\r\n    this._identity = true;\r\n    this._identityCalculated = false;\r\n\r\n    this.props = createTypedArray('float32', 16);\r\n    this.reset();\r\n  };\r\n}());\r\n\r\n/* eslint-disable */\r\n/*\r\n Copyright 2014 David Bau.\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining\r\n a copy of this software and associated documentation files (the\r\n \"Software\"), to deal in the Software without restriction, including\r\n without limitation the rights to use, copy, modify, merge, publish,\r\n distribute, sublicense, and/or sell copies of the Software, and to\r\n permit persons to whom the Software is furnished to do so, subject to\r\n the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be\r\n included in all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\r\n EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\r\n MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\r\n IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\r\n CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\r\n TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\r\n SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n\r\n */\r\n\r\n(function (pool, math) {\r\n//\r\n// The following constants are related to IEEE 754 limits.\r\n//\r\n    var global = this,\r\n        width = 256,        // each RC4 output is 0 <= x < 256\r\n        chunks = 6,         // at least six RC4 outputs for each double\r\n        digits = 52,        // there are 52 significant digits in a double\r\n        rngname = 'random', // rngname: name for Math.random and Math.seedrandom\r\n        startdenom = math.pow(width, chunks),\r\n        significance = math.pow(2, digits),\r\n        overflow = significance * 2,\r\n        mask = width - 1,\r\n        nodecrypto;         // node.js crypto module, initialized at the bottom.\r\n\r\n//\r\n// seedrandom()\r\n// This is the seedrandom function described above.\r\n//\r\n    function seedrandom(seed, options, callback) {\r\n        var key = [];\r\n        options = (options === true) ? { entropy: true } : (options || {});\r\n\r\n        // Flatten the seed string or build one from local entropy if needed.\r\n        var shortseed = mixkey(flatten(\r\n            options.entropy ? [seed, tostring(pool)] :\r\n                (seed === null) ? autoseed() : seed, 3), key);\r\n\r\n        // Use the seed to initialize an ARC4 generator.\r\n        var arc4 = new ARC4(key);\r\n\r\n        // This function returns a random double in [0, 1) that contains\r\n        // randomness in every bit of the mantissa of the IEEE 754 value.\r\n        var prng = function() {\r\n            var n = arc4.g(chunks),             // Start with a numerator n < 2 ^ 48\r\n                d = startdenom,                 //   and denominator d = 2 ^ 48.\r\n                x = 0;                          //   and no 'extra last byte'.\r\n            while (n < significance) {          // Fill up all significant digits by\r\n                n = (n + x) * width;              //   shifting numerator and\r\n                d *= width;                       //   denominator and generating a\r\n                x = arc4.g(1);                    //   new least-significant-byte.\r\n            }\r\n            while (n >= overflow) {             // To avoid rounding up, before adding\r\n                n /= 2;                           //   last byte, shift everything\r\n                d /= 2;                           //   right using integer math until\r\n                x >>>= 1;                         //   we have exactly the desired bits.\r\n            }\r\n            return (n + x) / d;                 // Form the number within [0, 1).\r\n        };\r\n\r\n        prng.int32 = function() { return arc4.g(4) | 0; };\r\n        prng.quick = function() { return arc4.g(4) / 0x100000000; };\r\n        prng.double = prng;\r\n\r\n        // Mix the randomness into accumulated entropy.\r\n        mixkey(tostring(arc4.S), pool);\r\n\r\n        // Calling convention: what to return as a function of prng, seed, is_math.\r\n        return (options.pass || callback ||\r\n        function(prng, seed, is_math_call, state) {\r\n            if (state) {\r\n                // Load the arc4 state from the given state if it has an S array.\r\n                if (state.S) { copy(state, arc4); }\r\n                // Only provide the .state method if requested via options.state.\r\n                prng.state = function() { return copy(arc4, {}); };\r\n            }\r\n\r\n            // If called as a method of Math (Math.seedrandom()), mutate\r\n            // Math.random because that is how seedrandom.js has worked since v1.0.\r\n            if (is_math_call) { math[rngname] = prng; return seed; }\r\n\r\n            // Otherwise, it is a newer calling convention, so return the\r\n            // prng directly.\r\n            else return prng;\r\n        })(\r\n            prng,\r\n            shortseed,\r\n            'global' in options ? options.global : (this == math),\r\n            options.state);\r\n    }\r\n    math['seed' + rngname] = seedrandom;\r\n\r\n//\r\n// ARC4\r\n//\r\n// An ARC4 implementation.  The constructor takes a key in the form of\r\n// an array of at most (width) integers that should be 0 <= x < (width).\r\n//\r\n// The g(count) method returns a pseudorandom integer that concatenates\r\n// the next (count) outputs from ARC4.  Its return value is a number x\r\n// that is in the range 0 <= x < (width ^ count).\r\n//\r\n    function ARC4(key) {\r\n        var t, keylen = key.length,\r\n            me = this, i = 0, j = me.i = me.j = 0, s = me.S = [];\r\n\r\n        // The empty key [] is treated as [0].\r\n        if (!keylen) { key = [keylen++]; }\r\n\r\n        // Set up S using the standard key scheduling algorithm.\r\n        while (i < width) {\r\n            s[i] = i++;\r\n        }\r\n        for (i = 0; i < width; i++) {\r\n            s[i] = s[j = mask & (j + key[i % keylen] + (t = s[i]))];\r\n            s[j] = t;\r\n        }\r\n\r\n        // The \"g\" method returns the next (count) outputs as one number.\r\n        me.g = function(count) {\r\n            // Using instance members instead of closure state nearly doubles speed.\r\n            var t, r = 0,\r\n                i = me.i, j = me.j, s = me.S;\r\n            while (count--) {\r\n                t = s[i = mask & (i + 1)];\r\n                r = r * width + s[mask & ((s[i] = s[j = mask & (j + t)]) + (s[j] = t))];\r\n            }\r\n            me.i = i; me.j = j;\r\n            return r;\r\n            // For robust unpredictability, the function call below automatically\r\n            // discards an initial batch of values.  This is called RC4-drop[256].\r\n            // See http://google.com/search?q=rsa+fluhrer+response&btnI\r\n        };\r\n    }\r\n\r\n//\r\n// copy()\r\n// Copies internal state of ARC4 to or from a plain object.\r\n//\r\n    function copy(f, t) {\r\n        t.i = f.i;\r\n        t.j = f.j;\r\n        t.S = f.S.slice();\r\n        return t;\r\n    }\r\n\r\n//\r\n// flatten()\r\n// Converts an object tree to nested arrays of strings.\r\n//\r\n    function flatten(obj, depth) {\r\n        var result = [], typ = (typeof obj), prop;\r\n        if (depth && typ == 'object') {\r\n            for (prop in obj) {\r\n                try { result.push(flatten(obj[prop], depth - 1)); } catch (e) {}\r\n            }\r\n        }\r\n        return (result.length ? result : typ == 'string' ? obj : obj + '\\0');\r\n    }\r\n\r\n//\r\n// mixkey()\r\n// Mixes a string seed into a key that is an array of integers, and\r\n// returns a shortened string seed that is equivalent to the result key.\r\n//\r\n    function mixkey(seed, key) {\r\n        var stringseed = seed + '', smear, j = 0;\r\n        while (j < stringseed.length) {\r\n            key[mask & j] =\r\n                mask & ((smear ^= key[mask & j] * 19) + stringseed.charCodeAt(j++));\r\n        }\r\n        return tostring(key);\r\n    }\r\n\r\n//\r\n// autoseed()\r\n// Returns an object for autoseeding, using window.crypto and Node crypto\r\n// module if available.\r\n//\r\n    function autoseed() {\r\n        try {\r\n            if (nodecrypto) { return tostring(nodecrypto.randomBytes(width)); }\r\n            var out = new Uint8Array(width);\r\n            (global.crypto || global.msCrypto).getRandomValues(out);\r\n            return tostring(out);\r\n        } catch (e) {\r\n            var browser = global.navigator,\r\n                plugins = browser && browser.plugins;\r\n            return [+new Date(), global, plugins, global.screen, tostring(pool)];\r\n        }\r\n    }\r\n\r\n//\r\n// tostring()\r\n// Converts an array of charcodes to a string\r\n//\r\n    function tostring(a) {\r\n        return String.fromCharCode.apply(0, a);\r\n    }\r\n\r\n//\r\n// When seedrandom.js is loaded, we immediately mix a few bits\r\n// from the built-in RNG into the entropy pool.  Because we do\r\n// not want to interfere with deterministic PRNG state later,\r\n// seedrandom will not call math.random on its own again after\r\n// initialization.\r\n//\r\n    mixkey(math.random(), pool);\r\n\r\n//\r\n// Nodejs and AMD support: export the implementation as a module using\r\n// either convention.\r\n//\r\n\r\n// End anonymous scope, and pass initial values.\r\n})(\r\n    [],     // pool: entropy pool starts empty\r\n    BMMath    // math: package containing random, pow, and seedrandom\r\n);\r\n/* eslint-disable */\r\nvar BezierFactory = (function () {\r\n  /**\r\n     * BezierEasing - use bezier curve for transition easing function\r\n     * by Gaëtan Renaudeau 2014 - 2015 – MIT License\r\n     *\r\n     * Credits: is based on Firefox's nsSMILKeySpline.cpp\r\n     * Usage:\r\n     * var spline = BezierEasing([ 0.25, 0.1, 0.25, 1.0 ])\r\n     * spline.get(x) => returns the easing value | x must be in [0, 1] range\r\n     *\r\n     */\r\n\r\n  var ob = {};\r\n  ob.getBezierEasing = getBezierEasing;\r\n  var beziers = {};\r\n\r\n  function getBezierEasing(a, b, c, d, nm) {\r\n    var str = nm || ('bez_' + a + '_' + b + '_' + c + '_' + d).replace(/\\./g, 'p');\r\n    if (beziers[str]) {\r\n      return beziers[str];\r\n    }\r\n    var bezEasing = new BezierEasing([a, b, c, d]);\r\n    beziers[str] = bezEasing;\r\n    return bezEasing;\r\n  }\r\n\r\n  // These values are established by empiricism with tests (tradeoff: performance VS precision)\r\n  var NEWTON_ITERATIONS = 4;\r\n  var NEWTON_MIN_SLOPE = 0.001;\r\n  var SUBDIVISION_PRECISION = 0.0000001;\r\n  var SUBDIVISION_MAX_ITERATIONS = 10;\r\n\r\n  var kSplineTableSize = 11;\r\n  var kSampleStepSize = 1.0 / (kSplineTableSize - 1.0);\r\n\r\n  var float32ArraySupported = typeof Float32Array === 'function';\r\n\r\n  function A(aA1, aA2) { return 1.0 - 3.0 * aA2 + 3.0 * aA1; }\r\n  function B(aA1, aA2) { return 3.0 * aA2 - 6.0 * aA1; }\r\n  function C(aA1) { return 3.0 * aA1; }\r\n\r\n  // Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\r\n  function calcBezier(aT, aA1, aA2) {\r\n    return ((A(aA1, aA2) * aT + B(aA1, aA2)) * aT + C(aA1)) * aT;\r\n  }\r\n\r\n  // Returns dx/dt given t, x1, and x2, or dy/dt given t, y1, and y2.\r\n  function getSlope(aT, aA1, aA2) {\r\n    return 3.0 * A(aA1, aA2) * aT * aT + 2.0 * B(aA1, aA2) * aT + C(aA1);\r\n  }\r\n\r\n  function binarySubdivide(aX, aA, aB, mX1, mX2) {\r\n    var currentX,\r\n      currentT,\r\n      i = 0;\r\n    do {\r\n      currentT = aA + (aB - aA) / 2.0;\r\n      currentX = calcBezier(currentT, mX1, mX2) - aX;\r\n      if (currentX > 0.0) {\r\n        aB = currentT;\r\n      } else {\r\n        aA = currentT;\r\n      }\r\n    } while (Math.abs(currentX) > SUBDIVISION_PRECISION && ++i < SUBDIVISION_MAX_ITERATIONS);\r\n    return currentT;\r\n  }\r\n\r\n  function newtonRaphsonIterate(aX, aGuessT, mX1, mX2) {\r\n    for (var i = 0; i < NEWTON_ITERATIONS; ++i) {\r\n      var currentSlope = getSlope(aGuessT, mX1, mX2);\r\n      if (currentSlope === 0.0) return aGuessT;\r\n      var currentX = calcBezier(aGuessT, mX1, mX2) - aX;\r\n      aGuessT -= currentX / currentSlope;\r\n    }\r\n    return aGuessT;\r\n  }\r\n\r\n  /**\r\n     * points is an array of [ mX1, mY1, mX2, mY2 ]\r\n     */\r\n  function BezierEasing(points) {\r\n    this._p = points;\r\n    this._mSampleValues = float32ArraySupported ? new Float32Array(kSplineTableSize) : new Array(kSplineTableSize);\r\n    this._precomputed = false;\r\n\r\n    this.get = this.get.bind(this);\r\n  }\r\n\r\n  BezierEasing.prototype = {\r\n\r\n    get: function (x) {\r\n      var mX1 = this._p[0],\r\n        mY1 = this._p[1],\r\n        mX2 = this._p[2],\r\n        mY2 = this._p[3];\r\n      if (!this._precomputed) this._precompute();\r\n      if (mX1 === mY1 && mX2 === mY2) return x; // linear\r\n      // Because JavaScript number are imprecise, we should guarantee the extremes are right.\r\n      if (x === 0) return 0;\r\n      if (x === 1) return 1;\r\n      return calcBezier(this._getTForX(x), mY1, mY2);\r\n    },\r\n\r\n    // Private part\r\n\r\n    _precompute: function () {\r\n      var mX1 = this._p[0],\r\n        mY1 = this._p[1],\r\n        mX2 = this._p[2],\r\n        mY2 = this._p[3];\r\n      this._precomputed = true;\r\n      if (mX1 !== mY1 || mX2 !== mY2) { this._calcSampleValues(); }\r\n    },\r\n\r\n    _calcSampleValues: function () {\r\n      var mX1 = this._p[0],\r\n        mX2 = this._p[2];\r\n      for (var i = 0; i < kSplineTableSize; ++i) {\r\n        this._mSampleValues[i] = calcBezier(i * kSampleStepSize, mX1, mX2);\r\n      }\r\n    },\r\n\r\n    /**\r\n         * getTForX chose the fastest heuristic to determine the percentage value precisely from a given X projection.\r\n         */\r\n    _getTForX: function (aX) {\r\n      var mX1 = this._p[0],\r\n        mX2 = this._p[2],\r\n        mSampleValues = this._mSampleValues;\r\n\r\n      var intervalStart = 0.0;\r\n      var currentSample = 1;\r\n      var lastSample = kSplineTableSize - 1;\r\n\r\n      for (; currentSample !== lastSample && mSampleValues[currentSample] <= aX; ++currentSample) {\r\n        intervalStart += kSampleStepSize;\r\n      }\r\n      --currentSample;\r\n\r\n      // Interpolate to provide an initial guess for t\r\n      var dist = (aX - mSampleValues[currentSample]) / (mSampleValues[currentSample + 1] - mSampleValues[currentSample]);\r\n      var guessForT = intervalStart + dist * kSampleStepSize;\r\n\r\n      var initialSlope = getSlope(guessForT, mX1, mX2);\r\n      if (initialSlope >= NEWTON_MIN_SLOPE) {\r\n        return newtonRaphsonIterate(aX, guessForT, mX1, mX2);\r\n      } if (initialSlope === 0.0) {\r\n        return guessForT;\r\n      }\r\n      return binarySubdivide(aX, intervalStart, intervalStart + kSampleStepSize, mX1, mX2);\r\n    },\r\n  };\r\n\r\n  return ob;\r\n}());\r\n\r\n(function () {\r\n  var lastTime = 0;\r\n  var vendors = ['ms', 'moz', 'webkit', 'o'];\r\n  for (var x = 0; x < vendors.length && !window.requestAnimationFrame; ++x) { // eslint-disable-line no-plusplus\r\n    window.requestAnimationFrame = window[vendors[x] + 'RequestAnimationFrame'];\r\n    window.cancelAnimationFrame = window[vendors[x] + 'CancelAnimationFrame'] || window[vendors[x] + 'CancelRequestAnimationFrame'];\r\n  }\r\n  if (!window.requestAnimationFrame) {\r\n    window.requestAnimationFrame = function (callback) {\r\n      var currTime = new Date().getTime();\r\n      var timeToCall = Math.max(0, 16 - (currTime - lastTime));\r\n      var id = setTimeout(function () {\r\n        callback(currTime + timeToCall);\r\n      },\r\n      timeToCall);\r\n      lastTime = currTime + timeToCall;\r\n      return id;\r\n    };\r\n  }\r\n  if (!window.cancelAnimationFrame) {\r\n    window.cancelAnimationFrame = function (id) {\r\n      clearTimeout(id);\r\n    };\r\n  }\r\n}());\r\n\r\n/* exported extendPrototype, getDescriptor, createProxyFunction */\r\n\r\nfunction extendPrototype(sources, destination) {\r\n  var i;\r\n  var len = sources.length;\r\n  var sourcePrototype;\r\n  for (i = 0; i < len; i += 1) {\r\n    sourcePrototype = sources[i].prototype;\r\n    for (var attr in sourcePrototype) {\r\n      if (Object.prototype.hasOwnProperty.call(sourcePrototype, attr)) destination.prototype[attr] = sourcePrototype[attr];\r\n    }\r\n  }\r\n}\r\n\r\nfunction getDescriptor(object, prop) {\r\n  return Object.getOwnPropertyDescriptor(object, prop);\r\n}\r\n\r\nfunction createProxyFunction(prototype) {\r\n  function ProxyFunction() {}\r\n  ProxyFunction.prototype = prototype;\r\n  return ProxyFunction;\r\n}\r\n\r\n/* global segmentsLengthPool, defaultCurveSegments, createSizedArray, bmPow, bmSqrt, bmFloor, createTypedArray, bezierLengthPool */\r\n/* exported bez */\r\n\r\nfunction bezFunction() {\r\n  var math = Math;\r\n\r\n  function pointOnLine2D(x1, y1, x2, y2, x3, y3) {\r\n    var det1 = (x1 * y2) + (y1 * x3) + (x2 * y3) - (x3 * y2) - (y3 * x1) - (x2 * y1);\r\n    return det1 > -0.001 && det1 < 0.001;\r\n  }\r\n\r\n  function pointOnLine3D(x1, y1, z1, x2, y2, z2, x3, y3, z3) {\r\n    if (z1 === 0 && z2 === 0 && z3 === 0) {\r\n      return pointOnLine2D(x1, y1, x2, y2, x3, y3);\r\n    }\r\n    var dist1 = math.sqrt(math.pow(x2 - x1, 2) + math.pow(y2 - y1, 2) + math.pow(z2 - z1, 2));\r\n    var dist2 = math.sqrt(math.pow(x3 - x1, 2) + math.pow(y3 - y1, 2) + math.pow(z3 - z1, 2));\r\n    var dist3 = math.sqrt(math.pow(x3 - x2, 2) + math.pow(y3 - y2, 2) + math.pow(z3 - z2, 2));\r\n    var diffDist;\r\n    if (dist1 > dist2) {\r\n      if (dist1 > dist3) {\r\n        diffDist = dist1 - dist2 - dist3;\r\n      } else {\r\n        diffDist = dist3 - dist2 - dist1;\r\n      }\r\n    } else if (dist3 > dist2) {\r\n      diffDist = dist3 - dist2 - dist1;\r\n    } else {\r\n      diffDist = dist2 - dist1 - dist3;\r\n    }\r\n    return diffDist > -0.0001 && diffDist < 0.0001;\r\n  }\r\n\r\n  var getBezierLength = (function () {\r\n    return function (pt1, pt2, pt3, pt4) {\r\n      var curveSegments = defaultCurveSegments;\r\n      var k;\r\n      var i;\r\n      var len;\r\n      var ptCoord;\r\n      var perc;\r\n      var addedLength = 0;\r\n      var ptDistance;\r\n      var point = [];\r\n      var lastPoint = [];\r\n      var lengthData = bezierLengthPool.newElement();\r\n      len = pt3.length;\r\n      for (k = 0; k < curveSegments; k += 1) {\r\n        perc = k / (curveSegments - 1);\r\n        ptDistance = 0;\r\n        for (i = 0; i < len; i += 1) {\r\n          ptCoord = bmPow(1 - perc, 3) * pt1[i] + 3 * bmPow(1 - perc, 2) * perc * pt3[i] + 3 * (1 - perc) * bmPow(perc, 2) * pt4[i] + bmPow(perc, 3) * pt2[i];\r\n          point[i] = ptCoord;\r\n          if (lastPoint[i] !== null) {\r\n            ptDistance += bmPow(point[i] - lastPoint[i], 2);\r\n          }\r\n          lastPoint[i] = point[i];\r\n        }\r\n        if (ptDistance) {\r\n          ptDistance = bmSqrt(ptDistance);\r\n          addedLength += ptDistance;\r\n        }\r\n        lengthData.percents[k] = perc;\r\n        lengthData.lengths[k] = addedLength;\r\n      }\r\n      lengthData.addedLength = addedLength;\r\n      return lengthData;\r\n    };\r\n  }());\r\n\r\n  function getSegmentsLength(shapeData) {\r\n    var segmentsLength = segmentsLengthPool.newElement();\r\n    var closed = shapeData.c;\r\n    var pathV = shapeData.v;\r\n    var pathO = shapeData.o;\r\n    var pathI = shapeData.i;\r\n    var i;\r\n    var len = shapeData._length;\r\n    var lengths = segmentsLength.lengths;\r\n    var totalLength = 0;\r\n    for (i = 0; i < len - 1; i += 1) {\r\n      lengths[i] = getBezierLength(pathV[i], pathV[i + 1], pathO[i], pathI[i + 1]);\r\n      totalLength += lengths[i].addedLength;\r\n    }\r\n    if (closed && len) {\r\n      lengths[i] = getBezierLength(pathV[i], pathV[0], pathO[i], pathI[0]);\r\n      totalLength += lengths[i].addedLength;\r\n    }\r\n    segmentsLength.totalLength = totalLength;\r\n    return segmentsLength;\r\n  }\r\n\r\n  function BezierData(length) {\r\n    this.segmentLength = 0;\r\n    this.points = new Array(length);\r\n  }\r\n\r\n  function PointData(partial, point) {\r\n    this.partialLength = partial;\r\n    this.point = point;\r\n  }\r\n\r\n  var buildBezierData = (function () {\r\n    var storedData = {};\r\n\r\n    return function (pt1, pt2, pt3, pt4) {\r\n      var bezierName = (pt1[0] + '_' + pt1[1] + '_' + pt2[0] + '_' + pt2[1] + '_' + pt3[0] + '_' + pt3[1] + '_' + pt4[0] + '_' + pt4[1]).replace(/\\./g, 'p');\r\n      if (!storedData[bezierName]) {\r\n        var curveSegments = defaultCurveSegments;\r\n        var k;\r\n        var i;\r\n        var len;\r\n        var ptCoord;\r\n        var perc;\r\n        var addedLength = 0;\r\n        var ptDistance;\r\n        var point;\r\n        var lastPoint = null;\r\n        if (pt1.length === 2 && (pt1[0] !== pt2[0] || pt1[1] !== pt2[1]) && pointOnLine2D(pt1[0], pt1[1], pt2[0], pt2[1], pt1[0] + pt3[0], pt1[1] + pt3[1]) && pointOnLine2D(pt1[0], pt1[1], pt2[0], pt2[1], pt2[0] + pt4[0], pt2[1] + pt4[1])) {\r\n          curveSegments = 2;\r\n        }\r\n        var bezierData = new BezierData(curveSegments);\r\n        len = pt3.length;\r\n        for (k = 0; k < curveSegments; k += 1) {\r\n          point = createSizedArray(len);\r\n          perc = k / (curveSegments - 1);\r\n          ptDistance = 0;\r\n          for (i = 0; i < len; i += 1) {\r\n            ptCoord = bmPow(1 - perc, 3) * pt1[i] + 3 * bmPow(1 - perc, 2) * perc * (pt1[i] + pt3[i]) + 3 * (1 - perc) * bmPow(perc, 2) * (pt2[i] + pt4[i]) + bmPow(perc, 3) * pt2[i];\r\n            point[i] = ptCoord;\r\n            if (lastPoint !== null) {\r\n              ptDistance += bmPow(point[i] - lastPoint[i], 2);\r\n            }\r\n          }\r\n          ptDistance = bmSqrt(ptDistance);\r\n          addedLength += ptDistance;\r\n          bezierData.points[k] = new PointData(ptDistance, point);\r\n          lastPoint = point;\r\n        }\r\n        bezierData.segmentLength = addedLength;\r\n        storedData[bezierName] = bezierData;\r\n      }\r\n      return storedData[bezierName];\r\n    };\r\n  }());\r\n\r\n  function getDistancePerc(perc, bezierData) {\r\n    var percents = bezierData.percents;\r\n    var lengths = bezierData.lengths;\r\n    var len = percents.length;\r\n    var initPos = bmFloor((len - 1) * perc);\r\n    var lengthPos = perc * bezierData.addedLength;\r\n    var lPerc = 0;\r\n    if (initPos === len - 1 || initPos === 0 || lengthPos === lengths[initPos]) {\r\n      return percents[initPos];\r\n    }\r\n    var dir = lengths[initPos] > lengthPos ? -1 : 1;\r\n    var flag = true;\r\n    while (flag) {\r\n      if (lengths[initPos] <= lengthPos && lengths[initPos + 1] > lengthPos) {\r\n        lPerc = (lengthPos - lengths[initPos]) / (lengths[initPos + 1] - lengths[initPos]);\r\n        flag = false;\r\n      } else {\r\n        initPos += dir;\r\n      }\r\n      if (initPos < 0 || initPos >= len - 1) {\r\n        // FIX for TypedArrays that don't store floating point values with enough accuracy\r\n        if (initPos === len - 1) {\r\n          return percents[initPos];\r\n        }\r\n        flag = false;\r\n      }\r\n    }\r\n    return percents[initPos] + (percents[initPos + 1] - percents[initPos]) * lPerc;\r\n  }\r\n\r\n  function getPointInSegment(pt1, pt2, pt3, pt4, percent, bezierData) {\r\n    var t1 = getDistancePerc(percent, bezierData);\r\n    var u1 = 1 - t1;\r\n    var ptX = math.round((u1 * u1 * u1 * pt1[0] + (t1 * u1 * u1 + u1 * t1 * u1 + u1 * u1 * t1) * pt3[0] + (t1 * t1 * u1 + u1 * t1 * t1 + t1 * u1 * t1) * pt4[0] + t1 * t1 * t1 * pt2[0]) * 1000) / 1000;\r\n    var ptY = math.round((u1 * u1 * u1 * pt1[1] + (t1 * u1 * u1 + u1 * t1 * u1 + u1 * u1 * t1) * pt3[1] + (t1 * t1 * u1 + u1 * t1 * t1 + t1 * u1 * t1) * pt4[1] + t1 * t1 * t1 * pt2[1]) * 1000) / 1000;\r\n    return [ptX, ptY];\r\n  }\r\n\r\n  var bezierSegmentPoints = createTypedArray('float32', 8);\r\n\r\n  function getNewSegment(pt1, pt2, pt3, pt4, startPerc, endPerc, bezierData) {\r\n    if (startPerc < 0) {\r\n      startPerc = 0;\r\n    } else if (startPerc > 1) {\r\n      startPerc = 1;\r\n    }\r\n    var t0 = getDistancePerc(startPerc, bezierData);\r\n    endPerc = endPerc > 1 ? 1 : endPerc;\r\n    var t1 = getDistancePerc(endPerc, bezierData);\r\n    var i;\r\n    var len = pt1.length;\r\n    var u0 = 1 - t0;\r\n    var u1 = 1 - t1;\r\n    var u0u0u0 = u0 * u0 * u0;\r\n    var t0u0u0_3 = t0 * u0 * u0 * 3; // eslint-disable-line camelcase\r\n    var t0t0u0_3 = t0 * t0 * u0 * 3; // eslint-disable-line camelcase\r\n    var t0t0t0 = t0 * t0 * t0;\r\n    //\r\n    var u0u0u1 = u0 * u0 * u1;\r\n    var t0u0u1_3 = t0 * u0 * u1 + u0 * t0 * u1 + u0 * u0 * t1; // eslint-disable-line camelcase\r\n    var t0t0u1_3 = t0 * t0 * u1 + u0 * t0 * t1 + t0 * u0 * t1; // eslint-disable-line camelcase\r\n    var t0t0t1 = t0 * t0 * t1;\r\n    //\r\n    var u0u1u1 = u0 * u1 * u1;\r\n    var t0u1u1_3 = t0 * u1 * u1 + u0 * t1 * u1 + u0 * u1 * t1; // eslint-disable-line camelcase\r\n    var t0t1u1_3 = t0 * t1 * u1 + u0 * t1 * t1 + t0 * u1 * t1; // eslint-disable-line camelcase\r\n    var t0t1t1 = t0 * t1 * t1;\r\n    //\r\n    var u1u1u1 = u1 * u1 * u1;\r\n    var t1u1u1_3 = t1 * u1 * u1 + u1 * t1 * u1 + u1 * u1 * t1; // eslint-disable-line camelcase\r\n    var t1t1u1_3 = t1 * t1 * u1 + u1 * t1 * t1 + t1 * u1 * t1; // eslint-disable-line camelcase\r\n    var t1t1t1 = t1 * t1 * t1;\r\n    for (i = 0; i < len; i += 1) {\r\n      bezierSegmentPoints[i * 4] = math.round((u0u0u0 * pt1[i] + t0u0u0_3 * pt3[i] + t0t0u0_3 * pt4[i] + t0t0t0 * pt2[i]) * 1000) / 1000; // eslint-disable-line camelcase\r\n      bezierSegmentPoints[i * 4 + 1] = math.round((u0u0u1 * pt1[i] + t0u0u1_3 * pt3[i] + t0t0u1_3 * pt4[i] + t0t0t1 * pt2[i]) * 1000) / 1000; // eslint-disable-line camelcase\r\n      bezierSegmentPoints[i * 4 + 2] = math.round((u0u1u1 * pt1[i] + t0u1u1_3 * pt3[i] + t0t1u1_3 * pt4[i] + t0t1t1 * pt2[i]) * 1000) / 1000; // eslint-disable-line camelcase\r\n      bezierSegmentPoints[i * 4 + 3] = math.round((u1u1u1 * pt1[i] + t1u1u1_3 * pt3[i] + t1t1u1_3 * pt4[i] + t1t1t1 * pt2[i]) * 1000) / 1000; // eslint-disable-line camelcase\r\n    }\r\n\r\n    return bezierSegmentPoints;\r\n  }\r\n\r\n  return {\r\n    getSegmentsLength: getSegmentsLength,\r\n    getNewSegment: getNewSegment,\r\n    getPointInSegment: getPointInSegment,\r\n    buildBezierData: buildBezierData,\r\n    pointOnLine2D: pointOnLine2D,\r\n    pointOnLine3D: pointOnLine3D,\r\n  };\r\n}\r\n\r\nvar bez = bezFunction();\r\n\r\n/* global _useWebWorker */\r\n\r\nvar dataManager = (function () {\r\n  var _counterId = 1;\r\n  var processes = [];\r\n  var workerFn;\r\n  var workerInstance;\r\n  var workerProxy = {\r\n    onmessage: function () {\r\n\r\n    },\r\n    postMessage: function (path) {\r\n      workerFn({\r\n        data: path,\r\n      });\r\n    },\r\n  };\r\n  var _workerSelf = {\r\n    postMessage: function (data) {\r\n      workerProxy.onmessage({\r\n        data: data,\r\n      });\r\n    },\r\n  };\r\n  function createWorker(fn) {\r\n    if (window.Worker && window.Blob && _useWebWorker) {\r\n      var blob = new Blob(['var _workerSelf = self; self.onmessage = ', fn.toString()], { type: 'text/javascript' });\r\n      // var blob = new Blob(['self.onmessage = ', fn.toString()], { type: 'text/javascript' });\r\n      var url = URL.createObjectURL(blob);\r\n      return new Worker(url);\r\n    }\r\n    workerFn = fn;\r\n    return workerProxy;\r\n  }\r\n\r\n  function setupWorker() {\r\n    if (!workerInstance) {\r\n      workerInstance = createWorker(function workerStart(e) {\r\n        /* exported dataManager */\r\n\r\n        function dataFunctionManager() {\r\n          // var tCanvasHelper = createTag('canvas').getContext('2d');\r\n\r\n          function completeLayers(layers, comps) {\r\n            var layerData;\r\n            var i;\r\n            var len = layers.length;\r\n            var j;\r\n            var jLen;\r\n            var k;\r\n            var kLen;\r\n            for (i = 0; i < len; i += 1) {\r\n              layerData = layers[i];\r\n              if (('ks' in layerData) && !layerData.completed) {\r\n                layerData.completed = true;\r\n                if (layerData.tt) {\r\n                  layers[i - 1].td = layerData.tt;\r\n                }\r\n                if (layerData.hasMask) {\r\n                  var maskProps = layerData.masksProperties;\r\n                  jLen = maskProps.length;\r\n                  for (j = 0; j < jLen; j += 1) {\r\n                    if (maskProps[j].pt.k.i) {\r\n                      convertPathsToAbsoluteValues(maskProps[j].pt.k);\r\n                    } else {\r\n                      kLen = maskProps[j].pt.k.length;\r\n                      for (k = 0; k < kLen; k += 1) {\r\n                        if (maskProps[j].pt.k[k].s) {\r\n                          convertPathsToAbsoluteValues(maskProps[j].pt.k[k].s[0]);\r\n                        }\r\n                        if (maskProps[j].pt.k[k].e) {\r\n                          convertPathsToAbsoluteValues(maskProps[j].pt.k[k].e[0]);\r\n                        }\r\n                      }\r\n                    }\r\n                  }\r\n                }\r\n                if (layerData.ty === 0) {\r\n                  layerData.layers = findCompLayers(layerData.refId, comps);\r\n                  completeLayers(layerData.layers, comps);\r\n                } else if (layerData.ty === 4) {\r\n                  completeShapes(layerData.shapes);\r\n                } else if (layerData.ty === 5) {\r\n                  completeText(layerData);\r\n                }\r\n              }\r\n            }\r\n          }\r\n\r\n          function findCompLayers(id, comps) {\r\n            var i = 0;\r\n            var len = comps.length;\r\n            while (i < len) {\r\n              if (comps[i].id === id) {\r\n                if (!comps[i].layers.__used) {\r\n                  comps[i].layers.__used = true;\r\n                  return comps[i].layers;\r\n                }\r\n                return JSON.parse(JSON.stringify(comps[i].layers));\r\n              }\r\n              i += 1;\r\n            }\r\n            return null;\r\n          }\r\n\r\n          function completeShapes(arr) {\r\n            var i;\r\n            var len = arr.length;\r\n            var j;\r\n            var jLen;\r\n            for (i = len - 1; i >= 0; i -= 1) {\r\n              if (arr[i].ty === 'sh') {\r\n                if (arr[i].ks.k.i) {\r\n                  convertPathsToAbsoluteValues(arr[i].ks.k);\r\n                } else {\r\n                  jLen = arr[i].ks.k.length;\r\n                  for (j = 0; j < jLen; j += 1) {\r\n                    if (arr[i].ks.k[j].s) {\r\n                      convertPathsToAbsoluteValues(arr[i].ks.k[j].s[0]);\r\n                    }\r\n                    if (arr[i].ks.k[j].e) {\r\n                      convertPathsToAbsoluteValues(arr[i].ks.k[j].e[0]);\r\n                    }\r\n                  }\r\n                }\r\n              } else if (arr[i].ty === 'gr') {\r\n                completeShapes(arr[i].it);\r\n              }\r\n            }\r\n          }\r\n\r\n          function convertPathsToAbsoluteValues(path) {\r\n            var i;\r\n            var len = path.i.length;\r\n            for (i = 0; i < len; i += 1) {\r\n              path.i[i][0] += path.v[i][0];\r\n              path.i[i][1] += path.v[i][1];\r\n              path.o[i][0] += path.v[i][0];\r\n              path.o[i][1] += path.v[i][1];\r\n            }\r\n          }\r\n\r\n          function checkVersion(minimum, animVersionString) {\r\n            var animVersion = animVersionString ? animVersionString.split('.') : [100, 100, 100];\r\n            if (minimum[0] > animVersion[0]) {\r\n              return true;\r\n            } if (animVersion[0] > minimum[0]) {\r\n              return false;\r\n            }\r\n            if (minimum[1] > animVersion[1]) {\r\n              return true;\r\n            } if (animVersion[1] > minimum[1]) {\r\n              return false;\r\n            }\r\n            if (minimum[2] > animVersion[2]) {\r\n              return true;\r\n            } if (animVersion[2] > minimum[2]) {\r\n              return false;\r\n            }\r\n            return null;\r\n          }\r\n\r\n          var checkText = (function () {\r\n            var minimumVersion = [4, 4, 14];\r\n\r\n            function updateTextLayer(textLayer) {\r\n              var documentData = textLayer.t.d;\r\n              textLayer.t.d = {\r\n                k: [\r\n                  {\r\n                    s: documentData,\r\n                    t: 0,\r\n                  },\r\n                ],\r\n              };\r\n            }\r\n\r\n            function iterateLayers(layers) {\r\n              var i;\r\n              var len = layers.length;\r\n              for (i = 0; i < len; i += 1) {\r\n                if (layers[i].ty === 5) {\r\n                  updateTextLayer(layers[i]);\r\n                }\r\n              }\r\n            }\r\n\r\n            return function (animationData) {\r\n              if (checkVersion(minimumVersion, animationData.v)) {\r\n                iterateLayers(animationData.layers);\r\n                if (animationData.assets) {\r\n                  var i;\r\n                  var len = animationData.assets.length;\r\n                  for (i = 0; i < len; i += 1) {\r\n                    if (animationData.assets[i].layers) {\r\n                      iterateLayers(animationData.assets[i].layers);\r\n                    }\r\n                  }\r\n                }\r\n              }\r\n            };\r\n          }());\r\n\r\n          var checkChars = (function () {\r\n            var minimumVersion = [4, 7, 99];\r\n            return function (animationData) {\r\n              if (animationData.chars && !checkVersion(minimumVersion, animationData.v)) {\r\n                var i;\r\n                var len = animationData.chars.length;\r\n                var j;\r\n                var jLen;\r\n                var pathData;\r\n                var paths;\r\n                for (i = 0; i < len; i += 1) {\r\n                  if (animationData.chars[i].data && animationData.chars[i].data.shapes) {\r\n                    paths = animationData.chars[i].data.shapes[0].it;\r\n                    jLen = paths.length;\r\n\r\n                    for (j = 0; j < jLen; j += 1) {\r\n                      pathData = paths[j].ks.k;\r\n                      if (!pathData.__converted) {\r\n                        convertPathsToAbsoluteValues(paths[j].ks.k);\r\n                        pathData.__converted = true;\r\n                      }\r\n                    }\r\n                  }\r\n                }\r\n              }\r\n            };\r\n          }());\r\n\r\n          var checkPathProperties = (function () {\r\n            var minimumVersion = [5, 7, 15];\r\n\r\n            function updateTextLayer(textLayer) {\r\n              var pathData = textLayer.t.p;\r\n              if (typeof pathData.a === 'number') {\r\n                pathData.a = {\r\n                  a: 0,\r\n                  k: pathData.a,\r\n                };\r\n              }\r\n              if (typeof pathData.p === 'number') {\r\n                pathData.p = {\r\n                  a: 0,\r\n                  k: pathData.p,\r\n                };\r\n              }\r\n              if (typeof pathData.r === 'number') {\r\n                pathData.r = {\r\n                  a: 0,\r\n                  k: pathData.r,\r\n                };\r\n              }\r\n            }\r\n\r\n            function iterateLayers(layers) {\r\n              var i;\r\n              var len = layers.length;\r\n              for (i = 0; i < len; i += 1) {\r\n                if (layers[i].ty === 5) {\r\n                  updateTextLayer(layers[i]);\r\n                }\r\n              }\r\n            }\r\n\r\n            return function (animationData) {\r\n              if (checkVersion(minimumVersion, animationData.v)) {\r\n                iterateLayers(animationData.layers);\r\n                if (animationData.assets) {\r\n                  var i;\r\n                  var len = animationData.assets.length;\r\n                  for (i = 0; i < len; i += 1) {\r\n                    if (animationData.assets[i].layers) {\r\n                      iterateLayers(animationData.assets[i].layers);\r\n                    }\r\n                  }\r\n                }\r\n              }\r\n            };\r\n          }());\r\n\r\n          var checkColors = (function () {\r\n            var minimumVersion = [4, 1, 9];\r\n\r\n            function iterateShapes(shapes) {\r\n              var i;\r\n              var len = shapes.length;\r\n              var j;\r\n              var jLen;\r\n              for (i = 0; i < len; i += 1) {\r\n                if (shapes[i].ty === 'gr') {\r\n                  iterateShapes(shapes[i].it);\r\n                } else if (shapes[i].ty === 'fl' || shapes[i].ty === 'st') {\r\n                  if (shapes[i].c.k && shapes[i].c.k[0].i) {\r\n                    jLen = shapes[i].c.k.length;\r\n                    for (j = 0; j < jLen; j += 1) {\r\n                      if (shapes[i].c.k[j].s) {\r\n                        shapes[i].c.k[j].s[0] /= 255;\r\n                        shapes[i].c.k[j].s[1] /= 255;\r\n                        shapes[i].c.k[j].s[2] /= 255;\r\n                        shapes[i].c.k[j].s[3] /= 255;\r\n                      }\r\n                      if (shapes[i].c.k[j].e) {\r\n                        shapes[i].c.k[j].e[0] /= 255;\r\n                        shapes[i].c.k[j].e[1] /= 255;\r\n                        shapes[i].c.k[j].e[2] /= 255;\r\n                        shapes[i].c.k[j].e[3] /= 255;\r\n                      }\r\n                    }\r\n                  } else {\r\n                    shapes[i].c.k[0] /= 255;\r\n                    shapes[i].c.k[1] /= 255;\r\n                    shapes[i].c.k[2] /= 255;\r\n                    shapes[i].c.k[3] /= 255;\r\n                  }\r\n                }\r\n              }\r\n            }\r\n\r\n            function iterateLayers(layers) {\r\n              var i;\r\n              var len = layers.length;\r\n              for (i = 0; i < len; i += 1) {\r\n                if (layers[i].ty === 4) {\r\n                  iterateShapes(layers[i].shapes);\r\n                }\r\n              }\r\n            }\r\n\r\n            return function (animationData) {\r\n              if (checkVersion(minimumVersion, animationData.v)) {\r\n                iterateLayers(animationData.layers);\r\n                if (animationData.assets) {\r\n                  var i;\r\n                  var len = animationData.assets.length;\r\n                  for (i = 0; i < len; i += 1) {\r\n                    if (animationData.assets[i].layers) {\r\n                      iterateLayers(animationData.assets[i].layers);\r\n                    }\r\n                  }\r\n                }\r\n              }\r\n            };\r\n          }());\r\n\r\n          var checkShapes = (function () {\r\n            var minimumVersion = [4, 4, 18];\r\n\r\n            function completeClosingShapes(arr) {\r\n              var i;\r\n              var len = arr.length;\r\n              var j;\r\n              var jLen;\r\n              for (i = len - 1; i >= 0; i -= 1) {\r\n                if (arr[i].ty === 'sh') {\r\n                  if (arr[i].ks.k.i) {\r\n                    arr[i].ks.k.c = arr[i].closed;\r\n                  } else {\r\n                    jLen = arr[i].ks.k.length;\r\n                    for (j = 0; j < jLen; j += 1) {\r\n                      if (arr[i].ks.k[j].s) {\r\n                        arr[i].ks.k[j].s[0].c = arr[i].closed;\r\n                      }\r\n                      if (arr[i].ks.k[j].e) {\r\n                        arr[i].ks.k[j].e[0].c = arr[i].closed;\r\n                      }\r\n                    }\r\n                  }\r\n                } else if (arr[i].ty === 'gr') {\r\n                  completeClosingShapes(arr[i].it);\r\n                }\r\n              }\r\n            }\r\n\r\n            function iterateLayers(layers) {\r\n              var layerData;\r\n              var i;\r\n              var len = layers.length;\r\n              var j;\r\n              var jLen;\r\n              var k;\r\n              var kLen;\r\n              for (i = 0; i < len; i += 1) {\r\n                layerData = layers[i];\r\n                if (layerData.hasMask) {\r\n                  var maskProps = layerData.masksProperties;\r\n                  jLen = maskProps.length;\r\n                  for (j = 0; j < jLen; j += 1) {\r\n                    if (maskProps[j].pt.k.i) {\r\n                      maskProps[j].pt.k.c = maskProps[j].cl;\r\n                    } else {\r\n                      kLen = maskProps[j].pt.k.length;\r\n                      for (k = 0; k < kLen; k += 1) {\r\n                        if (maskProps[j].pt.k[k].s) {\r\n                          maskProps[j].pt.k[k].s[0].c = maskProps[j].cl;\r\n                        }\r\n                        if (maskProps[j].pt.k[k].e) {\r\n                          maskProps[j].pt.k[k].e[0].c = maskProps[j].cl;\r\n                        }\r\n                      }\r\n                    }\r\n                  }\r\n                }\r\n                if (layerData.ty === 4) {\r\n                  completeClosingShapes(layerData.shapes);\r\n                }\r\n              }\r\n            }\r\n\r\n            return function (animationData) {\r\n              if (checkVersion(minimumVersion, animationData.v)) {\r\n                iterateLayers(animationData.layers);\r\n                if (animationData.assets) {\r\n                  var i;\r\n                  var len = animationData.assets.length;\r\n                  for (i = 0; i < len; i += 1) {\r\n                    if (animationData.assets[i].layers) {\r\n                      iterateLayers(animationData.assets[i].layers);\r\n                    }\r\n                  }\r\n                }\r\n              }\r\n            };\r\n          }());\r\n\r\n          function completeData(animationData) {\r\n            if (animationData.__complete) {\r\n              return;\r\n            }\r\n            checkColors(animationData);\r\n            checkText(animationData);\r\n            checkChars(animationData);\r\n            checkPathProperties(animationData);\r\n            checkShapes(animationData);\r\n            completeLayers(animationData.layers, animationData.assets);\r\n            animationData.__complete = true;\r\n          }\r\n\r\n          function completeText(data) {\r\n            if (data.t.a.length === 0 && !('m' in data.t.p)) {\r\n              data.singleShape = true;\r\n            }\r\n          }\r\n\r\n          var moduleOb = {};\r\n          moduleOb.completeData = completeData;\r\n          moduleOb.checkColors = checkColors;\r\n          moduleOb.checkChars = checkChars;\r\n          moduleOb.checkPathProperties = checkPathProperties;\r\n          moduleOb.checkShapes = checkShapes;\r\n          moduleOb.completeLayers = completeLayers;\r\n\r\n          return moduleOb;\r\n        }\r\n        if (!_workerSelf.dataManager) {\r\n          _workerSelf.dataManager = dataFunctionManager();\r\n        }\r\n\r\n        /* exported assetLoader */\r\n        if (!_workerSelf.assetLoader) {\r\n          _workerSelf.assetLoader = (function () {\r\n            function formatResponse(xhr) {\r\n              // using typeof doubles the time of execution of this method,\r\n              // so if available, it's better to use the header to validate the type\r\n              var contentTypeHeader = xhr.getResponseHeader('content-type');\r\n              if (contentTypeHeader && xhr.responseType === 'json' && contentTypeHeader.indexOf('json') !== -1) {\r\n                return xhr.response;\r\n              }\r\n              if (xhr.response && typeof xhr.response === 'object') {\r\n                return xhr.response;\r\n              } if (xhr.response && typeof xhr.response === 'string') {\r\n                return JSON.parse(xhr.response);\r\n              } if (xhr.responseText) {\r\n                return JSON.parse(xhr.responseText);\r\n              }\r\n              return null;\r\n            }\r\n\r\n            function loadAsset(path, fullPath, callback, errorCallback) {\r\n              var response;\r\n              var xhr = new XMLHttpRequest();\r\n              // set responseType after calling open or IE will break.\r\n              try {\r\n                // This crashes on Android WebView prior to KitKat\r\n                xhr.responseType = 'json';\r\n              } catch (err) {} // eslint-disable-line no-empty\r\n              xhr.onreadystatechange = function () {\r\n                if (xhr.readyState === 4) {\r\n                  if (xhr.status === 200) {\r\n                    response = formatResponse(xhr);\r\n                    callback(response);\r\n                  } else {\r\n                    try {\r\n                      response = formatResponse(xhr);\r\n                      callback(response);\r\n                    } catch (err) {\r\n                      if (errorCallback) {\r\n                        errorCallback(err);\r\n                      }\r\n                    }\r\n                  }\r\n                }\r\n              };\r\n              try {\r\n                xhr.open('GET', path, true);\r\n              } catch (error) {\r\n                xhr.open('GET', fullPath + '/' + path, true);\r\n              }\r\n              xhr.send();\r\n            }\r\n            return {\r\n              load: loadAsset,\r\n            };\r\n          }());\r\n        }\r\n\r\n        if (e.data.type === 'loadAnimation') {\r\n          _workerSelf.assetLoader.load(\r\n            e.data.path,\r\n            e.data.fullPath,\r\n            function (data) {\r\n              _workerSelf.dataManager.completeData(data);\r\n              _workerSelf.postMessage({\r\n                id: e.data.id,\r\n                payload: data,\r\n                status: 'success',\r\n              });\r\n            },\r\n            function () {\r\n              _workerSelf.postMessage({\r\n                id: e.data.id,\r\n                status: 'error',\r\n              });\r\n            }\r\n          );\r\n        } else if (e.data.type === 'complete') {\r\n          var animation = e.data.animation;\r\n          _workerSelf.dataManager.completeData(animation);\r\n          _workerSelf.postMessage({\r\n            id: e.data.id,\r\n            payload: animation,\r\n            status: 'success',\r\n          });\r\n        } else if (e.data.type === 'loadData') {\r\n          _workerSelf.assetLoader.load(\r\n            e.data.path,\r\n            e.data.fullPath,\r\n            function (data) {\r\n              _workerSelf.postMessage({\r\n                id: e.data.id,\r\n                payload: data,\r\n                status: 'success',\r\n              });\r\n            },\r\n            function () {\r\n              _workerSelf.postMessage({\r\n                id: e.data.id,\r\n                status: 'error',\r\n              });\r\n            }\r\n          );\r\n        }\r\n      });\r\n\r\n      workerInstance.onmessage = function (event) {\r\n        var data = event.data;\r\n        var id = data.id;\r\n        var process = processes[id];\r\n        processes[id] = null;\r\n        if (data.status === 'success') {\r\n          process.onComplete(data.payload);\r\n        } else if (process.onError) {\r\n          process.onError();\r\n        }\r\n      };\r\n    }\r\n  }\r\n\r\n  function createProcess(onComplete, onError) {\r\n    _counterId += 1;\r\n    var id = 'processId_' + _counterId;\r\n    processes[id] = {\r\n      onComplete: onComplete,\r\n      onError: onError,\r\n    };\r\n    return id;\r\n  }\r\n\r\n  function loadAnimation(path, onComplete, onError) {\r\n    setupWorker();\r\n    var processId = createProcess(onComplete, onError);\r\n    workerInstance.postMessage({\r\n      type: 'loadAnimation',\r\n      path: path,\r\n      fullPath: window.location.origin + window.location.pathname,\r\n      id: processId,\r\n    });\r\n  }\r\n\r\n  function loadData(path, onComplete, onError) {\r\n    setupWorker();\r\n    var processId = createProcess(onComplete, onError);\r\n    workerInstance.postMessage({\r\n      type: 'loadData',\r\n      path: path,\r\n      fullPath: window.location.origin + window.location.pathname,\r\n      id: processId,\r\n    });\r\n  }\r\n\r\n  function completeAnimation(anim, onComplete, onError) {\r\n    setupWorker();\r\n    var processId = createProcess(onComplete, onError);\r\n    workerInstance.postMessage({\r\n      type: 'complete',\r\n      animation: anim,\r\n      id: processId,\r\n    });\r\n  }\r\n\r\n  return {\r\n    loadAnimation: loadAnimation,\r\n    loadData: loadData,\r\n    completeAnimation: completeAnimation,\r\n  };\r\n}());\r\n\r\n/* exported getFontProperties */\r\n\r\nfunction getFontProperties(fontData) {\r\n  var styles = fontData.fStyle ? fontData.fStyle.split(' ') : [];\r\n\r\n  var fWeight = 'normal'; var\r\n    fStyle = 'normal';\r\n  var len = styles.length;\r\n  var styleName;\r\n  for (var i = 0; i < len; i += 1) {\r\n    styleName = styles[i].toLowerCase();\r\n    switch (styleName) {\r\n      case 'italic':\r\n        fStyle = 'italic';\r\n        break;\r\n      case 'bold':\r\n        fWeight = '700';\r\n        break;\r\n      case 'black':\r\n        fWeight = '900';\r\n        break;\r\n      case 'medium':\r\n        fWeight = '500';\r\n        break;\r\n      case 'regular':\r\n      case 'normal':\r\n        fWeight = '400';\r\n        break;\r\n      case 'light':\r\n      case 'thin':\r\n        fWeight = '200';\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  return {\r\n    style: fStyle,\r\n    weight: fontData.fWeight || fWeight,\r\n  };\r\n}\r\n\r\n/* global createNS, createTag, getFontProperties */\r\n/* exported FontManager */\r\n\r\nvar FontManager = (function () {\r\n  var maxWaitingTime = 5000;\r\n  var emptyChar = {\r\n    w: 0,\r\n    size: 0,\r\n    shapes: [],\r\n  };\r\n  var combinedCharacters = [];\r\n  // Hindi characters\r\n  combinedCharacters = combinedCharacters.concat([2304, 2305, 2306, 2307, 2362, 2363, 2364, 2364, 2366,\r\n    2367, 2368, 2369, 2370, 2371, 2372, 2373, 2374, 2375, 2376, 2377, 2378, 2379,\r\n    2380, 2381, 2382, 2383, 2387, 2388, 2389, 2390, 2391, 2402, 2403]);\r\n\r\n  var surrogateModifiers = [\r\n    'd83cdffb',\r\n    'd83cdffc',\r\n    'd83cdffd',\r\n    'd83cdffe',\r\n    'd83cdfff',\r\n  ];\r\n\r\n  var zeroWidthJoiner = [65039, 8205];\r\n\r\n  function trimFontOptions(font) {\r\n    var familyArray = font.split(',');\r\n    var i;\r\n    var len = familyArray.length;\r\n    var enabledFamilies = [];\r\n    for (i = 0; i < len; i += 1) {\r\n      if (familyArray[i] !== 'sans-serif' && familyArray[i] !== 'monospace') {\r\n        enabledFamilies.push(familyArray[i]);\r\n      }\r\n    }\r\n    return enabledFamilies.join(',');\r\n  }\r\n\r\n  function setUpNode(font, family) {\r\n    var parentNode = createTag('span');\r\n    // Node is invisible to screen readers.\r\n    parentNode.setAttribute('aria-hidden', true);\r\n    parentNode.style.fontFamily = family;\r\n    var node = createTag('span');\r\n    // Characters that vary significantly among different fonts\r\n    node.innerText = 'giItT1WQy@!-/#';\r\n    // Visible - so we can measure it - but not on the screen\r\n    parentNode.style.position = 'absolute';\r\n    parentNode.style.left = '-10000px';\r\n    parentNode.style.top = '-10000px';\r\n    // Large font size makes even subtle changes obvious\r\n    parentNode.style.fontSize = '300px';\r\n    // Reset any font properties\r\n    parentNode.style.fontVariant = 'normal';\r\n    parentNode.style.fontStyle = 'normal';\r\n    parentNode.style.fontWeight = 'normal';\r\n    parentNode.style.letterSpacing = '0';\r\n    parentNode.appendChild(node);\r\n    document.body.appendChild(parentNode);\r\n\r\n    // Remember width with no applied web font\r\n    var width = node.offsetWidth;\r\n    node.style.fontFamily = trimFontOptions(font) + ', ' + family;\r\n    return { node: node, w: width, parent: parentNode };\r\n  }\r\n\r\n  function checkLoadedFonts() {\r\n    var i;\r\n    var len = this.fonts.length;\r\n    var node;\r\n    var w;\r\n    var loadedCount = len;\r\n    for (i = 0; i < len; i += 1) {\r\n      if (this.fonts[i].loaded) {\r\n        loadedCount -= 1;\r\n      } else if (this.fonts[i].fOrigin === 'n' || this.fonts[i].origin === 0) {\r\n        this.fonts[i].loaded = true;\r\n      } else {\r\n        node = this.fonts[i].monoCase.node;\r\n        w = this.fonts[i].monoCase.w;\r\n        if (node.offsetWidth !== w) {\r\n          loadedCount -= 1;\r\n          this.fonts[i].loaded = true;\r\n        } else {\r\n          node = this.fonts[i].sansCase.node;\r\n          w = this.fonts[i].sansCase.w;\r\n          if (node.offsetWidth !== w) {\r\n            loadedCount -= 1;\r\n            this.fonts[i].loaded = true;\r\n          }\r\n        }\r\n        if (this.fonts[i].loaded) {\r\n          this.fonts[i].sansCase.parent.parentNode.removeChild(this.fonts[i].sansCase.parent);\r\n          this.fonts[i].monoCase.parent.parentNode.removeChild(this.fonts[i].monoCase.parent);\r\n        }\r\n      }\r\n    }\r\n\r\n    if (loadedCount !== 0 && Date.now() - this.initTime < maxWaitingTime) {\r\n      setTimeout(this.checkLoadedFontsBinded, 20);\r\n    } else {\r\n      setTimeout(this.setIsLoadedBinded, 10);\r\n    }\r\n  }\r\n\r\n  function createHelper(def, fontData) {\r\n    var tHelper = createNS('text');\r\n    tHelper.style.fontSize = '100px';\r\n    // tHelper.style.fontFamily = fontData.fFamily;\r\n\r\n    var fontProps = getFontProperties(fontData);\r\n    tHelper.setAttribute('font-family', fontData.fFamily);\r\n    tHelper.setAttribute('font-style', fontProps.style);\r\n    tHelper.setAttribute('font-weight', fontProps.weight);\r\n    tHelper.textContent = '1';\r\n    if (fontData.fClass) {\r\n      tHelper.style.fontFamily = 'inherit';\r\n      tHelper.setAttribute('class', fontData.fClass);\r\n    } else {\r\n      tHelper.style.fontFamily = fontData.fFamily;\r\n    }\r\n    def.appendChild(tHelper);\r\n    var tCanvasHelper = createTag('canvas').getContext('2d');\r\n    tCanvasHelper.font = fontData.fWeight + ' ' + fontData.fStyle + ' 100px ' + fontData.fFamily;\r\n    // tCanvasHelper.font = ' 100px '+ fontData.fFamily;\r\n    return tHelper;\r\n  }\r\n\r\n  function addFonts(fontData, defs) {\r\n    if (!fontData) {\r\n      this.isLoaded = true;\r\n      return;\r\n    }\r\n    if (this.chars) {\r\n      this.isLoaded = true;\r\n      this.fonts = fontData.list;\r\n      return;\r\n    }\r\n\r\n    var fontArr = fontData.list;\r\n    var i;\r\n    var len = fontArr.length;\r\n    var _pendingFonts = len;\r\n    for (i = 0; i < len; i += 1) {\r\n      var shouldLoadFont = true;\r\n      var loadedSelector;\r\n      var j;\r\n      fontArr[i].loaded = false;\r\n      fontArr[i].monoCase = setUpNode(fontArr[i].fFamily, 'monospace');\r\n      fontArr[i].sansCase = setUpNode(fontArr[i].fFamily, 'sans-serif');\r\n      if (!fontArr[i].fPath) {\r\n        fontArr[i].loaded = true;\r\n        _pendingFonts -= 1;\r\n      } else if (fontArr[i].fOrigin === 'p' || fontArr[i].origin === 3) {\r\n        loadedSelector = document.querySelectorAll('style[f-forigin=\"p\"][f-family=\"' + fontArr[i].fFamily + '\"], style[f-origin=\"3\"][f-family=\"' + fontArr[i].fFamily + '\"]');\r\n\r\n        if (loadedSelector.length > 0) {\r\n          shouldLoadFont = false;\r\n        }\r\n\r\n        if (shouldLoadFont) {\r\n          var s = createTag('style');\r\n          s.setAttribute('f-forigin', fontArr[i].fOrigin);\r\n          s.setAttribute('f-origin', fontArr[i].origin);\r\n          s.setAttribute('f-family', fontArr[i].fFamily);\r\n          s.type = 'text/css';\r\n          s.innerText = '@font-face {font-family: ' + fontArr[i].fFamily + \"; font-style: normal; src: url('\" + fontArr[i].fPath + \"');}\";\r\n          defs.appendChild(s);\r\n        }\r\n      } else if (fontArr[i].fOrigin === 'g' || fontArr[i].origin === 1) {\r\n        loadedSelector = document.querySelectorAll('link[f-forigin=\"g\"], link[f-origin=\"1\"]');\r\n\r\n        for (j = 0; j < loadedSelector.length; j += 1) {\r\n          if (loadedSelector[j].href.indexOf(fontArr[i].fPath) !== -1) {\r\n            // Font is already loaded\r\n            shouldLoadFont = false;\r\n          }\r\n        }\r\n\r\n        if (shouldLoadFont) {\r\n          var l = createTag('link');\r\n          l.setAttribute('f-forigin', fontArr[i].fOrigin);\r\n          l.setAttribute('f-origin', fontArr[i].origin);\r\n          l.type = 'text/css';\r\n          l.rel = 'stylesheet';\r\n          l.href = fontArr[i].fPath;\r\n          document.body.appendChild(l);\r\n        }\r\n      } else if (fontArr[i].fOrigin === 't' || fontArr[i].origin === 2) {\r\n        loadedSelector = document.querySelectorAll('script[f-forigin=\"t\"], script[f-origin=\"2\"]');\r\n\r\n        for (j = 0; j < loadedSelector.length; j += 1) {\r\n          if (fontArr[i].fPath === loadedSelector[j].src) {\r\n            // Font is already loaded\r\n            shouldLoadFont = false;\r\n          }\r\n        }\r\n\r\n        if (shouldLoadFont) {\r\n          var sc = createTag('link');\r\n          sc.setAttribute('f-forigin', fontArr[i].fOrigin);\r\n          sc.setAttribute('f-origin', fontArr[i].origin);\r\n          sc.setAttribute('rel', 'stylesheet');\r\n          sc.setAttribute('href', fontArr[i].fPath);\r\n          defs.appendChild(sc);\r\n        }\r\n      }\r\n      fontArr[i].helper = createHelper(defs, fontArr[i]);\r\n      fontArr[i].cache = {};\r\n      this.fonts.push(fontArr[i]);\r\n    }\r\n    if (_pendingFonts === 0) {\r\n      this.isLoaded = true;\r\n    } else {\r\n      // On some cases even if the font is loaded, it won't load correctly when measuring text on canvas.\r\n      // Adding this timeout seems to fix it\r\n      setTimeout(this.checkLoadedFonts.bind(this), 100);\r\n    }\r\n  }\r\n\r\n  function addChars(chars) {\r\n    if (!chars) {\r\n      return;\r\n    }\r\n    if (!this.chars) {\r\n      this.chars = [];\r\n    }\r\n    var i;\r\n    var len = chars.length;\r\n    var j;\r\n    var jLen = this.chars.length;\r\n    var found;\r\n    for (i = 0; i < len; i += 1) {\r\n      j = 0;\r\n      found = false;\r\n      while (j < jLen) {\r\n        if (this.chars[j].style === chars[i].style && this.chars[j].fFamily === chars[i].fFamily && this.chars[j].ch === chars[i].ch) {\r\n          found = true;\r\n        }\r\n        j += 1;\r\n      }\r\n      if (!found) {\r\n        this.chars.push(chars[i]);\r\n        jLen += 1;\r\n      }\r\n    }\r\n  }\r\n\r\n  function getCharData(char, style, font) {\r\n    var i = 0;\r\n    var len = this.chars.length;\r\n    while (i < len) {\r\n      if (this.chars[i].ch === char && this.chars[i].style === style && this.chars[i].fFamily === font) {\r\n        return this.chars[i];\r\n      }\r\n      i += 1;\r\n    }\r\n    if (((typeof char === 'string' && char.charCodeAt(0) !== 13) || !char)\r\n            && console\r\n            && console.warn // eslint-disable-line no-console\r\n            && !this._warned\r\n    ) {\r\n      this._warned = true;\r\n      console.warn('Missing character from exported characters list: ', char, style, font); // eslint-disable-line no-console\r\n    }\r\n    return emptyChar;\r\n  }\r\n\r\n  function measureText(char, fontName, size) {\r\n    var fontData = this.getFontByName(fontName);\r\n    var index = char.charCodeAt(0);\r\n    if (!fontData.cache[index + 1]) {\r\n      var tHelper = fontData.helper;\r\n      // Canvas version\r\n      // fontData.cache[index] = tHelper.measureText(char).width / 100;\r\n      // SVG version\r\n      // console.log(tHelper.getBBox().width)\r\n      if (char === ' ') {\r\n        tHelper.textContent = '|' + char + '|';\r\n        var doubleSize = tHelper.getComputedTextLength();\r\n        tHelper.textContent = '||';\r\n        var singleSize = tHelper.getComputedTextLength();\r\n        fontData.cache[index + 1] = (doubleSize - singleSize) / 100;\r\n      } else {\r\n        tHelper.textContent = char;\r\n        fontData.cache[index + 1] = (tHelper.getComputedTextLength()) / 100;\r\n      }\r\n    }\r\n    return fontData.cache[index + 1] * size;\r\n  }\r\n\r\n  function getFontByName(name) {\r\n    var i = 0;\r\n    var len = this.fonts.length;\r\n    while (i < len) {\r\n      if (this.fonts[i].fName === name) {\r\n        return this.fonts[i];\r\n      }\r\n      i += 1;\r\n    }\r\n    return this.fonts[0];\r\n  }\r\n\r\n  function isModifier(firstCharCode, secondCharCode) {\r\n    var sum = firstCharCode.toString(16) + secondCharCode.toString(16);\r\n    return surrogateModifiers.indexOf(sum) !== -1;\r\n  }\r\n\r\n  function isZeroWidthJoiner(firstCharCode, secondCharCode) {\r\n    if (!secondCharCode) {\r\n      return firstCharCode === zeroWidthJoiner[1];\r\n    }\r\n    return firstCharCode === zeroWidthJoiner[0] && secondCharCode === zeroWidthJoiner[1];\r\n  }\r\n\r\n  function isCombinedCharacter(char) {\r\n    return combinedCharacters.indexOf(char) !== -1;\r\n  }\r\n\r\n  function setIsLoaded() {\r\n    this.isLoaded = true;\r\n  }\r\n\r\n  var Font = function () {\r\n    this.fonts = [];\r\n    this.chars = null;\r\n    this.typekitLoaded = 0;\r\n    this.isLoaded = false;\r\n    this._warned = false;\r\n    this.initTime = Date.now();\r\n    this.setIsLoadedBinded = this.setIsLoaded.bind(this);\r\n    this.checkLoadedFontsBinded = this.checkLoadedFonts.bind(this);\r\n  };\r\n  Font.isModifier = isModifier;\r\n  Font.isZeroWidthJoiner = isZeroWidthJoiner;\r\n  Font.isCombinedCharacter = isCombinedCharacter;\r\n\r\n  var fontPrototype = {\r\n    addChars: addChars,\r\n    addFonts: addFonts,\r\n    getCharData: getCharData,\r\n    getFontByName: getFontByName,\r\n    measureText: measureText,\r\n    checkLoadedFonts: checkLoadedFonts,\r\n    setIsLoaded: setIsLoaded,\r\n  };\r\n\r\n  Font.prototype = fontPrototype;\r\n\r\n  return Font;\r\n}());\r\n\r\n/* global initialDefaultFrame, BezierFactory, degToRads, bez, createTypedArray */\r\n/* exported PropertyFactory */\r\n\r\nvar PropertyFactory = (function () {\r\n  var initFrame = initialDefaultFrame;\r\n  var mathAbs = Math.abs;\r\n\r\n  function interpolateValue(frameNum, caching) {\r\n    var offsetTime = this.offsetTime;\r\n    var newValue;\r\n    if (this.propType === 'multidimensional') {\r\n      newValue = createTypedArray('float32', this.pv.length);\r\n    }\r\n    var iterationIndex = caching.lastIndex;\r\n    var i = iterationIndex;\r\n    var len = this.keyframes.length - 1;\r\n    var flag = true;\r\n    var keyData;\r\n    var nextKeyData;\r\n    var keyframeMetadata;\r\n\r\n    while (flag) {\r\n      keyData = this.keyframes[i];\r\n      nextKeyData = this.keyframes[i + 1];\r\n      if (i === len - 1 && frameNum >= nextKeyData.t - offsetTime) {\r\n        if (keyData.h) {\r\n          keyData = nextKeyData;\r\n        }\r\n        iterationIndex = 0;\r\n        break;\r\n      }\r\n      if ((nextKeyData.t - offsetTime) > frameNum) {\r\n        iterationIndex = i;\r\n        break;\r\n      }\r\n      if (i < len - 1) {\r\n        i += 1;\r\n      } else {\r\n        iterationIndex = 0;\r\n        flag = false;\r\n      }\r\n    }\r\n    keyframeMetadata = this.keyframesMetadata[i] || {};\r\n\r\n    var k;\r\n    var kLen;\r\n    var perc;\r\n    var jLen;\r\n    var j;\r\n    var fnc;\r\n    var nextKeyTime = nextKeyData.t - offsetTime;\r\n    var keyTime = keyData.t - offsetTime;\r\n    var endValue;\r\n    if (keyData.to) {\r\n      if (!keyframeMetadata.bezierData) {\r\n        keyframeMetadata.bezierData = bez.buildBezierData(keyData.s, nextKeyData.s || keyData.e, keyData.to, keyData.ti);\r\n      }\r\n      var bezierData = keyframeMetadata.bezierData;\r\n      if (frameNum >= nextKeyTime || frameNum < keyTime) {\r\n        var ind = frameNum >= nextKeyTime ? bezierData.points.length - 1 : 0;\r\n        kLen = bezierData.points[ind].point.length;\r\n        for (k = 0; k < kLen; k += 1) {\r\n          newValue[k] = bezierData.points[ind].point[k];\r\n        }\r\n        // caching._lastKeyframeIndex = -1;\r\n      } else {\r\n        if (keyframeMetadata.__fnct) {\r\n          fnc = keyframeMetadata.__fnct;\r\n        } else {\r\n          fnc = BezierFactory.getBezierEasing(keyData.o.x, keyData.o.y, keyData.i.x, keyData.i.y, keyData.n).get;\r\n          keyframeMetadata.__fnct = fnc;\r\n        }\r\n        perc = fnc((frameNum - keyTime) / (nextKeyTime - keyTime));\r\n        var distanceInLine = bezierData.segmentLength * perc;\r\n\r\n        var segmentPerc;\r\n        var addedLength = (caching.lastFrame < frameNum && caching._lastKeyframeIndex === i) ? caching._lastAddedLength : 0;\r\n        j = (caching.lastFrame < frameNum && caching._lastKeyframeIndex === i) ? caching._lastPoint : 0;\r\n        flag = true;\r\n        jLen = bezierData.points.length;\r\n        while (flag) {\r\n          addedLength += bezierData.points[j].partialLength;\r\n          if (distanceInLine === 0 || perc === 0 || j === bezierData.points.length - 1) {\r\n            kLen = bezierData.points[j].point.length;\r\n            for (k = 0; k < kLen; k += 1) {\r\n              newValue[k] = bezierData.points[j].point[k];\r\n            }\r\n            break;\r\n          } else if (distanceInLine >= addedLength && distanceInLine < addedLength + bezierData.points[j + 1].partialLength) {\r\n            segmentPerc = (distanceInLine - addedLength) / bezierData.points[j + 1].partialLength;\r\n            kLen = bezierData.points[j].point.length;\r\n            for (k = 0; k < kLen; k += 1) {\r\n              newValue[k] = bezierData.points[j].point[k] + (bezierData.points[j + 1].point[k] - bezierData.points[j].point[k]) * segmentPerc;\r\n            }\r\n            break;\r\n          }\r\n          if (j < jLen - 1) {\r\n            j += 1;\r\n          } else {\r\n            flag = false;\r\n          }\r\n        }\r\n        caching._lastPoint = j;\r\n        caching._lastAddedLength = addedLength - bezierData.points[j].partialLength;\r\n        caching._lastKeyframeIndex = i;\r\n      }\r\n    } else {\r\n      var outX;\r\n      var outY;\r\n      var inX;\r\n      var inY;\r\n      var keyValue;\r\n      len = keyData.s.length;\r\n      endValue = nextKeyData.s || keyData.e;\r\n      if (this.sh && keyData.h !== 1) {\r\n        if (frameNum >= nextKeyTime) {\r\n          newValue[0] = endValue[0];\r\n          newValue[1] = endValue[1];\r\n          newValue[2] = endValue[2];\r\n        } else if (frameNum <= keyTime) {\r\n          newValue[0] = keyData.s[0];\r\n          newValue[1] = keyData.s[1];\r\n          newValue[2] = keyData.s[2];\r\n        } else {\r\n          var quatStart = createQuaternion(keyData.s);\r\n          var quatEnd = createQuaternion(endValue);\r\n          var time = (frameNum - keyTime) / (nextKeyTime - keyTime);\r\n          quaternionToEuler(newValue, slerp(quatStart, quatEnd, time));\r\n        }\r\n      } else {\r\n        for (i = 0; i < len; i += 1) {\r\n          if (keyData.h !== 1) {\r\n            if (frameNum >= nextKeyTime) {\r\n              perc = 1;\r\n            } else if (frameNum < keyTime) {\r\n              perc = 0;\r\n            } else {\r\n              if (keyData.o.x.constructor === Array) {\r\n                if (!keyframeMetadata.__fnct) {\r\n                  keyframeMetadata.__fnct = [];\r\n                }\r\n                if (!keyframeMetadata.__fnct[i]) {\r\n                  outX = keyData.o.x[i] === undefined ? keyData.o.x[0] : keyData.o.x[i];\r\n                  outY = keyData.o.y[i] === undefined ? keyData.o.y[0] : keyData.o.y[i];\r\n                  inX = keyData.i.x[i] === undefined ? keyData.i.x[0] : keyData.i.x[i];\r\n                  inY = keyData.i.y[i] === undefined ? keyData.i.y[0] : keyData.i.y[i];\r\n                  fnc = BezierFactory.getBezierEasing(outX, outY, inX, inY).get;\r\n                  keyframeMetadata.__fnct[i] = fnc;\r\n                } else {\r\n                  fnc = keyframeMetadata.__fnct[i];\r\n                }\r\n              } else if (!keyframeMetadata.__fnct) {\r\n                outX = keyData.o.x;\r\n                outY = keyData.o.y;\r\n                inX = keyData.i.x;\r\n                inY = keyData.i.y;\r\n                fnc = BezierFactory.getBezierEasing(outX, outY, inX, inY).get;\r\n                keyData.keyframeMetadata = fnc;\r\n              } else {\r\n                fnc = keyframeMetadata.__fnct;\r\n              }\r\n              perc = fnc((frameNum - keyTime) / (nextKeyTime - keyTime));\r\n            }\r\n          }\r\n\r\n          endValue = nextKeyData.s || keyData.e;\r\n          keyValue = keyData.h === 1 ? keyData.s[i] : keyData.s[i] + (endValue[i] - keyData.s[i]) * perc;\r\n\r\n          if (this.propType === 'multidimensional') {\r\n            newValue[i] = keyValue;\r\n          } else {\r\n            newValue = keyValue;\r\n          }\r\n        }\r\n      }\r\n    }\r\n    caching.lastIndex = iterationIndex;\r\n    return newValue;\r\n  }\r\n\r\n  // based on @Toji's https://github.com/toji/gl-matrix/\r\n  function slerp(a, b, t) {\r\n    var out = [];\r\n    var ax = a[0];\r\n    var ay = a[1];\r\n    var az = a[2];\r\n    var aw = a[3];\r\n    var bx = b[0];\r\n    var by = b[1];\r\n    var bz = b[2];\r\n    var bw = b[3];\r\n\r\n    var omega;\r\n    var cosom;\r\n    var sinom;\r\n    var scale0;\r\n    var scale1;\r\n\r\n    cosom = ax * bx + ay * by + az * bz + aw * bw;\r\n    if (cosom < 0.0) {\r\n      cosom = -cosom;\r\n      bx = -bx;\r\n      by = -by;\r\n      bz = -bz;\r\n      bw = -bw;\r\n    }\r\n    if ((1.0 - cosom) > 0.000001) {\r\n      omega = Math.acos(cosom);\r\n      sinom = Math.sin(omega);\r\n      scale0 = Math.sin((1.0 - t) * omega) / sinom;\r\n      scale1 = Math.sin(t * omega) / sinom;\r\n    } else {\r\n      scale0 = 1.0 - t;\r\n      scale1 = t;\r\n    }\r\n    out[0] = scale0 * ax + scale1 * bx;\r\n    out[1] = scale0 * ay + scale1 * by;\r\n    out[2] = scale0 * az + scale1 * bz;\r\n    out[3] = scale0 * aw + scale1 * bw;\r\n\r\n    return out;\r\n  }\r\n\r\n  function quaternionToEuler(out, quat) {\r\n    var qx = quat[0];\r\n    var qy = quat[1];\r\n    var qz = quat[2];\r\n    var qw = quat[3];\r\n    var heading = Math.atan2(2 * qy * qw - 2 * qx * qz, 1 - 2 * qy * qy - 2 * qz * qz);\r\n    var attitude = Math.asin(2 * qx * qy + 2 * qz * qw);\r\n    var bank = Math.atan2(2 * qx * qw - 2 * qy * qz, 1 - 2 * qx * qx - 2 * qz * qz);\r\n    out[0] = heading / degToRads;\r\n    out[1] = attitude / degToRads;\r\n    out[2] = bank / degToRads;\r\n  }\r\n\r\n  function createQuaternion(values) {\r\n    var heading = values[0] * degToRads;\r\n    var attitude = values[1] * degToRads;\r\n    var bank = values[2] * degToRads;\r\n    var c1 = Math.cos(heading / 2);\r\n    var c2 = Math.cos(attitude / 2);\r\n    var c3 = Math.cos(bank / 2);\r\n    var s1 = Math.sin(heading / 2);\r\n    var s2 = Math.sin(attitude / 2);\r\n    var s3 = Math.sin(bank / 2);\r\n    var w = c1 * c2 * c3 - s1 * s2 * s3;\r\n    var x = s1 * s2 * c3 + c1 * c2 * s3;\r\n    var y = s1 * c2 * c3 + c1 * s2 * s3;\r\n    var z = c1 * s2 * c3 - s1 * c2 * s3;\r\n\r\n    return [x, y, z, w];\r\n  }\r\n\r\n  function getValueAtCurrentTime() {\r\n    var frameNum = this.comp.renderedFrame - this.offsetTime;\r\n    var initTime = this.keyframes[0].t - this.offsetTime;\r\n    var endTime = this.keyframes[this.keyframes.length - 1].t - this.offsetTime;\r\n    if (!(frameNum === this._caching.lastFrame || (this._caching.lastFrame !== initFrame && ((this._caching.lastFrame >= endTime && frameNum >= endTime) || (this._caching.lastFrame < initTime && frameNum < initTime))))) {\r\n      if (this._caching.lastFrame >= frameNum) {\r\n        this._caching._lastKeyframeIndex = -1;\r\n        this._caching.lastIndex = 0;\r\n      }\r\n\r\n      var renderResult = this.interpolateValue(frameNum, this._caching);\r\n      this.pv = renderResult;\r\n    }\r\n    this._caching.lastFrame = frameNum;\r\n    return this.pv;\r\n  }\r\n\r\n  function setVValue(val) {\r\n    var multipliedValue;\r\n    if (this.propType === 'unidimensional') {\r\n      multipliedValue = val * this.mult;\r\n      if (mathAbs(this.v - multipliedValue) > 0.00001) {\r\n        this.v = multipliedValue;\r\n        this._mdf = true;\r\n      }\r\n    } else {\r\n      var i = 0;\r\n      var len = this.v.length;\r\n      while (i < len) {\r\n        multipliedValue = val[i] * this.mult;\r\n        if (mathAbs(this.v[i] - multipliedValue) > 0.00001) {\r\n          this.v[i] = multipliedValue;\r\n          this._mdf = true;\r\n        }\r\n        i += 1;\r\n      }\r\n    }\r\n  }\r\n\r\n  function processEffectsSequence() {\r\n    if (this.elem.globalData.frameId === this.frameId || !this.effectsSequence.length) {\r\n      return;\r\n    }\r\n    if (this.lock) {\r\n      this.setVValue(this.pv);\r\n      return;\r\n    }\r\n    this.lock = true;\r\n    this._mdf = this._isFirstFrame;\r\n    var i;\r\n    var len = this.effectsSequence.length;\r\n    var finalValue = this.kf ? this.pv : this.data.k;\r\n    for (i = 0; i < len; i += 1) {\r\n      finalValue = this.effectsSequence[i](finalValue);\r\n    }\r\n    this.setVValue(finalValue);\r\n    this._isFirstFrame = false;\r\n    this.lock = false;\r\n    this.frameId = this.elem.globalData.frameId;\r\n  }\r\n\r\n  function addEffect(effectFunction) {\r\n    this.effectsSequence.push(effectFunction);\r\n    this.container.addDynamicProperty(this);\r\n  }\r\n\r\n  function ValueProperty(elem, data, mult, container) {\r\n    this.propType = 'unidimensional';\r\n    this.mult = mult || 1;\r\n    this.data = data;\r\n    this.v = mult ? data.k * mult : data.k;\r\n    this.pv = data.k;\r\n    this._mdf = false;\r\n    this.elem = elem;\r\n    this.container = container;\r\n    this.comp = elem.comp;\r\n    this.k = false;\r\n    this.kf = false;\r\n    this.vel = 0;\r\n    this.effectsSequence = [];\r\n    this._isFirstFrame = true;\r\n    this.getValue = processEffectsSequence;\r\n    this.setVValue = setVValue;\r\n    this.addEffect = addEffect;\r\n  }\r\n\r\n  function MultiDimensionalProperty(elem, data, mult, container) {\r\n    this.propType = 'multidimensional';\r\n    this.mult = mult || 1;\r\n    this.data = data;\r\n    this._mdf = false;\r\n    this.elem = elem;\r\n    this.container = container;\r\n    this.comp = elem.comp;\r\n    this.k = false;\r\n    this.kf = false;\r\n    this.frameId = -1;\r\n    var i;\r\n    var len = data.k.length;\r\n    this.v = createTypedArray('float32', len);\r\n    this.pv = createTypedArray('float32', len);\r\n    this.vel = createTypedArray('float32', len);\r\n    for (i = 0; i < len; i += 1) {\r\n      this.v[i] = data.k[i] * this.mult;\r\n      this.pv[i] = data.k[i];\r\n    }\r\n    this._isFirstFrame = true;\r\n    this.effectsSequence = [];\r\n    this.getValue = processEffectsSequence;\r\n    this.setVValue = setVValue;\r\n    this.addEffect = addEffect;\r\n  }\r\n\r\n  function KeyframedValueProperty(elem, data, mult, container) {\r\n    this.propType = 'unidimensional';\r\n    this.keyframes = data.k;\r\n    this.keyframesMetadata = [];\r\n    this.offsetTime = elem.data.st;\r\n    this.frameId = -1;\r\n    this._caching = {\r\n      lastFrame: initFrame, lastIndex: 0, value: 0, _lastKeyframeIndex: -1,\r\n    };\r\n    this.k = true;\r\n    this.kf = true;\r\n    this.data = data;\r\n    this.mult = mult || 1;\r\n    this.elem = elem;\r\n    this.container = container;\r\n    this.comp = elem.comp;\r\n    this.v = initFrame;\r\n    this.pv = initFrame;\r\n    this._isFirstFrame = true;\r\n    this.getValue = processEffectsSequence;\r\n    this.setVValue = setVValue;\r\n    this.interpolateValue = interpolateValue;\r\n    this.effectsSequence = [getValueAtCurrentTime.bind(this)];\r\n    this.addEffect = addEffect;\r\n  }\r\n\r\n  function KeyframedMultidimensionalProperty(elem, data, mult, container) {\r\n    this.propType = 'multidimensional';\r\n    var i;\r\n    var len = data.k.length;\r\n    var s;\r\n    var e;\r\n    var to;\r\n    var ti;\r\n    for (i = 0; i < len - 1; i += 1) {\r\n      if (data.k[i].to && data.k[i].s && data.k[i + 1] && data.k[i + 1].s) {\r\n        s = data.k[i].s;\r\n        e = data.k[i + 1].s;\r\n        to = data.k[i].to;\r\n        ti = data.k[i].ti;\r\n        if ((s.length === 2 && !(s[0] === e[0] && s[1] === e[1]) && bez.pointOnLine2D(s[0], s[1], e[0], e[1], s[0] + to[0], s[1] + to[1]) && bez.pointOnLine2D(s[0], s[1], e[0], e[1], e[0] + ti[0], e[1] + ti[1])) || (s.length === 3 && !(s[0] === e[0] && s[1] === e[1] && s[2] === e[2]) && bez.pointOnLine3D(s[0], s[1], s[2], e[0], e[1], e[2], s[0] + to[0], s[1] + to[1], s[2] + to[2]) && bez.pointOnLine3D(s[0], s[1], s[2], e[0], e[1], e[2], e[0] + ti[0], e[1] + ti[1], e[2] + ti[2]))) {\r\n          data.k[i].to = null;\r\n          data.k[i].ti = null;\r\n        }\r\n        if (s[0] === e[0] && s[1] === e[1] && to[0] === 0 && to[1] === 0 && ti[0] === 0 && ti[1] === 0) {\r\n          if (s.length === 2 || (s[2] === e[2] && to[2] === 0 && ti[2] === 0)) {\r\n            data.k[i].to = null;\r\n            data.k[i].ti = null;\r\n          }\r\n        }\r\n      }\r\n    }\r\n    this.effectsSequence = [getValueAtCurrentTime.bind(this)];\r\n    this.data = data;\r\n    this.keyframes = data.k;\r\n    this.keyframesMetadata = [];\r\n    this.offsetTime = elem.data.st;\r\n    this.k = true;\r\n    this.kf = true;\r\n    this._isFirstFrame = true;\r\n    this.mult = mult || 1;\r\n    this.elem = elem;\r\n    this.container = container;\r\n    this.comp = elem.comp;\r\n    this.getValue = processEffectsSequence;\r\n    this.setVValue = setVValue;\r\n    this.interpolateValue = interpolateValue;\r\n    this.frameId = -1;\r\n    var arrLen = data.k[0].s.length;\r\n    this.v = createTypedArray('float32', arrLen);\r\n    this.pv = createTypedArray('float32', arrLen);\r\n    for (i = 0; i < arrLen; i += 1) {\r\n      this.v[i] = initFrame;\r\n      this.pv[i] = initFrame;\r\n    }\r\n    this._caching = { lastFrame: initFrame, lastIndex: 0, value: createTypedArray('float32', arrLen) };\r\n    this.addEffect = addEffect;\r\n  }\r\n\r\n  function getProp(elem, data, type, mult, container) {\r\n    var p;\r\n    if (!data.k.length) {\r\n      p = new ValueProperty(elem, data, mult, container);\r\n    } else if (typeof (data.k[0]) === 'number') {\r\n      p = new MultiDimensionalProperty(elem, data, mult, container);\r\n    } else {\r\n      switch (type) {\r\n        case 0:\r\n          p = new KeyframedValueProperty(elem, data, mult, container);\r\n          break;\r\n        case 1:\r\n          p = new KeyframedMultidimensionalProperty(elem, data, mult, container);\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n    }\r\n    if (p.effectsSequence.length) {\r\n      container.addDynamicProperty(p);\r\n    }\r\n    return p;\r\n  }\r\n\r\n  var ob = {\r\n    getProp: getProp,\r\n  };\r\n  return ob;\r\n}());\r\n\r\n/* global Matrix, degToRads, PropertyFactory, extendPrototype, DynamicPropertyContainer */\r\n/* exported TransformPropertyFactory */\r\n\r\nvar TransformPropertyFactory = (function () {\r\n  var defaultVector = [0, 0];\r\n\r\n  function applyToMatrix(mat) {\r\n    var _mdf = this._mdf;\r\n    this.iterateDynamicProperties();\r\n    this._mdf = this._mdf || _mdf;\r\n    if (this.a) {\r\n      mat.translate(-this.a.v[0], -this.a.v[1], this.a.v[2]);\r\n    }\r\n    if (this.s) {\r\n      mat.scale(this.s.v[0], this.s.v[1], this.s.v[2]);\r\n    }\r\n    if (this.sk) {\r\n      mat.skewFromAxis(-this.sk.v, this.sa.v);\r\n    }\r\n    if (this.r) {\r\n      mat.rotate(-this.r.v);\r\n    } else {\r\n      mat.rotateZ(-this.rz.v).rotateY(this.ry.v).rotateX(this.rx.v).rotateZ(-this.or.v[2])\r\n        .rotateY(this.or.v[1])\r\n        .rotateX(this.or.v[0]);\r\n    }\r\n    if (this.data.p.s) {\r\n      if (this.data.p.z) {\r\n        mat.translate(this.px.v, this.py.v, -this.pz.v);\r\n      } else {\r\n        mat.translate(this.px.v, this.py.v, 0);\r\n      }\r\n    } else {\r\n      mat.translate(this.p.v[0], this.p.v[1], -this.p.v[2]);\r\n    }\r\n  }\r\n  function processKeys(forceRender) {\r\n    if (this.elem.globalData.frameId === this.frameId) {\r\n      return;\r\n    }\r\n    if (this._isDirty) {\r\n      this.precalculateMatrix();\r\n      this._isDirty = false;\r\n    }\r\n\r\n    this.iterateDynamicProperties();\r\n\r\n    if (this._mdf || forceRender) {\r\n      var frameRate;\r\n      this.v.cloneFromProps(this.pre.props);\r\n      if (this.appliedTransformations < 1) {\r\n        this.v.translate(-this.a.v[0], -this.a.v[1], this.a.v[2]);\r\n      }\r\n      if (this.appliedTransformations < 2) {\r\n        this.v.scale(this.s.v[0], this.s.v[1], this.s.v[2]);\r\n      }\r\n      if (this.sk && this.appliedTransformations < 3) {\r\n        this.v.skewFromAxis(-this.sk.v, this.sa.v);\r\n      }\r\n      if (this.r && this.appliedTransformations < 4) {\r\n        this.v.rotate(-this.r.v);\r\n      } else if (!this.r && this.appliedTransformations < 4) {\r\n        this.v.rotateZ(-this.rz.v).rotateY(this.ry.v).rotateX(this.rx.v).rotateZ(-this.or.v[2])\r\n          .rotateY(this.or.v[1])\r\n          .rotateX(this.or.v[0]);\r\n      }\r\n      if (this.autoOriented) {\r\n        var v1;\r\n        var v2;\r\n        frameRate = this.elem.globalData.frameRate;\r\n        if (this.p && this.p.keyframes && this.p.getValueAtTime) {\r\n          if (this.p._caching.lastFrame + this.p.offsetTime <= this.p.keyframes[0].t) {\r\n            v1 = this.p.getValueAtTime((this.p.keyframes[0].t + 0.01) / frameRate, 0);\r\n            v2 = this.p.getValueAtTime(this.p.keyframes[0].t / frameRate, 0);\r\n          } else if (this.p._caching.lastFrame + this.p.offsetTime >= this.p.keyframes[this.p.keyframes.length - 1].t) {\r\n            v1 = this.p.getValueAtTime((this.p.keyframes[this.p.keyframes.length - 1].t / frameRate), 0);\r\n            v2 = this.p.getValueAtTime((this.p.keyframes[this.p.keyframes.length - 1].t - 0.05) / frameRate, 0);\r\n          } else {\r\n            v1 = this.p.pv;\r\n            v2 = this.p.getValueAtTime((this.p._caching.lastFrame + this.p.offsetTime - 0.01) / frameRate, this.p.offsetTime);\r\n          }\r\n        } else if (this.px && this.px.keyframes && this.py.keyframes && this.px.getValueAtTime && this.py.getValueAtTime) {\r\n          v1 = [];\r\n          v2 = [];\r\n          var px = this.px;\r\n          var py = this.py;\r\n          if (px._caching.lastFrame + px.offsetTime <= px.keyframes[0].t) {\r\n            v1[0] = px.getValueAtTime((px.keyframes[0].t + 0.01) / frameRate, 0);\r\n            v1[1] = py.getValueAtTime((py.keyframes[0].t + 0.01) / frameRate, 0);\r\n            v2[0] = px.getValueAtTime((px.keyframes[0].t) / frameRate, 0);\r\n            v2[1] = py.getValueAtTime((py.keyframes[0].t) / frameRate, 0);\r\n          } else if (px._caching.lastFrame + px.offsetTime >= px.keyframes[px.keyframes.length - 1].t) {\r\n            v1[0] = px.getValueAtTime((px.keyframes[px.keyframes.length - 1].t / frameRate), 0);\r\n            v1[1] = py.getValueAtTime((py.keyframes[py.keyframes.length - 1].t / frameRate), 0);\r\n            v2[0] = px.getValueAtTime((px.keyframes[px.keyframes.length - 1].t - 0.01) / frameRate, 0);\r\n            v2[1] = py.getValueAtTime((py.keyframes[py.keyframes.length - 1].t - 0.01) / frameRate, 0);\r\n          } else {\r\n            v1 = [px.pv, py.pv];\r\n            v2[0] = px.getValueAtTime((px._caching.lastFrame + px.offsetTime - 0.01) / frameRate, px.offsetTime);\r\n            v2[1] = py.getValueAtTime((py._caching.lastFrame + py.offsetTime - 0.01) / frameRate, py.offsetTime);\r\n          }\r\n        } else {\r\n          v2 = defaultVector;\r\n          v1 = v2;\r\n        }\r\n        this.v.rotate(-Math.atan2(v1[1] - v2[1], v1[0] - v2[0]));\r\n      }\r\n      if (this.data.p && this.data.p.s) {\r\n        if (this.data.p.z) {\r\n          this.v.translate(this.px.v, this.py.v, -this.pz.v);\r\n        } else {\r\n          this.v.translate(this.px.v, this.py.v, 0);\r\n        }\r\n      } else {\r\n        this.v.translate(this.p.v[0], this.p.v[1], -this.p.v[2]);\r\n      }\r\n    }\r\n    this.frameId = this.elem.globalData.frameId;\r\n  }\r\n\r\n  function precalculateMatrix() {\r\n    if (!this.a.k) {\r\n      this.pre.translate(-this.a.v[0], -this.a.v[1], this.a.v[2]);\r\n      this.appliedTransformations = 1;\r\n    } else {\r\n      return;\r\n    }\r\n    if (!this.s.effectsSequence.length) {\r\n      this.pre.scale(this.s.v[0], this.s.v[1], this.s.v[2]);\r\n      this.appliedTransformations = 2;\r\n    } else {\r\n      return;\r\n    }\r\n    if (this.sk) {\r\n      if (!this.sk.effectsSequence.length && !this.sa.effectsSequence.length) {\r\n        this.pre.skewFromAxis(-this.sk.v, this.sa.v);\r\n        this.appliedTransformations = 3;\r\n      } else {\r\n        return;\r\n      }\r\n    }\r\n    if (this.r) {\r\n      if (!this.r.effectsSequence.length) {\r\n        this.pre.rotate(-this.r.v);\r\n        this.appliedTransformations = 4;\r\n      }\r\n    } else if (!this.rz.effectsSequence.length && !this.ry.effectsSequence.length && !this.rx.effectsSequence.length && !this.or.effectsSequence.length) {\r\n      this.pre.rotateZ(-this.rz.v).rotateY(this.ry.v).rotateX(this.rx.v).rotateZ(-this.or.v[2])\r\n        .rotateY(this.or.v[1])\r\n        .rotateX(this.or.v[0]);\r\n      this.appliedTransformations = 4;\r\n    }\r\n  }\r\n\r\n  function autoOrient() {\r\n    //\r\n    // var prevP = this.getValueAtTime();\r\n  }\r\n\r\n  function addDynamicProperty(prop) {\r\n    this._addDynamicProperty(prop);\r\n    this.elem.addDynamicProperty(prop);\r\n    this._isDirty = true;\r\n  }\r\n\r\n  function TransformProperty(elem, data, container) {\r\n    this.elem = elem;\r\n    this.frameId = -1;\r\n    this.propType = 'transform';\r\n    this.data = data;\r\n    this.v = new Matrix();\r\n    // Precalculated matrix with non animated properties\r\n    this.pre = new Matrix();\r\n    this.appliedTransformations = 0;\r\n    this.initDynamicPropertyContainer(container || elem);\r\n    if (data.p && data.p.s) {\r\n      this.px = PropertyFactory.getProp(elem, data.p.x, 0, 0, this);\r\n      this.py = PropertyFactory.getProp(elem, data.p.y, 0, 0, this);\r\n      if (data.p.z) {\r\n        this.pz = PropertyFactory.getProp(elem, data.p.z, 0, 0, this);\r\n      }\r\n    } else {\r\n      this.p = PropertyFactory.getProp(elem, data.p || { k: [0, 0, 0] }, 1, 0, this);\r\n    }\r\n    if (data.rx) {\r\n      this.rx = PropertyFactory.getProp(elem, data.rx, 0, degToRads, this);\r\n      this.ry = PropertyFactory.getProp(elem, data.ry, 0, degToRads, this);\r\n      this.rz = PropertyFactory.getProp(elem, data.rz, 0, degToRads, this);\r\n      if (data.or.k[0].ti) {\r\n        var i;\r\n        var len = data.or.k.length;\r\n        for (i = 0; i < len; i += 1) {\r\n          data.or.k[i].to = null;\r\n          data.or.k[i].ti = null;\r\n        }\r\n      }\r\n      this.or = PropertyFactory.getProp(elem, data.or, 1, degToRads, this);\r\n      // sh Indicates it needs to be capped between -180 and 180\r\n      this.or.sh = true;\r\n    } else {\r\n      this.r = PropertyFactory.getProp(elem, data.r || { k: 0 }, 0, degToRads, this);\r\n    }\r\n    if (data.sk) {\r\n      this.sk = PropertyFactory.getProp(elem, data.sk, 0, degToRads, this);\r\n      this.sa = PropertyFactory.getProp(elem, data.sa, 0, degToRads, this);\r\n    }\r\n    this.a = PropertyFactory.getProp(elem, data.a || { k: [0, 0, 0] }, 1, 0, this);\r\n    this.s = PropertyFactory.getProp(elem, data.s || { k: [100, 100, 100] }, 1, 0.01, this);\r\n    // Opacity is not part of the transform properties, that's why it won't use this.dynamicProperties. That way transforms won't get updated if opacity changes.\r\n    if (data.o) {\r\n      this.o = PropertyFactory.getProp(elem, data.o, 0, 0.01, elem);\r\n    } else {\r\n      this.o = { _mdf: false, v: 1 };\r\n    }\r\n    this._isDirty = true;\r\n    if (!this.dynamicProperties.length) {\r\n      this.getValue(true);\r\n    }\r\n  }\r\n\r\n  TransformProperty.prototype = {\r\n    applyToMatrix: applyToMatrix,\r\n    getValue: processKeys,\r\n    precalculateMatrix: precalculateMatrix,\r\n    autoOrient: autoOrient,\r\n  };\r\n\r\n  extendPrototype([DynamicPropertyContainer], TransformProperty);\r\n  TransformProperty.prototype.addDynamicProperty = addDynamicProperty;\r\n  TransformProperty.prototype._addDynamicProperty = DynamicPropertyContainer.prototype.addDynamicProperty;\r\n\r\n  function getTransformProperty(elem, data, container) {\r\n    return new TransformProperty(elem, data, container);\r\n  }\r\n\r\n  return {\r\n    getTransformProperty: getTransformProperty,\r\n  };\r\n}());\r\n\r\n/* global createSizedArray, createSizedArray, pointPool */\r\n\r\nfunction ShapePath() {\r\n  this.c = false;\r\n  this._length = 0;\r\n  this._maxLength = 8;\r\n  this.v = createSizedArray(this._maxLength);\r\n  this.o = createSizedArray(this._maxLength);\r\n  this.i = createSizedArray(this._maxLength);\r\n}\r\n\r\nShapePath.prototype.setPathData = function (closed, len) {\r\n  this.c = closed;\r\n  this.setLength(len);\r\n  var i = 0;\r\n  while (i < len) {\r\n    this.v[i] = pointPool.newElement();\r\n    this.o[i] = pointPool.newElement();\r\n    this.i[i] = pointPool.newElement();\r\n    i += 1;\r\n  }\r\n};\r\n\r\nShapePath.prototype.setLength = function (len) {\r\n  while (this._maxLength < len) {\r\n    this.doubleArrayLength();\r\n  }\r\n  this._length = len;\r\n};\r\n\r\nShapePath.prototype.doubleArrayLength = function () {\r\n  this.v = this.v.concat(createSizedArray(this._maxLength));\r\n  this.i = this.i.concat(createSizedArray(this._maxLength));\r\n  this.o = this.o.concat(createSizedArray(this._maxLength));\r\n  this._maxLength *= 2;\r\n};\r\n\r\nShapePath.prototype.setXYAt = function (x, y, type, pos, replace) {\r\n  var arr;\r\n  this._length = Math.max(this._length, pos + 1);\r\n  if (this._length >= this._maxLength) {\r\n    this.doubleArrayLength();\r\n  }\r\n  switch (type) {\r\n    case 'v':\r\n      arr = this.v;\r\n      break;\r\n    case 'i':\r\n      arr = this.i;\r\n      break;\r\n    case 'o':\r\n      arr = this.o;\r\n      break;\r\n    default:\r\n      arr = [];\r\n      break;\r\n  }\r\n  if (!arr[pos] || (arr[pos] && !replace)) {\r\n    arr[pos] = pointPool.newElement();\r\n  }\r\n  arr[pos][0] = x;\r\n  arr[pos][1] = y;\r\n};\r\n\r\nShapePath.prototype.setTripleAt = function (vX, vY, oX, oY, iX, iY, pos, replace) {\r\n  this.setXYAt(vX, vY, 'v', pos, replace);\r\n  this.setXYAt(oX, oY, 'o', pos, replace);\r\n  this.setXYAt(iX, iY, 'i', pos, replace);\r\n};\r\n\r\nShapePath.prototype.reverse = function () {\r\n  var newPath = new ShapePath();\r\n  newPath.setPathData(this.c, this._length);\r\n  var vertices = this.v;\r\n  var outPoints = this.o;\r\n  var inPoints = this.i;\r\n  var init = 0;\r\n  if (this.c) {\r\n    newPath.setTripleAt(vertices[0][0], vertices[0][1], inPoints[0][0], inPoints[0][1], outPoints[0][0], outPoints[0][1], 0, false);\r\n    init = 1;\r\n  }\r\n  var cnt = this._length - 1;\r\n  var len = this._length;\r\n\r\n  var i;\r\n  for (i = init; i < len; i += 1) {\r\n    newPath.setTripleAt(vertices[cnt][0], vertices[cnt][1], inPoints[cnt][0], inPoints[cnt][1], outPoints[cnt][0], outPoints[cnt][1], i, false);\r\n    cnt -= 1;\r\n  }\r\n  return newPath;\r\n};\r\n\r\n/* global extendPrototype, roundCorner, BezierFactory, shapePool, degToRads,\r\n  shapeCollectionPool, PropertyFactory, bmMin, DynamicPropertyContainer */\r\n/* exported ShapePropertyFactory */\r\n\r\nvar ShapePropertyFactory = (function () {\r\n  var initFrame = -999999;\r\n\r\n  function interpolateShape(frameNum, previousValue, caching) {\r\n    var iterationIndex = caching.lastIndex;\r\n    var keyPropS;\r\n    var keyPropE;\r\n    var isHold;\r\n    var j;\r\n    var k;\r\n    var jLen;\r\n    var kLen;\r\n    var perc;\r\n    var vertexValue;\r\n    var kf = this.keyframes;\r\n    if (frameNum < kf[0].t - this.offsetTime) {\r\n      keyPropS = kf[0].s[0];\r\n      isHold = true;\r\n      iterationIndex = 0;\r\n    } else if (frameNum >= kf[kf.length - 1].t - this.offsetTime) {\r\n      keyPropS = kf[kf.length - 1].s ? kf[kf.length - 1].s[0] : kf[kf.length - 2].e[0];\r\n      /* if(kf[kf.length - 1].s){\r\n                keyPropS = kf[kf.length - 1].s[0];\r\n            }else{\r\n                keyPropS = kf[kf.length - 2].e[0];\r\n            } */\r\n      isHold = true;\r\n    } else {\r\n      var i = iterationIndex;\r\n      var len = kf.length - 1;\r\n      var flag = true;\r\n      var keyData;\r\n      var nextKeyData;\r\n      var keyframeMetadata;\r\n      while (flag) {\r\n        keyData = kf[i];\r\n        nextKeyData = kf[i + 1];\r\n        if ((nextKeyData.t - this.offsetTime) > frameNum) {\r\n          break;\r\n        }\r\n        if (i < len - 1) {\r\n          i += 1;\r\n        } else {\r\n          flag = false;\r\n        }\r\n      }\r\n      keyframeMetadata = this.keyframesMetadata[i] || {};\r\n      isHold = keyData.h === 1;\r\n      iterationIndex = i;\r\n      if (!isHold) {\r\n        if (frameNum >= nextKeyData.t - this.offsetTime) {\r\n          perc = 1;\r\n        } else if (frameNum < keyData.t - this.offsetTime) {\r\n          perc = 0;\r\n        } else {\r\n          var fnc;\r\n          if (keyframeMetadata.__fnct) {\r\n            fnc = keyframeMetadata.__fnct;\r\n          } else {\r\n            fnc = BezierFactory.getBezierEasing(keyData.o.x, keyData.o.y, keyData.i.x, keyData.i.y).get;\r\n            keyframeMetadata.__fnct = fnc;\r\n          }\r\n          perc = fnc((frameNum - (keyData.t - this.offsetTime)) / ((nextKeyData.t - this.offsetTime) - (keyData.t - this.offsetTime)));\r\n        }\r\n        keyPropE = nextKeyData.s ? nextKeyData.s[0] : keyData.e[0];\r\n      }\r\n      keyPropS = keyData.s[0];\r\n    }\r\n    jLen = previousValue._length;\r\n    kLen = keyPropS.i[0].length;\r\n    caching.lastIndex = iterationIndex;\r\n\r\n    for (j = 0; j < jLen; j += 1) {\r\n      for (k = 0; k < kLen; k += 1) {\r\n        vertexValue = isHold ? keyPropS.i[j][k] : keyPropS.i[j][k] + (keyPropE.i[j][k] - keyPropS.i[j][k]) * perc;\r\n        previousValue.i[j][k] = vertexValue;\r\n        vertexValue = isHold ? keyPropS.o[j][k] : keyPropS.o[j][k] + (keyPropE.o[j][k] - keyPropS.o[j][k]) * perc;\r\n        previousValue.o[j][k] = vertexValue;\r\n        vertexValue = isHold ? keyPropS.v[j][k] : keyPropS.v[j][k] + (keyPropE.v[j][k] - keyPropS.v[j][k]) * perc;\r\n        previousValue.v[j][k] = vertexValue;\r\n      }\r\n    }\r\n  }\r\n\r\n  function interpolateShapeCurrentTime() {\r\n    var frameNum = this.comp.renderedFrame - this.offsetTime;\r\n    var initTime = this.keyframes[0].t - this.offsetTime;\r\n    var endTime = this.keyframes[this.keyframes.length - 1].t - this.offsetTime;\r\n    var lastFrame = this._caching.lastFrame;\r\n    if (!(lastFrame !== initFrame && ((lastFrame < initTime && frameNum < initTime) || (lastFrame > endTime && frameNum > endTime)))) {\r\n      /// /\r\n      this._caching.lastIndex = lastFrame < frameNum ? this._caching.lastIndex : 0;\r\n      this.interpolateShape(frameNum, this.pv, this._caching);\r\n      /// /\r\n    }\r\n    this._caching.lastFrame = frameNum;\r\n    return this.pv;\r\n  }\r\n\r\n  function resetShape() {\r\n    this.paths = this.localShapeCollection;\r\n  }\r\n\r\n  function shapesEqual(shape1, shape2) {\r\n    if (shape1._length !== shape2._length || shape1.c !== shape2.c) {\r\n      return false;\r\n    }\r\n    var i;\r\n    var len = shape1._length;\r\n    for (i = 0; i < len; i += 1) {\r\n      if (shape1.v[i][0] !== shape2.v[i][0]\r\n            || shape1.v[i][1] !== shape2.v[i][1]\r\n            || shape1.o[i][0] !== shape2.o[i][0]\r\n            || shape1.o[i][1] !== shape2.o[i][1]\r\n            || shape1.i[i][0] !== shape2.i[i][0]\r\n            || shape1.i[i][1] !== shape2.i[i][1]) {\r\n        return false;\r\n      }\r\n    }\r\n    return true;\r\n  }\r\n\r\n  function setVValue(newPath) {\r\n    if (!shapesEqual(this.v, newPath)) {\r\n      this.v = shapePool.clone(newPath);\r\n      this.localShapeCollection.releaseShapes();\r\n      this.localShapeCollection.addShape(this.v);\r\n      this._mdf = true;\r\n      this.paths = this.localShapeCollection;\r\n    }\r\n  }\r\n\r\n  function processEffectsSequence() {\r\n    if (this.elem.globalData.frameId === this.frameId) {\r\n      return;\r\n    } if (!this.effectsSequence.length) {\r\n      this._mdf = false;\r\n      return;\r\n    }\r\n    if (this.lock) {\r\n      this.setVValue(this.pv);\r\n      return;\r\n    }\r\n    this.lock = true;\r\n    this._mdf = false;\r\n    var finalValue;\r\n    if (this.kf) {\r\n      finalValue = this.pv;\r\n    } else if (this.data.ks) {\r\n      finalValue = this.data.ks.k;\r\n    } else {\r\n      finalValue = this.data.pt.k;\r\n    }\r\n    var i;\r\n    var len = this.effectsSequence.length;\r\n    for (i = 0; i < len; i += 1) {\r\n      finalValue = this.effectsSequence[i](finalValue);\r\n    }\r\n    this.setVValue(finalValue);\r\n    this.lock = false;\r\n    this.frameId = this.elem.globalData.frameId;\r\n  }\r\n\r\n  function ShapeProperty(elem, data, type) {\r\n    this.propType = 'shape';\r\n    this.comp = elem.comp;\r\n    this.container = elem;\r\n    this.elem = elem;\r\n    this.data = data;\r\n    this.k = false;\r\n    this.kf = false;\r\n    this._mdf = false;\r\n    var pathData = type === 3 ? data.pt.k : data.ks.k;\r\n    this.v = shapePool.clone(pathData);\r\n    this.pv = shapePool.clone(this.v);\r\n    this.localShapeCollection = shapeCollectionPool.newShapeCollection();\r\n    this.paths = this.localShapeCollection;\r\n    this.paths.addShape(this.v);\r\n    this.reset = resetShape;\r\n    this.effectsSequence = [];\r\n  }\r\n\r\n  function addEffect(effectFunction) {\r\n    this.effectsSequence.push(effectFunction);\r\n    this.container.addDynamicProperty(this);\r\n  }\r\n\r\n  ShapeProperty.prototype.interpolateShape = interpolateShape;\r\n  ShapeProperty.prototype.getValue = processEffectsSequence;\r\n  ShapeProperty.prototype.setVValue = setVValue;\r\n  ShapeProperty.prototype.addEffect = addEffect;\r\n\r\n  function KeyframedShapeProperty(elem, data, type) {\r\n    this.propType = 'shape';\r\n    this.comp = elem.comp;\r\n    this.elem = elem;\r\n    this.container = elem;\r\n    this.offsetTime = elem.data.st;\r\n    this.keyframes = type === 3 ? data.pt.k : data.ks.k;\r\n    this.keyframesMetadata = [];\r\n    this.k = true;\r\n    this.kf = true;\r\n    var len = this.keyframes[0].s[0].i.length;\r\n    this.v = shapePool.newElement();\r\n    this.v.setPathData(this.keyframes[0].s[0].c, len);\r\n    this.pv = shapePool.clone(this.v);\r\n    this.localShapeCollection = shapeCollectionPool.newShapeCollection();\r\n    this.paths = this.localShapeCollection;\r\n    this.paths.addShape(this.v);\r\n    this.lastFrame = initFrame;\r\n    this.reset = resetShape;\r\n    this._caching = { lastFrame: initFrame, lastIndex: 0 };\r\n    this.effectsSequence = [interpolateShapeCurrentTime.bind(this)];\r\n  }\r\n  KeyframedShapeProperty.prototype.getValue = processEffectsSequence;\r\n  KeyframedShapeProperty.prototype.interpolateShape = interpolateShape;\r\n  KeyframedShapeProperty.prototype.setVValue = setVValue;\r\n  KeyframedShapeProperty.prototype.addEffect = addEffect;\r\n\r\n  var EllShapeProperty = (function () {\r\n    var cPoint = roundCorner;\r\n\r\n    function EllShapePropertyFactory(elem, data) {\r\n      /* this.v = {\r\n                v: createSizedArray(4),\r\n                i: createSizedArray(4),\r\n                o: createSizedArray(4),\r\n                c: true\r\n            }; */\r\n      this.v = shapePool.newElement();\r\n      this.v.setPathData(true, 4);\r\n      this.localShapeCollection = shapeCollectionPool.newShapeCollection();\r\n      this.paths = this.localShapeCollection;\r\n      this.localShapeCollection.addShape(this.v);\r\n      this.d = data.d;\r\n      this.elem = elem;\r\n      this.comp = elem.comp;\r\n      this.frameId = -1;\r\n      this.initDynamicPropertyContainer(elem);\r\n      this.p = PropertyFactory.getProp(elem, data.p, 1, 0, this);\r\n      this.s = PropertyFactory.getProp(elem, data.s, 1, 0, this);\r\n      if (this.dynamicProperties.length) {\r\n        this.k = true;\r\n      } else {\r\n        this.k = false;\r\n        this.convertEllToPath();\r\n      }\r\n    }\r\n\r\n    EllShapePropertyFactory.prototype = {\r\n      reset: resetShape,\r\n      getValue: function () {\r\n        if (this.elem.globalData.frameId === this.frameId) {\r\n          return;\r\n        }\r\n        this.frameId = this.elem.globalData.frameId;\r\n        this.iterateDynamicProperties();\r\n\r\n        if (this._mdf) {\r\n          this.convertEllToPath();\r\n        }\r\n      },\r\n      convertEllToPath: function () {\r\n        var p0 = this.p.v[0];\r\n        var p1 = this.p.v[1];\r\n        var s0 = this.s.v[0] / 2;\r\n        var s1 = this.s.v[1] / 2;\r\n        var _cw = this.d !== 3;\r\n        var _v = this.v;\r\n        _v.v[0][0] = p0;\r\n        _v.v[0][1] = p1 - s1;\r\n        _v.v[1][0] = _cw ? p0 + s0 : p0 - s0;\r\n        _v.v[1][1] = p1;\r\n        _v.v[2][0] = p0;\r\n        _v.v[2][1] = p1 + s1;\r\n        _v.v[3][0] = _cw ? p0 - s0 : p0 + s0;\r\n        _v.v[3][1] = p1;\r\n        _v.i[0][0] = _cw ? p0 - s0 * cPoint : p0 + s0 * cPoint;\r\n        _v.i[0][1] = p1 - s1;\r\n        _v.i[1][0] = _cw ? p0 + s0 : p0 - s0;\r\n        _v.i[1][1] = p1 - s1 * cPoint;\r\n        _v.i[2][0] = _cw ? p0 + s0 * cPoint : p0 - s0 * cPoint;\r\n        _v.i[2][1] = p1 + s1;\r\n        _v.i[3][0] = _cw ? p0 - s0 : p0 + s0;\r\n        _v.i[3][1] = p1 + s1 * cPoint;\r\n        _v.o[0][0] = _cw ? p0 + s0 * cPoint : p0 - s0 * cPoint;\r\n        _v.o[0][1] = p1 - s1;\r\n        _v.o[1][0] = _cw ? p0 + s0 : p0 - s0;\r\n        _v.o[1][1] = p1 + s1 * cPoint;\r\n        _v.o[2][0] = _cw ? p0 - s0 * cPoint : p0 + s0 * cPoint;\r\n        _v.o[2][1] = p1 + s1;\r\n        _v.o[3][0] = _cw ? p0 - s0 : p0 + s0;\r\n        _v.o[3][1] = p1 - s1 * cPoint;\r\n      },\r\n    };\r\n\r\n    extendPrototype([DynamicPropertyContainer], EllShapePropertyFactory);\r\n\r\n    return EllShapePropertyFactory;\r\n  }());\r\n\r\n  var StarShapeProperty = (function () {\r\n    function StarShapePropertyFactory(elem, data) {\r\n      this.v = shapePool.newElement();\r\n      this.v.setPathData(true, 0);\r\n      this.elem = elem;\r\n      this.comp = elem.comp;\r\n      this.data = data;\r\n      this.frameId = -1;\r\n      this.d = data.d;\r\n      this.initDynamicPropertyContainer(elem);\r\n      if (data.sy === 1) {\r\n        this.ir = PropertyFactory.getProp(elem, data.ir, 0, 0, this);\r\n        this.is = PropertyFactory.getProp(elem, data.is, 0, 0.01, this);\r\n        this.convertToPath = this.convertStarToPath;\r\n      } else {\r\n        this.convertToPath = this.convertPolygonToPath;\r\n      }\r\n      this.pt = PropertyFactory.getProp(elem, data.pt, 0, 0, this);\r\n      this.p = PropertyFactory.getProp(elem, data.p, 1, 0, this);\r\n      this.r = PropertyFactory.getProp(elem, data.r, 0, degToRads, this);\r\n      this.or = PropertyFactory.getProp(elem, data.or, 0, 0, this);\r\n      this.os = PropertyFactory.getProp(elem, data.os, 0, 0.01, this);\r\n      this.localShapeCollection = shapeCollectionPool.newShapeCollection();\r\n      this.localShapeCollection.addShape(this.v);\r\n      this.paths = this.localShapeCollection;\r\n      if (this.dynamicProperties.length) {\r\n        this.k = true;\r\n      } else {\r\n        this.k = false;\r\n        this.convertToPath();\r\n      }\r\n    }\r\n\r\n    StarShapePropertyFactory.prototype = {\r\n      reset: resetShape,\r\n      getValue: function () {\r\n        if (this.elem.globalData.frameId === this.frameId) {\r\n          return;\r\n        }\r\n        this.frameId = this.elem.globalData.frameId;\r\n        this.iterateDynamicProperties();\r\n        if (this._mdf) {\r\n          this.convertToPath();\r\n        }\r\n      },\r\n      convertStarToPath: function () {\r\n        var numPts = Math.floor(this.pt.v) * 2;\r\n        var angle = (Math.PI * 2) / numPts;\r\n        /* this.v.v.length = numPts;\r\n                this.v.i.length = numPts;\r\n                this.v.o.length = numPts; */\r\n        var longFlag = true;\r\n        var longRad = this.or.v;\r\n        var shortRad = this.ir.v;\r\n        var longRound = this.os.v;\r\n        var shortRound = this.is.v;\r\n        var longPerimSegment = (2 * Math.PI * longRad) / (numPts * 2);\r\n        var shortPerimSegment = (2 * Math.PI * shortRad) / (numPts * 2);\r\n        var i;\r\n        var rad;\r\n        var roundness;\r\n        var perimSegment;\r\n        var currentAng = -Math.PI / 2;\r\n        currentAng += this.r.v;\r\n        var dir = this.data.d === 3 ? -1 : 1;\r\n        this.v._length = 0;\r\n        for (i = 0; i < numPts; i += 1) {\r\n          rad = longFlag ? longRad : shortRad;\r\n          roundness = longFlag ? longRound : shortRound;\r\n          perimSegment = longFlag ? longPerimSegment : shortPerimSegment;\r\n          var x = rad * Math.cos(currentAng);\r\n          var y = rad * Math.sin(currentAng);\r\n          var ox = x === 0 && y === 0 ? 0 : y / Math.sqrt(x * x + y * y);\r\n          var oy = x === 0 && y === 0 ? 0 : -x / Math.sqrt(x * x + y * y);\r\n          x += +this.p.v[0];\r\n          y += +this.p.v[1];\r\n          this.v.setTripleAt(x, y, x - ox * perimSegment * roundness * dir, y - oy * perimSegment * roundness * dir, x + ox * perimSegment * roundness * dir, y + oy * perimSegment * roundness * dir, i, true);\r\n\r\n          /* this.v.v[i] = [x,y];\r\n                    this.v.i[i] = [x+ox*perimSegment*roundness*dir,y+oy*perimSegment*roundness*dir];\r\n                    this.v.o[i] = [x-ox*perimSegment*roundness*dir,y-oy*perimSegment*roundness*dir];\r\n                    this.v._length = numPts; */\r\n          longFlag = !longFlag;\r\n          currentAng += angle * dir;\r\n        }\r\n      },\r\n      convertPolygonToPath: function () {\r\n        var numPts = Math.floor(this.pt.v);\r\n        var angle = (Math.PI * 2) / numPts;\r\n        var rad = this.or.v;\r\n        var roundness = this.os.v;\r\n        var perimSegment = (2 * Math.PI * rad) / (numPts * 4);\r\n        var i;\r\n        var currentAng = -Math.PI * 0.5;\r\n        var dir = this.data.d === 3 ? -1 : 1;\r\n        currentAng += this.r.v;\r\n        this.v._length = 0;\r\n        for (i = 0; i < numPts; i += 1) {\r\n          var x = rad * Math.cos(currentAng);\r\n          var y = rad * Math.sin(currentAng);\r\n          var ox = x === 0 && y === 0 ? 0 : y / Math.sqrt(x * x + y * y);\r\n          var oy = x === 0 && y === 0 ? 0 : -x / Math.sqrt(x * x + y * y);\r\n          x += +this.p.v[0];\r\n          y += +this.p.v[1];\r\n          this.v.setTripleAt(x, y, x - ox * perimSegment * roundness * dir, y - oy * perimSegment * roundness * dir, x + ox * perimSegment * roundness * dir, y + oy * perimSegment * roundness * dir, i, true);\r\n          currentAng += angle * dir;\r\n        }\r\n        this.paths.length = 0;\r\n        this.paths[0] = this.v;\r\n      },\r\n\r\n    };\r\n    extendPrototype([DynamicPropertyContainer], StarShapePropertyFactory);\r\n\r\n    return StarShapePropertyFactory;\r\n  }());\r\n\r\n  var RectShapeProperty = (function () {\r\n    function RectShapePropertyFactory(elem, data) {\r\n      this.v = shapePool.newElement();\r\n      this.v.c = true;\r\n      this.localShapeCollection = shapeCollectionPool.newShapeCollection();\r\n      this.localShapeCollection.addShape(this.v);\r\n      this.paths = this.localShapeCollection;\r\n      this.elem = elem;\r\n      this.comp = elem.comp;\r\n      this.frameId = -1;\r\n      this.d = data.d;\r\n      this.initDynamicPropertyContainer(elem);\r\n      this.p = PropertyFactory.getProp(elem, data.p, 1, 0, this);\r\n      this.s = PropertyFactory.getProp(elem, data.s, 1, 0, this);\r\n      this.r = PropertyFactory.getProp(elem, data.r, 0, 0, this);\r\n      if (this.dynamicProperties.length) {\r\n        this.k = true;\r\n      } else {\r\n        this.k = false;\r\n        this.convertRectToPath();\r\n      }\r\n    }\r\n\r\n    RectShapePropertyFactory.prototype = {\r\n      convertRectToPath: function () {\r\n        var p0 = this.p.v[0];\r\n        var p1 = this.p.v[1];\r\n        var v0 = this.s.v[0] / 2;\r\n        var v1 = this.s.v[1] / 2;\r\n        var round = bmMin(v0, v1, this.r.v);\r\n        var cPoint = round * (1 - roundCorner);\r\n        this.v._length = 0;\r\n\r\n        if (this.d === 2 || this.d === 1) {\r\n          this.v.setTripleAt(p0 + v0, p1 - v1 + round, p0 + v0, p1 - v1 + round, p0 + v0, p1 - v1 + cPoint, 0, true);\r\n          this.v.setTripleAt(p0 + v0, p1 + v1 - round, p0 + v0, p1 + v1 - cPoint, p0 + v0, p1 + v1 - round, 1, true);\r\n          if (round !== 0) {\r\n            this.v.setTripleAt(p0 + v0 - round, p1 + v1, p0 + v0 - round, p1 + v1, p0 + v0 - cPoint, p1 + v1, 2, true);\r\n            this.v.setTripleAt(p0 - v0 + round, p1 + v1, p0 - v0 + cPoint, p1 + v1, p0 - v0 + round, p1 + v1, 3, true);\r\n            this.v.setTripleAt(p0 - v0, p1 + v1 - round, p0 - v0, p1 + v1 - round, p0 - v0, p1 + v1 - cPoint, 4, true);\r\n            this.v.setTripleAt(p0 - v0, p1 - v1 + round, p0 - v0, p1 - v1 + cPoint, p0 - v0, p1 - v1 + round, 5, true);\r\n            this.v.setTripleAt(p0 - v0 + round, p1 - v1, p0 - v0 + round, p1 - v1, p0 - v0 + cPoint, p1 - v1, 6, true);\r\n            this.v.setTripleAt(p0 + v0 - round, p1 - v1, p0 + v0 - cPoint, p1 - v1, p0 + v0 - round, p1 - v1, 7, true);\r\n          } else {\r\n            this.v.setTripleAt(p0 - v0, p1 + v1, p0 - v0 + cPoint, p1 + v1, p0 - v0, p1 + v1, 2);\r\n            this.v.setTripleAt(p0 - v0, p1 - v1, p0 - v0, p1 - v1 + cPoint, p0 - v0, p1 - v1, 3);\r\n          }\r\n        } else {\r\n          this.v.setTripleAt(p0 + v0, p1 - v1 + round, p0 + v0, p1 - v1 + cPoint, p0 + v0, p1 - v1 + round, 0, true);\r\n          if (round !== 0) {\r\n            this.v.setTripleAt(p0 + v0 - round, p1 - v1, p0 + v0 - round, p1 - v1, p0 + v0 - cPoint, p1 - v1, 1, true);\r\n            this.v.setTripleAt(p0 - v0 + round, p1 - v1, p0 - v0 + cPoint, p1 - v1, p0 - v0 + round, p1 - v1, 2, true);\r\n            this.v.setTripleAt(p0 - v0, p1 - v1 + round, p0 - v0, p1 - v1 + round, p0 - v0, p1 - v1 + cPoint, 3, true);\r\n            this.v.setTripleAt(p0 - v0, p1 + v1 - round, p0 - v0, p1 + v1 - cPoint, p0 - v0, p1 + v1 - round, 4, true);\r\n            this.v.setTripleAt(p0 - v0 + round, p1 + v1, p0 - v0 + round, p1 + v1, p0 - v0 + cPoint, p1 + v1, 5, true);\r\n            this.v.setTripleAt(p0 + v0 - round, p1 + v1, p0 + v0 - cPoint, p1 + v1, p0 + v0 - round, p1 + v1, 6, true);\r\n            this.v.setTripleAt(p0 + v0, p1 + v1 - round, p0 + v0, p1 + v1 - round, p0 + v0, p1 + v1 - cPoint, 7, true);\r\n          } else {\r\n            this.v.setTripleAt(p0 - v0, p1 - v1, p0 - v0 + cPoint, p1 - v1, p0 - v0, p1 - v1, 1, true);\r\n            this.v.setTripleAt(p0 - v0, p1 + v1, p0 - v0, p1 + v1 - cPoint, p0 - v0, p1 + v1, 2, true);\r\n            this.v.setTripleAt(p0 + v0, p1 + v1, p0 + v0 - cPoint, p1 + v1, p0 + v0, p1 + v1, 3, true);\r\n          }\r\n        }\r\n      },\r\n      getValue: function () {\r\n        if (this.elem.globalData.frameId === this.frameId) {\r\n          return;\r\n        }\r\n        this.frameId = this.elem.globalData.frameId;\r\n        this.iterateDynamicProperties();\r\n        if (this._mdf) {\r\n          this.convertRectToPath();\r\n        }\r\n      },\r\n      reset: resetShape,\r\n    };\r\n    extendPrototype([DynamicPropertyContainer], RectShapePropertyFactory);\r\n\r\n    return RectShapePropertyFactory;\r\n  }());\r\n\r\n  function getShapeProp(elem, data, type) {\r\n    var prop;\r\n    if (type === 3 || type === 4) {\r\n      var dataProp = type === 3 ? data.pt : data.ks;\r\n      var keys = dataProp.k;\r\n      if (keys.length) {\r\n        prop = new KeyframedShapeProperty(elem, data, type);\r\n      } else {\r\n        prop = new ShapeProperty(elem, data, type);\r\n      }\r\n    } else if (type === 5) {\r\n      prop = new RectShapeProperty(elem, data);\r\n    } else if (type === 6) {\r\n      prop = new EllShapeProperty(elem, data);\r\n    } else if (type === 7) {\r\n      prop = new StarShapeProperty(elem, data);\r\n    }\r\n    if (prop.k) {\r\n      elem.addDynamicProperty(prop);\r\n    }\r\n    return prop;\r\n  }\r\n\r\n  function getConstructorFunction() {\r\n    return ShapeProperty;\r\n  }\r\n\r\n  function getKeyframedConstructorFunction() {\r\n    return KeyframedShapeProperty;\r\n  }\r\n\r\n  var ob = {};\r\n  ob.getShapeProp = getShapeProp;\r\n  ob.getConstructorFunction = getConstructorFunction;\r\n  ob.getKeyframedConstructorFunction = getKeyframedConstructorFunction;\r\n  return ob;\r\n}());\r\n\r\n/* global shapeCollectionPool, initialDefaultFrame, extendPrototype, DynamicPropertyContainer */\r\n/* exported ShapeModifiers */\r\n\r\nvar ShapeModifiers = (function () {\r\n  var ob = {};\r\n  var modifiers = {};\r\n  ob.registerModifier = registerModifier;\r\n  ob.getModifier = getModifier;\r\n\r\n  function registerModifier(nm, factory) {\r\n    if (!modifiers[nm]) {\r\n      modifiers[nm] = factory;\r\n    }\r\n  }\r\n\r\n  function getModifier(nm, elem, data) {\r\n    return new modifiers[nm](elem, data);\r\n  }\r\n\r\n  return ob;\r\n}());\r\n\r\nfunction ShapeModifier() {}\r\nShapeModifier.prototype.initModifierProperties = function () {};\r\nShapeModifier.prototype.addShapeToModifier = function () {};\r\nShapeModifier.prototype.addShape = function (data) {\r\n  if (!this.closed) {\r\n    // Adding shape to dynamic properties. It covers the case where a shape has no effects applied, to reset it's _mdf state on every tick.\r\n    data.sh.container.addDynamicProperty(data.sh);\r\n    var shapeData = { shape: data.sh, data: data, localShapeCollection: shapeCollectionPool.newShapeCollection() };\r\n    this.shapes.push(shapeData);\r\n    this.addShapeToModifier(shapeData);\r\n    if (this._isAnimated) {\r\n      data.setAsAnimated();\r\n    }\r\n  }\r\n};\r\nShapeModifier.prototype.init = function (elem, data) {\r\n  this.shapes = [];\r\n  this.elem = elem;\r\n  this.initDynamicPropertyContainer(elem);\r\n  this.initModifierProperties(elem, data);\r\n  this.frameId = initialDefaultFrame;\r\n  this.closed = false;\r\n  this.k = false;\r\n  if (this.dynamicProperties.length) {\r\n    this.k = true;\r\n  } else {\r\n    this.getValue(true);\r\n  }\r\n};\r\nShapeModifier.prototype.processKeys = function () {\r\n  if (this.elem.globalData.frameId === this.frameId) {\r\n    return;\r\n  }\r\n  this.frameId = this.elem.globalData.frameId;\r\n  this.iterateDynamicProperties();\r\n};\r\n\r\nextendPrototype([DynamicPropertyContainer], ShapeModifier);\r\n\r\n/* global extendPrototype, ShapeModifier, PropertyFactory, segmentsLengthPool, bez, shapePool, ShapeModifiers */\r\n\r\nfunction TrimModifier() {\r\n}\r\nextendPrototype([ShapeModifier], TrimModifier);\r\nTrimModifier.prototype.initModifierProperties = function (elem, data) {\r\n  this.s = PropertyFactory.getProp(elem, data.s, 0, 0.01, this);\r\n  this.e = PropertyFactory.getProp(elem, data.e, 0, 0.01, this);\r\n  this.o = PropertyFactory.getProp(elem, data.o, 0, 0, this);\r\n  this.sValue = 0;\r\n  this.eValue = 0;\r\n  this.getValue = this.processKeys;\r\n  this.m = data.m;\r\n  this._isAnimated = !!this.s.effectsSequence.length || !!this.e.effectsSequence.length || !!this.o.effectsSequence.length;\r\n};\r\n\r\nTrimModifier.prototype.addShapeToModifier = function (shapeData) {\r\n  shapeData.pathsData = [];\r\n};\r\n\r\nTrimModifier.prototype.calculateShapeEdges = function (s, e, shapeLength, addedLength, totalModifierLength) {\r\n  var segments = [];\r\n  if (e <= 1) {\r\n    segments.push({\r\n      s: s,\r\n      e: e,\r\n    });\r\n  } else if (s >= 1) {\r\n    segments.push({\r\n      s: s - 1,\r\n      e: e - 1,\r\n    });\r\n  } else {\r\n    segments.push({\r\n      s: s,\r\n      e: 1,\r\n    });\r\n    segments.push({\r\n      s: 0,\r\n      e: e - 1,\r\n    });\r\n  }\r\n  var shapeSegments = [];\r\n  var i;\r\n  var len = segments.length;\r\n  var segmentOb;\r\n  for (i = 0; i < len; i += 1) {\r\n    segmentOb = segments[i];\r\n    if (!(segmentOb.e * totalModifierLength < addedLength || segmentOb.s * totalModifierLength > addedLength + shapeLength)) {\r\n      var shapeS;\r\n      var shapeE;\r\n      if (segmentOb.s * totalModifierLength <= addedLength) {\r\n        shapeS = 0;\r\n      } else {\r\n        shapeS = (segmentOb.s * totalModifierLength - addedLength) / shapeLength;\r\n      }\r\n      if (segmentOb.e * totalModifierLength >= addedLength + shapeLength) {\r\n        shapeE = 1;\r\n      } else {\r\n        shapeE = ((segmentOb.e * totalModifierLength - addedLength) / shapeLength);\r\n      }\r\n      shapeSegments.push([shapeS, shapeE]);\r\n    }\r\n  }\r\n  if (!shapeSegments.length) {\r\n    shapeSegments.push([0, 0]);\r\n  }\r\n  return shapeSegments;\r\n};\r\n\r\nTrimModifier.prototype.releasePathsData = function (pathsData) {\r\n  var i;\r\n  var len = pathsData.length;\r\n  for (i = 0; i < len; i += 1) {\r\n    segmentsLengthPool.release(pathsData[i]);\r\n  }\r\n  pathsData.length = 0;\r\n  return pathsData;\r\n};\r\n\r\nTrimModifier.prototype.processShapes = function (_isFirstFrame) {\r\n  var s;\r\n  var e;\r\n  if (this._mdf || _isFirstFrame) {\r\n    var o = (this.o.v % 360) / 360;\r\n    if (o < 0) {\r\n      o += 1;\r\n    }\r\n    if (this.s.v > 1) {\r\n      s = 1 + o;\r\n    } else if (this.s.v < 0) {\r\n      s = 0 + o;\r\n    } else {\r\n      s = this.s.v + o;\r\n    }\r\n    if (this.e.v > 1) {\r\n      e = 1 + o;\r\n    } else if (this.e.v < 0) {\r\n      e = 0 + o;\r\n    } else {\r\n      e = this.e.v + o;\r\n    }\r\n\r\n    if (s > e) {\r\n      var _s = s;\r\n      s = e;\r\n      e = _s;\r\n    }\r\n    s = Math.round(s * 10000) * 0.0001;\r\n    e = Math.round(e * 10000) * 0.0001;\r\n    this.sValue = s;\r\n    this.eValue = e;\r\n  } else {\r\n    s = this.sValue;\r\n    e = this.eValue;\r\n  }\r\n  var shapePaths;\r\n  var i;\r\n  var len = this.shapes.length;\r\n  var j;\r\n  var jLen;\r\n  var pathsData;\r\n  var pathData;\r\n  var totalShapeLength;\r\n  var totalModifierLength = 0;\r\n\r\n  if (e === s) {\r\n    for (i = 0; i < len; i += 1) {\r\n      this.shapes[i].localShapeCollection.releaseShapes();\r\n      this.shapes[i].shape._mdf = true;\r\n      this.shapes[i].shape.paths = this.shapes[i].localShapeCollection;\r\n      if (this._mdf) {\r\n        this.shapes[i].pathsData.length = 0;\r\n      }\r\n    }\r\n  } else if (!((e === 1 && s === 0) || (e === 0 && s === 1))) {\r\n    var segments = [];\r\n    var shapeData;\r\n    var localShapeCollection;\r\n    for (i = 0; i < len; i += 1) {\r\n      shapeData = this.shapes[i];\r\n      // if shape hasn't changed and trim properties haven't changed, cached previous path can be used\r\n      if (!shapeData.shape._mdf && !this._mdf && !_isFirstFrame && this.m !== 2) {\r\n        shapeData.shape.paths = shapeData.localShapeCollection;\r\n      } else {\r\n        shapePaths = shapeData.shape.paths;\r\n        jLen = shapePaths._length;\r\n        totalShapeLength = 0;\r\n        if (!shapeData.shape._mdf && shapeData.pathsData.length) {\r\n          totalShapeLength = shapeData.totalShapeLength;\r\n        } else {\r\n          pathsData = this.releasePathsData(shapeData.pathsData);\r\n          for (j = 0; j < jLen; j += 1) {\r\n            pathData = bez.getSegmentsLength(shapePaths.shapes[j]);\r\n            pathsData.push(pathData);\r\n            totalShapeLength += pathData.totalLength;\r\n          }\r\n          shapeData.totalShapeLength = totalShapeLength;\r\n          shapeData.pathsData = pathsData;\r\n        }\r\n\r\n        totalModifierLength += totalShapeLength;\r\n        shapeData.shape._mdf = true;\r\n      }\r\n    }\r\n    var shapeS = s;\r\n    var shapeE = e;\r\n    var addedLength = 0;\r\n    var edges;\r\n    for (i = len - 1; i >= 0; i -= 1) {\r\n      shapeData = this.shapes[i];\r\n      if (shapeData.shape._mdf) {\r\n        localShapeCollection = shapeData.localShapeCollection;\r\n        localShapeCollection.releaseShapes();\r\n        // if m === 2 means paths are trimmed individually so edges need to be found for this specific shape relative to whoel group\r\n        if (this.m === 2 && len > 1) {\r\n          edges = this.calculateShapeEdges(s, e, shapeData.totalShapeLength, addedLength, totalModifierLength);\r\n          addedLength += shapeData.totalShapeLength;\r\n        } else {\r\n          edges = [[shapeS, shapeE]];\r\n        }\r\n        jLen = edges.length;\r\n        for (j = 0; j < jLen; j += 1) {\r\n          shapeS = edges[j][0];\r\n          shapeE = edges[j][1];\r\n          segments.length = 0;\r\n          if (shapeE <= 1) {\r\n            segments.push({\r\n              s: shapeData.totalShapeLength * shapeS,\r\n              e: shapeData.totalShapeLength * shapeE,\r\n            });\r\n          } else if (shapeS >= 1) {\r\n            segments.push({\r\n              s: shapeData.totalShapeLength * (shapeS - 1),\r\n              e: shapeData.totalShapeLength * (shapeE - 1),\r\n            });\r\n          } else {\r\n            segments.push({\r\n              s: shapeData.totalShapeLength * shapeS,\r\n              e: shapeData.totalShapeLength,\r\n            });\r\n            segments.push({\r\n              s: 0,\r\n              e: shapeData.totalShapeLength * (shapeE - 1),\r\n            });\r\n          }\r\n          var newShapesData = this.addShapes(shapeData, segments[0]);\r\n          if (segments[0].s !== segments[0].e) {\r\n            if (segments.length > 1) {\r\n              var lastShapeInCollection = shapeData.shape.paths.shapes[shapeData.shape.paths._length - 1];\r\n              if (lastShapeInCollection.c) {\r\n                var lastShape = newShapesData.pop();\r\n                this.addPaths(newShapesData, localShapeCollection);\r\n                newShapesData = this.addShapes(shapeData, segments[1], lastShape);\r\n              } else {\r\n                this.addPaths(newShapesData, localShapeCollection);\r\n                newShapesData = this.addShapes(shapeData, segments[1]);\r\n              }\r\n            }\r\n            this.addPaths(newShapesData, localShapeCollection);\r\n          }\r\n        }\r\n        shapeData.shape.paths = localShapeCollection;\r\n      }\r\n    }\r\n  } else if (this._mdf) {\r\n    for (i = 0; i < len; i += 1) {\r\n      // Releasign Trim Cached paths data when no trim applied in case shapes are modified inbetween.\r\n      // Don't remove this even if it's losing cached info.\r\n      this.shapes[i].pathsData.length = 0;\r\n      this.shapes[i].shape._mdf = true;\r\n    }\r\n  }\r\n};\r\n\r\nTrimModifier.prototype.addPaths = function (newPaths, localShapeCollection) {\r\n  var i;\r\n  var len = newPaths.length;\r\n  for (i = 0; i < len; i += 1) {\r\n    localShapeCollection.addShape(newPaths[i]);\r\n  }\r\n};\r\n\r\nTrimModifier.prototype.addSegment = function (pt1, pt2, pt3, pt4, shapePath, pos, newShape) {\r\n  shapePath.setXYAt(pt2[0], pt2[1], 'o', pos);\r\n  shapePath.setXYAt(pt3[0], pt3[1], 'i', pos + 1);\r\n  if (newShape) {\r\n    shapePath.setXYAt(pt1[0], pt1[1], 'v', pos);\r\n  }\r\n  shapePath.setXYAt(pt4[0], pt4[1], 'v', pos + 1);\r\n};\r\n\r\nTrimModifier.prototype.addSegmentFromArray = function (points, shapePath, pos, newShape) {\r\n  shapePath.setXYAt(points[1], points[5], 'o', pos);\r\n  shapePath.setXYAt(points[2], points[6], 'i', pos + 1);\r\n  if (newShape) {\r\n    shapePath.setXYAt(points[0], points[4], 'v', pos);\r\n  }\r\n  shapePath.setXYAt(points[3], points[7], 'v', pos + 1);\r\n};\r\n\r\nTrimModifier.prototype.addShapes = function (shapeData, shapeSegment, shapePath) {\r\n  var pathsData = shapeData.pathsData;\r\n  var shapePaths = shapeData.shape.paths.shapes;\r\n  var i;\r\n  var len = shapeData.shape.paths._length;\r\n  var j;\r\n  var jLen;\r\n  var addedLength = 0;\r\n  var currentLengthData;\r\n  var segmentCount;\r\n  var lengths;\r\n  var segment;\r\n  var shapes = [];\r\n  var initPos;\r\n  var newShape = true;\r\n  if (!shapePath) {\r\n    shapePath = shapePool.newElement();\r\n    segmentCount = 0;\r\n    initPos = 0;\r\n  } else {\r\n    segmentCount = shapePath._length;\r\n    initPos = shapePath._length;\r\n  }\r\n  shapes.push(shapePath);\r\n  for (i = 0; i < len; i += 1) {\r\n    lengths = pathsData[i].lengths;\r\n    shapePath.c = shapePaths[i].c;\r\n    jLen = shapePaths[i].c ? lengths.length : lengths.length + 1;\r\n    for (j = 1; j < jLen; j += 1) {\r\n      currentLengthData = lengths[j - 1];\r\n      if (addedLength + currentLengthData.addedLength < shapeSegment.s) {\r\n        addedLength += currentLengthData.addedLength;\r\n        shapePath.c = false;\r\n      } else if (addedLength > shapeSegment.e) {\r\n        shapePath.c = false;\r\n        break;\r\n      } else {\r\n        if (shapeSegment.s <= addedLength && shapeSegment.e >= addedLength + currentLengthData.addedLength) {\r\n          this.addSegment(shapePaths[i].v[j - 1], shapePaths[i].o[j - 1], shapePaths[i].i[j], shapePaths[i].v[j], shapePath, segmentCount, newShape);\r\n          newShape = false;\r\n        } else {\r\n          segment = bez.getNewSegment(shapePaths[i].v[j - 1], shapePaths[i].v[j], shapePaths[i].o[j - 1], shapePaths[i].i[j], (shapeSegment.s - addedLength) / currentLengthData.addedLength, (shapeSegment.e - addedLength) / currentLengthData.addedLength, lengths[j - 1]);\r\n          this.addSegmentFromArray(segment, shapePath, segmentCount, newShape);\r\n          // this.addSegment(segment.pt1, segment.pt3, segment.pt4, segment.pt2, shapePath, segmentCount, newShape);\r\n          newShape = false;\r\n          shapePath.c = false;\r\n        }\r\n        addedLength += currentLengthData.addedLength;\r\n        segmentCount += 1;\r\n      }\r\n    }\r\n    if (shapePaths[i].c && lengths.length) {\r\n      currentLengthData = lengths[j - 1];\r\n      if (addedLength <= shapeSegment.e) {\r\n        var segmentLength = lengths[j - 1].addedLength;\r\n        if (shapeSegment.s <= addedLength && shapeSegment.e >= addedLength + segmentLength) {\r\n          this.addSegment(shapePaths[i].v[j - 1], shapePaths[i].o[j - 1], shapePaths[i].i[0], shapePaths[i].v[0], shapePath, segmentCount, newShape);\r\n          newShape = false;\r\n        } else {\r\n          segment = bez.getNewSegment(shapePaths[i].v[j - 1], shapePaths[i].v[0], shapePaths[i].o[j - 1], shapePaths[i].i[0], (shapeSegment.s - addedLength) / segmentLength, (shapeSegment.e - addedLength) / segmentLength, lengths[j - 1]);\r\n          this.addSegmentFromArray(segment, shapePath, segmentCount, newShape);\r\n          // this.addSegment(segment.pt1, segment.pt3, segment.pt4, segment.pt2, shapePath, segmentCount, newShape);\r\n          newShape = false;\r\n          shapePath.c = false;\r\n        }\r\n      } else {\r\n        shapePath.c = false;\r\n      }\r\n      addedLength += currentLengthData.addedLength;\r\n      segmentCount += 1;\r\n    }\r\n    if (shapePath._length) {\r\n      shapePath.setXYAt(shapePath.v[initPos][0], shapePath.v[initPos][1], 'i', initPos);\r\n      shapePath.setXYAt(shapePath.v[shapePath._length - 1][0], shapePath.v[shapePath._length - 1][1], 'o', shapePath._length - 1);\r\n    }\r\n    if (addedLength > shapeSegment.e) {\r\n      break;\r\n    }\r\n    if (i < len - 1) {\r\n      shapePath = shapePool.newElement();\r\n      newShape = true;\r\n      shapes.push(shapePath);\r\n      segmentCount = 0;\r\n    }\r\n  }\r\n  return shapes;\r\n};\r\n\r\nShapeModifiers.registerModifier('tm', TrimModifier);\r\n\r\n/* global extendPrototype, ShapeModifier, PropertyFactory, shapePool, roundCorner, ShapeModifiers */\r\n\r\nfunction RoundCornersModifier() {}\r\nextendPrototype([ShapeModifier], RoundCornersModifier);\r\nRoundCornersModifier.prototype.initModifierProperties = function (elem, data) {\r\n  this.getValue = this.processKeys;\r\n  this.rd = PropertyFactory.getProp(elem, data.r, 0, null, this);\r\n  this._isAnimated = !!this.rd.effectsSequence.length;\r\n};\r\n\r\nRoundCornersModifier.prototype.processPath = function (path, round) {\r\n  var clonedPath = shapePool.newElement();\r\n  clonedPath.c = path.c;\r\n  var i;\r\n  var len = path._length;\r\n  var currentV;\r\n  var currentI;\r\n  var currentO;\r\n  var closerV;\r\n  var distance;\r\n  var newPosPerc;\r\n  var index = 0;\r\n  var vX;\r\n  var vY;\r\n  var oX;\r\n  var oY;\r\n  var iX;\r\n  var iY;\r\n  for (i = 0; i < len; i += 1) {\r\n    currentV = path.v[i];\r\n    currentO = path.o[i];\r\n    currentI = path.i[i];\r\n    if (currentV[0] === currentO[0] && currentV[1] === currentO[1] && currentV[0] === currentI[0] && currentV[1] === currentI[1]) {\r\n      if ((i === 0 || i === len - 1) && !path.c) {\r\n        clonedPath.setTripleAt(currentV[0], currentV[1], currentO[0], currentO[1], currentI[0], currentI[1], index);\r\n        /* clonedPath.v[index] = currentV;\r\n                clonedPath.o[index] = currentO;\r\n                clonedPath.i[index] = currentI; */\r\n        index += 1;\r\n      } else {\r\n        if (i === 0) {\r\n          closerV = path.v[len - 1];\r\n        } else {\r\n          closerV = path.v[i - 1];\r\n        }\r\n        distance = Math.sqrt(Math.pow(currentV[0] - closerV[0], 2) + Math.pow(currentV[1] - closerV[1], 2));\r\n        newPosPerc = distance ? Math.min(distance / 2, round) / distance : 0;\r\n        iX = currentV[0] + (closerV[0] - currentV[0]) * newPosPerc;\r\n        vX = iX;\r\n        iY = currentV[1] - (currentV[1] - closerV[1]) * newPosPerc;\r\n        vY = iY;\r\n        oX = vX - (vX - currentV[0]) * roundCorner;\r\n        oY = vY - (vY - currentV[1]) * roundCorner;\r\n        clonedPath.setTripleAt(vX, vY, oX, oY, iX, iY, index);\r\n        index += 1;\r\n\r\n        if (i === len - 1) {\r\n          closerV = path.v[0];\r\n        } else {\r\n          closerV = path.v[i + 1];\r\n        }\r\n        distance = Math.sqrt(Math.pow(currentV[0] - closerV[0], 2) + Math.pow(currentV[1] - closerV[1], 2));\r\n        newPosPerc = distance ? Math.min(distance / 2, round) / distance : 0;\r\n        oX = currentV[0] + (closerV[0] - currentV[0]) * newPosPerc;\r\n        vX = oX;\r\n        oY = currentV[1] + (closerV[1] - currentV[1]) * newPosPerc;\r\n        vY = oY;\r\n        iX = vX - (vX - currentV[0]) * roundCorner;\r\n        iY = vY - (vY - currentV[1]) * roundCorner;\r\n        clonedPath.setTripleAt(vX, vY, oX, oY, iX, iY, index);\r\n        index += 1;\r\n      }\r\n    } else {\r\n      clonedPath.setTripleAt(path.v[i][0], path.v[i][1], path.o[i][0], path.o[i][1], path.i[i][0], path.i[i][1], index);\r\n      index += 1;\r\n    }\r\n  }\r\n  return clonedPath;\r\n};\r\n\r\nRoundCornersModifier.prototype.processShapes = function (_isFirstFrame) {\r\n  var shapePaths;\r\n  var i;\r\n  var len = this.shapes.length;\r\n  var j;\r\n  var jLen;\r\n  var rd = this.rd.v;\r\n\r\n  if (rd !== 0) {\r\n    var shapeData;\r\n    var localShapeCollection;\r\n    for (i = 0; i < len; i += 1) {\r\n      shapeData = this.shapes[i];\r\n      localShapeCollection = shapeData.localShapeCollection;\r\n      if (!(!shapeData.shape._mdf && !this._mdf && !_isFirstFrame)) {\r\n        localShapeCollection.releaseShapes();\r\n        shapeData.shape._mdf = true;\r\n        shapePaths = shapeData.shape.paths.shapes;\r\n        jLen = shapeData.shape.paths._length;\r\n        for (j = 0; j < jLen; j += 1) {\r\n          localShapeCollection.addShape(this.processPath(shapePaths[j], rd));\r\n        }\r\n      }\r\n      shapeData.shape.paths = shapeData.localShapeCollection;\r\n    }\r\n  }\r\n  if (!this.dynamicProperties.length) {\r\n    this._mdf = false;\r\n  }\r\n};\r\n\r\nShapeModifiers.registerModifier('rd', RoundCornersModifier);\r\n\r\n/* global extendPrototype, ShapeModifier, PropertyFactory, shapePool, ShapeModifiers */\r\n\r\nfunction PuckerAndBloatModifier() {}\r\nextendPrototype([ShapeModifier], PuckerAndBloatModifier);\r\nPuckerAndBloatModifier.prototype.initModifierProperties = function (elem, data) {\r\n  this.getValue = this.processKeys;\r\n  this.amount = PropertyFactory.getProp(elem, data.a, 0, null, this);\r\n  this._isAnimated = !!this.amount.effectsSequence.length;\r\n};\r\n\r\nPuckerAndBloatModifier.prototype.processPath = function (path, amount) {\r\n  var percent = amount / 100;\r\n  var centerPoint = [0, 0];\r\n  var pathLength = path._length;\r\n  var i = 0;\r\n  for (i = 0; i < pathLength; i += 1) {\r\n    centerPoint[0] += path.v[i][0];\r\n    centerPoint[1] += path.v[i][1];\r\n  }\r\n  centerPoint[0] /= pathLength;\r\n  centerPoint[1] /= pathLength;\r\n  var clonedPath = shapePool.newElement();\r\n  clonedPath.c = path.c;\r\n  var vX;\r\n  var vY;\r\n  var oX;\r\n  var oY;\r\n  var iX;\r\n  var iY;\r\n  for (i = 0; i < pathLength; i += 1) {\r\n    vX = path.v[i][0] + (centerPoint[0] - path.v[i][0]) * percent;\r\n    vY = path.v[i][1] + (centerPoint[1] - path.v[i][1]) * percent;\r\n    oX = path.o[i][0] + (centerPoint[0] - path.o[i][0]) * -percent;\r\n    oY = path.o[i][1] + (centerPoint[1] - path.o[i][1]) * -percent;\r\n    iX = path.i[i][0] + (centerPoint[0] - path.i[i][0]) * -percent;\r\n    iY = path.i[i][1] + (centerPoint[1] - path.i[i][1]) * -percent;\r\n    clonedPath.setTripleAt(vX, vY, oX, oY, iX, iY, i);\r\n  }\r\n  return clonedPath;\r\n};\r\n\r\nPuckerAndBloatModifier.prototype.processShapes = function (_isFirstFrame) {\r\n  var shapePaths;\r\n  var i;\r\n  var len = this.shapes.length;\r\n  var j;\r\n  var jLen;\r\n  var amount = this.amount.v;\r\n\r\n  if (amount !== 0) {\r\n    var shapeData;\r\n    var localShapeCollection;\r\n    for (i = 0; i < len; i += 1) {\r\n      shapeData = this.shapes[i];\r\n      localShapeCollection = shapeData.localShapeCollection;\r\n      if (!(!shapeData.shape._mdf && !this._mdf && !_isFirstFrame)) {\r\n        localShapeCollection.releaseShapes();\r\n        shapeData.shape._mdf = true;\r\n        shapePaths = shapeData.shape.paths.shapes;\r\n        jLen = shapeData.shape.paths._length;\r\n        for (j = 0; j < jLen; j += 1) {\r\n          localShapeCollection.addShape(this.processPath(shapePaths[j], amount));\r\n        }\r\n      }\r\n      shapeData.shape.paths = shapeData.localShapeCollection;\r\n    }\r\n  }\r\n  if (!this.dynamicProperties.length) {\r\n    this._mdf = false;\r\n  }\r\n};\r\nShapeModifiers.registerModifier('pb', PuckerAndBloatModifier);\r\n\r\n/* global extendPrototype, ShapeModifier, TransformPropertyFactory, PropertyFactory, Matrix, ShapeModifiers */\r\n\r\nfunction RepeaterModifier() {}\r\nextendPrototype([ShapeModifier], RepeaterModifier);\r\n\r\nRepeaterModifier.prototype.initModifierProperties = function (elem, data) {\r\n  this.getValue = this.processKeys;\r\n  this.c = PropertyFactory.getProp(elem, data.c, 0, null, this);\r\n  this.o = PropertyFactory.getProp(elem, data.o, 0, null, this);\r\n  this.tr = TransformPropertyFactory.getTransformProperty(elem, data.tr, this);\r\n  this.so = PropertyFactory.getProp(elem, data.tr.so, 0, 0.01, this);\r\n  this.eo = PropertyFactory.getProp(elem, data.tr.eo, 0, 0.01, this);\r\n  this.data = data;\r\n  if (!this.dynamicProperties.length) {\r\n    this.getValue(true);\r\n  }\r\n  this._isAnimated = !!this.dynamicProperties.length;\r\n  this.pMatrix = new Matrix();\r\n  this.rMatrix = new Matrix();\r\n  this.sMatrix = new Matrix();\r\n  this.tMatrix = new Matrix();\r\n  this.matrix = new Matrix();\r\n};\r\n\r\nRepeaterModifier.prototype.applyTransforms = function (pMatrix, rMatrix, sMatrix, transform, perc, inv) {\r\n  var dir = inv ? -1 : 1;\r\n  var scaleX = transform.s.v[0] + (1 - transform.s.v[0]) * (1 - perc);\r\n  var scaleY = transform.s.v[1] + (1 - transform.s.v[1]) * (1 - perc);\r\n  pMatrix.translate(transform.p.v[0] * dir * perc, transform.p.v[1] * dir * perc, transform.p.v[2]);\r\n  rMatrix.translate(-transform.a.v[0], -transform.a.v[1], transform.a.v[2]);\r\n  rMatrix.rotate(-transform.r.v * dir * perc);\r\n  rMatrix.translate(transform.a.v[0], transform.a.v[1], transform.a.v[2]);\r\n  sMatrix.translate(-transform.a.v[0], -transform.a.v[1], transform.a.v[2]);\r\n  sMatrix.scale(inv ? 1 / scaleX : scaleX, inv ? 1 / scaleY : scaleY);\r\n  sMatrix.translate(transform.a.v[0], transform.a.v[1], transform.a.v[2]);\r\n};\r\n\r\nRepeaterModifier.prototype.init = function (elem, arr, pos, elemsData) {\r\n  this.elem = elem;\r\n  this.arr = arr;\r\n  this.pos = pos;\r\n  this.elemsData = elemsData;\r\n  this._currentCopies = 0;\r\n  this._elements = [];\r\n  this._groups = [];\r\n  this.frameId = -1;\r\n  this.initDynamicPropertyContainer(elem);\r\n  this.initModifierProperties(elem, arr[pos]);\r\n  while (pos > 0) {\r\n    pos -= 1;\r\n    // this._elements.unshift(arr.splice(pos,1)[0]);\r\n    this._elements.unshift(arr[pos]);\r\n  }\r\n  if (this.dynamicProperties.length) {\r\n    this.k = true;\r\n  } else {\r\n    this.getValue(true);\r\n  }\r\n};\r\n\r\nRepeaterModifier.prototype.resetElements = function (elements) {\r\n  var i;\r\n  var len = elements.length;\r\n  for (i = 0; i < len; i += 1) {\r\n    elements[i]._processed = false;\r\n    if (elements[i].ty === 'gr') {\r\n      this.resetElements(elements[i].it);\r\n    }\r\n  }\r\n};\r\n\r\nRepeaterModifier.prototype.cloneElements = function (elements) {\r\n  var newElements = JSON.parse(JSON.stringify(elements));\r\n  this.resetElements(newElements);\r\n  return newElements;\r\n};\r\n\r\nRepeaterModifier.prototype.changeGroupRender = function (elements, renderFlag) {\r\n  var i;\r\n  var len = elements.length;\r\n  for (i = 0; i < len; i += 1) {\r\n    elements[i]._render = renderFlag;\r\n    if (elements[i].ty === 'gr') {\r\n      this.changeGroupRender(elements[i].it, renderFlag);\r\n    }\r\n  }\r\n};\r\n\r\nRepeaterModifier.prototype.processShapes = function (_isFirstFrame) {\r\n  var items;\r\n  var itemsTransform;\r\n  var i;\r\n  var dir;\r\n  var cont;\r\n  var hasReloaded = false;\r\n  if (this._mdf || _isFirstFrame) {\r\n    var copies = Math.ceil(this.c.v);\r\n    if (this._groups.length < copies) {\r\n      while (this._groups.length < copies) {\r\n        var group = {\r\n          it: this.cloneElements(this._elements),\r\n          ty: 'gr',\r\n        };\r\n        group.it.push({\r\n          a: { a: 0, ix: 1, k: [0, 0] }, nm: 'Transform', o: { a: 0, ix: 7, k: 100 }, p: { a: 0, ix: 2, k: [0, 0] }, r: { a: 1, ix: 6, k: [{ s: 0, e: 0, t: 0 }, { s: 0, e: 0, t: 1 }] }, s: { a: 0, ix: 3, k: [100, 100] }, sa: { a: 0, ix: 5, k: 0 }, sk: { a: 0, ix: 4, k: 0 }, ty: 'tr',\r\n        });\r\n\r\n        this.arr.splice(0, 0, group);\r\n        this._groups.splice(0, 0, group);\r\n        this._currentCopies += 1;\r\n      }\r\n      this.elem.reloadShapes();\r\n      hasReloaded = true;\r\n    }\r\n    cont = 0;\r\n    var renderFlag;\r\n    for (i = 0; i <= this._groups.length - 1; i += 1) {\r\n      renderFlag = cont < copies;\r\n      this._groups[i]._render = renderFlag;\r\n      this.changeGroupRender(this._groups[i].it, renderFlag);\r\n      if (!renderFlag) {\r\n        var elems = this.elemsData[i].it;\r\n        var transformData = elems[elems.length - 1];\r\n        if (transformData.transform.op.v !== 0) {\r\n          transformData.transform.op._mdf = true;\r\n          transformData.transform.op.v = 0;\r\n        } else {\r\n          transformData.transform.op._mdf = false;\r\n        }\r\n      }\r\n      cont += 1;\r\n    }\r\n\r\n    this._currentCopies = copies;\r\n    /// /\r\n\r\n    var offset = this.o.v;\r\n    var offsetModulo = offset % 1;\r\n    var roundOffset = offset > 0 ? Math.floor(offset) : Math.ceil(offset);\r\n    var pProps = this.pMatrix.props;\r\n    var rProps = this.rMatrix.props;\r\n    var sProps = this.sMatrix.props;\r\n    this.pMatrix.reset();\r\n    this.rMatrix.reset();\r\n    this.sMatrix.reset();\r\n    this.tMatrix.reset();\r\n    this.matrix.reset();\r\n    var iteration = 0;\r\n\r\n    if (offset > 0) {\r\n      while (iteration < roundOffset) {\r\n        this.applyTransforms(this.pMatrix, this.rMatrix, this.sMatrix, this.tr, 1, false);\r\n        iteration += 1;\r\n      }\r\n      if (offsetModulo) {\r\n        this.applyTransforms(this.pMatrix, this.rMatrix, this.sMatrix, this.tr, offsetModulo, false);\r\n        iteration += offsetModulo;\r\n      }\r\n    } else if (offset < 0) {\r\n      while (iteration > roundOffset) {\r\n        this.applyTransforms(this.pMatrix, this.rMatrix, this.sMatrix, this.tr, 1, true);\r\n        iteration -= 1;\r\n      }\r\n      if (offsetModulo) {\r\n        this.applyTransforms(this.pMatrix, this.rMatrix, this.sMatrix, this.tr, -offsetModulo, true);\r\n        iteration -= offsetModulo;\r\n      }\r\n    }\r\n    i = this.data.m === 1 ? 0 : this._currentCopies - 1;\r\n    dir = this.data.m === 1 ? 1 : -1;\r\n    cont = this._currentCopies;\r\n    var j;\r\n    var jLen;\r\n    while (cont) {\r\n      items = this.elemsData[i].it;\r\n      itemsTransform = items[items.length - 1].transform.mProps.v.props;\r\n      jLen = itemsTransform.length;\r\n      items[items.length - 1].transform.mProps._mdf = true;\r\n      items[items.length - 1].transform.op._mdf = true;\r\n      items[items.length - 1].transform.op.v = this._currentCopies === 1\r\n        ? this.so.v\r\n        : this.so.v + (this.eo.v - this.so.v) * (i / (this._currentCopies - 1));\r\n\r\n      if (iteration !== 0) {\r\n        if ((i !== 0 && dir === 1) || (i !== this._currentCopies - 1 && dir === -1)) {\r\n          this.applyTransforms(this.pMatrix, this.rMatrix, this.sMatrix, this.tr, 1, false);\r\n        }\r\n        this.matrix.transform(rProps[0], rProps[1], rProps[2], rProps[3], rProps[4], rProps[5], rProps[6], rProps[7], rProps[8], rProps[9], rProps[10], rProps[11], rProps[12], rProps[13], rProps[14], rProps[15]);\r\n        this.matrix.transform(sProps[0], sProps[1], sProps[2], sProps[3], sProps[4], sProps[5], sProps[6], sProps[7], sProps[8], sProps[9], sProps[10], sProps[11], sProps[12], sProps[13], sProps[14], sProps[15]);\r\n        this.matrix.transform(pProps[0], pProps[1], pProps[2], pProps[3], pProps[4], pProps[5], pProps[6], pProps[7], pProps[8], pProps[9], pProps[10], pProps[11], pProps[12], pProps[13], pProps[14], pProps[15]);\r\n\r\n        for (j = 0; j < jLen; j += 1) {\r\n          itemsTransform[j] = this.matrix.props[j];\r\n        }\r\n        this.matrix.reset();\r\n      } else {\r\n        this.matrix.reset();\r\n        for (j = 0; j < jLen; j += 1) {\r\n          itemsTransform[j] = this.matrix.props[j];\r\n        }\r\n      }\r\n      iteration += 1;\r\n      cont -= 1;\r\n      i += dir;\r\n    }\r\n  } else {\r\n    cont = this._currentCopies;\r\n    i = 0;\r\n    dir = 1;\r\n    while (cont) {\r\n      items = this.elemsData[i].it;\r\n      itemsTransform = items[items.length - 1].transform.mProps.v.props;\r\n      items[items.length - 1].transform.mProps._mdf = false;\r\n      items[items.length - 1].transform.op._mdf = false;\r\n      cont -= 1;\r\n      i += dir;\r\n    }\r\n  }\r\n  return hasReloaded;\r\n};\r\n\r\nRepeaterModifier.prototype.addShape = function () {};\r\n\r\nShapeModifiers.registerModifier('rp', RepeaterModifier);\r\n\r\n/* global createSizedArray, shapePool */\r\n\r\nfunction ShapeCollection() {\r\n  this._length = 0;\r\n  this._maxLength = 4;\r\n  this.shapes = createSizedArray(this._maxLength);\r\n}\r\n\r\nShapeCollection.prototype.addShape = function (shapeData) {\r\n  if (this._length === this._maxLength) {\r\n    this.shapes = this.shapes.concat(createSizedArray(this._maxLength));\r\n    this._maxLength *= 2;\r\n  }\r\n  this.shapes[this._length] = shapeData;\r\n  this._length += 1;\r\n};\r\n\r\nShapeCollection.prototype.releaseShapes = function () {\r\n  var i;\r\n  for (i = 0; i < this._length; i += 1) {\r\n    shapePool.release(this.shapes[i]);\r\n  }\r\n  this._length = 0;\r\n};\r\n\r\n/* global createSizedArray, createTypedArray, PropertyFactory, extendPrototype, DynamicPropertyContainer */\r\n\r\nfunction DashProperty(elem, data, renderer, container) {\r\n  this.elem = elem;\r\n  this.frameId = -1;\r\n  this.dataProps = createSizedArray(data.length);\r\n  this.renderer = renderer;\r\n  this.k = false;\r\n  this.dashStr = '';\r\n  this.dashArray = createTypedArray('float32', data.length ? data.length - 1 : 0);\r\n  this.dashoffset = createTypedArray('float32', 1);\r\n  this.initDynamicPropertyContainer(container);\r\n  var i;\r\n  var len = data.length || 0;\r\n  var prop;\r\n  for (i = 0; i < len; i += 1) {\r\n    prop = PropertyFactory.getProp(elem, data[i].v, 0, 0, this);\r\n    this.k = prop.k || this.k;\r\n    this.dataProps[i] = { n: data[i].n, p: prop };\r\n  }\r\n  if (!this.k) {\r\n    this.getValue(true);\r\n  }\r\n  this._isAnimated = this.k;\r\n}\r\n\r\nDashProperty.prototype.getValue = function (forceRender) {\r\n  if (this.elem.globalData.frameId === this.frameId && !forceRender) {\r\n    return;\r\n  }\r\n  this.frameId = this.elem.globalData.frameId;\r\n  this.iterateDynamicProperties();\r\n  this._mdf = this._mdf || forceRender;\r\n  if (this._mdf) {\r\n    var i = 0;\r\n    var len = this.dataProps.length;\r\n    if (this.renderer === 'svg') {\r\n      this.dashStr = '';\r\n    }\r\n    for (i = 0; i < len; i += 1) {\r\n      if (this.dataProps[i].n !== 'o') {\r\n        if (this.renderer === 'svg') {\r\n          this.dashStr += ' ' + this.dataProps[i].p.v;\r\n        } else {\r\n          this.dashArray[i] = this.dataProps[i].p.v;\r\n        }\r\n      } else {\r\n        this.dashoffset[0] = this.dataProps[i].p.v;\r\n      }\r\n    }\r\n  }\r\n};\r\nextendPrototype([DynamicPropertyContainer], DashProperty);\r\n\r\n/* global createTypedArray, PropertyFactory, extendPrototype, DynamicPropertyContainer */\r\nfunction GradientProperty(elem, data, container) {\r\n  this.data = data;\r\n  this.c = createTypedArray('uint8c', data.p * 4);\r\n  var cLength = data.k.k[0].s ? (data.k.k[0].s.length - data.p * 4) : data.k.k.length - data.p * 4;\r\n  this.o = createTypedArray('float32', cLength);\r\n  this._cmdf = false;\r\n  this._omdf = false;\r\n  this._collapsable = this.checkCollapsable();\r\n  this._hasOpacity = cLength;\r\n  this.initDynamicPropertyContainer(container);\r\n  this.prop = PropertyFactory.getProp(elem, data.k, 1, null, this);\r\n  this.k = this.prop.k;\r\n  this.getValue(true);\r\n}\r\n\r\nGradientProperty.prototype.comparePoints = function (values, points) {\r\n  var i = 0;\r\n  var len = this.o.length / 2;\r\n  var diff;\r\n  while (i < len) {\r\n    diff = Math.abs(values[i * 4] - values[points * 4 + i * 2]);\r\n    if (diff > 0.01) {\r\n      return false;\r\n    }\r\n    i += 1;\r\n  }\r\n  return true;\r\n};\r\n\r\nGradientProperty.prototype.checkCollapsable = function () {\r\n  if (this.o.length / 2 !== this.c.length / 4) {\r\n    return false;\r\n  }\r\n  if (this.data.k.k[0].s) {\r\n    var i = 0;\r\n    var len = this.data.k.k.length;\r\n    while (i < len) {\r\n      if (!this.comparePoints(this.data.k.k[i].s, this.data.p)) {\r\n        return false;\r\n      }\r\n      i += 1;\r\n    }\r\n  } else if (!this.comparePoints(this.data.k.k, this.data.p)) {\r\n    return false;\r\n  }\r\n  return true;\r\n};\r\n\r\nGradientProperty.prototype.getValue = function (forceRender) {\r\n  this.prop.getValue();\r\n  this._mdf = false;\r\n  this._cmdf = false;\r\n  this._omdf = false;\r\n  if (this.prop._mdf || forceRender) {\r\n    var i;\r\n    var len = this.data.p * 4;\r\n    var mult;\r\n    var val;\r\n    for (i = 0; i < len; i += 1) {\r\n      mult = i % 4 === 0 ? 100 : 255;\r\n      val = Math.round(this.prop.v[i] * mult);\r\n      if (this.c[i] !== val) {\r\n        this.c[i] = val;\r\n        this._cmdf = !forceRender;\r\n      }\r\n    }\r\n    if (this.o.length) {\r\n      len = this.prop.v.length;\r\n      for (i = this.data.p * 4; i < len; i += 1) {\r\n        mult = i % 2 === 0 ? 100 : 1;\r\n        val = i % 2 === 0 ? Math.round(this.prop.v[i] * 100) : this.prop.v[i];\r\n        if (this.o[i - this.data.p * 4] !== val) {\r\n          this.o[i - this.data.p * 4] = val;\r\n          this._omdf = !forceRender;\r\n        }\r\n      }\r\n    }\r\n    this._mdf = !forceRender;\r\n  }\r\n};\r\n\r\nextendPrototype([DynamicPropertyContainer], GradientProperty);\r\n\r\n/* exported buildShapeString */\r\n\r\nvar buildShapeString = function (pathNodes, length, closed, mat) {\r\n  if (length === 0) {\r\n    return '';\r\n  }\r\n  var _o = pathNodes.o;\r\n  var _i = pathNodes.i;\r\n  var _v = pathNodes.v;\r\n  var i;\r\n  var shapeString = ' M' + mat.applyToPointStringified(_v[0][0], _v[0][1]);\r\n  for (i = 1; i < length; i += 1) {\r\n    shapeString += ' C' + mat.applyToPointStringified(_o[i - 1][0], _o[i - 1][1]) + ' ' + mat.applyToPointStringified(_i[i][0], _i[i][1]) + ' ' + mat.applyToPointStringified(_v[i][0], _v[i][1]);\r\n  }\r\n  if (closed && length) {\r\n    shapeString += ' C' + mat.applyToPointStringified(_o[i - 1][0], _o[i - 1][1]) + ' ' + mat.applyToPointStringified(_i[0][0], _i[0][1]) + ' ' + mat.applyToPointStringified(_v[0][0], _v[0][1]);\r\n    shapeString += 'z';\r\n  }\r\n  return shapeString;\r\n};\r\n\r\n/* global Howl */\r\n/* exported audioControllerFactory */\r\n\r\nvar audioControllerFactory = (function () {\r\n  function AudioController(audioFactory) {\r\n    this.audios = [];\r\n    this.audioFactory = audioFactory;\r\n    this._volume = 1;\r\n    this._isMuted = false;\r\n  }\r\n\r\n  AudioController.prototype = {\r\n    addAudio: function (audio) {\r\n      this.audios.push(audio);\r\n    },\r\n    pause: function () {\r\n      var i;\r\n      var len = this.audios.length;\r\n      for (i = 0; i < len; i += 1) {\r\n        this.audios[i].pause();\r\n      }\r\n    },\r\n    resume: function () {\r\n      var i;\r\n      var len = this.audios.length;\r\n      for (i = 0; i < len; i += 1) {\r\n        this.audios[i].resume();\r\n      }\r\n    },\r\n    setRate: function (rateValue) {\r\n      var i;\r\n      var len = this.audios.length;\r\n      for (i = 0; i < len; i += 1) {\r\n        this.audios[i].setRate(rateValue);\r\n      }\r\n    },\r\n    createAudio: function (assetPath) {\r\n      if (this.audioFactory) {\r\n        return this.audioFactory(assetPath);\r\n      } if (Howl) {\r\n        return new Howl({\r\n          src: [assetPath],\r\n        });\r\n      }\r\n      return {\r\n        isPlaying: false,\r\n        play: function () { this.isPlaying = true; },\r\n        seek: function () { this.isPlaying = false; },\r\n        playing: function () {},\r\n        rate: function () {},\r\n        setVolume: function () {},\r\n      };\r\n    },\r\n    setAudioFactory: function (audioFactory) {\r\n      this.audioFactory = audioFactory;\r\n    },\r\n    setVolume: function (value) {\r\n      this._volume = value;\r\n      this._updateVolume();\r\n    },\r\n    mute: function () {\r\n      this._isMuted = true;\r\n      this._updateVolume();\r\n    },\r\n    unmute: function () {\r\n      this._isMuted = false;\r\n      this._updateVolume();\r\n    },\r\n    getVolume: function () {\r\n      return this._volume;\r\n    },\r\n    _updateVolume: function () {\r\n      var i;\r\n      var len = this.audios.length;\r\n      for (i = 0; i < len; i += 1) {\r\n        this.audios[i].volume(this._volume * (this._isMuted ? 0 : 1));\r\n      }\r\n    },\r\n  };\r\n\r\n  return function () {\r\n    return new AudioController();\r\n  };\r\n}());\r\n\r\n/* global createTag, createNS, isSafari, dataManager */\r\n/* exported ImagePreloader */\r\n\r\nvar ImagePreloader = (function () {\r\n  var proxyImage = (function () {\r\n    var canvas = createTag('canvas');\r\n    canvas.width = 1;\r\n    canvas.height = 1;\r\n    var ctx = canvas.getContext('2d');\r\n    ctx.fillStyle = 'rgba(0,0,0,0)';\r\n    ctx.fillRect(0, 0, 1, 1);\r\n    return canvas;\r\n  }());\r\n\r\n  function imageLoaded() {\r\n    this.loadedAssets += 1;\r\n    if (this.loadedAssets === this.totalImages && this.loadedFootagesCount === this.totalFootages) {\r\n      if (this.imagesLoadedCb) {\r\n        this.imagesLoadedCb(null);\r\n      }\r\n    }\r\n  }\r\n  function footageLoaded() {\r\n    this.loadedFootagesCount += 1;\r\n    if (this.loadedAssets === this.totalImages && this.loadedFootagesCount === this.totalFootages) {\r\n      if (this.imagesLoadedCb) {\r\n        this.imagesLoadedCb(null);\r\n      }\r\n    }\r\n  }\r\n\r\n  function getAssetsPath(assetData, assetsPath, originalPath) {\r\n    var path = '';\r\n    if (assetData.e) {\r\n      path = assetData.p;\r\n    } else if (assetsPath) {\r\n      var imagePath = assetData.p;\r\n      if (imagePath.indexOf('images/') !== -1) {\r\n        imagePath = imagePath.split('/')[1];\r\n      }\r\n      path = assetsPath + imagePath;\r\n    } else {\r\n      path = originalPath;\r\n      path += assetData.u ? assetData.u : '';\r\n      path += assetData.p;\r\n    }\r\n    return path;\r\n  }\r\n\r\n  function testImageLoaded(img) {\r\n    var _count = 0;\r\n    var intervalId = setInterval(function () {\r\n      var box = img.getBBox();\r\n      if (box.width || _count > 500) {\r\n        this._imageLoaded();\r\n        clearInterval(intervalId);\r\n      }\r\n      _count += 1;\r\n    }.bind(this), 50);\r\n  }\r\n\r\n  function createImageData(assetData) {\r\n    var path = getAssetsPath(assetData, this.assetsPath, this.path);\r\n    var img = createNS('image');\r\n    if (isSafari) {\r\n      this.testImageLoaded(img);\r\n    } else {\r\n      img.addEventListener('load', this._imageLoaded, false);\r\n    }\r\n    img.addEventListener('error', function () {\r\n      ob.img = proxyImage;\r\n      this._imageLoaded();\r\n    }.bind(this), false);\r\n    img.setAttributeNS('http://www.w3.org/1999/xlink', 'href', path);\r\n    if (this._elementHelper.append) {\r\n      this._elementHelper.append(img);\r\n    } else {\r\n      this._elementHelper.appendChild(img);\r\n    }\r\n    var ob = {\r\n      img: img,\r\n      assetData: assetData,\r\n    };\r\n    return ob;\r\n  }\r\n\r\n  function createImgData(assetData) {\r\n    var path = getAssetsPath(assetData, this.assetsPath, this.path);\r\n    var img = createTag('img');\r\n    img.crossOrigin = 'anonymous';\r\n    img.addEventListener('load', this._imageLoaded, false);\r\n    img.addEventListener('error', function () {\r\n      ob.img = proxyImage;\r\n      this._imageLoaded();\r\n    }.bind(this), false);\r\n    img.src = path;\r\n    var ob = {\r\n      img: img,\r\n      assetData: assetData,\r\n    };\r\n    return ob;\r\n  }\r\n\r\n  function createFootageData(data) {\r\n    var ob = {\r\n      assetData: data,\r\n    };\r\n    var path = getAssetsPath(data, this.assetsPath, this.path);\r\n    dataManager.loadData(path, function (footageData) {\r\n      ob.img = footageData;\r\n      this._footageLoaded();\r\n    }.bind(this), function () {\r\n      ob.img = {};\r\n      this._footageLoaded();\r\n    }.bind(this));\r\n    return ob;\r\n  }\r\n\r\n  function loadAssets(assets, cb) {\r\n    this.imagesLoadedCb = cb;\r\n    var i;\r\n    var len = assets.length;\r\n    for (i = 0; i < len; i += 1) {\r\n      if (!assets[i].layers) {\r\n        if (!assets[i].t || assets[i].t === 'seq') {\r\n          this.totalImages += 1;\r\n          this.images.push(this._createImageData(assets[i]));\r\n        } else if (assets[i].t === 3) {\r\n          this.totalFootages += 1;\r\n          this.images.push(this.createFootageData(assets[i]));\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  function setPath(path) {\r\n    this.path = path || '';\r\n  }\r\n\r\n  function setAssetsPath(path) {\r\n    this.assetsPath = path || '';\r\n  }\r\n\r\n  function getAsset(assetData) {\r\n    var i = 0;\r\n    var len = this.images.length;\r\n    while (i < len) {\r\n      if (this.images[i].assetData === assetData) {\r\n        return this.images[i].img;\r\n      }\r\n      i += 1;\r\n    }\r\n    return null;\r\n  }\r\n\r\n  function destroy() {\r\n    this.imagesLoadedCb = null;\r\n    this.images.length = 0;\r\n  }\r\n\r\n  function loadedImages() {\r\n    return this.totalImages === this.loadedAssets;\r\n  }\r\n\r\n  function loadedFootages() {\r\n    return this.totalFootages === this.loadedFootagesCount;\r\n  }\r\n\r\n  function setCacheType(type, elementHelper) {\r\n    if (type === 'svg') {\r\n      this._elementHelper = elementHelper;\r\n      this._createImageData = this.createImageData.bind(this);\r\n    } else {\r\n      this._createImageData = this.createImgData.bind(this);\r\n    }\r\n  }\r\n\r\n  function ImagePreloaderFactory() {\r\n    this._imageLoaded = imageLoaded.bind(this);\r\n    this._footageLoaded = footageLoaded.bind(this);\r\n    this.testImageLoaded = testImageLoaded.bind(this);\r\n    this.createFootageData = createFootageData.bind(this);\r\n    this.assetsPath = '';\r\n    this.path = '';\r\n    this.totalImages = 0;\r\n    this.totalFootages = 0;\r\n    this.loadedAssets = 0;\r\n    this.loadedFootagesCount = 0;\r\n    this.imagesLoadedCb = null;\r\n    this.images = [];\r\n  }\r\n\r\n  ImagePreloaderFactory.prototype = {\r\n    loadAssets: loadAssets,\r\n    setAssetsPath: setAssetsPath,\r\n    setPath: setPath,\r\n    loadedImages: loadedImages,\r\n    loadedFootages: loadedFootages,\r\n    destroy: destroy,\r\n    getAsset: getAsset,\r\n    createImgData: createImgData,\r\n    createImageData: createImageData,\r\n    imageLoaded: imageLoaded,\r\n    footageLoaded: footageLoaded,\r\n    setCacheType: setCacheType,\r\n  };\r\n\r\n  return ImagePreloaderFactory;\r\n}());\r\n\r\n/* exported featureSupport */\r\n\r\nvar featureSupport = (function () {\r\n  var ob = {\r\n    maskType: true,\r\n  };\r\n  if (/MSIE 10/i.test(navigator.userAgent) || /MSIE 9/i.test(navigator.userAgent) || /rv:11.0/i.test(navigator.userAgent) || /Edge\\/\\d./i.test(navigator.userAgent)) {\r\n    ob.maskType = false;\r\n  }\r\n  return ob;\r\n}());\r\n\r\n/* global createNS */\r\n/* exported filtersFactory */\r\n\r\nvar filtersFactory = (function () {\r\n  var ob = {};\r\n  ob.createFilter = createFilter;\r\n  ob.createAlphaToLuminanceFilter = createAlphaToLuminanceFilter;\r\n\r\n  function createFilter(filId, skipCoordinates) {\r\n    var fil = createNS('filter');\r\n    fil.setAttribute('id', filId);\r\n    if (skipCoordinates !== true) {\r\n      fil.setAttribute('filterUnits', 'objectBoundingBox');\r\n      fil.setAttribute('x', '0%');\r\n      fil.setAttribute('y', '0%');\r\n      fil.setAttribute('width', '100%');\r\n      fil.setAttribute('height', '100%');\r\n    }\r\n    return fil;\r\n  }\r\n\r\n  function createAlphaToLuminanceFilter() {\r\n    var feColorMatrix = createNS('feColorMatrix');\r\n    feColorMatrix.setAttribute('type', 'matrix');\r\n    feColorMatrix.setAttribute('color-interpolation-filters', 'sRGB');\r\n    feColorMatrix.setAttribute('values', '0 0 0 1 0  0 0 0 1 0  0 0 0 1 0  0 0 0 1 1');\r\n    return feColorMatrix;\r\n  }\r\n\r\n  return ob;\r\n}());\r\n\r\n/* global createSizedArray, PropertyFactory, TextAnimatorDataProperty, bez, addHueToRGB,\r\n  addSaturationToRGB, addBrightnessToRGB, LetterProps, Matrix, extendPrototype, DynamicPropertyContainer */\r\n\r\nfunction TextAnimatorProperty(textData, renderType, elem) {\r\n  this._isFirstFrame = true;\r\n  this._hasMaskedPath = false;\r\n  this._frameId = -1;\r\n  this._textData = textData;\r\n  this._renderType = renderType;\r\n  this._elem = elem;\r\n  this._animatorsData = createSizedArray(this._textData.a.length);\r\n  this._pathData = {};\r\n  this._moreOptions = {\r\n    alignment: {},\r\n  };\r\n  this.renderedLetters = [];\r\n  this.lettersChangedFlag = false;\r\n  this.initDynamicPropertyContainer(elem);\r\n}\r\n\r\nTextAnimatorProperty.prototype.searchProperties = function () {\r\n  var i;\r\n  var len = this._textData.a.length;\r\n  var animatorProps;\r\n  var getProp = PropertyFactory.getProp;\r\n  for (i = 0; i < len; i += 1) {\r\n    animatorProps = this._textData.a[i];\r\n    this._animatorsData[i] = new TextAnimatorDataProperty(this._elem, animatorProps, this);\r\n  }\r\n  if (this._textData.p && 'm' in this._textData.p) {\r\n    this._pathData = {\r\n      a: getProp(this._elem, this._textData.p.a, 0, 0, this),\r\n      f: getProp(this._elem, this._textData.p.f, 0, 0, this),\r\n      l: getProp(this._elem, this._textData.p.l, 0, 0, this),\r\n      r: getProp(this._elem, this._textData.p.r, 0, 0, this),\r\n      p: getProp(this._elem, this._textData.p.p, 0, 0, this),\r\n      m: this._elem.maskManager.getMaskProperty(this._textData.p.m),\r\n    };\r\n    this._hasMaskedPath = true;\r\n  } else {\r\n    this._hasMaskedPath = false;\r\n  }\r\n  this._moreOptions.alignment = getProp(this._elem, this._textData.m.a, 1, 0, this);\r\n};\r\n\r\nTextAnimatorProperty.prototype.getMeasures = function (documentData, lettersChangedFlag) {\r\n  this.lettersChangedFlag = lettersChangedFlag;\r\n  if (!this._mdf && !this._isFirstFrame && !lettersChangedFlag && (!this._hasMaskedPath || !this._pathData.m._mdf)) {\r\n    return;\r\n  }\r\n  this._isFirstFrame = false;\r\n  var alignment = this._moreOptions.alignment.v;\r\n  var animators = this._animatorsData;\r\n  var textData = this._textData;\r\n  var matrixHelper = this.mHelper;\r\n  var renderType = this._renderType;\r\n  var renderedLettersCount = this.renderedLetters.length;\r\n  var xPos;\r\n  var yPos;\r\n  var i;\r\n  var len;\r\n  var letters = documentData.l;\r\n  var pathInfo;\r\n  var currentLength;\r\n  var currentPoint;\r\n  var segmentLength;\r\n  var flag;\r\n  var pointInd;\r\n  var segmentInd;\r\n  var prevPoint;\r\n  var points;\r\n  var segments;\r\n  var partialLength;\r\n  var totalLength;\r\n  var perc;\r\n  var tanAngle;\r\n  var mask;\r\n  if (this._hasMaskedPath) {\r\n    mask = this._pathData.m;\r\n    if (!this._pathData.n || this._pathData._mdf) {\r\n      var paths = mask.v;\r\n      if (this._pathData.r.v) {\r\n        paths = paths.reverse();\r\n      }\r\n      // TODO: release bezier data cached from previous pathInfo: this._pathData.pi\r\n      pathInfo = {\r\n        tLength: 0,\r\n        segments: [],\r\n      };\r\n      len = paths._length - 1;\r\n      var bezierData;\r\n      totalLength = 0;\r\n      for (i = 0; i < len; i += 1) {\r\n        bezierData = bez.buildBezierData(paths.v[i],\r\n          paths.v[i + 1],\r\n          [paths.o[i][0] - paths.v[i][0], paths.o[i][1] - paths.v[i][1]],\r\n          [paths.i[i + 1][0] - paths.v[i + 1][0], paths.i[i + 1][1] - paths.v[i + 1][1]]);\r\n        pathInfo.tLength += bezierData.segmentLength;\r\n        pathInfo.segments.push(bezierData);\r\n        totalLength += bezierData.segmentLength;\r\n      }\r\n      i = len;\r\n      if (mask.v.c) {\r\n        bezierData = bez.buildBezierData(paths.v[i],\r\n          paths.v[0],\r\n          [paths.o[i][0] - paths.v[i][0], paths.o[i][1] - paths.v[i][1]],\r\n          [paths.i[0][0] - paths.v[0][0], paths.i[0][1] - paths.v[0][1]]);\r\n        pathInfo.tLength += bezierData.segmentLength;\r\n        pathInfo.segments.push(bezierData);\r\n        totalLength += bezierData.segmentLength;\r\n      }\r\n      this._pathData.pi = pathInfo;\r\n    }\r\n    pathInfo = this._pathData.pi;\r\n\r\n    currentLength = this._pathData.f.v;\r\n    segmentInd = 0;\r\n    pointInd = 1;\r\n    segmentLength = 0;\r\n    flag = true;\r\n    segments = pathInfo.segments;\r\n    if (currentLength < 0 && mask.v.c) {\r\n      if (pathInfo.tLength < Math.abs(currentLength)) {\r\n        currentLength = -Math.abs(currentLength) % pathInfo.tLength;\r\n      }\r\n      segmentInd = segments.length - 1;\r\n      points = segments[segmentInd].points;\r\n      pointInd = points.length - 1;\r\n      while (currentLength < 0) {\r\n        currentLength += points[pointInd].partialLength;\r\n        pointInd -= 1;\r\n        if (pointInd < 0) {\r\n          segmentInd -= 1;\r\n          points = segments[segmentInd].points;\r\n          pointInd = points.length - 1;\r\n        }\r\n      }\r\n    }\r\n    points = segments[segmentInd].points;\r\n    prevPoint = points[pointInd - 1];\r\n    currentPoint = points[pointInd];\r\n    partialLength = currentPoint.partialLength;\r\n  }\r\n\r\n  len = letters.length;\r\n  xPos = 0;\r\n  yPos = 0;\r\n  var yOff = documentData.finalSize * 1.2 * 0.714;\r\n  var firstLine = true;\r\n  var animatorProps;\r\n  var animatorSelector;\r\n  var j;\r\n  var jLen;\r\n  var letterValue;\r\n\r\n  jLen = animators.length;\r\n\r\n  var mult;\r\n  var ind = -1;\r\n  var offf;\r\n  var xPathPos;\r\n  var yPathPos;\r\n  var initPathPos = currentLength;\r\n  var initSegmentInd = segmentInd;\r\n  var initPointInd = pointInd;\r\n  var currentLine = -1;\r\n  var elemOpacity;\r\n  var sc;\r\n  var sw;\r\n  var fc;\r\n  var k;\r\n  var letterSw;\r\n  var letterSc;\r\n  var letterFc;\r\n  var letterM = '';\r\n  var letterP = this.defaultPropsArray;\r\n  var letterO;\r\n\r\n  //\r\n  if (documentData.j === 2 || documentData.j === 1) {\r\n    var animatorJustifyOffset = 0;\r\n    var animatorFirstCharOffset = 0;\r\n    var justifyOffsetMult = documentData.j === 2 ? -0.5 : -1;\r\n    var lastIndex = 0;\r\n    var isNewLine = true;\r\n\r\n    for (i = 0; i < len; i += 1) {\r\n      if (letters[i].n) {\r\n        if (animatorJustifyOffset) {\r\n          animatorJustifyOffset += animatorFirstCharOffset;\r\n        }\r\n        while (lastIndex < i) {\r\n          letters[lastIndex].animatorJustifyOffset = animatorJustifyOffset;\r\n          lastIndex += 1;\r\n        }\r\n        animatorJustifyOffset = 0;\r\n        isNewLine = true;\r\n      } else {\r\n        for (j = 0; j < jLen; j += 1) {\r\n          animatorProps = animators[j].a;\r\n          if (animatorProps.t.propType) {\r\n            if (isNewLine && documentData.j === 2) {\r\n              animatorFirstCharOffset += animatorProps.t.v * justifyOffsetMult;\r\n            }\r\n            animatorSelector = animators[j].s;\r\n            mult = animatorSelector.getMult(letters[i].anIndexes[j], textData.a[j].s.totalChars);\r\n            if (mult.length) {\r\n              animatorJustifyOffset += animatorProps.t.v * mult[0] * justifyOffsetMult;\r\n            } else {\r\n              animatorJustifyOffset += animatorProps.t.v * mult * justifyOffsetMult;\r\n            }\r\n          }\r\n        }\r\n        isNewLine = false;\r\n      }\r\n    }\r\n    if (animatorJustifyOffset) {\r\n      animatorJustifyOffset += animatorFirstCharOffset;\r\n    }\r\n    while (lastIndex < i) {\r\n      letters[lastIndex].animatorJustifyOffset = animatorJustifyOffset;\r\n      lastIndex += 1;\r\n    }\r\n  }\r\n  //\r\n\r\n  for (i = 0; i < len; i += 1) {\r\n    matrixHelper.reset();\r\n    elemOpacity = 1;\r\n    if (letters[i].n) {\r\n      xPos = 0;\r\n      yPos += documentData.yOffset;\r\n      yPos += firstLine ? 1 : 0;\r\n      currentLength = initPathPos;\r\n      firstLine = false;\r\n      if (this._hasMaskedPath) {\r\n        segmentInd = initSegmentInd;\r\n        pointInd = initPointInd;\r\n        points = segments[segmentInd].points;\r\n        prevPoint = points[pointInd - 1];\r\n        currentPoint = points[pointInd];\r\n        partialLength = currentPoint.partialLength;\r\n        segmentLength = 0;\r\n      }\r\n      letterM = '';\r\n      letterFc = '';\r\n      letterSw = '';\r\n      letterO = '';\r\n      letterP = this.defaultPropsArray;\r\n    } else {\r\n      if (this._hasMaskedPath) {\r\n        if (currentLine !== letters[i].line) {\r\n          switch (documentData.j) {\r\n            case 1:\r\n              currentLength += totalLength - documentData.lineWidths[letters[i].line];\r\n              break;\r\n            case 2:\r\n              currentLength += (totalLength - documentData.lineWidths[letters[i].line]) / 2;\r\n              break;\r\n            default:\r\n              break;\r\n          }\r\n          currentLine = letters[i].line;\r\n        }\r\n        if (ind !== letters[i].ind) {\r\n          if (letters[ind]) {\r\n            currentLength += letters[ind].extra;\r\n          }\r\n          currentLength += letters[i].an / 2;\r\n          ind = letters[i].ind;\r\n        }\r\n        currentLength += (alignment[0] * letters[i].an) * 0.005;\r\n        var animatorOffset = 0;\r\n        for (j = 0; j < jLen; j += 1) {\r\n          animatorProps = animators[j].a;\r\n          if (animatorProps.p.propType) {\r\n            animatorSelector = animators[j].s;\r\n            mult = animatorSelector.getMult(letters[i].anIndexes[j], textData.a[j].s.totalChars);\r\n            if (mult.length) {\r\n              animatorOffset += animatorProps.p.v[0] * mult[0];\r\n            } else {\r\n              animatorOffset += animatorProps.p.v[0] * mult;\r\n            }\r\n          }\r\n          if (animatorProps.a.propType) {\r\n            animatorSelector = animators[j].s;\r\n            mult = animatorSelector.getMult(letters[i].anIndexes[j], textData.a[j].s.totalChars);\r\n            if (mult.length) {\r\n              animatorOffset += animatorProps.a.v[0] * mult[0];\r\n            } else {\r\n              animatorOffset += animatorProps.a.v[0] * mult;\r\n            }\r\n          }\r\n        }\r\n        flag = true;\r\n        // Force alignment only works with a single line for now\r\n        if (this._pathData.a.v) {\r\n          currentLength = letters[0].an * 0.5 + ((totalLength - this._pathData.f.v - letters[0].an * 0.5 - letters[letters.length - 1].an * 0.5) * ind) / (len - 1);\r\n          currentLength += this._pathData.f.v;\r\n        }\r\n        while (flag) {\r\n          if (segmentLength + partialLength >= currentLength + animatorOffset || !points) {\r\n            perc = (currentLength + animatorOffset - segmentLength) / currentPoint.partialLength;\r\n            xPathPos = prevPoint.point[0] + (currentPoint.point[0] - prevPoint.point[0]) * perc;\r\n            yPathPos = prevPoint.point[1] + (currentPoint.point[1] - prevPoint.point[1]) * perc;\r\n            matrixHelper.translate((-alignment[0] * letters[i].an) * 0.005, -(alignment[1] * yOff) * 0.01);\r\n            flag = false;\r\n          } else if (points) {\r\n            segmentLength += currentPoint.partialLength;\r\n            pointInd += 1;\r\n            if (pointInd >= points.length) {\r\n              pointInd = 0;\r\n              segmentInd += 1;\r\n              if (!segments[segmentInd]) {\r\n                if (mask.v.c) {\r\n                  pointInd = 0;\r\n                  segmentInd = 0;\r\n                  points = segments[segmentInd].points;\r\n                } else {\r\n                  segmentLength -= currentPoint.partialLength;\r\n                  points = null;\r\n                }\r\n              } else {\r\n                points = segments[segmentInd].points;\r\n              }\r\n            }\r\n            if (points) {\r\n              prevPoint = currentPoint;\r\n              currentPoint = points[pointInd];\r\n              partialLength = currentPoint.partialLength;\r\n            }\r\n          }\r\n        }\r\n        offf = letters[i].an / 2 - letters[i].add;\r\n        matrixHelper.translate(-offf, 0, 0);\r\n      } else {\r\n        offf = letters[i].an / 2 - letters[i].add;\r\n        matrixHelper.translate(-offf, 0, 0);\r\n\r\n        // Grouping alignment\r\n        matrixHelper.translate((-alignment[0] * letters[i].an) * 0.005, (-alignment[1] * yOff) * 0.01, 0);\r\n      }\r\n\r\n      for (j = 0; j < jLen; j += 1) {\r\n        animatorProps = animators[j].a;\r\n        if (animatorProps.t.propType) {\r\n          animatorSelector = animators[j].s;\r\n          mult = animatorSelector.getMult(letters[i].anIndexes[j], textData.a[j].s.totalChars);\r\n          // This condition is to prevent applying tracking to first character in each line. Might be better to use a boolean \"isNewLine\"\r\n          if (xPos !== 0 || documentData.j !== 0) {\r\n            if (this._hasMaskedPath) {\r\n              if (mult.length) {\r\n                currentLength += animatorProps.t.v * mult[0];\r\n              } else {\r\n                currentLength += animatorProps.t.v * mult;\r\n              }\r\n            } else if (mult.length) {\r\n              xPos += animatorProps.t.v * mult[0];\r\n            } else {\r\n              xPos += animatorProps.t.v * mult;\r\n            }\r\n          }\r\n        }\r\n      }\r\n      if (documentData.strokeWidthAnim) {\r\n        sw = documentData.sw || 0;\r\n      }\r\n      if (documentData.strokeColorAnim) {\r\n        if (documentData.sc) {\r\n          sc = [documentData.sc[0], documentData.sc[1], documentData.sc[2]];\r\n        } else {\r\n          sc = [0, 0, 0];\r\n        }\r\n      }\r\n      if (documentData.fillColorAnim && documentData.fc) {\r\n        fc = [documentData.fc[0], documentData.fc[1], documentData.fc[2]];\r\n      }\r\n      for (j = 0; j < jLen; j += 1) {\r\n        animatorProps = animators[j].a;\r\n        if (animatorProps.a.propType) {\r\n          animatorSelector = animators[j].s;\r\n          mult = animatorSelector.getMult(letters[i].anIndexes[j], textData.a[j].s.totalChars);\r\n\r\n          if (mult.length) {\r\n            matrixHelper.translate(-animatorProps.a.v[0] * mult[0], -animatorProps.a.v[1] * mult[1], animatorProps.a.v[2] * mult[2]);\r\n          } else {\r\n            matrixHelper.translate(-animatorProps.a.v[0] * mult, -animatorProps.a.v[1] * mult, animatorProps.a.v[2] * mult);\r\n          }\r\n        }\r\n      }\r\n      for (j = 0; j < jLen; j += 1) {\r\n        animatorProps = animators[j].a;\r\n        if (animatorProps.s.propType) {\r\n          animatorSelector = animators[j].s;\r\n          mult = animatorSelector.getMult(letters[i].anIndexes[j], textData.a[j].s.totalChars);\r\n          if (mult.length) {\r\n            matrixHelper.scale(1 + ((animatorProps.s.v[0] - 1) * mult[0]), 1 + ((animatorProps.s.v[1] - 1) * mult[1]), 1);\r\n          } else {\r\n            matrixHelper.scale(1 + ((animatorProps.s.v[0] - 1) * mult), 1 + ((animatorProps.s.v[1] - 1) * mult), 1);\r\n          }\r\n        }\r\n      }\r\n      for (j = 0; j < jLen; j += 1) {\r\n        animatorProps = animators[j].a;\r\n        animatorSelector = animators[j].s;\r\n        mult = animatorSelector.getMult(letters[i].anIndexes[j], textData.a[j].s.totalChars);\r\n        if (animatorProps.sk.propType) {\r\n          if (mult.length) {\r\n            matrixHelper.skewFromAxis(-animatorProps.sk.v * mult[0], animatorProps.sa.v * mult[1]);\r\n          } else {\r\n            matrixHelper.skewFromAxis(-animatorProps.sk.v * mult, animatorProps.sa.v * mult);\r\n          }\r\n        }\r\n        if (animatorProps.r.propType) {\r\n          if (mult.length) {\r\n            matrixHelper.rotateZ(-animatorProps.r.v * mult[2]);\r\n          } else {\r\n            matrixHelper.rotateZ(-animatorProps.r.v * mult);\r\n          }\r\n        }\r\n        if (animatorProps.ry.propType) {\r\n          if (mult.length) {\r\n            matrixHelper.rotateY(animatorProps.ry.v * mult[1]);\r\n          } else {\r\n            matrixHelper.rotateY(animatorProps.ry.v * mult);\r\n          }\r\n        }\r\n        if (animatorProps.rx.propType) {\r\n          if (mult.length) {\r\n            matrixHelper.rotateX(animatorProps.rx.v * mult[0]);\r\n          } else {\r\n            matrixHelper.rotateX(animatorProps.rx.v * mult);\r\n          }\r\n        }\r\n        if (animatorProps.o.propType) {\r\n          if (mult.length) {\r\n            elemOpacity += ((animatorProps.o.v) * mult[0] - elemOpacity) * mult[0];\r\n          } else {\r\n            elemOpacity += ((animatorProps.o.v) * mult - elemOpacity) * mult;\r\n          }\r\n        }\r\n        if (documentData.strokeWidthAnim && animatorProps.sw.propType) {\r\n          if (mult.length) {\r\n            sw += animatorProps.sw.v * mult[0];\r\n          } else {\r\n            sw += animatorProps.sw.v * mult;\r\n          }\r\n        }\r\n        if (documentData.strokeColorAnim && animatorProps.sc.propType) {\r\n          for (k = 0; k < 3; k += 1) {\r\n            if (mult.length) {\r\n              sc[k] += (animatorProps.sc.v[k] - sc[k]) * mult[0];\r\n            } else {\r\n              sc[k] += (animatorProps.sc.v[k] - sc[k]) * mult;\r\n            }\r\n          }\r\n        }\r\n        if (documentData.fillColorAnim && documentData.fc) {\r\n          if (animatorProps.fc.propType) {\r\n            for (k = 0; k < 3; k += 1) {\r\n              if (mult.length) {\r\n                fc[k] += (animatorProps.fc.v[k] - fc[k]) * mult[0];\r\n              } else {\r\n                fc[k] += (animatorProps.fc.v[k] - fc[k]) * mult;\r\n              }\r\n            }\r\n          }\r\n          if (animatorProps.fh.propType) {\r\n            if (mult.length) {\r\n              fc = addHueToRGB(fc, animatorProps.fh.v * mult[0]);\r\n            } else {\r\n              fc = addHueToRGB(fc, animatorProps.fh.v * mult);\r\n            }\r\n          }\r\n          if (animatorProps.fs.propType) {\r\n            if (mult.length) {\r\n              fc = addSaturationToRGB(fc, animatorProps.fs.v * mult[0]);\r\n            } else {\r\n              fc = addSaturationToRGB(fc, animatorProps.fs.v * mult);\r\n            }\r\n          }\r\n          if (animatorProps.fb.propType) {\r\n            if (mult.length) {\r\n              fc = addBrightnessToRGB(fc, animatorProps.fb.v * mult[0]);\r\n            } else {\r\n              fc = addBrightnessToRGB(fc, animatorProps.fb.v * mult);\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      for (j = 0; j < jLen; j += 1) {\r\n        animatorProps = animators[j].a;\r\n\r\n        if (animatorProps.p.propType) {\r\n          animatorSelector = animators[j].s;\r\n          mult = animatorSelector.getMult(letters[i].anIndexes[j], textData.a[j].s.totalChars);\r\n          if (this._hasMaskedPath) {\r\n            if (mult.length) {\r\n              matrixHelper.translate(0, animatorProps.p.v[1] * mult[0], -animatorProps.p.v[2] * mult[1]);\r\n            } else {\r\n              matrixHelper.translate(0, animatorProps.p.v[1] * mult, -animatorProps.p.v[2] * mult);\r\n            }\r\n          } else if (mult.length) {\r\n            matrixHelper.translate(animatorProps.p.v[0] * mult[0], animatorProps.p.v[1] * mult[1], -animatorProps.p.v[2] * mult[2]);\r\n          } else {\r\n            matrixHelper.translate(animatorProps.p.v[0] * mult, animatorProps.p.v[1] * mult, -animatorProps.p.v[2] * mult);\r\n          }\r\n        }\r\n      }\r\n      if (documentData.strokeWidthAnim) {\r\n        letterSw = sw < 0 ? 0 : sw;\r\n      }\r\n      if (documentData.strokeColorAnim) {\r\n        letterSc = 'rgb(' + Math.round(sc[0] * 255) + ',' + Math.round(sc[1] * 255) + ',' + Math.round(sc[2] * 255) + ')';\r\n      }\r\n      if (documentData.fillColorAnim && documentData.fc) {\r\n        letterFc = 'rgb(' + Math.round(fc[0] * 255) + ',' + Math.round(fc[1] * 255) + ',' + Math.round(fc[2] * 255) + ')';\r\n      }\r\n\r\n      if (this._hasMaskedPath) {\r\n        matrixHelper.translate(0, -documentData.ls);\r\n\r\n        matrixHelper.translate(0, (alignment[1] * yOff) * 0.01 + yPos, 0);\r\n        if (this._pathData.p.v) {\r\n          tanAngle = (currentPoint.point[1] - prevPoint.point[1]) / (currentPoint.point[0] - prevPoint.point[0]);\r\n          var rot = (Math.atan(tanAngle) * 180) / Math.PI;\r\n          if (currentPoint.point[0] < prevPoint.point[0]) {\r\n            rot += 180;\r\n          }\r\n          matrixHelper.rotate((-rot * Math.PI) / 180);\r\n        }\r\n        matrixHelper.translate(xPathPos, yPathPos, 0);\r\n        currentLength -= (alignment[0] * letters[i].an) * 0.005;\r\n        if (letters[i + 1] && ind !== letters[i + 1].ind) {\r\n          currentLength += letters[i].an / 2;\r\n          currentLength += (documentData.tr * 0.001) * documentData.finalSize;\r\n        }\r\n      } else {\r\n        matrixHelper.translate(xPos, yPos, 0);\r\n\r\n        if (documentData.ps) {\r\n          // matrixHelper.translate(documentData.ps[0],documentData.ps[1],0);\r\n          matrixHelper.translate(documentData.ps[0], documentData.ps[1] + documentData.ascent, 0);\r\n        }\r\n        switch (documentData.j) {\r\n          case 1:\r\n            matrixHelper.translate(letters[i].animatorJustifyOffset + documentData.justifyOffset + (documentData.boxWidth - documentData.lineWidths[letters[i].line]), 0, 0);\r\n            break;\r\n          case 2:\r\n            matrixHelper.translate(letters[i].animatorJustifyOffset + documentData.justifyOffset + (documentData.boxWidth - documentData.lineWidths[letters[i].line]) / 2, 0, 0);\r\n            break;\r\n          default:\r\n            break;\r\n        }\r\n        matrixHelper.translate(0, -documentData.ls);\r\n        matrixHelper.translate(offf, 0, 0);\r\n        matrixHelper.translate((alignment[0] * letters[i].an) * 0.005, (alignment[1] * yOff) * 0.01, 0);\r\n        xPos += letters[i].l + (documentData.tr * 0.001) * documentData.finalSize;\r\n      }\r\n      if (renderType === 'html') {\r\n        letterM = matrixHelper.toCSS();\r\n      } else if (renderType === 'svg') {\r\n        letterM = matrixHelper.to2dCSS();\r\n      } else {\r\n        letterP = [matrixHelper.props[0], matrixHelper.props[1], matrixHelper.props[2], matrixHelper.props[3], matrixHelper.props[4], matrixHelper.props[5], matrixHelper.props[6], matrixHelper.props[7], matrixHelper.props[8], matrixHelper.props[9], matrixHelper.props[10], matrixHelper.props[11], matrixHelper.props[12], matrixHelper.props[13], matrixHelper.props[14], matrixHelper.props[15]];\r\n      }\r\n      letterO = elemOpacity;\r\n    }\r\n\r\n    if (renderedLettersCount <= i) {\r\n      letterValue = new LetterProps(letterO, letterSw, letterSc, letterFc, letterM, letterP);\r\n      this.renderedLetters.push(letterValue);\r\n      renderedLettersCount += 1;\r\n      this.lettersChangedFlag = true;\r\n    } else {\r\n      letterValue = this.renderedLetters[i];\r\n      this.lettersChangedFlag = letterValue.update(letterO, letterSw, letterSc, letterFc, letterM, letterP) || this.lettersChangedFlag;\r\n    }\r\n  }\r\n};\r\n\r\nTextAnimatorProperty.prototype.getValue = function () {\r\n  if (this._elem.globalData.frameId === this._frameId) {\r\n    return;\r\n  }\r\n  this._frameId = this._elem.globalData.frameId;\r\n  this.iterateDynamicProperties();\r\n};\r\n\r\nTextAnimatorProperty.prototype.mHelper = new Matrix();\r\nTextAnimatorProperty.prototype.defaultPropsArray = [];\r\nextendPrototype([DynamicPropertyContainer], TextAnimatorProperty);\r\n\r\n/* global PropertyFactory, degToRads, TextSelectorProp */\r\n/* exported TextAnimatorDataProperty */\r\n\r\nfunction TextAnimatorDataProperty(elem, animatorProps, container) {\r\n  var defaultData = { propType: false };\r\n  var getProp = PropertyFactory.getProp;\r\n  var textAnimatorAnimatables = animatorProps.a;\r\n  this.a = {\r\n    r: textAnimatorAnimatables.r ? getProp(elem, textAnimatorAnimatables.r, 0, degToRads, container) : defaultData,\r\n    rx: textAnimatorAnimatables.rx ? getProp(elem, textAnimatorAnimatables.rx, 0, degToRads, container) : defaultData,\r\n    ry: textAnimatorAnimatables.ry ? getProp(elem, textAnimatorAnimatables.ry, 0, degToRads, container) : defaultData,\r\n    sk: textAnimatorAnimatables.sk ? getProp(elem, textAnimatorAnimatables.sk, 0, degToRads, container) : defaultData,\r\n    sa: textAnimatorAnimatables.sa ? getProp(elem, textAnimatorAnimatables.sa, 0, degToRads, container) : defaultData,\r\n    s: textAnimatorAnimatables.s ? getProp(elem, textAnimatorAnimatables.s, 1, 0.01, container) : defaultData,\r\n    a: textAnimatorAnimatables.a ? getProp(elem, textAnimatorAnimatables.a, 1, 0, container) : defaultData,\r\n    o: textAnimatorAnimatables.o ? getProp(elem, textAnimatorAnimatables.o, 0, 0.01, container) : defaultData,\r\n    p: textAnimatorAnimatables.p ? getProp(elem, textAnimatorAnimatables.p, 1, 0, container) : defaultData,\r\n    sw: textAnimatorAnimatables.sw ? getProp(elem, textAnimatorAnimatables.sw, 0, 0, container) : defaultData,\r\n    sc: textAnimatorAnimatables.sc ? getProp(elem, textAnimatorAnimatables.sc, 1, 0, container) : defaultData,\r\n    fc: textAnimatorAnimatables.fc ? getProp(elem, textAnimatorAnimatables.fc, 1, 0, container) : defaultData,\r\n    fh: textAnimatorAnimatables.fh ? getProp(elem, textAnimatorAnimatables.fh, 0, 0, container) : defaultData,\r\n    fs: textAnimatorAnimatables.fs ? getProp(elem, textAnimatorAnimatables.fs, 0, 0.01, container) : defaultData,\r\n    fb: textAnimatorAnimatables.fb ? getProp(elem, textAnimatorAnimatables.fb, 0, 0.01, container) : defaultData,\r\n    t: textAnimatorAnimatables.t ? getProp(elem, textAnimatorAnimatables.t, 0, 0, container) : defaultData,\r\n  };\r\n\r\n  this.s = TextSelectorProp.getTextSelectorProp(elem, animatorProps.s, container);\r\n  this.s.t = animatorProps.s.t;\r\n}\r\n\r\nfunction LetterProps(o, sw, sc, fc, m, p) {\r\n  this.o = o;\r\n  this.sw = sw;\r\n  this.sc = sc;\r\n  this.fc = fc;\r\n  this.m = m;\r\n  this.p = p;\r\n  this._mdf = {\r\n    o: true,\r\n    sw: !!sw,\r\n    sc: !!sc,\r\n    fc: !!fc,\r\n    m: true,\r\n    p: true,\r\n  };\r\n}\r\n\r\nLetterProps.prototype.update = function (o, sw, sc, fc, m, p) {\r\n  this._mdf.o = false;\r\n  this._mdf.sw = false;\r\n  this._mdf.sc = false;\r\n  this._mdf.fc = false;\r\n  this._mdf.m = false;\r\n  this._mdf.p = false;\r\n  var updated = false;\r\n\r\n  if (this.o !== o) {\r\n    this.o = o;\r\n    this._mdf.o = true;\r\n    updated = true;\r\n  }\r\n  if (this.sw !== sw) {\r\n    this.sw = sw;\r\n    this._mdf.sw = true;\r\n    updated = true;\r\n  }\r\n  if (this.sc !== sc) {\r\n    this.sc = sc;\r\n    this._mdf.sc = true;\r\n    updated = true;\r\n  }\r\n  if (this.fc !== fc) {\r\n    this.fc = fc;\r\n    this._mdf.fc = true;\r\n    updated = true;\r\n  }\r\n  if (this.m !== m) {\r\n    this.m = m;\r\n    this._mdf.m = true;\r\n    updated = true;\r\n  }\r\n  if (p.length && (this.p[0] !== p[0] || this.p[1] !== p[1] || this.p[4] !== p[4] || this.p[5] !== p[5] || this.p[12] !== p[12] || this.p[13] !== p[13])) {\r\n    this.p = p;\r\n    this._mdf.p = true;\r\n    updated = true;\r\n  }\r\n  return updated;\r\n};\r\n\r\n/* global FontManager, initialDefaultFrame, getFontProperties */\r\n/* exported TextProperty */\r\n\r\nfunction TextProperty(elem, data) {\r\n  this._frameId = initialDefaultFrame;\r\n  this.pv = '';\r\n  this.v = '';\r\n  this.kf = false;\r\n  this._isFirstFrame = true;\r\n  this._mdf = false;\r\n  this.data = data;\r\n  this.elem = elem;\r\n  this.comp = this.elem.comp;\r\n  this.keysIndex = 0;\r\n  this.canResize = false;\r\n  this.minimumFontSize = 1;\r\n  this.effectsSequence = [];\r\n  this.currentData = {\r\n    ascent: 0,\r\n    boxWidth: this.defaultBoxWidth,\r\n    f: '',\r\n    fStyle: '',\r\n    fWeight: '',\r\n    fc: '',\r\n    j: '',\r\n    justifyOffset: '',\r\n    l: [],\r\n    lh: 0,\r\n    lineWidths: [],\r\n    ls: '',\r\n    of: '',\r\n    s: '',\r\n    sc: '',\r\n    sw: 0,\r\n    t: 0,\r\n    tr: 0,\r\n    sz: 0,\r\n    ps: null,\r\n    fillColorAnim: false,\r\n    strokeColorAnim: false,\r\n    strokeWidthAnim: false,\r\n    yOffset: 0,\r\n    finalSize: 0,\r\n    finalText: [],\r\n    finalLineHeight: 0,\r\n    __complete: false,\r\n\r\n  };\r\n  this.copyData(this.currentData, this.data.d.k[0].s);\r\n\r\n  if (!this.searchProperty()) {\r\n    this.completeTextData(this.currentData);\r\n  }\r\n}\r\n\r\nTextProperty.prototype.defaultBoxWidth = [0, 0];\r\n\r\nTextProperty.prototype.copyData = function (obj, data) {\r\n  for (var s in data) {\r\n    if (Object.prototype.hasOwnProperty.call(data, s)) {\r\n      obj[s] = data[s];\r\n    }\r\n  }\r\n  return obj;\r\n};\r\n\r\nTextProperty.prototype.setCurrentData = function (data) {\r\n  if (!data.__complete) {\r\n    this.completeTextData(data);\r\n  }\r\n  this.currentData = data;\r\n  this.currentData.boxWidth = this.currentData.boxWidth || this.defaultBoxWidth;\r\n  this._mdf = true;\r\n};\r\n\r\nTextProperty.prototype.searchProperty = function () {\r\n  return this.searchKeyframes();\r\n};\r\n\r\nTextProperty.prototype.searchKeyframes = function () {\r\n  this.kf = this.data.d.k.length > 1;\r\n  if (this.kf) {\r\n    this.addEffect(this.getKeyframeValue.bind(this));\r\n  }\r\n  return this.kf;\r\n};\r\n\r\nTextProperty.prototype.addEffect = function (effectFunction) {\r\n  this.effectsSequence.push(effectFunction);\r\n  this.elem.addDynamicProperty(this);\r\n};\r\n\r\nTextProperty.prototype.getValue = function (_finalValue) {\r\n  if ((this.elem.globalData.frameId === this.frameId || !this.effectsSequence.length) && !_finalValue) {\r\n    return;\r\n  }\r\n  this.currentData.t = this.data.d.k[this.keysIndex].s.t;\r\n  var currentValue = this.currentData;\r\n  var currentIndex = this.keysIndex;\r\n  if (this.lock) {\r\n    this.setCurrentData(this.currentData);\r\n    return;\r\n  }\r\n  this.lock = true;\r\n  this._mdf = false;\r\n  var i; var\r\n    len = this.effectsSequence.length;\r\n  var finalValue = _finalValue || this.data.d.k[this.keysIndex].s;\r\n  for (i = 0; i < len; i += 1) {\r\n    // Checking if index changed to prevent creating a new object every time the expression updates.\r\n    if (currentIndex !== this.keysIndex) {\r\n      finalValue = this.effectsSequence[i](finalValue, finalValue.t);\r\n    } else {\r\n      finalValue = this.effectsSequence[i](this.currentData, finalValue.t);\r\n    }\r\n  }\r\n  if (currentValue !== finalValue) {\r\n    this.setCurrentData(finalValue);\r\n  }\r\n  this.v = this.currentData;\r\n  this.pv = this.v;\r\n  this.lock = false;\r\n  this.frameId = this.elem.globalData.frameId;\r\n};\r\n\r\nTextProperty.prototype.getKeyframeValue = function () {\r\n  var textKeys = this.data.d.k;\r\n  var frameNum = this.elem.comp.renderedFrame;\r\n  var i = 0; var\r\n    len = textKeys.length;\r\n  while (i <= len - 1) {\r\n    if (i === len - 1 || textKeys[i + 1].t > frameNum) {\r\n      break;\r\n    }\r\n    i += 1;\r\n  }\r\n  if (this.keysIndex !== i) {\r\n    this.keysIndex = i;\r\n  }\r\n  return this.data.d.k[this.keysIndex].s;\r\n};\r\n\r\nTextProperty.prototype.buildFinalText = function (text) {\r\n  var charactersArray = [];\r\n  var i = 0;\r\n  var len = text.length;\r\n  var charCode;\r\n  var secondCharCode;\r\n  var shouldCombine = false;\r\n  while (i < len) {\r\n    charCode = text.charCodeAt(i);\r\n    if (FontManager.isCombinedCharacter(charCode)) {\r\n      charactersArray[charactersArray.length - 1] += text.charAt(i);\r\n    } else if (charCode >= 0xD800 && charCode <= 0xDBFF) {\r\n      secondCharCode = text.charCodeAt(i + 1);\r\n      if (secondCharCode >= 0xDC00 && secondCharCode <= 0xDFFF) {\r\n        if (shouldCombine || FontManager.isModifier(charCode, secondCharCode)) {\r\n          charactersArray[charactersArray.length - 1] += text.substr(i, 2);\r\n          shouldCombine = false;\r\n        } else {\r\n          charactersArray.push(text.substr(i, 2));\r\n        }\r\n        i += 1;\r\n      } else {\r\n        charactersArray.push(text.charAt(i));\r\n      }\r\n    } else if (charCode > 0xDBFF) {\r\n      secondCharCode = text.charCodeAt(i + 1);\r\n      if (FontManager.isZeroWidthJoiner(charCode, secondCharCode)) {\r\n        shouldCombine = true;\r\n        charactersArray[charactersArray.length - 1] += text.substr(i, 2);\r\n        i += 1;\r\n      } else {\r\n        charactersArray.push(text.charAt(i));\r\n      }\r\n    } else if (FontManager.isZeroWidthJoiner(charCode)) {\r\n      charactersArray[charactersArray.length - 1] += text.charAt(i);\r\n      shouldCombine = true;\r\n    } else {\r\n      charactersArray.push(text.charAt(i));\r\n    }\r\n    i += 1;\r\n  }\r\n  return charactersArray;\r\n};\r\n\r\nTextProperty.prototype.completeTextData = function (documentData) {\r\n  documentData.__complete = true;\r\n  var fontManager = this.elem.globalData.fontManager;\r\n  var data = this.data;\r\n  var letters = [];\r\n  var i; var\r\n    len;\r\n  var newLineFlag; var index = 0; var\r\n    val;\r\n  var anchorGrouping = data.m.g;\r\n  var currentSize = 0; var currentPos = 0; var currentLine = 0; var\r\n    lineWidths = [];\r\n  var lineWidth = 0;\r\n  var maxLineWidth = 0;\r\n  var j; var\r\n    jLen;\r\n  var fontData = fontManager.getFontByName(documentData.f);\r\n  var charData; var\r\n    cLength = 0;\r\n\r\n  var fontProps = getFontProperties(fontData);\r\n  documentData.fWeight = fontProps.weight;\r\n  documentData.fStyle = fontProps.style;\r\n  documentData.finalSize = documentData.s;\r\n  documentData.finalText = this.buildFinalText(documentData.t);\r\n  len = documentData.finalText.length;\r\n  documentData.finalLineHeight = documentData.lh;\r\n  var trackingOffset = (documentData.tr / 1000) * documentData.finalSize;\r\n  var charCode;\r\n  if (documentData.sz) {\r\n    var flag = true;\r\n    var boxWidth = documentData.sz[0];\r\n    var boxHeight = documentData.sz[1];\r\n    var currentHeight; var\r\n      finalText;\r\n    while (flag) {\r\n      finalText = this.buildFinalText(documentData.t);\r\n      currentHeight = 0;\r\n      lineWidth = 0;\r\n      len = finalText.length;\r\n      trackingOffset = (documentData.tr / 1000) * documentData.finalSize;\r\n      var lastSpaceIndex = -1;\r\n      for (i = 0; i < len; i += 1) {\r\n        charCode = finalText[i].charCodeAt(0);\r\n        newLineFlag = false;\r\n        if (finalText[i] === ' ') {\r\n          lastSpaceIndex = i;\r\n        } else if (charCode === 13 || charCode === 3) {\r\n          lineWidth = 0;\r\n          newLineFlag = true;\r\n          currentHeight += documentData.finalLineHeight || documentData.finalSize * 1.2;\r\n        }\r\n        if (fontManager.chars) {\r\n          charData = fontManager.getCharData(finalText[i], fontData.fStyle, fontData.fFamily);\r\n          cLength = newLineFlag ? 0 : (charData.w * documentData.finalSize) / 100;\r\n        } else {\r\n          // tCanvasHelper.font = documentData.s + 'px '+ fontData.fFamily;\r\n          cLength = fontManager.measureText(finalText[i], documentData.f, documentData.finalSize);\r\n        }\r\n        if (lineWidth + cLength > boxWidth && finalText[i] !== ' ') {\r\n          if (lastSpaceIndex === -1) {\r\n            len += 1;\r\n          } else {\r\n            i = lastSpaceIndex;\r\n          }\r\n          currentHeight += documentData.finalLineHeight || documentData.finalSize * 1.2;\r\n          finalText.splice(i, lastSpaceIndex === i ? 1 : 0, '\\r');\r\n          // finalText = finalText.substr(0,i) + \"\\r\" + finalText.substr(i === lastSpaceIndex ? i + 1 : i);\r\n          lastSpaceIndex = -1;\r\n          lineWidth = 0;\r\n        } else {\r\n          lineWidth += cLength;\r\n          lineWidth += trackingOffset;\r\n        }\r\n      }\r\n      currentHeight += (fontData.ascent * documentData.finalSize) / 100;\r\n      if (this.canResize && documentData.finalSize > this.minimumFontSize && boxHeight < currentHeight) {\r\n        documentData.finalSize -= 1;\r\n        documentData.finalLineHeight = (documentData.finalSize * documentData.lh) / documentData.s;\r\n      } else {\r\n        documentData.finalText = finalText;\r\n        len = documentData.finalText.length;\r\n        flag = false;\r\n      }\r\n    }\r\n  }\r\n  lineWidth = -trackingOffset;\r\n  cLength = 0;\r\n  var uncollapsedSpaces = 0;\r\n  var currentChar;\r\n  for (i = 0; i < len; i += 1) {\r\n    newLineFlag = false;\r\n    currentChar = documentData.finalText[i];\r\n    charCode = currentChar.charCodeAt(0);\r\n    if (charCode === 13 || charCode === 3) {\r\n      uncollapsedSpaces = 0;\r\n      lineWidths.push(lineWidth);\r\n      maxLineWidth = lineWidth > maxLineWidth ? lineWidth : maxLineWidth;\r\n      lineWidth = -2 * trackingOffset;\r\n      val = '';\r\n      newLineFlag = true;\r\n      currentLine += 1;\r\n    } else {\r\n      val = currentChar;\r\n    }\r\n    if (fontManager.chars) {\r\n      charData = fontManager.getCharData(currentChar, fontData.fStyle, fontManager.getFontByName(documentData.f).fFamily);\r\n      cLength = newLineFlag ? 0 : (charData.w * documentData.finalSize) / 100;\r\n    } else {\r\n      // var charWidth = fontManager.measureText(val, documentData.f, documentData.finalSize);\r\n      // tCanvasHelper.font = documentData.finalSize + 'px '+ fontManager.getFontByName(documentData.f).fFamily;\r\n      cLength = fontManager.measureText(val, documentData.f, documentData.finalSize);\r\n    }\r\n\r\n    //\r\n    if (currentChar === ' ') {\r\n      uncollapsedSpaces += cLength + trackingOffset;\r\n    } else {\r\n      lineWidth += cLength + trackingOffset + uncollapsedSpaces;\r\n      uncollapsedSpaces = 0;\r\n    }\r\n    letters.push({\r\n      l: cLength, an: cLength, add: currentSize, n: newLineFlag, anIndexes: [], val: val, line: currentLine, animatorJustifyOffset: 0,\r\n    });\r\n    if (anchorGrouping == 2) { // eslint-disable-line eqeqeq\r\n      currentSize += cLength;\r\n      if (val === '' || val === ' ' || i === len - 1) {\r\n        if (val === '' || val === ' ') {\r\n          currentSize -= cLength;\r\n        }\r\n        while (currentPos <= i) {\r\n          letters[currentPos].an = currentSize;\r\n          letters[currentPos].ind = index;\r\n          letters[currentPos].extra = cLength;\r\n          currentPos += 1;\r\n        }\r\n        index += 1;\r\n        currentSize = 0;\r\n      }\r\n    } else if (anchorGrouping == 3) { // eslint-disable-line eqeqeq\r\n      currentSize += cLength;\r\n      if (val === '' || i === len - 1) {\r\n        if (val === '') {\r\n          currentSize -= cLength;\r\n        }\r\n        while (currentPos <= i) {\r\n          letters[currentPos].an = currentSize;\r\n          letters[currentPos].ind = index;\r\n          letters[currentPos].extra = cLength;\r\n          currentPos += 1;\r\n        }\r\n        currentSize = 0;\r\n        index += 1;\r\n      }\r\n    } else {\r\n      letters[index].ind = index;\r\n      letters[index].extra = 0;\r\n      index += 1;\r\n    }\r\n  }\r\n  documentData.l = letters;\r\n  maxLineWidth = lineWidth > maxLineWidth ? lineWidth : maxLineWidth;\r\n  lineWidths.push(lineWidth);\r\n  if (documentData.sz) {\r\n    documentData.boxWidth = documentData.sz[0];\r\n    documentData.justifyOffset = 0;\r\n  } else {\r\n    documentData.boxWidth = maxLineWidth;\r\n    switch (documentData.j) {\r\n      case 1:\r\n        documentData.justifyOffset = -documentData.boxWidth;\r\n        break;\r\n      case 2:\r\n        documentData.justifyOffset = -documentData.boxWidth / 2;\r\n        break;\r\n      default:\r\n        documentData.justifyOffset = 0;\r\n    }\r\n  }\r\n  documentData.lineWidths = lineWidths;\r\n\r\n  var animators = data.a; var animatorData; var\r\n    letterData;\r\n  jLen = animators.length;\r\n  var based; var ind; var\r\n    indexes = [];\r\n  for (j = 0; j < jLen; j += 1) {\r\n    animatorData = animators[j];\r\n    if (animatorData.a.sc) {\r\n      documentData.strokeColorAnim = true;\r\n    }\r\n    if (animatorData.a.sw) {\r\n      documentData.strokeWidthAnim = true;\r\n    }\r\n    if (animatorData.a.fc || animatorData.a.fh || animatorData.a.fs || animatorData.a.fb) {\r\n      documentData.fillColorAnim = true;\r\n    }\r\n    ind = 0;\r\n    based = animatorData.s.b;\r\n    for (i = 0; i < len; i += 1) {\r\n      letterData = letters[i];\r\n      letterData.anIndexes[j] = ind;\r\n      if ((based == 1 && letterData.val !== '') || (based == 2 && letterData.val !== '' && letterData.val !== ' ') || (based == 3 && (letterData.n || letterData.val == ' ' || i == len - 1)) || (based == 4 && (letterData.n || i == len - 1))) { // eslint-disable-line eqeqeq\r\n        if (animatorData.s.rn === 1) {\r\n          indexes.push(ind);\r\n        }\r\n        ind += 1;\r\n      }\r\n    }\r\n    data.a[j].s.totalChars = ind;\r\n    var currentInd = -1; var\r\n      newInd;\r\n    if (animatorData.s.rn === 1) {\r\n      for (i = 0; i < len; i += 1) {\r\n        letterData = letters[i];\r\n        if (currentInd != letterData.anIndexes[j]) { // eslint-disable-line eqeqeq\r\n          currentInd = letterData.anIndexes[j];\r\n          newInd = indexes.splice(Math.floor(Math.random() * indexes.length), 1)[0];\r\n        }\r\n        letterData.anIndexes[j] = newInd;\r\n      }\r\n    }\r\n  }\r\n  documentData.yOffset = documentData.finalLineHeight || documentData.finalSize * 1.2;\r\n  documentData.ls = documentData.ls || 0;\r\n  documentData.ascent = (fontData.ascent * documentData.finalSize) / 100;\r\n};\r\n\r\nTextProperty.prototype.updateDocumentData = function (newData, index) {\r\n  index = index === undefined ? this.keysIndex : index;\r\n  var dData = this.copyData({}, this.data.d.k[index].s);\r\n  dData = this.copyData(dData, newData);\r\n  this.data.d.k[index].s = dData;\r\n  this.recalculate(index);\r\n  this.elem.addDynamicProperty(this);\r\n};\r\n\r\nTextProperty.prototype.recalculate = function (index) {\r\n  var dData = this.data.d.k[index].s;\r\n  dData.__complete = false;\r\n  this.keysIndex = 0;\r\n  this._isFirstFrame = true;\r\n  this.getValue(dData);\r\n};\r\n\r\nTextProperty.prototype.canResizeFont = function (_canResize) {\r\n  this.canResize = _canResize;\r\n  this.recalculate(this.keysIndex);\r\n  this.elem.addDynamicProperty(this);\r\n};\r\n\r\nTextProperty.prototype.setMinimumFontSize = function (_fontValue) {\r\n  this.minimumFontSize = Math.floor(_fontValue) || 1;\r\n  this.recalculate(this.keysIndex);\r\n  this.elem.addDynamicProperty(this);\r\n};\r\n\r\n/* global extendPrototype, BezierFactory, PropertyFactory, DynamicPropertyContainer */\r\n/* exported TextSelectorProp */\r\n\r\nvar TextSelectorProp = (function () {\r\n  var max = Math.max;\r\n  var min = Math.min;\r\n  var floor = Math.floor;\r\n\r\n  function TextSelectorPropFactory(elem, data) {\r\n    this._currentTextLength = -1;\r\n    this.k = false;\r\n    this.data = data;\r\n    this.elem = elem;\r\n    this.comp = elem.comp;\r\n    this.finalS = 0;\r\n    this.finalE = 0;\r\n    this.initDynamicPropertyContainer(elem);\r\n    this.s = PropertyFactory.getProp(elem, data.s || { k: 0 }, 0, 0, this);\r\n    if ('e' in data) {\r\n      this.e = PropertyFactory.getProp(elem, data.e, 0, 0, this);\r\n    } else {\r\n      this.e = { v: 100 };\r\n    }\r\n    this.o = PropertyFactory.getProp(elem, data.o || { k: 0 }, 0, 0, this);\r\n    this.xe = PropertyFactory.getProp(elem, data.xe || { k: 0 }, 0, 0, this);\r\n    this.ne = PropertyFactory.getProp(elem, data.ne || { k: 0 }, 0, 0, this);\r\n    this.sm = PropertyFactory.getProp(elem, data.sm || { k: 100 }, 0, 0, this);\r\n    this.a = PropertyFactory.getProp(elem, data.a, 0, 0.01, this);\r\n    if (!this.dynamicProperties.length) {\r\n      this.getValue();\r\n    }\r\n  }\r\n\r\n  TextSelectorPropFactory.prototype = {\r\n    getMult: function (ind) {\r\n      if (this._currentTextLength !== this.elem.textProperty.currentData.l.length) {\r\n        this.getValue();\r\n      }\r\n      // var easer = bez.getEasingCurve(this.ne.v/100,0,1-this.xe.v/100,1);\r\n      var x1 = 0;\r\n      var y1 = 0;\r\n      var x2 = 1;\r\n      var y2 = 1;\r\n      if (this.ne.v > 0) {\r\n        x1 = this.ne.v / 100.0;\r\n      } else {\r\n        y1 = -this.ne.v / 100.0;\r\n      }\r\n      if (this.xe.v > 0) {\r\n        x2 = 1.0 - this.xe.v / 100.0;\r\n      } else {\r\n        y2 = 1.0 + this.xe.v / 100.0;\r\n      }\r\n      var easer = BezierFactory.getBezierEasing(x1, y1, x2, y2).get;\r\n\r\n      var mult = 0;\r\n      var s = this.finalS;\r\n      var e = this.finalE;\r\n      var type = this.data.sh;\r\n      if (type === 2) {\r\n        if (e === s) {\r\n          mult = ind >= e ? 1 : 0;\r\n        } else {\r\n          mult = max(0, min(0.5 / (e - s) + (ind - s) / (e - s), 1));\r\n        }\r\n        mult = easer(mult);\r\n      } else if (type === 3) {\r\n        if (e === s) {\r\n          mult = ind >= e ? 0 : 1;\r\n        } else {\r\n          mult = 1 - max(0, min(0.5 / (e - s) + (ind - s) / (e - s), 1));\r\n        }\r\n\r\n        mult = easer(mult);\r\n      } else if (type === 4) {\r\n        if (e === s) {\r\n          mult = 0;\r\n        } else {\r\n          mult = max(0, min(0.5 / (e - s) + (ind - s) / (e - s), 1));\r\n          if (mult < 0.5) {\r\n            mult *= 2;\r\n          } else {\r\n            mult = 1 - 2 * (mult - 0.5);\r\n          }\r\n        }\r\n        mult = easer(mult);\r\n      } else if (type === 5) {\r\n        if (e === s) {\r\n          mult = 0;\r\n        } else {\r\n          var tot = e - s;\r\n          /* ind += 0.5;\r\n                    mult = -4/(tot*tot)*(ind*ind)+(4/tot)*ind; */\r\n          ind = min(max(0, ind + 0.5 - s), e - s);\r\n          var x = -tot / 2 + ind;\r\n          var a = tot / 2;\r\n          mult = Math.sqrt(1 - (x * x) / (a * a));\r\n        }\r\n        mult = easer(mult);\r\n      } else if (type === 6) {\r\n        if (e === s) {\r\n          mult = 0;\r\n        } else {\r\n          ind = min(max(0, ind + 0.5 - s), e - s);\r\n          mult = (1 + (Math.cos((Math.PI + Math.PI * 2 * (ind) / (e - s))))) / 2; // eslint-disable-line\r\n        }\r\n        mult = easer(mult);\r\n      } else {\r\n        if (ind >= floor(s)) {\r\n          if (ind - s < 0) {\r\n            mult = max(0, min(min(e, 1) - (s - ind), 1));\r\n          } else {\r\n            mult = max(0, min(e - ind, 1));\r\n          }\r\n        }\r\n        mult = easer(mult);\r\n      }\r\n      // Smoothness implementation.\r\n      // The smoothness represents a reduced range of the original [0; 1] range.\r\n      // if smoothness is 25%, the new range will be [0.375; 0.625]\r\n      // Steps are:\r\n      // - find the lower value of the new range (threshold)\r\n      // - if multiplier is smaller than that value, floor it to 0\r\n      // - if it is larger,\r\n      //     - subtract the threshold\r\n      //     - divide it by the smoothness (this will return the range to [0; 1])\r\n      // Note: If it doesn't work on some scenarios, consider applying it before the easer.\r\n      if (this.sm.v !== 100) {\r\n        var smoothness = this.sm.v * 0.01;\r\n        if (smoothness === 0) {\r\n          smoothness = 0.00000001;\r\n        }\r\n        var threshold = 0.5 - smoothness * 0.5;\r\n        if (mult < threshold) {\r\n          mult = 0;\r\n        } else {\r\n          mult = (mult - threshold) / smoothness;\r\n          if (mult > 1) {\r\n            mult = 1;\r\n          }\r\n        }\r\n      }\r\n      return mult * this.a.v;\r\n    },\r\n    getValue: function (newCharsFlag) {\r\n      this.iterateDynamicProperties();\r\n      this._mdf = newCharsFlag || this._mdf;\r\n      this._currentTextLength = this.elem.textProperty.currentData.l.length || 0;\r\n      if (newCharsFlag && this.data.r === 2) {\r\n        this.e.v = this._currentTextLength;\r\n      }\r\n      var divisor = this.data.r === 2 ? 1 : 100 / this.data.totalChars;\r\n      var o = this.o.v / divisor;\r\n      var s = this.s.v / divisor + o;\r\n      var e = (this.e.v / divisor) + o;\r\n      if (s > e) {\r\n        var _s = s;\r\n        s = e;\r\n        e = _s;\r\n      }\r\n      this.finalS = s;\r\n      this.finalE = e;\r\n    },\r\n  };\r\n  extendPrototype([DynamicPropertyContainer], TextSelectorPropFactory);\r\n\r\n  function getTextSelectorProp(elem, data, arr) {\r\n    return new TextSelectorPropFactory(elem, data, arr);\r\n  }\r\n\r\n  return {\r\n    getTextSelectorProp: getTextSelectorProp,\r\n  };\r\n}());\r\n\r\n/* global createSizedArray, pooling */\r\n/* exported poolFactory */\r\n\r\nvar poolFactory = (function () {\r\n  return function (initialLength, _create, _release) {\r\n    var _length = 0;\r\n    var _maxLength = initialLength;\r\n    var pool = createSizedArray(_maxLength);\r\n\r\n    var ob = {\r\n      newElement: newElement,\r\n      release: release,\r\n    };\r\n\r\n    function newElement() {\r\n      var element;\r\n      if (_length) {\r\n        _length -= 1;\r\n        element = pool[_length];\r\n      } else {\r\n        element = _create();\r\n      }\r\n      return element;\r\n    }\r\n\r\n    function release(element) {\r\n      if (_length === _maxLength) {\r\n        pool = pooling.double(pool);\r\n        _maxLength *= 2;\r\n      }\r\n      if (_release) {\r\n        _release(element);\r\n      }\r\n      pool[_length] = element;\r\n      _length += 1;\r\n    }\r\n\r\n    return ob;\r\n  };\r\n}());\r\n\r\n/* global createSizedArray */\r\n/* exported pooling */\r\n\r\nvar pooling = (function () {\r\n  function double(arr) {\r\n    return arr.concat(createSizedArray(arr.length));\r\n  }\r\n\r\n  return {\r\n    double: double,\r\n  };\r\n}());\r\n\r\n/* global createTypedArray, poolFactory */\r\n/* exported pointPool */\r\n\r\nvar pointPool = (function () {\r\n  function create() {\r\n    return createTypedArray('float32', 2);\r\n  }\r\n  return poolFactory(8, create);\r\n}());\r\n\r\n/* global ShapePath, pointPool, poolFactory */\r\n/* exported shapePool */\r\n\r\nvar shapePool = (function () {\r\n  function create() {\r\n    return new ShapePath();\r\n  }\r\n\r\n  function release(shapePath) {\r\n    var len = shapePath._length;\r\n    var i;\r\n    for (i = 0; i < len; i += 1) {\r\n      pointPool.release(shapePath.v[i]);\r\n      pointPool.release(shapePath.i[i]);\r\n      pointPool.release(shapePath.o[i]);\r\n      shapePath.v[i] = null;\r\n      shapePath.i[i] = null;\r\n      shapePath.o[i] = null;\r\n    }\r\n    shapePath._length = 0;\r\n    shapePath.c = false;\r\n  }\r\n\r\n  function clone(shape) {\r\n    var cloned = factory.newElement();\r\n    var i;\r\n    var len = shape._length === undefined ? shape.v.length : shape._length;\r\n    cloned.setLength(len);\r\n    cloned.c = shape.c;\r\n\r\n    for (i = 0; i < len; i += 1) {\r\n      cloned.setTripleAt(shape.v[i][0], shape.v[i][1], shape.o[i][0], shape.o[i][1], shape.i[i][0], shape.i[i][1], i);\r\n    }\r\n    return cloned;\r\n  }\r\n\r\n  var factory = poolFactory(4, create, release);\r\n  factory.clone = clone;\r\n\r\n  return factory;\r\n}());\r\n\r\n/* global createSizedArray, ShapeCollection, shapePool, pooling */\r\n/* exported shapeCollectionPool */\r\n\r\nvar shapeCollectionPool = (function () {\r\n  var ob = {\r\n    newShapeCollection: newShapeCollection,\r\n    release: release,\r\n  };\r\n\r\n  var _length = 0;\r\n  var _maxLength = 4;\r\n  var pool = createSizedArray(_maxLength);\r\n\r\n  function newShapeCollection() {\r\n    var shapeCollection;\r\n    if (_length) {\r\n      _length -= 1;\r\n      shapeCollection = pool[_length];\r\n    } else {\r\n      shapeCollection = new ShapeCollection();\r\n    }\r\n    return shapeCollection;\r\n  }\r\n\r\n  function release(shapeCollection) {\r\n    var i;\r\n    var len = shapeCollection._length;\r\n    for (i = 0; i < len; i += 1) {\r\n      shapePool.release(shapeCollection.shapes[i]);\r\n    }\r\n    shapeCollection._length = 0;\r\n\r\n    if (_length === _maxLength) {\r\n      pool = pooling.double(pool);\r\n      _maxLength *= 2;\r\n    }\r\n    pool[_length] = shapeCollection;\r\n    _length += 1;\r\n  }\r\n\r\n  return ob;\r\n}());\r\n\r\n/* global poolFactory, bezierLengthPool */\r\n/* exported segmentsLengthPool */\r\n\r\nvar segmentsLengthPool = (function () {\r\n  function create() {\r\n    return {\r\n      lengths: [],\r\n      totalLength: 0,\r\n    };\r\n  }\r\n\r\n  function release(element) {\r\n    var i;\r\n    var len = element.lengths.length;\r\n    for (i = 0; i < len; i += 1) {\r\n      bezierLengthPool.release(element.lengths[i]);\r\n    }\r\n    element.lengths.length = 0;\r\n  }\r\n\r\n  return poolFactory(8, create, release);\r\n}());\r\n\r\n/* global createTypedArray, defaultCurveSegments, poolFactory */\r\n/* exported bezierLengthPool */\r\n\r\nvar bezierLengthPool = (function () {\r\n  function create() {\r\n    return {\r\n      addedLength: 0,\r\n      percents: createTypedArray('float32', defaultCurveSegments),\r\n      lengths: createTypedArray('float32', defaultCurveSegments),\r\n    };\r\n  }\r\n  return poolFactory(8, create);\r\n}());\r\n\r\n/* exported markerParser */\r\n\r\nvar markerParser = (\r\n\r\n  function () {\r\n    function parsePayloadLines(payload) {\r\n      var lines = payload.split('\\r\\n');\r\n      var keys = {};\r\n      var line;\r\n      var keysCount = 0;\r\n      for (var i = 0; i < lines.length; i += 1) {\r\n        line = lines[i].split(':');\r\n        if (line.length === 2) {\r\n          keys[line[0]] = line[1].trim();\r\n          keysCount += 1;\r\n        }\r\n      }\r\n      if (keysCount === 0) {\r\n        throw new Error();\r\n      }\r\n      return keys;\r\n    }\r\n\r\n    return function (_markers) {\r\n      var markers = [];\r\n      for (var i = 0; i < _markers.length; i += 1) {\r\n        var _marker = _markers[i];\r\n        var markerData = {\r\n          time: _marker.tm,\r\n          duration: _marker.dr,\r\n        };\r\n        try {\r\n          markerData.payload = JSON.parse(_markers[i].cm);\r\n        } catch (_) {\r\n          try {\r\n            markerData.payload = parsePayloadLines(_markers[i].cm);\r\n          } catch (__) {\r\n            markerData.payload = {\r\n              name: _markers[i],\r\n            };\r\n          }\r\n        }\r\n        markers.push(markerData);\r\n      }\r\n      return markers;\r\n    };\r\n  }());\r\n\r\n/* global AudioElement, FootageElement, FontManager */\r\n\r\nfunction BaseRenderer() {}\r\nBaseRenderer.prototype.checkLayers = function (num) {\r\n  var i;\r\n  var len = this.layers.length;\r\n  var data;\r\n  this.completeLayers = true;\r\n  for (i = len - 1; i >= 0; i -= 1) {\r\n    if (!this.elements[i]) {\r\n      data = this.layers[i];\r\n      if (data.ip - data.st <= (num - this.layers[i].st) && data.op - data.st > (num - this.layers[i].st)) {\r\n        this.buildItem(i);\r\n      }\r\n    }\r\n    this.completeLayers = this.elements[i] ? this.completeLayers : false;\r\n  }\r\n  this.checkPendingElements();\r\n};\r\n\r\nBaseRenderer.prototype.createItem = function (layer) {\r\n  switch (layer.ty) {\r\n    case 2:\r\n      return this.createImage(layer);\r\n    case 0:\r\n      return this.createComp(layer);\r\n    case 1:\r\n      return this.createSolid(layer);\r\n    case 3:\r\n      return this.createNull(layer);\r\n    case 4:\r\n      return this.createShape(layer);\r\n    case 5:\r\n      return this.createText(layer);\r\n    case 6:\r\n      return this.createAudio(layer);\r\n    case 13:\r\n      return this.createCamera(layer);\r\n    case 15:\r\n      return this.createFootage(layer);\r\n    default:\r\n      return this.createNull(layer);\r\n  }\r\n};\r\n\r\nBaseRenderer.prototype.createCamera = function () {\r\n  throw new Error('You\\'re using a 3d camera. Try the html renderer.');\r\n};\r\n\r\nBaseRenderer.prototype.createAudio = function (data) {\r\n  return new AudioElement(data, this.globalData, this);\r\n};\r\n\r\nBaseRenderer.prototype.createFootage = function (data) {\r\n  return new FootageElement(data, this.globalData, this);\r\n};\r\n\r\nBaseRenderer.prototype.buildAllItems = function () {\r\n  var i;\r\n  var len = this.layers.length;\r\n  for (i = 0; i < len; i += 1) {\r\n    this.buildItem(i);\r\n  }\r\n  this.checkPendingElements();\r\n};\r\n\r\nBaseRenderer.prototype.includeLayers = function (newLayers) {\r\n  this.completeLayers = false;\r\n  var i;\r\n  var len = newLayers.length;\r\n  var j;\r\n  var jLen = this.layers.length;\r\n  for (i = 0; i < len; i += 1) {\r\n    j = 0;\r\n    while (j < jLen) {\r\n      if (this.layers[j].id === newLayers[i].id) {\r\n        this.layers[j] = newLayers[i];\r\n        break;\r\n      }\r\n      j += 1;\r\n    }\r\n  }\r\n};\r\n\r\nBaseRenderer.prototype.setProjectInterface = function (pInterface) {\r\n  this.globalData.projectInterface = pInterface;\r\n};\r\n\r\nBaseRenderer.prototype.initItems = function () {\r\n  if (!this.globalData.progressiveLoad) {\r\n    this.buildAllItems();\r\n  }\r\n};\r\nBaseRenderer.prototype.buildElementParenting = function (element, parentName, hierarchy) {\r\n  var elements = this.elements;\r\n  var layers = this.layers;\r\n  var i = 0;\r\n  var len = layers.length;\r\n  while (i < len) {\r\n    if (layers[i].ind == parentName) { // eslint-disable-line eqeqeq\r\n      if (!elements[i] || elements[i] === true) {\r\n        this.buildItem(i);\r\n        this.addPendingElement(element);\r\n      } else {\r\n        hierarchy.push(elements[i]);\r\n        elements[i].setAsParent();\r\n        if (layers[i].parent !== undefined) {\r\n          this.buildElementParenting(element, layers[i].parent, hierarchy);\r\n        } else {\r\n          element.setHierarchy(hierarchy);\r\n        }\r\n      }\r\n    }\r\n    i += 1;\r\n  }\r\n};\r\n\r\nBaseRenderer.prototype.addPendingElement = function (element) {\r\n  this.pendingElements.push(element);\r\n};\r\n\r\nBaseRenderer.prototype.searchExtraCompositions = function (assets) {\r\n  var i;\r\n  var len = assets.length;\r\n  for (i = 0; i < len; i += 1) {\r\n    if (assets[i].xt) {\r\n      var comp = this.createComp(assets[i]);\r\n      comp.initExpressions();\r\n      this.globalData.projectInterface.registerComposition(comp);\r\n    }\r\n  }\r\n};\r\n\r\nBaseRenderer.prototype.setupGlobalData = function (animData, fontsContainer) {\r\n  this.globalData.fontManager = new FontManager();\r\n  this.globalData.fontManager.addChars(animData.chars);\r\n  this.globalData.fontManager.addFonts(animData.fonts, fontsContainer);\r\n  this.globalData.getAssetData = this.animationItem.getAssetData.bind(this.animationItem);\r\n  this.globalData.getAssetsPath = this.animationItem.getAssetsPath.bind(this.animationItem);\r\n  this.globalData.imageLoader = this.animationItem.imagePreloader;\r\n  this.globalData.audioController = this.animationItem.audioController;\r\n  this.globalData.frameId = 0;\r\n  this.globalData.frameRate = animData.fr;\r\n  this.globalData.nm = animData.nm;\r\n  this.globalData.compSize = {\r\n    w: animData.w,\r\n    h: animData.h,\r\n  };\r\n};\r\n\r\n/* global createElementID, extendPrototype, BaseRenderer, NullElement, SVGShapeElement, SVGTextLottieElement,\r\nIImageElement, SVGCompElement, ISolidElement, createNS, locationHref, createSizedArray, expressionsPlugin */\r\n\r\nfunction SVGRenderer(animationItem, config) {\r\n  this.animationItem = animationItem;\r\n  this.layers = null;\r\n  this.renderedFrame = -1;\r\n  this.svgElement = createNS('svg');\r\n  var ariaLabel = '';\r\n  if (config && config.title) {\r\n    var titleElement = createNS('title');\r\n    var titleId = createElementID();\r\n    titleElement.setAttribute('id', titleId);\r\n    titleElement.textContent = config.title;\r\n    this.svgElement.appendChild(titleElement);\r\n    ariaLabel += titleId;\r\n  }\r\n  if (config && config.description) {\r\n    var descElement = createNS('desc');\r\n    var descId = createElementID();\r\n    descElement.setAttribute('id', descId);\r\n    descElement.textContent = config.description;\r\n    this.svgElement.appendChild(descElement);\r\n    ariaLabel += ' ' + descId;\r\n  }\r\n  if (ariaLabel) {\r\n    this.svgElement.setAttribute('aria-labelledby', ariaLabel);\r\n  }\r\n  var defs = createNS('defs');\r\n  this.svgElement.appendChild(defs);\r\n  var maskElement = createNS('g');\r\n  this.svgElement.appendChild(maskElement);\r\n  this.layerElement = maskElement;\r\n  this.renderConfig = {\r\n    preserveAspectRatio: (config && config.preserveAspectRatio) || 'xMidYMid meet',\r\n    imagePreserveAspectRatio: (config && config.imagePreserveAspectRatio) || 'xMidYMid slice',\r\n    contentVisibility: (config && config.contentVisibility) || 'visible',\r\n    progressiveLoad: (config && config.progressiveLoad) || false,\r\n    hideOnTransparent: !((config && config.hideOnTransparent === false)),\r\n    viewBoxOnly: (config && config.viewBoxOnly) || false,\r\n    viewBoxSize: (config && config.viewBoxSize) || false,\r\n    className: (config && config.className) || '',\r\n    id: (config && config.id) || '',\r\n    focusable: config && config.focusable,\r\n    filterSize: {\r\n      width: (config && config.filterSize && config.filterSize.width) || '100%',\r\n      height: (config && config.filterSize && config.filterSize.height) || '100%',\r\n      x: (config && config.filterSize && config.filterSize.x) || '0%',\r\n      y: (config && config.filterSize && config.filterSize.y) || '0%',\r\n    },\r\n  };\r\n\r\n  this.globalData = {\r\n    _mdf: false,\r\n    frameNum: -1,\r\n    defs: defs,\r\n    renderConfig: this.renderConfig,\r\n  };\r\n  this.elements = [];\r\n  this.pendingElements = [];\r\n  this.destroyed = false;\r\n  this.rendererType = 'svg';\r\n}\r\n\r\nextendPrototype([BaseRenderer], SVGRenderer);\r\n\r\nSVGRenderer.prototype.createNull = function (data) {\r\n  return new NullElement(data, this.globalData, this);\r\n};\r\n\r\nSVGRenderer.prototype.createShape = function (data) {\r\n  return new SVGShapeElement(data, this.globalData, this);\r\n};\r\n\r\nSVGRenderer.prototype.createText = function (data) {\r\n  return new SVGTextLottieElement(data, this.globalData, this);\r\n};\r\n\r\nSVGRenderer.prototype.createImage = function (data) {\r\n  return new IImageElement(data, this.globalData, this);\r\n};\r\n\r\nSVGRenderer.prototype.createComp = function (data) {\r\n  return new SVGCompElement(data, this.globalData, this);\r\n};\r\n\r\nSVGRenderer.prototype.createSolid = function (data) {\r\n  return new ISolidElement(data, this.globalData, this);\r\n};\r\n\r\nSVGRenderer.prototype.configAnimation = function (animData) {\r\n  this.svgElement.setAttribute('xmlns', 'http://www.w3.org/2000/svg');\r\n  if (this.renderConfig.viewBoxSize) {\r\n    this.svgElement.setAttribute('viewBox', this.renderConfig.viewBoxSize);\r\n  } else {\r\n    this.svgElement.setAttribute('viewBox', '0 0 ' + animData.w + ' ' + animData.h);\r\n  }\r\n\r\n  if (!this.renderConfig.viewBoxOnly) {\r\n    this.svgElement.setAttribute('width', animData.w);\r\n    this.svgElement.setAttribute('height', animData.h);\r\n    this.svgElement.style.width = '100%';\r\n    this.svgElement.style.height = '100%';\r\n    this.svgElement.style.transform = 'translate3d(0,0,0)';\r\n    this.svgElement.style.contentVisibility = this.renderConfig.contentVisibility;\r\n  }\r\n  if (this.renderConfig.className) {\r\n    this.svgElement.setAttribute('class', this.renderConfig.className);\r\n  }\r\n  if (this.renderConfig.id) {\r\n    this.svgElement.setAttribute('id', this.renderConfig.id);\r\n  }\r\n  if (this.renderConfig.focusable !== undefined) {\r\n    this.svgElement.setAttribute('focusable', this.renderConfig.focusable);\r\n  }\r\n  this.svgElement.setAttribute('preserveAspectRatio', this.renderConfig.preserveAspectRatio);\r\n  // this.layerElement.style.transform = 'translate3d(0,0,0)';\r\n  // this.layerElement.style.transformOrigin = this.layerElement.style.mozTransformOrigin = this.layerElement.style.webkitTransformOrigin = this.layerElement.style['-webkit-transform'] = \"0px 0px 0px\";\r\n  this.animationItem.wrapper.appendChild(this.svgElement);\r\n  // Mask animation\r\n  var defs = this.globalData.defs;\r\n\r\n  this.setupGlobalData(animData, defs);\r\n  this.globalData.progressiveLoad = this.renderConfig.progressiveLoad;\r\n  this.data = animData;\r\n\r\n  var maskElement = createNS('clipPath');\r\n  var rect = createNS('rect');\r\n  rect.setAttribute('width', animData.w);\r\n  rect.setAttribute('height', animData.h);\r\n  rect.setAttribute('x', 0);\r\n  rect.setAttribute('y', 0);\r\n  var maskId = createElementID();\r\n  maskElement.setAttribute('id', maskId);\r\n  maskElement.appendChild(rect);\r\n  this.layerElement.setAttribute('clip-path', 'url(' + locationHref + '#' + maskId + ')');\r\n\r\n  defs.appendChild(maskElement);\r\n  this.layers = animData.layers;\r\n  this.elements = createSizedArray(animData.layers.length);\r\n};\r\n\r\nSVGRenderer.prototype.destroy = function () {\r\n  if (this.animationItem.wrapper) {\r\n    this.animationItem.wrapper.innerText = '';\r\n  }\r\n  this.layerElement = null;\r\n  this.globalData.defs = null;\r\n  var i;\r\n  var len = this.layers ? this.layers.length : 0;\r\n  for (i = 0; i < len; i += 1) {\r\n    if (this.elements[i]) {\r\n      this.elements[i].destroy();\r\n    }\r\n  }\r\n  this.elements.length = 0;\r\n  this.destroyed = true;\r\n  this.animationItem = null;\r\n};\r\n\r\nSVGRenderer.prototype.updateContainerSize = function () {\r\n};\r\n\r\nSVGRenderer.prototype.buildItem = function (pos) {\r\n  var elements = this.elements;\r\n  if (elements[pos] || this.layers[pos].ty === 99) {\r\n    return;\r\n  }\r\n  elements[pos] = true;\r\n  var element = this.createItem(this.layers[pos]);\r\n\r\n  elements[pos] = element;\r\n  if (expressionsPlugin) {\r\n    if (this.layers[pos].ty === 0) {\r\n      this.globalData.projectInterface.registerComposition(element);\r\n    }\r\n    element.initExpressions();\r\n  }\r\n  this.appendElementInPos(element, pos);\r\n  if (this.layers[pos].tt) {\r\n    if (!this.elements[pos - 1] || this.elements[pos - 1] === true) {\r\n      this.buildItem(pos - 1);\r\n      this.addPendingElement(element);\r\n    } else {\r\n      element.setMatte(elements[pos - 1].layerId);\r\n    }\r\n  }\r\n};\r\n\r\nSVGRenderer.prototype.checkPendingElements = function () {\r\n  while (this.pendingElements.length) {\r\n    var element = this.pendingElements.pop();\r\n    element.checkParenting();\r\n    if (element.data.tt) {\r\n      var i = 0;\r\n      var len = this.elements.length;\r\n      while (i < len) {\r\n        if (this.elements[i] === element) {\r\n          element.setMatte(this.elements[i - 1].layerId);\r\n          break;\r\n        }\r\n        i += 1;\r\n      }\r\n    }\r\n  }\r\n};\r\n\r\nSVGRenderer.prototype.renderFrame = function (num) {\r\n  if (this.renderedFrame === num || this.destroyed) {\r\n    return;\r\n  }\r\n  if (num === null) {\r\n    num = this.renderedFrame;\r\n  } else {\r\n    this.renderedFrame = num;\r\n  }\r\n  // console.log('-------');\r\n  // console.log('FRAME ',num);\r\n  this.globalData.frameNum = num;\r\n  this.globalData.frameId += 1;\r\n  this.globalData.projectInterface.currentFrame = num;\r\n  this.globalData._mdf = false;\r\n  var i;\r\n  var len = this.layers.length;\r\n  if (!this.completeLayers) {\r\n    this.checkLayers(num);\r\n  }\r\n  for (i = len - 1; i >= 0; i -= 1) {\r\n    if (this.completeLayers || this.elements[i]) {\r\n      this.elements[i].prepareFrame(num - this.layers[i].st);\r\n    }\r\n  }\r\n  if (this.globalData._mdf) {\r\n    for (i = 0; i < len; i += 1) {\r\n      if (this.completeLayers || this.elements[i]) {\r\n        this.elements[i].renderFrame();\r\n      }\r\n    }\r\n  }\r\n};\r\n\r\nSVGRenderer.prototype.appendElementInPos = function (element, pos) {\r\n  var newElement = element.getBaseElement();\r\n  if (!newElement) {\r\n    return;\r\n  }\r\n  var i = 0;\r\n  var nextElement;\r\n  while (i < pos) {\r\n    if (this.elements[i] && this.elements[i] !== true && this.elements[i].getBaseElement()) {\r\n      nextElement = this.elements[i].getBaseElement();\r\n    }\r\n    i += 1;\r\n  }\r\n  if (nextElement) {\r\n    this.layerElement.insertBefore(newElement, nextElement);\r\n  } else {\r\n    this.layerElement.appendChild(newElement);\r\n  }\r\n};\r\n\r\nSVGRenderer.prototype.hide = function () {\r\n  this.layerElement.style.display = 'none';\r\n};\r\n\r\nSVGRenderer.prototype.show = function () {\r\n  this.layerElement.style.display = 'block';\r\n};\r\n\r\n/* global createSizedArray, createElementID, PropertyFactory, ShapePropertyFactory, createNS, locationHref */\r\n\r\nfunction MaskElement(data, element, globalData) {\r\n  this.data = data;\r\n  this.element = element;\r\n  this.globalData = globalData;\r\n  this.storedData = [];\r\n  this.masksProperties = this.data.masksProperties || [];\r\n  this.maskElement = null;\r\n  var defs = this.globalData.defs;\r\n  var i;\r\n  var len = this.masksProperties ? this.masksProperties.length : 0;\r\n  this.viewData = createSizedArray(len);\r\n  this.solidPath = '';\r\n\r\n  var path;\r\n  var properties = this.masksProperties;\r\n  var count = 0;\r\n  var currentMasks = [];\r\n  var j;\r\n  var jLen;\r\n  var layerId = createElementID();\r\n  var rect;\r\n  var expansor;\r\n  var feMorph;\r\n  var x;\r\n  var maskType = 'clipPath';\r\n  var maskRef = 'clip-path';\r\n  for (i = 0; i < len; i += 1) {\r\n    if ((properties[i].mode !== 'a' && properties[i].mode !== 'n') || properties[i].inv || properties[i].o.k !== 100 || properties[i].o.x) {\r\n      maskType = 'mask';\r\n      maskRef = 'mask';\r\n    }\r\n\r\n    if ((properties[i].mode === 's' || properties[i].mode === 'i') && count === 0) {\r\n      rect = createNS('rect');\r\n      rect.setAttribute('fill', '#ffffff');\r\n      rect.setAttribute('width', this.element.comp.data.w || 0);\r\n      rect.setAttribute('height', this.element.comp.data.h || 0);\r\n      currentMasks.push(rect);\r\n    } else {\r\n      rect = null;\r\n    }\r\n\r\n    path = createNS('path');\r\n    if (properties[i].mode === 'n') {\r\n      // TODO move this to a factory or to a constructor\r\n      this.viewData[i] = {\r\n        op: PropertyFactory.getProp(this.element, properties[i].o, 0, 0.01, this.element),\r\n        prop: ShapePropertyFactory.getShapeProp(this.element, properties[i], 3),\r\n        elem: path,\r\n        lastPath: '',\r\n      };\r\n      defs.appendChild(path);\r\n    } else {\r\n      count += 1;\r\n\r\n      path.setAttribute('fill', properties[i].mode === 's' ? '#000000' : '#ffffff');\r\n      path.setAttribute('clip-rule', 'nonzero');\r\n      var filterID;\r\n\r\n      if (properties[i].x.k !== 0) {\r\n        maskType = 'mask';\r\n        maskRef = 'mask';\r\n        x = PropertyFactory.getProp(this.element, properties[i].x, 0, null, this.element);\r\n        filterID = createElementID();\r\n        expansor = createNS('filter');\r\n        expansor.setAttribute('id', filterID);\r\n        feMorph = createNS('feMorphology');\r\n        feMorph.setAttribute('operator', 'erode');\r\n        feMorph.setAttribute('in', 'SourceGraphic');\r\n        feMorph.setAttribute('radius', '0');\r\n        expansor.appendChild(feMorph);\r\n        defs.appendChild(expansor);\r\n        path.setAttribute('stroke', properties[i].mode === 's' ? '#000000' : '#ffffff');\r\n      } else {\r\n        feMorph = null;\r\n        x = null;\r\n      }\r\n\r\n      // TODO move this to a factory or to a constructor\r\n      this.storedData[i] = {\r\n        elem: path,\r\n        x: x,\r\n        expan: feMorph,\r\n        lastPath: '',\r\n        lastOperator: '',\r\n        filterId: filterID,\r\n        lastRadius: 0,\r\n      };\r\n      if (properties[i].mode === 'i') {\r\n        jLen = currentMasks.length;\r\n        var g = createNS('g');\r\n        for (j = 0; j < jLen; j += 1) {\r\n          g.appendChild(currentMasks[j]);\r\n        }\r\n        var mask = createNS('mask');\r\n        mask.setAttribute('mask-type', 'alpha');\r\n        mask.setAttribute('id', layerId + '_' + count);\r\n        mask.appendChild(path);\r\n        defs.appendChild(mask);\r\n        g.setAttribute('mask', 'url(' + locationHref + '#' + layerId + '_' + count + ')');\r\n\r\n        currentMasks.length = 0;\r\n        currentMasks.push(g);\r\n      } else {\r\n        currentMasks.push(path);\r\n      }\r\n      if (properties[i].inv && !this.solidPath) {\r\n        this.solidPath = this.createLayerSolidPath();\r\n      }\r\n      // TODO move this to a factory or to a constructor\r\n      this.viewData[i] = {\r\n        elem: path,\r\n        lastPath: '',\r\n        op: PropertyFactory.getProp(this.element, properties[i].o, 0, 0.01, this.element),\r\n        prop: ShapePropertyFactory.getShapeProp(this.element, properties[i], 3),\r\n        invRect: rect,\r\n      };\r\n      if (!this.viewData[i].prop.k) {\r\n        this.drawPath(properties[i], this.viewData[i].prop.v, this.viewData[i]);\r\n      }\r\n    }\r\n  }\r\n\r\n  this.maskElement = createNS(maskType);\r\n\r\n  len = currentMasks.length;\r\n  for (i = 0; i < len; i += 1) {\r\n    this.maskElement.appendChild(currentMasks[i]);\r\n  }\r\n\r\n  if (count > 0) {\r\n    this.maskElement.setAttribute('id', layerId);\r\n    this.element.maskedElement.setAttribute(maskRef, 'url(' + locationHref + '#' + layerId + ')');\r\n    defs.appendChild(this.maskElement);\r\n  }\r\n  if (this.viewData.length) {\r\n    this.element.addRenderableComponent(this);\r\n  }\r\n}\r\n\r\nMaskElement.prototype.getMaskProperty = function (pos) {\r\n  return this.viewData[pos].prop;\r\n};\r\n\r\nMaskElement.prototype.renderFrame = function (isFirstFrame) {\r\n  var finalMat = this.element.finalTransform.mat;\r\n  var i;\r\n  var len = this.masksProperties.length;\r\n  for (i = 0; i < len; i += 1) {\r\n    if (this.viewData[i].prop._mdf || isFirstFrame) {\r\n      this.drawPath(this.masksProperties[i], this.viewData[i].prop.v, this.viewData[i]);\r\n    }\r\n    if (this.viewData[i].op._mdf || isFirstFrame) {\r\n      this.viewData[i].elem.setAttribute('fill-opacity', this.viewData[i].op.v);\r\n    }\r\n    if (this.masksProperties[i].mode !== 'n') {\r\n      if (this.viewData[i].invRect && (this.element.finalTransform.mProp._mdf || isFirstFrame)) {\r\n        this.viewData[i].invRect.setAttribute('transform', finalMat.getInverseMatrix().to2dCSS());\r\n      }\r\n      if (this.storedData[i].x && (this.storedData[i].x._mdf || isFirstFrame)) {\r\n        var feMorph = this.storedData[i].expan;\r\n        if (this.storedData[i].x.v < 0) {\r\n          if (this.storedData[i].lastOperator !== 'erode') {\r\n            this.storedData[i].lastOperator = 'erode';\r\n            this.storedData[i].elem.setAttribute('filter', 'url(' + locationHref + '#' + this.storedData[i].filterId + ')');\r\n          }\r\n          feMorph.setAttribute('radius', -this.storedData[i].x.v);\r\n        } else {\r\n          if (this.storedData[i].lastOperator !== 'dilate') {\r\n            this.storedData[i].lastOperator = 'dilate';\r\n            this.storedData[i].elem.setAttribute('filter', null);\r\n          }\r\n          this.storedData[i].elem.setAttribute('stroke-width', this.storedData[i].x.v * 2);\r\n        }\r\n      }\r\n    }\r\n  }\r\n};\r\n\r\nMaskElement.prototype.getMaskelement = function () {\r\n  return this.maskElement;\r\n};\r\n\r\nMaskElement.prototype.createLayerSolidPath = function () {\r\n  var path = 'M0,0 ';\r\n  path += ' h' + this.globalData.compSize.w;\r\n  path += ' v' + this.globalData.compSize.h;\r\n  path += ' h-' + this.globalData.compSize.w;\r\n  path += ' v-' + this.globalData.compSize.h + ' ';\r\n  return path;\r\n};\r\n\r\nMaskElement.prototype.drawPath = function (pathData, pathNodes, viewData) {\r\n  var pathString = ' M' + pathNodes.v[0][0] + ',' + pathNodes.v[0][1];\r\n  var i;\r\n  var len;\r\n  len = pathNodes._length;\r\n  for (i = 1; i < len; i += 1) {\r\n    // pathString += \" C\"+pathNodes.o[i-1][0]+','+pathNodes.o[i-1][1] + \" \"+pathNodes.i[i][0]+','+pathNodes.i[i][1] + \" \"+pathNodes.v[i][0]+','+pathNodes.v[i][1];\r\n    pathString += ' C' + pathNodes.o[i - 1][0] + ',' + pathNodes.o[i - 1][1] + ' ' + pathNodes.i[i][0] + ',' + pathNodes.i[i][1] + ' ' + pathNodes.v[i][0] + ',' + pathNodes.v[i][1];\r\n  }\r\n  // pathString += \" C\"+pathNodes.o[i-1][0]+','+pathNodes.o[i-1][1] + \" \"+pathNodes.i[0][0]+','+pathNodes.i[0][1] + \" \"+pathNodes.v[0][0]+','+pathNodes.v[0][1];\r\n  if (pathNodes.c && len > 1) {\r\n    pathString += ' C' + pathNodes.o[i - 1][0] + ',' + pathNodes.o[i - 1][1] + ' ' + pathNodes.i[0][0] + ',' + pathNodes.i[0][1] + ' ' + pathNodes.v[0][0] + ',' + pathNodes.v[0][1];\r\n  }\r\n  // pathNodes.__renderedString = pathString;\r\n\r\n  if (viewData.lastPath !== pathString) {\r\n    var pathShapeValue = '';\r\n    if (viewData.elem) {\r\n      if (pathNodes.c) {\r\n        pathShapeValue = pathData.inv ? this.solidPath + pathString : pathString;\r\n      }\r\n      viewData.elem.setAttribute('d', pathShapeValue);\r\n    }\r\n    viewData.lastPath = pathString;\r\n  }\r\n};\r\n\r\nMaskElement.prototype.destroy = function () {\r\n  this.element = null;\r\n  this.globalData = null;\r\n  this.maskElement = null;\r\n  this.data = null;\r\n  this.masksProperties = null;\r\n};\r\n\r\n/**\r\n * @file\r\n * Handles AE's layer parenting property.\r\n *\r\n */\r\n\r\nfunction HierarchyElement() {}\r\n\r\nHierarchyElement.prototype = {\r\n  /**\r\n     * @function\r\n     * Initializes hierarchy properties\r\n     *\r\n     */\r\n  initHierarchy: function () {\r\n    // element's parent list\r\n    this.hierarchy = [];\r\n    // if element is parent of another layer _isParent will be true\r\n    this._isParent = false;\r\n    this.checkParenting();\r\n  },\r\n  /**\r\n     * @function\r\n     * Sets layer's hierarchy.\r\n     * @param {array} hierarch\r\n     * layer's parent list\r\n     *\r\n     */\r\n  setHierarchy: function (hierarchy) {\r\n    this.hierarchy = hierarchy;\r\n  },\r\n  /**\r\n     * @function\r\n     * Sets layer as parent.\r\n     *\r\n     */\r\n  setAsParent: function () {\r\n    this._isParent = true;\r\n  },\r\n  /**\r\n     * @function\r\n     * Searches layer's parenting chain\r\n     *\r\n     */\r\n  checkParenting: function () {\r\n    if (this.data.parent !== undefined) {\r\n      this.comp.buildElementParenting(this, this.data.parent, []);\r\n    }\r\n  },\r\n};\r\n\r\n/**\r\n * @file\r\n * Handles element's layer frame update.\r\n * Checks layer in point and out point\r\n *\r\n */\r\n\r\nfunction FrameElement() {}\r\n\r\nFrameElement.prototype = {\r\n  /**\r\n     * @function\r\n     * Initializes frame related properties.\r\n     *\r\n     */\r\n  initFrame: function () {\r\n    // set to true when inpoint is rendered\r\n    this._isFirstFrame = false;\r\n    // list of animated properties\r\n    this.dynamicProperties = [];\r\n    // If layer has been modified in current tick this will be true\r\n    this._mdf = false;\r\n  },\r\n  /**\r\n     * @function\r\n     * Calculates all dynamic values\r\n     *\r\n     * @param {number} num\r\n     * current frame number in Layer's time\r\n     * @param {boolean} isVisible\r\n     * if layers is currently in range\r\n     *\r\n     */\r\n  prepareProperties: function (num, isVisible) {\r\n    var i;\r\n    var len = this.dynamicProperties.length;\r\n    for (i = 0; i < len; i += 1) {\r\n      if (isVisible || (this._isParent && this.dynamicProperties[i].propType === 'transform')) {\r\n        this.dynamicProperties[i].getValue();\r\n        if (this.dynamicProperties[i]._mdf) {\r\n          this.globalData._mdf = true;\r\n          this._mdf = true;\r\n        }\r\n      }\r\n    }\r\n  },\r\n  addDynamicProperty: function (prop) {\r\n    if (this.dynamicProperties.indexOf(prop) === -1) {\r\n      this.dynamicProperties.push(prop);\r\n    }\r\n  },\r\n};\r\n\r\n/* global TransformPropertyFactory, Matrix */\r\n\r\nfunction TransformElement() {}\r\n\r\nTransformElement.prototype = {\r\n  initTransform: function () {\r\n    this.finalTransform = {\r\n      mProp: this.data.ks ? TransformPropertyFactory.getTransformProperty(this, this.data.ks, this) : { o: 0 },\r\n      _matMdf: false,\r\n      _opMdf: false,\r\n      mat: new Matrix(),\r\n    };\r\n    if (this.data.ao) {\r\n      this.finalTransform.mProp.autoOriented = true;\r\n    }\r\n\r\n    // TODO: check TYPE 11: Guided elements\r\n    if (this.data.ty !== 11) {\r\n      // this.createElements();\r\n    }\r\n  },\r\n  renderTransform: function () {\r\n    this.finalTransform._opMdf = this.finalTransform.mProp.o._mdf || this._isFirstFrame;\r\n    this.finalTransform._matMdf = this.finalTransform.mProp._mdf || this._isFirstFrame;\r\n\r\n    if (this.hierarchy) {\r\n      var mat;\r\n      var finalMat = this.finalTransform.mat;\r\n      var i = 0;\r\n      var len = this.hierarchy.length;\r\n      // Checking if any of the transformation matrices in the hierarchy chain has changed.\r\n      if (!this.finalTransform._matMdf) {\r\n        while (i < len) {\r\n          if (this.hierarchy[i].finalTransform.mProp._mdf) {\r\n            this.finalTransform._matMdf = true;\r\n            break;\r\n          }\r\n          i += 1;\r\n        }\r\n      }\r\n\r\n      if (this.finalTransform._matMdf) {\r\n        mat = this.finalTransform.mProp.v.props;\r\n        finalMat.cloneFromProps(mat);\r\n        for (i = 0; i < len; i += 1) {\r\n          mat = this.hierarchy[i].finalTransform.mProp.v.props;\r\n          finalMat.transform(mat[0], mat[1], mat[2], mat[3], mat[4], mat[5], mat[6], mat[7], mat[8], mat[9], mat[10], mat[11], mat[12], mat[13], mat[14], mat[15]);\r\n        }\r\n      }\r\n    }\r\n  },\r\n  globalToLocal: function (pt) {\r\n    var transforms = [];\r\n    transforms.push(this.finalTransform);\r\n    var flag = true;\r\n    var comp = this.comp;\r\n    while (flag) {\r\n      if (comp.finalTransform) {\r\n        if (comp.data.hasMask) {\r\n          transforms.splice(0, 0, comp.finalTransform);\r\n        }\r\n        comp = comp.comp;\r\n      } else {\r\n        flag = false;\r\n      }\r\n    }\r\n    var i;\r\n    var len = transforms.length;\r\n    var ptNew;\r\n    for (i = 0; i < len; i += 1) {\r\n      ptNew = transforms[i].mat.applyToPointArray(0, 0, 0);\r\n      // ptNew = transforms[i].mat.applyToPointArray(pt[0],pt[1],pt[2]);\r\n      pt = [pt[0] - ptNew[0], pt[1] - ptNew[1], 0];\r\n    }\r\n    return pt;\r\n  },\r\n  mHelper: new Matrix(),\r\n};\r\n\r\nfunction RenderableElement() {\r\n\r\n}\r\n\r\nRenderableElement.prototype = {\r\n  initRenderable: function () {\r\n    // layer's visibility related to inpoint and outpoint. Rename isVisible to isInRange\r\n    this.isInRange = false;\r\n    // layer's display state\r\n    this.hidden = false;\r\n    // If layer's transparency equals 0, it can be hidden\r\n    this.isTransparent = false;\r\n    // list of animated components\r\n    this.renderableComponents = [];\r\n  },\r\n  addRenderableComponent: function (component) {\r\n    if (this.renderableComponents.indexOf(component) === -1) {\r\n      this.renderableComponents.push(component);\r\n    }\r\n  },\r\n  removeRenderableComponent: function (component) {\r\n    if (this.renderableComponents.indexOf(component) !== -1) {\r\n      this.renderableComponents.splice(this.renderableComponents.indexOf(component), 1);\r\n    }\r\n  },\r\n  prepareRenderableFrame: function (num) {\r\n    this.checkLayerLimits(num);\r\n  },\r\n  checkTransparency: function () {\r\n    if (this.finalTransform.mProp.o.v <= 0) {\r\n      if (!this.isTransparent && this.globalData.renderConfig.hideOnTransparent) {\r\n        this.isTransparent = true;\r\n        this.hide();\r\n      }\r\n    } else if (this.isTransparent) {\r\n      this.isTransparent = false;\r\n      this.show();\r\n    }\r\n  },\r\n  /**\r\n     * @function\r\n     * Initializes frame related properties.\r\n     *\r\n     * @param {number} num\r\n     * current frame number in Layer's time\r\n     *\r\n     */\r\n  checkLayerLimits: function (num) {\r\n    if (this.data.ip - this.data.st <= num && this.data.op - this.data.st > num) {\r\n      if (this.isInRange !== true) {\r\n        this.globalData._mdf = true;\r\n        this._mdf = true;\r\n        this.isInRange = true;\r\n        this.show();\r\n      }\r\n    } else if (this.isInRange !== false) {\r\n      this.globalData._mdf = true;\r\n      this.isInRange = false;\r\n      this.hide();\r\n    }\r\n  },\r\n  renderRenderable: function () {\r\n    var i;\r\n    var len = this.renderableComponents.length;\r\n    for (i = 0; i < len; i += 1) {\r\n      this.renderableComponents[i].renderFrame(this._isFirstFrame);\r\n    }\r\n    /* this.maskManager.renderFrame(this.finalTransform.mat);\r\n        this.renderableEffectsManager.renderFrame(this._isFirstFrame); */\r\n  },\r\n  sourceRectAtTime: function () {\r\n    return {\r\n      top: 0,\r\n      left: 0,\r\n      width: 100,\r\n      height: 100,\r\n    };\r\n  },\r\n  getLayerSize: function () {\r\n    if (this.data.ty === 5) {\r\n      return { w: this.data.textData.width, h: this.data.textData.height };\r\n    }\r\n    return { w: this.data.width, h: this.data.height };\r\n  },\r\n};\r\n\r\n/* global extendPrototype, RenderableElement, createProxyFunction */\r\n\r\nfunction RenderableDOMElement() {}\r\n\r\n(function () {\r\n  var _prototype = {\r\n    initElement: function (data, globalData, comp) {\r\n      this.initFrame();\r\n      this.initBaseData(data, globalData, comp);\r\n      this.initTransform(data, globalData, comp);\r\n      this.initHierarchy();\r\n      this.initRenderable();\r\n      this.initRendererElement();\r\n      this.createContainerElements();\r\n      this.createRenderableComponents();\r\n      this.createContent();\r\n      this.hide();\r\n    },\r\n    hide: function () {\r\n      if (!this.hidden && (!this.isInRange || this.isTransparent)) {\r\n        var elem = this.baseElement || this.layerElement;\r\n        elem.style.display = 'none';\r\n        this.hidden = true;\r\n      }\r\n    },\r\n    show: function () {\r\n      if (this.isInRange && !this.isTransparent) {\r\n        if (!this.data.hd) {\r\n          var elem = this.baseElement || this.layerElement;\r\n          elem.style.display = 'block';\r\n        }\r\n        this.hidden = false;\r\n        this._isFirstFrame = true;\r\n      }\r\n    },\r\n    renderFrame: function () {\r\n      // If it is exported as hidden (data.hd === true) no need to render\r\n      // If it is not visible no need to render\r\n      if (this.data.hd || this.hidden) {\r\n        return;\r\n      }\r\n      this.renderTransform();\r\n      this.renderRenderable();\r\n      this.renderElement();\r\n      this.renderInnerContent();\r\n      if (this._isFirstFrame) {\r\n        this._isFirstFrame = false;\r\n      }\r\n    },\r\n    renderInnerContent: function () {},\r\n    prepareFrame: function (num) {\r\n      this._mdf = false;\r\n      this.prepareRenderableFrame(num);\r\n      this.prepareProperties(num, this.isInRange);\r\n      this.checkTransparency();\r\n    },\r\n    destroy: function () {\r\n      this.innerElem = null;\r\n      this.destroyBaseElement();\r\n    },\r\n  };\r\n  extendPrototype([RenderableElement, createProxyFunction(_prototype)], RenderableDOMElement);\r\n}());\r\n\r\n/* exported ProcessedElement */\r\n\r\nfunction ProcessedElement(element, position) {\r\n  this.elem = element;\r\n  this.pos = position;\r\n}\r\n\r\n/* global createNS */\r\n\r\nfunction SVGStyleData(data, level) {\r\n  this.data = data;\r\n  this.type = data.ty;\r\n  this.d = '';\r\n  this.lvl = level;\r\n  this._mdf = false;\r\n  this.closed = data.hd === true;\r\n  this.pElem = createNS('path');\r\n  this.msElem = null;\r\n}\r\n\r\nSVGStyleData.prototype.reset = function () {\r\n  this.d = '';\r\n  this._mdf = false;\r\n};\r\n\r\nfunction SVGShapeData(transformers, level, shape) {\r\n  this.caches = [];\r\n  this.styles = [];\r\n  this.transformers = transformers;\r\n  this.lStr = '';\r\n  this.sh = shape;\r\n  this.lvl = level;\r\n  // TODO find if there are some cases where _isAnimated can be false.\r\n  // For now, since shapes add up with other shapes. They have to be calculated every time.\r\n  // One way of finding out is checking if all styles associated to this shape depend only of this shape\r\n  this._isAnimated = !!shape.k;\r\n  // TODO: commenting this for now since all shapes are animated\r\n  var i = 0;\r\n  var len = transformers.length;\r\n  while (i < len) {\r\n    if (transformers[i].mProps.dynamicProperties.length) {\r\n      this._isAnimated = true;\r\n      break;\r\n    }\r\n    i += 1;\r\n  }\r\n}\r\n\r\nSVGShapeData.prototype.setAsAnimated = function () {\r\n  this._isAnimated = true;\r\n};\r\n\r\n/* exported SVGTransformData */\r\n\r\nfunction SVGTransformData(mProps, op, container) {\r\n  this.transform = {\r\n    mProps: mProps,\r\n    op: op,\r\n    container: container,\r\n  };\r\n  this.elements = [];\r\n  this._isAnimated = this.transform.mProps.dynamicProperties.length || this.transform.op.effectsSequence.length;\r\n}\r\n\r\n/* global DashProperty, PropertyFactory, extendPrototype, DynamicPropertyContainer */\r\n\r\nfunction SVGStrokeStyleData(elem, data, styleOb) {\r\n  this.initDynamicPropertyContainer(elem);\r\n  this.getValue = this.iterateDynamicProperties;\r\n  this.o = PropertyFactory.getProp(elem, data.o, 0, 0.01, this);\r\n  this.w = PropertyFactory.getProp(elem, data.w, 0, null, this);\r\n  this.d = new DashProperty(elem, data.d || {}, 'svg', this);\r\n  this.c = PropertyFactory.getProp(elem, data.c, 1, 255, this);\r\n  this.style = styleOb;\r\n  this._isAnimated = !!this._isAnimated;\r\n}\r\n\r\nextendPrototype([DynamicPropertyContainer], SVGStrokeStyleData);\r\n\r\n/* global PropertyFactory, extendPrototype, DynamicPropertyContainer */\r\n\r\nfunction SVGFillStyleData(elem, data, styleOb) {\r\n  this.initDynamicPropertyContainer(elem);\r\n  this.getValue = this.iterateDynamicProperties;\r\n  this.o = PropertyFactory.getProp(elem, data.o, 0, 0.01, this);\r\n  this.c = PropertyFactory.getProp(elem, data.c, 1, 255, this);\r\n  this.style = styleOb;\r\n}\r\n\r\nextendPrototype([DynamicPropertyContainer], SVGFillStyleData);\r\n\r\n/* global PropertyFactory, degToRads, GradientProperty, createElementID, createNS, locationHref,\r\nextendPrototype, DynamicPropertyContainer, lineCapEnum, lineJoinEnum */\r\n\r\nfunction SVGGradientFillStyleData(elem, data, styleOb) {\r\n  this.initDynamicPropertyContainer(elem);\r\n  this.getValue = this.iterateDynamicProperties;\r\n  this.initGradientData(elem, data, styleOb);\r\n}\r\n\r\nSVGGradientFillStyleData.prototype.initGradientData = function (elem, data, styleOb) {\r\n  this.o = PropertyFactory.getProp(elem, data.o, 0, 0.01, this);\r\n  this.s = PropertyFactory.getProp(elem, data.s, 1, null, this);\r\n  this.e = PropertyFactory.getProp(elem, data.e, 1, null, this);\r\n  this.h = PropertyFactory.getProp(elem, data.h || { k: 0 }, 0, 0.01, this);\r\n  this.a = PropertyFactory.getProp(elem, data.a || { k: 0 }, 0, degToRads, this);\r\n  this.g = new GradientProperty(elem, data.g, this);\r\n  this.style = styleOb;\r\n  this.stops = [];\r\n  this.setGradientData(styleOb.pElem, data);\r\n  this.setGradientOpacity(data, styleOb);\r\n  this._isAnimated = !!this._isAnimated;\r\n};\r\n\r\nSVGGradientFillStyleData.prototype.setGradientData = function (pathElement, data) {\r\n  var gradientId = createElementID();\r\n  var gfill = createNS(data.t === 1 ? 'linearGradient' : 'radialGradient');\r\n  gfill.setAttribute('id', gradientId);\r\n  gfill.setAttribute('spreadMethod', 'pad');\r\n  gfill.setAttribute('gradientUnits', 'userSpaceOnUse');\r\n  var stops = [];\r\n  var stop;\r\n  var j;\r\n  var jLen;\r\n  jLen = data.g.p * 4;\r\n  for (j = 0; j < jLen; j += 4) {\r\n    stop = createNS('stop');\r\n    gfill.appendChild(stop);\r\n    stops.push(stop);\r\n  }\r\n  pathElement.setAttribute(data.ty === 'gf' ? 'fill' : 'stroke', 'url(' + locationHref + '#' + gradientId + ')');\r\n  this.gf = gfill;\r\n  this.cst = stops;\r\n};\r\n\r\nSVGGradientFillStyleData.prototype.setGradientOpacity = function (data, styleOb) {\r\n  if (this.g._hasOpacity && !this.g._collapsable) {\r\n    var stop;\r\n    var j;\r\n    var jLen;\r\n    var mask = createNS('mask');\r\n    var maskElement = createNS('path');\r\n    mask.appendChild(maskElement);\r\n    var opacityId = createElementID();\r\n    var maskId = createElementID();\r\n    mask.setAttribute('id', maskId);\r\n    var opFill = createNS(data.t === 1 ? 'linearGradient' : 'radialGradient');\r\n    opFill.setAttribute('id', opacityId);\r\n    opFill.setAttribute('spreadMethod', 'pad');\r\n    opFill.setAttribute('gradientUnits', 'userSpaceOnUse');\r\n    jLen = data.g.k.k[0].s ? data.g.k.k[0].s.length : data.g.k.k.length;\r\n    var stops = this.stops;\r\n    for (j = data.g.p * 4; j < jLen; j += 2) {\r\n      stop = createNS('stop');\r\n      stop.setAttribute('stop-color', 'rgb(255,255,255)');\r\n      opFill.appendChild(stop);\r\n      stops.push(stop);\r\n    }\r\n    maskElement.setAttribute(data.ty === 'gf' ? 'fill' : 'stroke', 'url(' + locationHref + '#' + opacityId + ')');\r\n    if (data.ty === 'gs') {\r\n      maskElement.setAttribute('stroke-linecap', lineCapEnum[data.lc || 2]);\r\n      maskElement.setAttribute('stroke-linejoin', lineJoinEnum[data.lj || 2]);\r\n      if (data.lj === 1) {\r\n        maskElement.setAttribute('stroke-miterlimit', data.ml);\r\n      }\r\n    }\r\n    this.of = opFill;\r\n    this.ms = mask;\r\n    this.ost = stops;\r\n    this.maskId = maskId;\r\n    styleOb.msElem = maskElement;\r\n  }\r\n};\r\n\r\nextendPrototype([DynamicPropertyContainer], SVGGradientFillStyleData);\r\n\r\n/* global PropertyFactory, DashProperty, extendPrototype, SVGGradientFillStyleData, DynamicPropertyContainer */\r\n\r\nfunction SVGGradientStrokeStyleData(elem, data, styleOb) {\r\n  this.initDynamicPropertyContainer(elem);\r\n  this.getValue = this.iterateDynamicProperties;\r\n  this.w = PropertyFactory.getProp(elem, data.w, 0, null, this);\r\n  this.d = new DashProperty(elem, data.d || {}, 'svg', this);\r\n  this.initGradientData(elem, data, styleOb);\r\n  this._isAnimated = !!this._isAnimated;\r\n}\r\n\r\nextendPrototype([SVGGradientFillStyleData, DynamicPropertyContainer], SVGGradientStrokeStyleData);\r\n\r\n/* global createNS */\r\n/* exported ShapeGroupData */\r\n\r\nfunction ShapeGroupData() {\r\n  this.it = [];\r\n  this.prevViewData = [];\r\n  this.gr = createNS('g');\r\n}\r\n\r\n/* global Matrix, buildShapeString, bmFloor */\r\n/* exported SVGElementsRenderer */\r\n\r\nvar SVGElementsRenderer = (function () {\r\n  var _identityMatrix = new Matrix();\r\n  var _matrixHelper = new Matrix();\r\n\r\n  var ob = {\r\n    createRenderFunction: createRenderFunction,\r\n  };\r\n\r\n  function createRenderFunction(data) {\r\n    switch (data.ty) {\r\n      case 'fl':\r\n        return renderFill;\r\n      case 'gf':\r\n        return renderGradient;\r\n      case 'gs':\r\n        return renderGradientStroke;\r\n      case 'st':\r\n        return renderStroke;\r\n      case 'sh':\r\n      case 'el':\r\n      case 'rc':\r\n      case 'sr':\r\n        return renderPath;\r\n      case 'tr':\r\n        return renderContentTransform;\r\n      default:\r\n        return null;\r\n    }\r\n  }\r\n\r\n  function renderContentTransform(styleData, itemData, isFirstFrame) {\r\n    if (isFirstFrame || itemData.transform.op._mdf) {\r\n      itemData.transform.container.setAttribute('opacity', itemData.transform.op.v);\r\n    }\r\n    if (isFirstFrame || itemData.transform.mProps._mdf) {\r\n      itemData.transform.container.setAttribute('transform', itemData.transform.mProps.v.to2dCSS());\r\n    }\r\n  }\r\n\r\n  function renderPath(styleData, itemData, isFirstFrame) {\r\n    var j;\r\n    var jLen;\r\n    var pathStringTransformed;\r\n    var redraw;\r\n    var pathNodes;\r\n    var l;\r\n    var lLen = itemData.styles.length;\r\n    var lvl = itemData.lvl;\r\n    var paths;\r\n    var mat;\r\n    var props;\r\n    var iterations;\r\n    var k;\r\n    for (l = 0; l < lLen; l += 1) {\r\n      redraw = itemData.sh._mdf || isFirstFrame;\r\n      if (itemData.styles[l].lvl < lvl) {\r\n        mat = _matrixHelper.reset();\r\n        iterations = lvl - itemData.styles[l].lvl;\r\n        k = itemData.transformers.length - 1;\r\n        while (!redraw && iterations > 0) {\r\n          redraw = itemData.transformers[k].mProps._mdf || redraw;\r\n          iterations -= 1;\r\n          k -= 1;\r\n        }\r\n        if (redraw) {\r\n          iterations = lvl - itemData.styles[l].lvl;\r\n          k = itemData.transformers.length - 1;\r\n          while (iterations > 0) {\r\n            props = itemData.transformers[k].mProps.v.props;\r\n            mat.transform(props[0], props[1], props[2], props[3], props[4], props[5], props[6], props[7], props[8], props[9], props[10], props[11], props[12], props[13], props[14], props[15]);\r\n            iterations -= 1;\r\n            k -= 1;\r\n          }\r\n        }\r\n      } else {\r\n        mat = _identityMatrix;\r\n      }\r\n      paths = itemData.sh.paths;\r\n      jLen = paths._length;\r\n      if (redraw) {\r\n        pathStringTransformed = '';\r\n        for (j = 0; j < jLen; j += 1) {\r\n          pathNodes = paths.shapes[j];\r\n          if (pathNodes && pathNodes._length) {\r\n            pathStringTransformed += buildShapeString(pathNodes, pathNodes._length, pathNodes.c, mat);\r\n          }\r\n        }\r\n        itemData.caches[l] = pathStringTransformed;\r\n      } else {\r\n        pathStringTransformed = itemData.caches[l];\r\n      }\r\n      itemData.styles[l].d += styleData.hd === true ? '' : pathStringTransformed;\r\n      itemData.styles[l]._mdf = redraw || itemData.styles[l]._mdf;\r\n    }\r\n  }\r\n\r\n  function renderFill(styleData, itemData, isFirstFrame) {\r\n    var styleElem = itemData.style;\r\n\r\n    if (itemData.c._mdf || isFirstFrame) {\r\n      styleElem.pElem.setAttribute('fill', 'rgb(' + bmFloor(itemData.c.v[0]) + ',' + bmFloor(itemData.c.v[1]) + ',' + bmFloor(itemData.c.v[2]) + ')');\r\n    }\r\n    if (itemData.o._mdf || isFirstFrame) {\r\n      styleElem.pElem.setAttribute('fill-opacity', itemData.o.v);\r\n    }\r\n  }\r\n\r\n  function renderGradientStroke(styleData, itemData, isFirstFrame) {\r\n    renderGradient(styleData, itemData, isFirstFrame);\r\n    renderStroke(styleData, itemData, isFirstFrame);\r\n  }\r\n\r\n  function renderGradient(styleData, itemData, isFirstFrame) {\r\n    var gfill = itemData.gf;\r\n    var hasOpacity = itemData.g._hasOpacity;\r\n    var pt1 = itemData.s.v;\r\n    var pt2 = itemData.e.v;\r\n\r\n    if (itemData.o._mdf || isFirstFrame) {\r\n      var attr = styleData.ty === 'gf' ? 'fill-opacity' : 'stroke-opacity';\r\n      itemData.style.pElem.setAttribute(attr, itemData.o.v);\r\n    }\r\n    if (itemData.s._mdf || isFirstFrame) {\r\n      var attr1 = styleData.t === 1 ? 'x1' : 'cx';\r\n      var attr2 = attr1 === 'x1' ? 'y1' : 'cy';\r\n      gfill.setAttribute(attr1, pt1[0]);\r\n      gfill.setAttribute(attr2, pt1[1]);\r\n      if (hasOpacity && !itemData.g._collapsable) {\r\n        itemData.of.setAttribute(attr1, pt1[0]);\r\n        itemData.of.setAttribute(attr2, pt1[1]);\r\n      }\r\n    }\r\n    var stops;\r\n    var i;\r\n    var len;\r\n    var stop;\r\n    if (itemData.g._cmdf || isFirstFrame) {\r\n      stops = itemData.cst;\r\n      var cValues = itemData.g.c;\r\n      len = stops.length;\r\n      for (i = 0; i < len; i += 1) {\r\n        stop = stops[i];\r\n        stop.setAttribute('offset', cValues[i * 4] + '%');\r\n        stop.setAttribute('stop-color', 'rgb(' + cValues[i * 4 + 1] + ',' + cValues[i * 4 + 2] + ',' + cValues[i * 4 + 3] + ')');\r\n      }\r\n    }\r\n    if (hasOpacity && (itemData.g._omdf || isFirstFrame)) {\r\n      var oValues = itemData.g.o;\r\n      if (itemData.g._collapsable) {\r\n        stops = itemData.cst;\r\n      } else {\r\n        stops = itemData.ost;\r\n      }\r\n      len = stops.length;\r\n      for (i = 0; i < len; i += 1) {\r\n        stop = stops[i];\r\n        if (!itemData.g._collapsable) {\r\n          stop.setAttribute('offset', oValues[i * 2] + '%');\r\n        }\r\n        stop.setAttribute('stop-opacity', oValues[i * 2 + 1]);\r\n      }\r\n    }\r\n    if (styleData.t === 1) {\r\n      if (itemData.e._mdf || isFirstFrame) {\r\n        gfill.setAttribute('x2', pt2[0]);\r\n        gfill.setAttribute('y2', pt2[1]);\r\n        if (hasOpacity && !itemData.g._collapsable) {\r\n          itemData.of.setAttribute('x2', pt2[0]);\r\n          itemData.of.setAttribute('y2', pt2[1]);\r\n        }\r\n      }\r\n    } else {\r\n      var rad;\r\n      if (itemData.s._mdf || itemData.e._mdf || isFirstFrame) {\r\n        rad = Math.sqrt(Math.pow(pt1[0] - pt2[0], 2) + Math.pow(pt1[1] - pt2[1], 2));\r\n        gfill.setAttribute('r', rad);\r\n        if (hasOpacity && !itemData.g._collapsable) {\r\n          itemData.of.setAttribute('r', rad);\r\n        }\r\n      }\r\n      if (itemData.e._mdf || itemData.h._mdf || itemData.a._mdf || isFirstFrame) {\r\n        if (!rad) {\r\n          rad = Math.sqrt(Math.pow(pt1[0] - pt2[0], 2) + Math.pow(pt1[1] - pt2[1], 2));\r\n        }\r\n        var ang = Math.atan2(pt2[1] - pt1[1], pt2[0] - pt1[0]);\r\n\r\n        var percent = itemData.h.v;\r\n        if (percent >= 1) {\r\n          percent = 0.99;\r\n        } else if (percent <= -1) {\r\n          percent = -0.99;\r\n        }\r\n        var dist = rad * percent;\r\n        var x = Math.cos(ang + itemData.a.v) * dist + pt1[0];\r\n        var y = Math.sin(ang + itemData.a.v) * dist + pt1[1];\r\n        gfill.setAttribute('fx', x);\r\n        gfill.setAttribute('fy', y);\r\n        if (hasOpacity && !itemData.g._collapsable) {\r\n          itemData.of.setAttribute('fx', x);\r\n          itemData.of.setAttribute('fy', y);\r\n        }\r\n      }\r\n      // gfill.setAttribute('fy','200');\r\n    }\r\n  }\r\n\r\n  function renderStroke(styleData, itemData, isFirstFrame) {\r\n    var styleElem = itemData.style;\r\n    var d = itemData.d;\r\n    if (d && (d._mdf || isFirstFrame) && d.dashStr) {\r\n      styleElem.pElem.setAttribute('stroke-dasharray', d.dashStr);\r\n      styleElem.pElem.setAttribute('stroke-dashoffset', d.dashoffset[0]);\r\n    }\r\n    if (itemData.c && (itemData.c._mdf || isFirstFrame)) {\r\n      styleElem.pElem.setAttribute('stroke', 'rgb(' + bmFloor(itemData.c.v[0]) + ',' + bmFloor(itemData.c.v[1]) + ',' + bmFloor(itemData.c.v[2]) + ')');\r\n    }\r\n    if (itemData.o._mdf || isFirstFrame) {\r\n      styleElem.pElem.setAttribute('stroke-opacity', itemData.o.v);\r\n    }\r\n    if (itemData.w._mdf || isFirstFrame) {\r\n      styleElem.pElem.setAttribute('stroke-width', itemData.w.v);\r\n      if (styleElem.msElem) {\r\n        styleElem.msElem.setAttribute('stroke-width', itemData.w.v);\r\n      }\r\n    }\r\n  }\r\n\r\n  return ob;\r\n}());\r\n\r\n/* global Matrix */\r\n\r\nfunction ShapeTransformManager() {\r\n  this.sequences = {};\r\n  this.sequenceList = [];\r\n  this.transform_key_count = 0;\r\n}\r\n\r\nShapeTransformManager.prototype = {\r\n  addTransformSequence: function (transforms) {\r\n    var i;\r\n    var len = transforms.length;\r\n    var key = '_';\r\n    for (i = 0; i < len; i += 1) {\r\n      key += transforms[i].transform.key + '_';\r\n    }\r\n    var sequence = this.sequences[key];\r\n    if (!sequence) {\r\n      sequence = {\r\n        transforms: [].concat(transforms),\r\n        finalTransform: new Matrix(),\r\n        _mdf: false,\r\n      };\r\n      this.sequences[key] = sequence;\r\n      this.sequenceList.push(sequence);\r\n    }\r\n    return sequence;\r\n  },\r\n  processSequence: function (sequence, isFirstFrame) {\r\n    var i = 0;\r\n    var len = sequence.transforms.length;\r\n    var _mdf = isFirstFrame;\r\n    while (i < len && !isFirstFrame) {\r\n      if (sequence.transforms[i].transform.mProps._mdf) {\r\n        _mdf = true;\r\n        break;\r\n      }\r\n      i += 1;\r\n    }\r\n    if (_mdf) {\r\n      var props;\r\n      sequence.finalTransform.reset();\r\n      for (i = len - 1; i >= 0; i -= 1) {\r\n        props = sequence.transforms[i].transform.mProps.v.props;\r\n        sequence.finalTransform.transform(props[0], props[1], props[2], props[3], props[4], props[5], props[6], props[7], props[8], props[9], props[10], props[11], props[12], props[13], props[14], props[15]);\r\n      }\r\n    }\r\n    sequence._mdf = _mdf;\r\n  },\r\n  processSequences: function (isFirstFrame) {\r\n    var i;\r\n    var len = this.sequenceList.length;\r\n    for (i = 0; i < len; i += 1) {\r\n      this.processSequence(this.sequenceList[i], isFirstFrame);\r\n    }\r\n  },\r\n  getNewKey: function () {\r\n    this.transform_key_count += 1;\r\n    return '_' + this.transform_key_count;\r\n  },\r\n};\r\n\r\n/* global LayerExpressionInterface, EffectsExpressionInterface, CompExpressionInterface, ShapeExpressionInterface,\r\nTextExpressionInterface, getBlendMode,createElementID, EffectsManager */\r\n\r\nfunction BaseElement() {\r\n}\r\n\r\nBaseElement.prototype = {\r\n  checkMasks: function () {\r\n    if (!this.data.hasMask) {\r\n      return false;\r\n    }\r\n    var i = 0;\r\n    var len = this.data.masksProperties.length;\r\n    while (i < len) {\r\n      if ((this.data.masksProperties[i].mode !== 'n' && this.data.masksProperties[i].cl !== false)) {\r\n        return true;\r\n      }\r\n      i += 1;\r\n    }\r\n    return false;\r\n  },\r\n  initExpressions: function () {\r\n    this.layerInterface = LayerExpressionInterface(this);\r\n    if (this.data.hasMask && this.maskManager) {\r\n      this.layerInterface.registerMaskInterface(this.maskManager);\r\n    }\r\n    var effectsInterface = EffectsExpressionInterface.createEffectsInterface(this, this.layerInterface);\r\n    this.layerInterface.registerEffectsInterface(effectsInterface);\r\n\r\n    if (this.data.ty === 0 || this.data.xt) {\r\n      this.compInterface = CompExpressionInterface(this);\r\n    } else if (this.data.ty === 4) {\r\n      this.layerInterface.shapeInterface = ShapeExpressionInterface(this.shapesData, this.itemsData, this.layerInterface);\r\n      this.layerInterface.content = this.layerInterface.shapeInterface;\r\n    } else if (this.data.ty === 5) {\r\n      this.layerInterface.textInterface = TextExpressionInterface(this);\r\n      this.layerInterface.text = this.layerInterface.textInterface;\r\n    }\r\n  },\r\n  setBlendMode: function () {\r\n    var blendModeValue = getBlendMode(this.data.bm);\r\n    var elem = this.baseElement || this.layerElement;\r\n\r\n    elem.style['mix-blend-mode'] = blendModeValue;\r\n  },\r\n  initBaseData: function (data, globalData, comp) {\r\n    this.globalData = globalData;\r\n    this.comp = comp;\r\n    this.data = data;\r\n    this.layerId = createElementID();\r\n\r\n    // Stretch factor for old animations missing this property.\r\n    if (!this.data.sr) {\r\n      this.data.sr = 1;\r\n    }\r\n    // effects manager\r\n    this.effectsManager = new EffectsManager(this.data, this, this.dynamicProperties);\r\n  },\r\n  getType: function () {\r\n    return this.type;\r\n  },\r\n  sourceRectAtTime: function () {},\r\n};\r\n\r\n/* global extendPrototype, BaseElement, TransformElement, HierarchyElement, FrameElement */\r\n\r\nfunction NullElement(data, globalData, comp) {\r\n  this.initFrame();\r\n  this.initBaseData(data, globalData, comp);\r\n  this.initFrame();\r\n  this.initTransform(data, globalData, comp);\r\n  this.initHierarchy();\r\n}\r\n\r\nNullElement.prototype.prepareFrame = function (num) {\r\n  this.prepareProperties(num, true);\r\n};\r\n\r\nNullElement.prototype.renderFrame = function () {\r\n};\r\n\r\nNullElement.prototype.getBaseElement = function () {\r\n  return null;\r\n};\r\n\r\nNullElement.prototype.destroy = function () {\r\n};\r\n\r\nNullElement.prototype.sourceRectAtTime = function () {\r\n};\r\n\r\nNullElement.prototype.hide = function () {\r\n};\r\n\r\nextendPrototype([BaseElement, TransformElement, HierarchyElement, FrameElement], NullElement);\r\n\r\n/* global filtersFactory, featureSupport, filtersFactory, createElementID, createNS, MaskElement, SVGEffects, locationHref */\r\n\r\nfunction SVGBaseElement() {\r\n}\r\n\r\nSVGBaseElement.prototype = {\r\n  initRendererElement: function () {\r\n    this.layerElement = createNS('g');\r\n  },\r\n  createContainerElements: function () {\r\n    this.matteElement = createNS('g');\r\n    this.transformedElement = this.layerElement;\r\n    this.maskedElement = this.layerElement;\r\n    this._sizeChanged = false;\r\n    var layerElementParent = null;\r\n    // If this layer acts as a mask for the following layer\r\n    var filId;\r\n    var fil;\r\n    var gg;\r\n    if (this.data.td) {\r\n      if (this.data.td == 3 || this.data.td == 1) { // eslint-disable-line eqeqeq\r\n        var masker = createNS('mask');\r\n        masker.setAttribute('id', this.layerId);\r\n        masker.setAttribute('mask-type', this.data.td == 3 ? 'luminance' : 'alpha'); // eslint-disable-line eqeqeq\r\n        masker.appendChild(this.layerElement);\r\n        layerElementParent = masker;\r\n        this.globalData.defs.appendChild(masker);\r\n        // This is only for IE and Edge when mask if of type alpha\r\n        if (!featureSupport.maskType && this.data.td == 1) { // eslint-disable-line eqeqeq\r\n          masker.setAttribute('mask-type', 'luminance');\r\n          filId = createElementID();\r\n          fil = filtersFactory.createFilter(filId);\r\n          this.globalData.defs.appendChild(fil);\r\n          fil.appendChild(filtersFactory.createAlphaToLuminanceFilter());\r\n          gg = createNS('g');\r\n          gg.appendChild(this.layerElement);\r\n          layerElementParent = gg;\r\n          masker.appendChild(gg);\r\n          gg.setAttribute('filter', 'url(' + locationHref + '#' + filId + ')');\r\n        }\r\n      } else if (this.data.td == 2) { // eslint-disable-line eqeqeq\r\n        var maskGroup = createNS('mask');\r\n        maskGroup.setAttribute('id', this.layerId);\r\n        maskGroup.setAttribute('mask-type', 'alpha');\r\n        var maskGrouper = createNS('g');\r\n        maskGroup.appendChild(maskGrouper);\r\n        filId = createElementID();\r\n        fil = filtersFactory.createFilter(filId);\r\n        /// /\r\n\r\n        // This solution doesn't work on Android when meta tag with viewport attribute is set\r\n        /* var feColorMatrix = createNS('feColorMatrix');\r\n                feColorMatrix.setAttribute('type', 'matrix');\r\n                feColorMatrix.setAttribute('color-interpolation-filters', 'sRGB');\r\n                feColorMatrix.setAttribute('values','1 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 -1 1');\r\n                fil.appendChild(feColorMatrix); */\r\n        /// /\r\n        var feCTr = createNS('feComponentTransfer');\r\n        feCTr.setAttribute('in', 'SourceGraphic');\r\n        fil.appendChild(feCTr);\r\n        var feFunc = createNS('feFuncA');\r\n        feFunc.setAttribute('type', 'table');\r\n        feFunc.setAttribute('tableValues', '1.0 0.0');\r\n        feCTr.appendChild(feFunc);\r\n        /// /\r\n        this.globalData.defs.appendChild(fil);\r\n        var alphaRect = createNS('rect');\r\n        alphaRect.setAttribute('width', this.comp.data.w);\r\n        alphaRect.setAttribute('height', this.comp.data.h);\r\n        alphaRect.setAttribute('x', '0');\r\n        alphaRect.setAttribute('y', '0');\r\n        alphaRect.setAttribute('fill', '#ffffff');\r\n        alphaRect.setAttribute('opacity', '0');\r\n        maskGrouper.setAttribute('filter', 'url(' + locationHref + '#' + filId + ')');\r\n        maskGrouper.appendChild(alphaRect);\r\n        maskGrouper.appendChild(this.layerElement);\r\n        layerElementParent = maskGrouper;\r\n        if (!featureSupport.maskType) {\r\n          maskGroup.setAttribute('mask-type', 'luminance');\r\n          fil.appendChild(filtersFactory.createAlphaToLuminanceFilter());\r\n          gg = createNS('g');\r\n          maskGrouper.appendChild(alphaRect);\r\n          gg.appendChild(this.layerElement);\r\n          layerElementParent = gg;\r\n          maskGrouper.appendChild(gg);\r\n        }\r\n        this.globalData.defs.appendChild(maskGroup);\r\n      }\r\n    } else if (this.data.tt) {\r\n      this.matteElement.appendChild(this.layerElement);\r\n      layerElementParent = this.matteElement;\r\n      this.baseElement = this.matteElement;\r\n    } else {\r\n      this.baseElement = this.layerElement;\r\n    }\r\n    if (this.data.ln) {\r\n      this.layerElement.setAttribute('id', this.data.ln);\r\n    }\r\n    if (this.data.cl) {\r\n      this.layerElement.setAttribute('class', this.data.cl);\r\n    }\r\n    // Clipping compositions to hide content that exceeds boundaries. If collapsed transformations is on, component should not be clipped\r\n    if (this.data.ty === 0 && !this.data.hd) {\r\n      var cp = createNS('clipPath');\r\n      var pt = createNS('path');\r\n      pt.setAttribute('d', 'M0,0 L' + this.data.w + ',0 L' + this.data.w + ',' + this.data.h + ' L0,' + this.data.h + 'z');\r\n      var clipId = createElementID();\r\n      cp.setAttribute('id', clipId);\r\n      cp.appendChild(pt);\r\n      this.globalData.defs.appendChild(cp);\r\n\r\n      if (this.checkMasks()) {\r\n        var cpGroup = createNS('g');\r\n        cpGroup.setAttribute('clip-path', 'url(' + locationHref + '#' + clipId + ')');\r\n        cpGroup.appendChild(this.layerElement);\r\n        this.transformedElement = cpGroup;\r\n        if (layerElementParent) {\r\n          layerElementParent.appendChild(this.transformedElement);\r\n        } else {\r\n          this.baseElement = this.transformedElement;\r\n        }\r\n      } else {\r\n        this.layerElement.setAttribute('clip-path', 'url(' + locationHref + '#' + clipId + ')');\r\n      }\r\n    }\r\n    if (this.data.bm !== 0) {\r\n      this.setBlendMode();\r\n    }\r\n  },\r\n  renderElement: function () {\r\n    if (this.finalTransform._matMdf) {\r\n      this.transformedElement.setAttribute('transform', this.finalTransform.mat.to2dCSS());\r\n    }\r\n    if (this.finalTransform._opMdf) {\r\n      this.transformedElement.setAttribute('opacity', this.finalTransform.mProp.o.v);\r\n    }\r\n  },\r\n  destroyBaseElement: function () {\r\n    this.layerElement = null;\r\n    this.matteElement = null;\r\n    this.maskManager.destroy();\r\n  },\r\n  getBaseElement: function () {\r\n    if (this.data.hd) {\r\n      return null;\r\n    }\r\n    return this.baseElement;\r\n  },\r\n  createRenderableComponents: function () {\r\n    this.maskManager = new MaskElement(this.data, this, this.globalData);\r\n    this.renderableEffectsManager = new SVGEffects(this);\r\n  },\r\n  setMatte: function (id) {\r\n    if (!this.matteElement) {\r\n      return;\r\n    }\r\n    this.matteElement.setAttribute('mask', 'url(' + locationHref + '#' + id + ')');\r\n  },\r\n};\r\n\r\n/* global ProcessedElement */\r\n\r\nfunction IShapeElement() {\r\n}\r\n\r\nIShapeElement.prototype = {\r\n  addShapeToModifiers: function (data) {\r\n    var i;\r\n    var len = this.shapeModifiers.length;\r\n    for (i = 0; i < len; i += 1) {\r\n      this.shapeModifiers[i].addShape(data);\r\n    }\r\n  },\r\n  isShapeInAnimatedModifiers: function (data) {\r\n    var i = 0;\r\n    var len = this.shapeModifiers.length;\r\n    while (i < len) {\r\n      if (this.shapeModifiers[i].isAnimatedWithShape(data)) {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  },\r\n  renderModifiers: function () {\r\n    if (!this.shapeModifiers.length) {\r\n      return;\r\n    }\r\n    var i;\r\n    var len = this.shapes.length;\r\n    for (i = 0; i < len; i += 1) {\r\n      this.shapes[i].sh.reset();\r\n    }\r\n\r\n    len = this.shapeModifiers.length;\r\n    var shouldBreakProcess;\r\n    for (i = len - 1; i >= 0; i -= 1) {\r\n      shouldBreakProcess = this.shapeModifiers[i].processShapes(this._isFirstFrame);\r\n      // workaround to fix cases where a repeater resets the shape so the following processes get called twice\r\n      // TODO: find a better solution for this\r\n      if (shouldBreakProcess) {\r\n        break;\r\n      }\r\n    }\r\n  },\r\n\r\n  searchProcessedElement: function (elem) {\r\n    var elements = this.processedElements;\r\n    var i = 0;\r\n    var len = elements.length;\r\n    while (i < len) {\r\n      if (elements[i].elem === elem) {\r\n        return elements[i].pos;\r\n      }\r\n      i += 1;\r\n    }\r\n    return 0;\r\n  },\r\n  addProcessedElement: function (elem, pos) {\r\n    var elements = this.processedElements;\r\n    var i = elements.length;\r\n    while (i) {\r\n      i -= 1;\r\n      if (elements[i].elem === elem) {\r\n        elements[i].pos = pos;\r\n        return;\r\n      }\r\n    }\r\n    elements.push(new ProcessedElement(elem, pos));\r\n  },\r\n  prepareFrame: function (num) {\r\n    this.prepareRenderableFrame(num);\r\n    this.prepareProperties(num, this.isInRange);\r\n  },\r\n};\r\n\r\n/* global TextProperty, TextAnimatorProperty, buildShapeString, LetterProps */\r\n\r\nfunction ITextElement() {\r\n}\r\n\r\nITextElement.prototype.initElement = function (data, globalData, comp) {\r\n  this.lettersChangedFlag = true;\r\n  this.initFrame();\r\n  this.initBaseData(data, globalData, comp);\r\n  this.textProperty = new TextProperty(this, data.t, this.dynamicProperties);\r\n  this.textAnimator = new TextAnimatorProperty(data.t, this.renderType, this);\r\n  this.initTransform(data, globalData, comp);\r\n  this.initHierarchy();\r\n  this.initRenderable();\r\n  this.initRendererElement();\r\n  this.createContainerElements();\r\n  this.createRenderableComponents();\r\n  this.createContent();\r\n  this.hide();\r\n  this.textAnimator.searchProperties(this.dynamicProperties);\r\n};\r\n\r\nITextElement.prototype.prepareFrame = function (num) {\r\n  this._mdf = false;\r\n  this.prepareRenderableFrame(num);\r\n  this.prepareProperties(num, this.isInRange);\r\n  if (this.textProperty._mdf || this.textProperty._isFirstFrame) {\r\n    this.buildNewText();\r\n    this.textProperty._isFirstFrame = false;\r\n    this.textProperty._mdf = false;\r\n  }\r\n};\r\n\r\nITextElement.prototype.createPathShape = function (matrixHelper, shapes) {\r\n  var j;\r\n  var jLen = shapes.length;\r\n  var pathNodes;\r\n  var shapeStr = '';\r\n  for (j = 0; j < jLen; j += 1) {\r\n    pathNodes = shapes[j].ks.k;\r\n    shapeStr += buildShapeString(pathNodes, pathNodes.i.length, true, matrixHelper);\r\n  }\r\n  return shapeStr;\r\n};\r\n\r\nITextElement.prototype.updateDocumentData = function (newData, index) {\r\n  this.textProperty.updateDocumentData(newData, index);\r\n};\r\n\r\nITextElement.prototype.canResizeFont = function (_canResize) {\r\n  this.textProperty.canResizeFont(_canResize);\r\n};\r\n\r\nITextElement.prototype.setMinimumFontSize = function (_fontSize) {\r\n  this.textProperty.setMinimumFontSize(_fontSize);\r\n};\r\n\r\nITextElement.prototype.applyTextPropertiesToMatrix = function (documentData, matrixHelper, lineNumber, xPos, yPos) {\r\n  if (documentData.ps) {\r\n    matrixHelper.translate(documentData.ps[0], documentData.ps[1] + documentData.ascent, 0);\r\n  }\r\n  matrixHelper.translate(0, -documentData.ls, 0);\r\n  switch (documentData.j) {\r\n    case 1:\r\n      matrixHelper.translate(documentData.justifyOffset + (documentData.boxWidth - documentData.lineWidths[lineNumber]), 0, 0);\r\n      break;\r\n    case 2:\r\n      matrixHelper.translate(documentData.justifyOffset + (documentData.boxWidth - documentData.lineWidths[lineNumber]) / 2, 0, 0);\r\n      break;\r\n    default:\r\n      break;\r\n  }\r\n  matrixHelper.translate(xPos, yPos, 0);\r\n};\r\n\r\nITextElement.prototype.buildColor = function (colorData) {\r\n  return 'rgb(' + Math.round(colorData[0] * 255) + ',' + Math.round(colorData[1] * 255) + ',' + Math.round(colorData[2] * 255) + ')';\r\n};\r\n\r\nITextElement.prototype.emptyProp = new LetterProps();\r\n\r\nITextElement.prototype.destroy = function () {\r\n\r\n};\r\n\r\n/* global extendPrototype, BaseElement, TransformElement, HierarchyElement, FrameElement, RenderableDOMElement */\r\n\r\nfunction ICompElement() {}\r\n\r\nextendPrototype([BaseElement, TransformElement, HierarchyElement, FrameElement, RenderableDOMElement], ICompElement);\r\n\r\nICompElement.prototype.initElement = function (data, globalData, comp) {\r\n  this.initFrame();\r\n  this.initBaseData(data, globalData, comp);\r\n  this.initTransform(data, globalData, comp);\r\n  this.initRenderable();\r\n  this.initHierarchy();\r\n  this.initRendererElement();\r\n  this.createContainerElements();\r\n  this.createRenderableComponents();\r\n  if (this.data.xt || !globalData.progressiveLoad) {\r\n    this.buildAllItems();\r\n  }\r\n  this.hide();\r\n};\r\n\r\n/* ICompElement.prototype.hide = function(){\r\n    if(!this.hidden){\r\n        this.hideElement();\r\n        var i,len = this.elements.length;\r\n        for( i = 0; i < len; i+=1 ){\r\n            if(this.elements[i]){\r\n                this.elements[i].hide();\r\n            }\r\n        }\r\n    }\r\n}; */\r\n\r\nICompElement.prototype.prepareFrame = function (num) {\r\n  this._mdf = false;\r\n  this.prepareRenderableFrame(num);\r\n  this.prepareProperties(num, this.isInRange);\r\n  if (!this.isInRange && !this.data.xt) {\r\n    return;\r\n  }\r\n\r\n  if (!this.tm._placeholder) {\r\n    var timeRemapped = this.tm.v;\r\n    if (timeRemapped === this.data.op) {\r\n      timeRemapped = this.data.op - 1;\r\n    }\r\n    this.renderedFrame = timeRemapped;\r\n  } else {\r\n    this.renderedFrame = num / this.data.sr;\r\n  }\r\n  var i;\r\n  var len = this.elements.length;\r\n  if (!this.completeLayers) {\r\n    this.checkLayers(this.renderedFrame);\r\n  }\r\n  // This iteration needs to be backwards because of how expressions connect between each other\r\n  for (i = len - 1; i >= 0; i -= 1) {\r\n    if (this.completeLayers || this.elements[i]) {\r\n      this.elements[i].prepareFrame(this.renderedFrame - this.layers[i].st);\r\n      if (this.elements[i]._mdf) {\r\n        this._mdf = true;\r\n      }\r\n    }\r\n  }\r\n};\r\n\r\nICompElement.prototype.renderInnerContent = function () {\r\n  var i;\r\n  var len = this.layers.length;\r\n  for (i = 0; i < len; i += 1) {\r\n    if (this.completeLayers || this.elements[i]) {\r\n      this.elements[i].renderFrame();\r\n    }\r\n  }\r\n};\r\n\r\nICompElement.prototype.setElements = function (elems) {\r\n  this.elements = elems;\r\n};\r\n\r\nICompElement.prototype.getElements = function () {\r\n  return this.elements;\r\n};\r\n\r\nICompElement.prototype.destroyElements = function () {\r\n  var i;\r\n  var len = this.layers.length;\r\n  for (i = 0; i < len; i += 1) {\r\n    if (this.elements[i]) {\r\n      this.elements[i].destroy();\r\n    }\r\n  }\r\n};\r\n\r\nICompElement.prototype.destroy = function () {\r\n  this.destroyElements();\r\n  this.destroyBaseElement();\r\n};\r\n\r\n/* global extendPrototype, BaseElement, TransformElement, SVGBaseElement, HierarchyElement, FrameElement, RenderableDOMElement, createNS */\r\n\r\nfunction IImageElement(data, globalData, comp) {\r\n  this.assetData = globalData.getAssetData(data.refId);\r\n  this.initElement(data, globalData, comp);\r\n  this.sourceRect = {\r\n    top: 0, left: 0, width: this.assetData.w, height: this.assetData.h,\r\n  };\r\n}\r\n\r\nextendPrototype([BaseElement, TransformElement, SVGBaseElement, HierarchyElement, FrameElement, RenderableDOMElement], IImageElement);\r\n\r\nIImageElement.prototype.createContent = function () {\r\n  var assetPath = this.globalData.getAssetsPath(this.assetData);\r\n\r\n  this.innerElem = createNS('image');\r\n  this.innerElem.setAttribute('width', this.assetData.w + 'px');\r\n  this.innerElem.setAttribute('height', this.assetData.h + 'px');\r\n  this.innerElem.setAttribute('preserveAspectRatio', this.assetData.pr || this.globalData.renderConfig.imagePreserveAspectRatio);\r\n  this.innerElem.setAttributeNS('http://www.w3.org/1999/xlink', 'href', assetPath);\r\n\r\n  this.layerElement.appendChild(this.innerElem);\r\n};\r\n\r\nIImageElement.prototype.sourceRectAtTime = function () {\r\n  return this.sourceRect;\r\n};\r\n\r\n/* global extendPrototype, IImageElement, createNS */\r\n\r\nfunction ISolidElement(data, globalData, comp) {\r\n  this.initElement(data, globalData, comp);\r\n}\r\nextendPrototype([IImageElement], ISolidElement);\r\n\r\nISolidElement.prototype.createContent = function () {\r\n  var rect = createNS('rect');\r\n  /// /rect.style.width = this.data.sw;\r\n  /// /rect.style.height = this.data.sh;\r\n  /// /rect.style.fill = this.data.sc;\r\n  rect.setAttribute('width', this.data.sw);\r\n  rect.setAttribute('height', this.data.sh);\r\n  rect.setAttribute('fill', this.data.sc);\r\n  this.layerElement.appendChild(rect);\r\n};\r\n\r\n/* global PropertyFactory, extendPrototype, RenderableElement, BaseElement, FrameElement */\r\n\r\nfunction AudioElement(data, globalData, comp) {\r\n  this.initFrame();\r\n  this.initRenderable();\r\n  this.assetData = globalData.getAssetData(data.refId);\r\n  this.initBaseData(data, globalData, comp);\r\n  this._isPlaying = false;\r\n  this._canPlay = false;\r\n  var assetPath = this.globalData.getAssetsPath(this.assetData);\r\n  this.audio = this.globalData.audioController.createAudio(assetPath);\r\n  this._currentTime = 0;\r\n  this.globalData.audioController.addAudio(this);\r\n  this.tm = data.tm ? PropertyFactory.getProp(this, data.tm, 0, globalData.frameRate, this) : { _placeholder: true };\r\n}\r\n\r\nAudioElement.prototype.prepareFrame = function (num) {\r\n  this.prepareRenderableFrame(num, true);\r\n  this.prepareProperties(num, true);\r\n  if (!this.tm._placeholder) {\r\n    var timeRemapped = this.tm.v;\r\n    this._currentTime = timeRemapped;\r\n  } else {\r\n    this._currentTime = num / this.data.sr;\r\n  }\r\n};\r\n\r\nextendPrototype([RenderableElement, BaseElement, FrameElement], AudioElement);\r\n\r\nAudioElement.prototype.renderFrame = function () {\r\n  if (this.isInRange && this._canPlay) {\r\n    if (!this._isPlaying) {\r\n      this.audio.play();\r\n      this.audio.seek(this._currentTime / this.globalData.frameRate);\r\n      this._isPlaying = true;\r\n    } else if (!this.audio.playing()\r\n      || Math.abs(this._currentTime / this.globalData.frameRate - this.audio.seek()) > 0.1\r\n    ) {\r\n      this.audio.seek(this._currentTime / this.globalData.frameRate);\r\n    }\r\n  }\r\n};\r\n\r\nAudioElement.prototype.show = function () {\r\n  // this.audio.play()\r\n};\r\n\r\nAudioElement.prototype.hide = function () {\r\n  this.audio.pause();\r\n  this._isPlaying = false;\r\n};\r\n\r\nAudioElement.prototype.pause = function () {\r\n  this.audio.pause();\r\n  this._isPlaying = false;\r\n  this._canPlay = false;\r\n};\r\n\r\nAudioElement.prototype.resume = function () {\r\n  this._canPlay = true;\r\n};\r\n\r\nAudioElement.prototype.setRate = function (rateValue) {\r\n  this.audio.rate(rateValue);\r\n};\r\n\r\nAudioElement.prototype.volume = function (volumeValue) {\r\n  this.audio.volume(volumeValue);\r\n};\r\n\r\nAudioElement.prototype.getBaseElement = function () {\r\n  return null;\r\n};\r\n\r\nAudioElement.prototype.destroy = function () {\r\n};\r\n\r\nAudioElement.prototype.sourceRectAtTime = function () {\r\n};\r\n\r\nAudioElement.prototype.initExpressions = function () {\r\n};\r\n\r\n/* global createSizedArray, PropertyFactory, extendPrototype, SVGRenderer, ICompElement, SVGBaseElement */\r\n\r\nfunction SVGCompElement(data, globalData, comp) {\r\n  this.layers = data.layers;\r\n  this.supports3d = true;\r\n  this.completeLayers = false;\r\n  this.pendingElements = [];\r\n  this.elements = this.layers ? createSizedArray(this.layers.length) : [];\r\n  // this.layerElement = createNS('g');\r\n  this.initElement(data, globalData, comp);\r\n  this.tm = data.tm ? PropertyFactory.getProp(this, data.tm, 0, globalData.frameRate, this) : { _placeholder: true };\r\n}\r\n\r\nextendPrototype([SVGRenderer, ICompElement, SVGBaseElement], SVGCompElement);\r\n\r\n/* global extendPrototype, BaseElement, TransformElement, SVGBaseElement, HierarchyElement, FrameElement,\r\nRenderableDOMElement, ITextElement, createSizedArray, createNS */\r\n\r\nfunction SVGTextLottieElement(data, globalData, comp) {\r\n  this.textSpans = [];\r\n  this.renderType = 'svg';\r\n  this.initElement(data, globalData, comp);\r\n}\r\n\r\nextendPrototype([BaseElement, TransformElement, SVGBaseElement, HierarchyElement, FrameElement, RenderableDOMElement, ITextElement], SVGTextLottieElement);\r\n\r\nSVGTextLottieElement.prototype.createContent = function () {\r\n  if (this.data.singleShape && !this.globalData.fontManager.chars) {\r\n    this.textContainer = createNS('text');\r\n  }\r\n};\r\n\r\nSVGTextLottieElement.prototype.buildTextContents = function (textArray) {\r\n  var i = 0;\r\n  var len = textArray.length;\r\n  var textContents = [];\r\n  var currentTextContent = '';\r\n  while (i < len) {\r\n    if (textArray[i] === String.fromCharCode(13) || textArray[i] === String.fromCharCode(3)) {\r\n      textContents.push(currentTextContent);\r\n      currentTextContent = '';\r\n    } else {\r\n      currentTextContent += textArray[i];\r\n    }\r\n    i += 1;\r\n  }\r\n  textContents.push(currentTextContent);\r\n  return textContents;\r\n};\r\n\r\nSVGTextLottieElement.prototype.buildNewText = function () {\r\n  var i;\r\n  var len;\r\n\r\n  var documentData = this.textProperty.currentData;\r\n  this.renderedLetters = createSizedArray(documentData ? documentData.l.length : 0);\r\n  if (documentData.fc) {\r\n    this.layerElement.setAttribute('fill', this.buildColor(documentData.fc));\r\n  } else {\r\n    this.layerElement.setAttribute('fill', 'rgba(0,0,0,0)');\r\n  }\r\n  if (documentData.sc) {\r\n    this.layerElement.setAttribute('stroke', this.buildColor(documentData.sc));\r\n    this.layerElement.setAttribute('stroke-width', documentData.sw);\r\n  }\r\n  this.layerElement.setAttribute('font-size', documentData.finalSize);\r\n  var fontData = this.globalData.fontManager.getFontByName(documentData.f);\r\n  if (fontData.fClass) {\r\n    this.layerElement.setAttribute('class', fontData.fClass);\r\n  } else {\r\n    this.layerElement.setAttribute('font-family', fontData.fFamily);\r\n    var fWeight = documentData.fWeight;\r\n    var fStyle = documentData.fStyle;\r\n    this.layerElement.setAttribute('font-style', fStyle);\r\n    this.layerElement.setAttribute('font-weight', fWeight);\r\n  }\r\n  this.layerElement.setAttribute('aria-label', documentData.t);\r\n\r\n  var letters = documentData.l || [];\r\n  var usesGlyphs = !!this.globalData.fontManager.chars;\r\n  len = letters.length;\r\n\r\n  var tSpan;\r\n  var matrixHelper = this.mHelper;\r\n  var shapes;\r\n  var shapeStr = '';\r\n  var singleShape = this.data.singleShape;\r\n  var xPos = 0;\r\n  var yPos = 0;\r\n  var firstLine = true;\r\n  var trackingOffset = documentData.tr * 0.001 * documentData.finalSize;\r\n  if (singleShape && !usesGlyphs && !documentData.sz) {\r\n    var tElement = this.textContainer;\r\n    var justify = 'start';\r\n    switch (documentData.j) {\r\n      case 1:\r\n        justify = 'end';\r\n        break;\r\n      case 2:\r\n        justify = 'middle';\r\n        break;\r\n      default:\r\n        justify = 'start';\r\n        break;\r\n    }\r\n    tElement.setAttribute('text-anchor', justify);\r\n    tElement.setAttribute('letter-spacing', trackingOffset);\r\n    var textContent = this.buildTextContents(documentData.finalText);\r\n    len = textContent.length;\r\n    yPos = documentData.ps ? documentData.ps[1] + documentData.ascent : 0;\r\n    for (i = 0; i < len; i += 1) {\r\n      tSpan = this.textSpans[i] || createNS('tspan');\r\n      tSpan.textContent = textContent[i];\r\n      tSpan.setAttribute('x', 0);\r\n      tSpan.setAttribute('y', yPos);\r\n      tSpan.style.display = 'inherit';\r\n      tElement.appendChild(tSpan);\r\n      this.textSpans[i] = tSpan;\r\n      yPos += documentData.finalLineHeight;\r\n    }\r\n\r\n    this.layerElement.appendChild(tElement);\r\n  } else {\r\n    var cachedSpansLength = this.textSpans.length;\r\n    var shapeData;\r\n    var charData;\r\n    for (i = 0; i < len; i += 1) {\r\n      if (!usesGlyphs || !singleShape || i === 0) {\r\n        tSpan = cachedSpansLength > i ? this.textSpans[i] : createNS(usesGlyphs ? 'path' : 'text');\r\n        if (cachedSpansLength <= i) {\r\n          tSpan.setAttribute('stroke-linecap', 'butt');\r\n          tSpan.setAttribute('stroke-linejoin', 'round');\r\n          tSpan.setAttribute('stroke-miterlimit', '4');\r\n          this.textSpans[i] = tSpan;\r\n          this.layerElement.appendChild(tSpan);\r\n        }\r\n        tSpan.style.display = 'inherit';\r\n      }\r\n\r\n      matrixHelper.reset();\r\n      matrixHelper.scale(documentData.finalSize / 100, documentData.finalSize / 100);\r\n      if (singleShape) {\r\n        if (letters[i].n) {\r\n          xPos = -trackingOffset;\r\n          yPos += documentData.yOffset;\r\n          yPos += firstLine ? 1 : 0;\r\n          firstLine = false;\r\n        }\r\n        this.applyTextPropertiesToMatrix(documentData, matrixHelper, letters[i].line, xPos, yPos);\r\n        xPos += letters[i].l || 0;\r\n        // xPos += letters[i].val === ' ' ? 0 : trackingOffset;\r\n        xPos += trackingOffset;\r\n      }\r\n      if (usesGlyphs) {\r\n        charData = this.globalData.fontManager.getCharData(documentData.finalText[i], fontData.fStyle, this.globalData.fontManager.getFontByName(documentData.f).fFamily);\r\n        shapeData = (charData && charData.data) || {};\r\n        shapes = shapeData.shapes ? shapeData.shapes[0].it : [];\r\n        if (!singleShape) {\r\n          tSpan.setAttribute('d', this.createPathShape(matrixHelper, shapes));\r\n        } else {\r\n          shapeStr += this.createPathShape(matrixHelper, shapes);\r\n        }\r\n      } else {\r\n        if (singleShape) {\r\n          tSpan.setAttribute('transform', 'translate(' + matrixHelper.props[12] + ',' + matrixHelper.props[13] + ')');\r\n        }\r\n        tSpan.textContent = letters[i].val;\r\n        tSpan.setAttributeNS('http://www.w3.org/XML/1998/namespace', 'xml:space', 'preserve');\r\n      }\r\n      //\r\n    }\r\n    if (singleShape && tSpan) {\r\n      tSpan.setAttribute('d', shapeStr);\r\n    }\r\n  }\r\n  while (i < this.textSpans.length) {\r\n    this.textSpans[i].style.display = 'none';\r\n    i += 1;\r\n  }\r\n\r\n  this._sizeChanged = true;\r\n};\r\n\r\nSVGTextLottieElement.prototype.sourceRectAtTime = function () {\r\n  this.prepareFrame(this.comp.renderedFrame - this.data.st);\r\n  this.renderInnerContent();\r\n  if (this._sizeChanged) {\r\n    this._sizeChanged = false;\r\n    var textBox = this.layerElement.getBBox();\r\n    this.bbox = {\r\n      top: textBox.y,\r\n      left: textBox.x,\r\n      width: textBox.width,\r\n      height: textBox.height,\r\n    };\r\n  }\r\n  return this.bbox;\r\n};\r\n\r\nSVGTextLottieElement.prototype.renderInnerContent = function () {\r\n  if (!this.data.singleShape) {\r\n    this.textAnimator.getMeasures(this.textProperty.currentData, this.lettersChangedFlag);\r\n    if (this.lettersChangedFlag || this.textAnimator.lettersChangedFlag) {\r\n      this._sizeChanged = true;\r\n      var i;\r\n      var len;\r\n      var renderedLetters = this.textAnimator.renderedLetters;\r\n\r\n      var letters = this.textProperty.currentData.l;\r\n\r\n      len = letters.length;\r\n      var renderedLetter;\r\n      var textSpan;\r\n      for (i = 0; i < len; i += 1) {\r\n        if (!letters[i].n) {\r\n          renderedLetter = renderedLetters[i];\r\n          textSpan = this.textSpans[i];\r\n          if (renderedLetter._mdf.m) {\r\n            textSpan.setAttribute('transform', renderedLetter.m);\r\n          }\r\n          if (renderedLetter._mdf.o) {\r\n            textSpan.setAttribute('opacity', renderedLetter.o);\r\n          }\r\n          if (renderedLetter._mdf.sw) {\r\n            textSpan.setAttribute('stroke-width', renderedLetter.sw);\r\n          }\r\n          if (renderedLetter._mdf.sc) {\r\n            textSpan.setAttribute('stroke', renderedLetter.sc);\r\n          }\r\n          if (renderedLetter._mdf.fc) {\r\n            textSpan.setAttribute('fill', renderedLetter.fc);\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n};\r\n\r\n/* global extendPrototype, BaseElement, TransformElement, SVGBaseElement, IShapeElement, HierarchyElement,\r\nFrameElement, RenderableDOMElement, Matrix, SVGStyleData, SVGStrokeStyleData, SVGFillStyleData,\r\nSVGGradientFillStyleData, SVGGradientStrokeStyleData, locationHref, getBlendMode, ShapeGroupData,\r\nTransformPropertyFactory, SVGTransformData, ShapePropertyFactory, SVGShapeData, SVGElementsRenderer, ShapeModifiers,\r\nlineCapEnum, lineJoinEnum */\r\n\r\nfunction SVGShapeElement(data, globalData, comp) {\r\n  // List of drawable elements\r\n  this.shapes = [];\r\n  // Full shape data\r\n  this.shapesData = data.shapes;\r\n  // List of styles that will be applied to shapes\r\n  this.stylesList = [];\r\n  // List of modifiers that will be applied to shapes\r\n  this.shapeModifiers = [];\r\n  // List of items in shape tree\r\n  this.itemsData = [];\r\n  // List of items in previous shape tree\r\n  this.processedElements = [];\r\n  // List of animated components\r\n  this.animatedContents = [];\r\n  this.initElement(data, globalData, comp);\r\n  // Moving any property that doesn't get too much access after initialization because of v8 way of handling more than 10 properties.\r\n  // List of elements that have been created\r\n  this.prevViewData = [];\r\n  // Moving any property that doesn't get too much access after initialization because of v8 way of handling more than 10 properties.\r\n}\r\n\r\nextendPrototype([BaseElement, TransformElement, SVGBaseElement, IShapeElement, HierarchyElement, FrameElement, RenderableDOMElement], SVGShapeElement);\r\n\r\nSVGShapeElement.prototype.initSecondaryElement = function () {\r\n};\r\n\r\nSVGShapeElement.prototype.identityMatrix = new Matrix();\r\n\r\nSVGShapeElement.prototype.buildExpressionInterface = function () {};\r\n\r\nSVGShapeElement.prototype.createContent = function () {\r\n  this.searchShapes(this.shapesData, this.itemsData, this.prevViewData, this.layerElement, 0, [], true);\r\n  this.filterUniqueShapes();\r\n};\r\n\r\n/*\r\nThis method searches for multiple shapes that affect a single element and one of them is animated\r\n*/\r\nSVGShapeElement.prototype.filterUniqueShapes = function () {\r\n  var i;\r\n  var len = this.shapes.length;\r\n  var shape;\r\n  var j;\r\n  var jLen = this.stylesList.length;\r\n  var style;\r\n  var tempShapes = [];\r\n  var areAnimated = false;\r\n  for (j = 0; j < jLen; j += 1) {\r\n    style = this.stylesList[j];\r\n    areAnimated = false;\r\n    tempShapes.length = 0;\r\n    for (i = 0; i < len; i += 1) {\r\n      shape = this.shapes[i];\r\n      if (shape.styles.indexOf(style) !== -1) {\r\n        tempShapes.push(shape);\r\n        areAnimated = shape._isAnimated || areAnimated;\r\n      }\r\n    }\r\n    if (tempShapes.length > 1 && areAnimated) {\r\n      this.setShapesAsAnimated(tempShapes);\r\n    }\r\n  }\r\n};\r\n\r\nSVGShapeElement.prototype.setShapesAsAnimated = function (shapes) {\r\n  var i;\r\n  var len = shapes.length;\r\n  for (i = 0; i < len; i += 1) {\r\n    shapes[i].setAsAnimated();\r\n  }\r\n};\r\n\r\nSVGShapeElement.prototype.createStyleElement = function (data, level) {\r\n  // TODO: prevent drawing of hidden styles\r\n  var elementData;\r\n  var styleOb = new SVGStyleData(data, level);\r\n\r\n  var pathElement = styleOb.pElem;\r\n  if (data.ty === 'st') {\r\n    elementData = new SVGStrokeStyleData(this, data, styleOb);\r\n  } else if (data.ty === 'fl') {\r\n    elementData = new SVGFillStyleData(this, data, styleOb);\r\n  } else if (data.ty === 'gf' || data.ty === 'gs') {\r\n    var GradientConstructor = data.ty === 'gf' ? SVGGradientFillStyleData : SVGGradientStrokeStyleData;\r\n    elementData = new GradientConstructor(this, data, styleOb);\r\n    this.globalData.defs.appendChild(elementData.gf);\r\n    if (elementData.maskId) {\r\n      this.globalData.defs.appendChild(elementData.ms);\r\n      this.globalData.defs.appendChild(elementData.of);\r\n      pathElement.setAttribute('mask', 'url(' + locationHref + '#' + elementData.maskId + ')');\r\n    }\r\n  }\r\n\r\n  if (data.ty === 'st' || data.ty === 'gs') {\r\n    pathElement.setAttribute('stroke-linecap', lineCapEnum[data.lc || 2]);\r\n    pathElement.setAttribute('stroke-linejoin', lineJoinEnum[data.lj || 2]);\r\n    pathElement.setAttribute('fill-opacity', '0');\r\n    if (data.lj === 1) {\r\n      pathElement.setAttribute('stroke-miterlimit', data.ml);\r\n    }\r\n  }\r\n\r\n  if (data.r === 2) {\r\n    pathElement.setAttribute('fill-rule', 'evenodd');\r\n  }\r\n\r\n  if (data.ln) {\r\n    pathElement.setAttribute('id', data.ln);\r\n  }\r\n  if (data.cl) {\r\n    pathElement.setAttribute('class', data.cl);\r\n  }\r\n  if (data.bm) {\r\n    pathElement.style['mix-blend-mode'] = getBlendMode(data.bm);\r\n  }\r\n  this.stylesList.push(styleOb);\r\n  this.addToAnimatedContents(data, elementData);\r\n  return elementData;\r\n};\r\n\r\nSVGShapeElement.prototype.createGroupElement = function (data) {\r\n  var elementData = new ShapeGroupData();\r\n  if (data.ln) {\r\n    elementData.gr.setAttribute('id', data.ln);\r\n  }\r\n  if (data.cl) {\r\n    elementData.gr.setAttribute('class', data.cl);\r\n  }\r\n  if (data.bm) {\r\n    elementData.gr.style['mix-blend-mode'] = getBlendMode(data.bm);\r\n  }\r\n  return elementData;\r\n};\r\n\r\nSVGShapeElement.prototype.createTransformElement = function (data, container) {\r\n  var transformProperty = TransformPropertyFactory.getTransformProperty(this, data, this);\r\n  var elementData = new SVGTransformData(transformProperty, transformProperty.o, container);\r\n  this.addToAnimatedContents(data, elementData);\r\n  return elementData;\r\n};\r\n\r\nSVGShapeElement.prototype.createShapeElement = function (data, ownTransformers, level) {\r\n  var ty = 4;\r\n  if (data.ty === 'rc') {\r\n    ty = 5;\r\n  } else if (data.ty === 'el') {\r\n    ty = 6;\r\n  } else if (data.ty === 'sr') {\r\n    ty = 7;\r\n  }\r\n  var shapeProperty = ShapePropertyFactory.getShapeProp(this, data, ty, this);\r\n  var elementData = new SVGShapeData(ownTransformers, level, shapeProperty);\r\n  this.shapes.push(elementData);\r\n  this.addShapeToModifiers(elementData);\r\n  this.addToAnimatedContents(data, elementData);\r\n  return elementData;\r\n};\r\n\r\nSVGShapeElement.prototype.addToAnimatedContents = function (data, element) {\r\n  var i = 0;\r\n  var len = this.animatedContents.length;\r\n  while (i < len) {\r\n    if (this.animatedContents[i].element === element) {\r\n      return;\r\n    }\r\n    i += 1;\r\n  }\r\n  this.animatedContents.push({\r\n    fn: SVGElementsRenderer.createRenderFunction(data),\r\n    element: element,\r\n    data: data,\r\n  });\r\n};\r\n\r\nSVGShapeElement.prototype.setElementStyles = function (elementData) {\r\n  var arr = elementData.styles;\r\n  var j;\r\n  var jLen = this.stylesList.length;\r\n  for (j = 0; j < jLen; j += 1) {\r\n    if (!this.stylesList[j].closed) {\r\n      arr.push(this.stylesList[j]);\r\n    }\r\n  }\r\n};\r\n\r\nSVGShapeElement.prototype.reloadShapes = function () {\r\n  this._isFirstFrame = true;\r\n  var i;\r\n  var len = this.itemsData.length;\r\n  for (i = 0; i < len; i += 1) {\r\n    this.prevViewData[i] = this.itemsData[i];\r\n  }\r\n  this.searchShapes(this.shapesData, this.itemsData, this.prevViewData, this.layerElement, 0, [], true);\r\n  this.filterUniqueShapes();\r\n  len = this.dynamicProperties.length;\r\n  for (i = 0; i < len; i += 1) {\r\n    this.dynamicProperties[i].getValue();\r\n  }\r\n  this.renderModifiers();\r\n};\r\n\r\nSVGShapeElement.prototype.searchShapes = function (arr, itemsData, prevViewData, container, level, transformers, render) {\r\n  var ownTransformers = [].concat(transformers);\r\n  var i;\r\n  var len = arr.length - 1;\r\n  var j;\r\n  var jLen;\r\n  var ownStyles = [];\r\n  var ownModifiers = [];\r\n  var currentTransform;\r\n  var modifier;\r\n  var processedPos;\r\n  for (i = len; i >= 0; i -= 1) {\r\n    processedPos = this.searchProcessedElement(arr[i]);\r\n    if (!processedPos) {\r\n      arr[i]._render = render;\r\n    } else {\r\n      itemsData[i] = prevViewData[processedPos - 1];\r\n    }\r\n    if (arr[i].ty === 'fl' || arr[i].ty === 'st' || arr[i].ty === 'gf' || arr[i].ty === 'gs') {\r\n      if (!processedPos) {\r\n        itemsData[i] = this.createStyleElement(arr[i], level);\r\n      } else {\r\n        itemsData[i].style.closed = false;\r\n      }\r\n      if (arr[i]._render) {\r\n        if (itemsData[i].style.pElem.parentNode !== container) {\r\n          container.appendChild(itemsData[i].style.pElem);\r\n        }\r\n      }\r\n      ownStyles.push(itemsData[i].style);\r\n    } else if (arr[i].ty === 'gr') {\r\n      if (!processedPos) {\r\n        itemsData[i] = this.createGroupElement(arr[i]);\r\n      } else {\r\n        jLen = itemsData[i].it.length;\r\n        for (j = 0; j < jLen; j += 1) {\r\n          itemsData[i].prevViewData[j] = itemsData[i].it[j];\r\n        }\r\n      }\r\n      this.searchShapes(arr[i].it, itemsData[i].it, itemsData[i].prevViewData, itemsData[i].gr, level + 1, ownTransformers, render);\r\n      if (arr[i]._render) {\r\n        if (itemsData[i].gr.parentNode !== container) {\r\n          container.appendChild(itemsData[i].gr);\r\n        }\r\n      }\r\n    } else if (arr[i].ty === 'tr') {\r\n      if (!processedPos) {\r\n        itemsData[i] = this.createTransformElement(arr[i], container);\r\n      }\r\n      currentTransform = itemsData[i].transform;\r\n      ownTransformers.push(currentTransform);\r\n    } else if (arr[i].ty === 'sh' || arr[i].ty === 'rc' || arr[i].ty === 'el' || arr[i].ty === 'sr') {\r\n      if (!processedPos) {\r\n        itemsData[i] = this.createShapeElement(arr[i], ownTransformers, level);\r\n      }\r\n      this.setElementStyles(itemsData[i]);\r\n    } else if (arr[i].ty === 'tm' || arr[i].ty === 'rd' || arr[i].ty === 'ms' || arr[i].ty === 'pb') {\r\n      if (!processedPos) {\r\n        modifier = ShapeModifiers.getModifier(arr[i].ty);\r\n        modifier.init(this, arr[i]);\r\n        itemsData[i] = modifier;\r\n        this.shapeModifiers.push(modifier);\r\n      } else {\r\n        modifier = itemsData[i];\r\n        modifier.closed = false;\r\n      }\r\n      ownModifiers.push(modifier);\r\n    } else if (arr[i].ty === 'rp') {\r\n      if (!processedPos) {\r\n        modifier = ShapeModifiers.getModifier(arr[i].ty);\r\n        itemsData[i] = modifier;\r\n        modifier.init(this, arr, i, itemsData);\r\n        this.shapeModifiers.push(modifier);\r\n        render = false;\r\n      } else {\r\n        modifier = itemsData[i];\r\n        modifier.closed = true;\r\n      }\r\n      ownModifiers.push(modifier);\r\n    }\r\n    this.addProcessedElement(arr[i], i + 1);\r\n  }\r\n  len = ownStyles.length;\r\n  for (i = 0; i < len; i += 1) {\r\n    ownStyles[i].closed = true;\r\n  }\r\n  len = ownModifiers.length;\r\n  for (i = 0; i < len; i += 1) {\r\n    ownModifiers[i].closed = true;\r\n  }\r\n};\r\n\r\nSVGShapeElement.prototype.renderInnerContent = function () {\r\n  this.renderModifiers();\r\n  var i;\r\n  var len = this.stylesList.length;\r\n  for (i = 0; i < len; i += 1) {\r\n    this.stylesList[i].reset();\r\n  }\r\n  this.renderShape();\r\n\r\n  for (i = 0; i < len; i += 1) {\r\n    if (this.stylesList[i]._mdf || this._isFirstFrame) {\r\n      if (this.stylesList[i].msElem) {\r\n        this.stylesList[i].msElem.setAttribute('d', this.stylesList[i].d);\r\n        // Adding M0 0 fixes same mask bug on all browsers\r\n        this.stylesList[i].d = 'M0 0' + this.stylesList[i].d;\r\n      }\r\n      this.stylesList[i].pElem.setAttribute('d', this.stylesList[i].d || 'M0 0');\r\n    }\r\n  }\r\n};\r\n\r\nSVGShapeElement.prototype.renderShape = function () {\r\n  var i;\r\n  var len = this.animatedContents.length;\r\n  var animatedContent;\r\n  for (i = 0; i < len; i += 1) {\r\n    animatedContent = this.animatedContents[i];\r\n    if ((this._isFirstFrame || animatedContent.element._isAnimated) && animatedContent.data !== true) {\r\n      animatedContent.fn(animatedContent.data, animatedContent.element, this._isFirstFrame);\r\n    }\r\n  }\r\n};\r\n\r\nSVGShapeElement.prototype.destroy = function () {\r\n  this.destroyBaseElement();\r\n  this.shapesData = null;\r\n  this.itemsData = null;\r\n};\r\n\r\n/* global createNS */\r\n\r\nfunction SVGTintFilter(filter, filterManager) {\r\n  this.filterManager = filterManager;\r\n  var feColorMatrix = createNS('feColorMatrix');\r\n  feColorMatrix.setAttribute('type', 'matrix');\r\n  feColorMatrix.setAttribute('color-interpolation-filters', 'linearRGB');\r\n  feColorMatrix.setAttribute('values', '0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0 0 0 1 0');\r\n  feColorMatrix.setAttribute('result', 'f1');\r\n  filter.appendChild(feColorMatrix);\r\n  feColorMatrix = createNS('feColorMatrix');\r\n  feColorMatrix.setAttribute('type', 'matrix');\r\n  feColorMatrix.setAttribute('color-interpolation-filters', 'sRGB');\r\n  feColorMatrix.setAttribute('values', '1 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 1 0');\r\n  feColorMatrix.setAttribute('result', 'f2');\r\n  filter.appendChild(feColorMatrix);\r\n  this.matrixFilter = feColorMatrix;\r\n  if (filterManager.effectElements[2].p.v !== 100 || filterManager.effectElements[2].p.k) {\r\n    var feMerge = createNS('feMerge');\r\n    filter.appendChild(feMerge);\r\n    var feMergeNode;\r\n    feMergeNode = createNS('feMergeNode');\r\n    feMergeNode.setAttribute('in', 'SourceGraphic');\r\n    feMerge.appendChild(feMergeNode);\r\n    feMergeNode = createNS('feMergeNode');\r\n    feMergeNode.setAttribute('in', 'f2');\r\n    feMerge.appendChild(feMergeNode);\r\n  }\r\n}\r\n\r\nSVGTintFilter.prototype.renderFrame = function (forceRender) {\r\n  if (forceRender || this.filterManager._mdf) {\r\n    var colorBlack = this.filterManager.effectElements[0].p.v;\r\n    var colorWhite = this.filterManager.effectElements[1].p.v;\r\n    var opacity = this.filterManager.effectElements[2].p.v / 100;\r\n    this.matrixFilter.setAttribute('values', (colorWhite[0] - colorBlack[0]) + ' 0 0 0 ' + colorBlack[0] + ' ' + (colorWhite[1] - colorBlack[1]) + ' 0 0 0 ' + colorBlack[1] + ' ' + (colorWhite[2] - colorBlack[2]) + ' 0 0 0 ' + colorBlack[2] + ' 0 0 0 ' + opacity + ' 0');\r\n  }\r\n};\r\n\r\n/* global createNS */\r\n\r\nfunction SVGFillFilter(filter, filterManager) {\r\n  this.filterManager = filterManager;\r\n  var feColorMatrix = createNS('feColorMatrix');\r\n  feColorMatrix.setAttribute('type', 'matrix');\r\n  feColorMatrix.setAttribute('color-interpolation-filters', 'sRGB');\r\n  feColorMatrix.setAttribute('values', '1 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 1 0');\r\n  filter.appendChild(feColorMatrix);\r\n  this.matrixFilter = feColorMatrix;\r\n}\r\nSVGFillFilter.prototype.renderFrame = function (forceRender) {\r\n  if (forceRender || this.filterManager._mdf) {\r\n    var color = this.filterManager.effectElements[2].p.v;\r\n    var opacity = this.filterManager.effectElements[6].p.v;\r\n    this.matrixFilter.setAttribute('values', '0 0 0 0 ' + color[0] + ' 0 0 0 0 ' + color[1] + ' 0 0 0 0 ' + color[2] + ' 0 0 0 ' + opacity + ' 0');\r\n  }\r\n};\r\n\r\n/* global createNS */\r\n\r\nfunction SVGGaussianBlurEffect(filter, filterManager) {\r\n  // Outset the filter region by 100% on all sides to accommodate blur expansion.\r\n  filter.setAttribute('x', '-100%');\r\n  filter.setAttribute('y', '-100%');\r\n  filter.setAttribute('width', '300%');\r\n  filter.setAttribute('height', '300%');\r\n\r\n  this.filterManager = filterManager;\r\n  var feGaussianBlur = createNS('feGaussianBlur');\r\n  filter.appendChild(feGaussianBlur);\r\n  this.feGaussianBlur = feGaussianBlur;\r\n}\r\n\r\nSVGGaussianBlurEffect.prototype.renderFrame = function (forceRender) {\r\n  if (forceRender || this.filterManager._mdf) {\r\n    // Empirical value, matching AE's blur appearance.\r\n    var kBlurrinessToSigma = 0.3;\r\n    var sigma = this.filterManager.effectElements[0].p.v * kBlurrinessToSigma;\r\n\r\n    // Dimensions mapping:\r\n    //\r\n    //   1 -> horizontal & vertical\r\n    //   2 -> horizontal only\r\n    //   3 -> vertical only\r\n    //\r\n    var dimensions = this.filterManager.effectElements[1].p.v;\r\n    var sigmaX = (dimensions == 3) ? 0 : sigma; // eslint-disable-line eqeqeq\r\n    var sigmaY = (dimensions == 2) ? 0 : sigma; // eslint-disable-line eqeqeq\r\n\r\n    this.feGaussianBlur.setAttribute('stdDeviation', sigmaX + ' ' + sigmaY);\r\n\r\n    // Repeat edges mapping:\r\n    //\r\n    //   0 -> off -> duplicate\r\n    //   1 -> on  -> wrap\r\n    var edgeMode = (this.filterManager.effectElements[2].p.v == 1) ? 'wrap' : 'duplicate'; // eslint-disable-line eqeqeq\r\n    this.feGaussianBlur.setAttribute('edgeMode', edgeMode);\r\n  }\r\n};\r\n\r\n/* global createNS, createElementID, locationHref, bmFloor */\r\n\r\nfunction SVGStrokeEffect(elem, filterManager) {\r\n  this.initialized = false;\r\n  this.filterManager = filterManager;\r\n  this.elem = elem;\r\n  this.paths = [];\r\n}\r\n\r\nSVGStrokeEffect.prototype.initialize = function () {\r\n  var elemChildren = this.elem.layerElement.children || this.elem.layerElement.childNodes;\r\n  var path;\r\n  var groupPath;\r\n  var i;\r\n  var len;\r\n  if (this.filterManager.effectElements[1].p.v === 1) {\r\n    len = this.elem.maskManager.masksProperties.length;\r\n    i = 0;\r\n  } else {\r\n    i = this.filterManager.effectElements[0].p.v - 1;\r\n    len = i + 1;\r\n  }\r\n  groupPath = createNS('g');\r\n  groupPath.setAttribute('fill', 'none');\r\n  groupPath.setAttribute('stroke-linecap', 'round');\r\n  groupPath.setAttribute('stroke-dashoffset', 1);\r\n  for (i; i < len; i += 1) {\r\n    path = createNS('path');\r\n    groupPath.appendChild(path);\r\n    this.paths.push({ p: path, m: i });\r\n  }\r\n  if (this.filterManager.effectElements[10].p.v === 3) {\r\n    var mask = createNS('mask');\r\n    var id = createElementID();\r\n    mask.setAttribute('id', id);\r\n    mask.setAttribute('mask-type', 'alpha');\r\n    mask.appendChild(groupPath);\r\n    this.elem.globalData.defs.appendChild(mask);\r\n    var g = createNS('g');\r\n    g.setAttribute('mask', 'url(' + locationHref + '#' + id + ')');\r\n    while (elemChildren[0]) {\r\n      g.appendChild(elemChildren[0]);\r\n    }\r\n    this.elem.layerElement.appendChild(g);\r\n    this.masker = mask;\r\n    groupPath.setAttribute('stroke', '#fff');\r\n  } else if (this.filterManager.effectElements[10].p.v === 1 || this.filterManager.effectElements[10].p.v === 2) {\r\n    if (this.filterManager.effectElements[10].p.v === 2) {\r\n      elemChildren = this.elem.layerElement.children || this.elem.layerElement.childNodes;\r\n      while (elemChildren.length) {\r\n        this.elem.layerElement.removeChild(elemChildren[0]);\r\n      }\r\n    }\r\n    this.elem.layerElement.appendChild(groupPath);\r\n    this.elem.layerElement.removeAttribute('mask');\r\n    groupPath.setAttribute('stroke', '#fff');\r\n  }\r\n  this.initialized = true;\r\n  this.pathMasker = groupPath;\r\n};\r\n\r\nSVGStrokeEffect.prototype.renderFrame = function (forceRender) {\r\n  if (!this.initialized) {\r\n    this.initialize();\r\n  }\r\n  var i;\r\n  var len = this.paths.length;\r\n  var mask;\r\n  var path;\r\n  for (i = 0; i < len; i += 1) {\r\n    if (this.paths[i].m !== -1) {\r\n      mask = this.elem.maskManager.viewData[this.paths[i].m];\r\n      path = this.paths[i].p;\r\n      if (forceRender || this.filterManager._mdf || mask.prop._mdf) {\r\n        path.setAttribute('d', mask.lastPath);\r\n      }\r\n      if (forceRender || this.filterManager.effectElements[9].p._mdf || this.filterManager.effectElements[4].p._mdf || this.filterManager.effectElements[7].p._mdf || this.filterManager.effectElements[8].p._mdf || mask.prop._mdf) {\r\n        var dasharrayValue;\r\n        if (this.filterManager.effectElements[7].p.v !== 0 || this.filterManager.effectElements[8].p.v !== 100) {\r\n          var s = Math.min(this.filterManager.effectElements[7].p.v, this.filterManager.effectElements[8].p.v) * 0.01;\r\n          var e = Math.max(this.filterManager.effectElements[7].p.v, this.filterManager.effectElements[8].p.v) * 0.01;\r\n          var l = path.getTotalLength();\r\n          dasharrayValue = '0 0 0 ' + l * s + ' ';\r\n          var lineLength = l * (e - s);\r\n          var segment = 1 + this.filterManager.effectElements[4].p.v * 2 * this.filterManager.effectElements[9].p.v * 0.01;\r\n          var units = Math.floor(lineLength / segment);\r\n          var j;\r\n          for (j = 0; j < units; j += 1) {\r\n            dasharrayValue += '1 ' + this.filterManager.effectElements[4].p.v * 2 * this.filterManager.effectElements[9].p.v * 0.01 + ' ';\r\n          }\r\n          dasharrayValue += '0 ' + l * 10 + ' 0 0';\r\n        } else {\r\n          dasharrayValue = '1 ' + this.filterManager.effectElements[4].p.v * 2 * this.filterManager.effectElements[9].p.v * 0.01;\r\n        }\r\n        path.setAttribute('stroke-dasharray', dasharrayValue);\r\n      }\r\n    }\r\n  }\r\n  if (forceRender || this.filterManager.effectElements[4].p._mdf) {\r\n    this.pathMasker.setAttribute('stroke-width', this.filterManager.effectElements[4].p.v * 2);\r\n  }\r\n\r\n  if (forceRender || this.filterManager.effectElements[6].p._mdf) {\r\n    this.pathMasker.setAttribute('opacity', this.filterManager.effectElements[6].p.v);\r\n  }\r\n  if (this.filterManager.effectElements[10].p.v === 1 || this.filterManager.effectElements[10].p.v === 2) {\r\n    if (forceRender || this.filterManager.effectElements[3].p._mdf) {\r\n      var color = this.filterManager.effectElements[3].p.v;\r\n      this.pathMasker.setAttribute('stroke', 'rgb(' + bmFloor(color[0] * 255) + ',' + bmFloor(color[1] * 255) + ',' + bmFloor(color[2] * 255) + ')');\r\n    }\r\n  }\r\n};\r\n\r\n/* global createNS */\r\n\r\nfunction SVGTritoneFilter(filter, filterManager) {\r\n  this.filterManager = filterManager;\r\n  var feColorMatrix = createNS('feColorMatrix');\r\n  feColorMatrix.setAttribute('type', 'matrix');\r\n  feColorMatrix.setAttribute('color-interpolation-filters', 'linearRGB');\r\n  feColorMatrix.setAttribute('values', '0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0 0 0 1 0');\r\n  feColorMatrix.setAttribute('result', 'f1');\r\n  filter.appendChild(feColorMatrix);\r\n  var feComponentTransfer = createNS('feComponentTransfer');\r\n  feComponentTransfer.setAttribute('color-interpolation-filters', 'sRGB');\r\n  filter.appendChild(feComponentTransfer);\r\n  this.matrixFilter = feComponentTransfer;\r\n  var feFuncR = createNS('feFuncR');\r\n  feFuncR.setAttribute('type', 'table');\r\n  feComponentTransfer.appendChild(feFuncR);\r\n  this.feFuncR = feFuncR;\r\n  var feFuncG = createNS('feFuncG');\r\n  feFuncG.setAttribute('type', 'table');\r\n  feComponentTransfer.appendChild(feFuncG);\r\n  this.feFuncG = feFuncG;\r\n  var feFuncB = createNS('feFuncB');\r\n  feFuncB.setAttribute('type', 'table');\r\n  feComponentTransfer.appendChild(feFuncB);\r\n  this.feFuncB = feFuncB;\r\n}\r\n\r\nSVGTritoneFilter.prototype.renderFrame = function (forceRender) {\r\n  if (forceRender || this.filterManager._mdf) {\r\n    var color1 = this.filterManager.effectElements[0].p.v;\r\n    var color2 = this.filterManager.effectElements[1].p.v;\r\n    var color3 = this.filterManager.effectElements[2].p.v;\r\n    var tableR = color3[0] + ' ' + color2[0] + ' ' + color1[0];\r\n    var tableG = color3[1] + ' ' + color2[1] + ' ' + color1[1];\r\n    var tableB = color3[2] + ' ' + color2[2] + ' ' + color1[2];\r\n    this.feFuncR.setAttribute('tableValues', tableR);\r\n    this.feFuncG.setAttribute('tableValues', tableG);\r\n    this.feFuncB.setAttribute('tableValues', tableB);\r\n    // var opacity = this.filterManager.effectElements[2].p.v/100;\r\n    // this.matrixFilter.setAttribute('values',(colorWhite[0]- colorBlack[0])+' 0 0 0 '+ colorBlack[0] +' '+ (colorWhite[1]- colorBlack[1]) +' 0 0 0 '+ colorBlack[1] +' '+ (colorWhite[2]- colorBlack[2]) +' 0 0 0 '+ colorBlack[2] +' 0 0 0 ' + opacity + ' 0');\r\n  }\r\n};\r\n\r\n/* global createNS */\r\n\r\nfunction SVGProLevelsFilter(filter, filterManager) {\r\n  this.filterManager = filterManager;\r\n  var effectElements = this.filterManager.effectElements;\r\n  var feComponentTransfer = createNS('feComponentTransfer');\r\n\r\n  if (effectElements[10].p.k || effectElements[10].p.v !== 0 || effectElements[11].p.k || effectElements[11].p.v !== 1 || effectElements[12].p.k || effectElements[12].p.v !== 1 || effectElements[13].p.k || effectElements[13].p.v !== 0 || effectElements[14].p.k || effectElements[14].p.v !== 1) {\r\n    this.feFuncR = this.createFeFunc('feFuncR', feComponentTransfer);\r\n  }\r\n  if (effectElements[17].p.k || effectElements[17].p.v !== 0 || effectElements[18].p.k || effectElements[18].p.v !== 1 || effectElements[19].p.k || effectElements[19].p.v !== 1 || effectElements[20].p.k || effectElements[20].p.v !== 0 || effectElements[21].p.k || effectElements[21].p.v !== 1) {\r\n    this.feFuncG = this.createFeFunc('feFuncG', feComponentTransfer);\r\n  }\r\n  if (effectElements[24].p.k || effectElements[24].p.v !== 0 || effectElements[25].p.k || effectElements[25].p.v !== 1 || effectElements[26].p.k || effectElements[26].p.v !== 1 || effectElements[27].p.k || effectElements[27].p.v !== 0 || effectElements[28].p.k || effectElements[28].p.v !== 1) {\r\n    this.feFuncB = this.createFeFunc('feFuncB', feComponentTransfer);\r\n  }\r\n  if (effectElements[31].p.k || effectElements[31].p.v !== 0 || effectElements[32].p.k || effectElements[32].p.v !== 1 || effectElements[33].p.k || effectElements[33].p.v !== 1 || effectElements[34].p.k || effectElements[34].p.v !== 0 || effectElements[35].p.k || effectElements[35].p.v !== 1) {\r\n    this.feFuncA = this.createFeFunc('feFuncA', feComponentTransfer);\r\n  }\r\n\r\n  if (this.feFuncR || this.feFuncG || this.feFuncB || this.feFuncA) {\r\n    feComponentTransfer.setAttribute('color-interpolation-filters', 'sRGB');\r\n    filter.appendChild(feComponentTransfer);\r\n    feComponentTransfer = createNS('feComponentTransfer');\r\n  }\r\n\r\n  if (effectElements[3].p.k || effectElements[3].p.v !== 0 || effectElements[4].p.k || effectElements[4].p.v !== 1 || effectElements[5].p.k || effectElements[5].p.v !== 1 || effectElements[6].p.k || effectElements[6].p.v !== 0 || effectElements[7].p.k || effectElements[7].p.v !== 1) {\r\n    feComponentTransfer.setAttribute('color-interpolation-filters', 'sRGB');\r\n    filter.appendChild(feComponentTransfer);\r\n    this.feFuncRComposed = this.createFeFunc('feFuncR', feComponentTransfer);\r\n    this.feFuncGComposed = this.createFeFunc('feFuncG', feComponentTransfer);\r\n    this.feFuncBComposed = this.createFeFunc('feFuncB', feComponentTransfer);\r\n  }\r\n}\r\n\r\nSVGProLevelsFilter.prototype.createFeFunc = function (type, feComponentTransfer) {\r\n  var feFunc = createNS(type);\r\n  feFunc.setAttribute('type', 'table');\r\n  feComponentTransfer.appendChild(feFunc);\r\n  return feFunc;\r\n};\r\n\r\nSVGProLevelsFilter.prototype.getTableValue = function (inputBlack, inputWhite, gamma, outputBlack, outputWhite) {\r\n  var cnt = 0;\r\n  var segments = 256;\r\n  var perc;\r\n  var min = Math.min(inputBlack, inputWhite);\r\n  var max = Math.max(inputBlack, inputWhite);\r\n  var table = Array.call(null, { length: segments });\r\n  var colorValue;\r\n  var pos = 0;\r\n  var outputDelta = outputWhite - outputBlack;\r\n  var inputDelta = inputWhite - inputBlack;\r\n  while (cnt <= 256) {\r\n    perc = cnt / 256;\r\n    if (perc <= min) {\r\n      colorValue = inputDelta < 0 ? outputWhite : outputBlack;\r\n    } else if (perc >= max) {\r\n      colorValue = inputDelta < 0 ? outputBlack : outputWhite;\r\n    } else {\r\n      colorValue = (outputBlack + outputDelta * Math.pow((perc - inputBlack) / inputDelta, 1 / gamma));\r\n    }\r\n    table[pos] = colorValue;\r\n    pos += 1;\r\n    cnt += 256 / (segments - 1);\r\n  }\r\n  return table.join(' ');\r\n};\r\n\r\nSVGProLevelsFilter.prototype.renderFrame = function (forceRender) {\r\n  if (forceRender || this.filterManager._mdf) {\r\n    var val;\r\n    var effectElements = this.filterManager.effectElements;\r\n    if (this.feFuncRComposed && (forceRender || effectElements[3].p._mdf || effectElements[4].p._mdf || effectElements[5].p._mdf || effectElements[6].p._mdf || effectElements[7].p._mdf)) {\r\n      val = this.getTableValue(effectElements[3].p.v, effectElements[4].p.v, effectElements[5].p.v, effectElements[6].p.v, effectElements[7].p.v);\r\n      this.feFuncRComposed.setAttribute('tableValues', val);\r\n      this.feFuncGComposed.setAttribute('tableValues', val);\r\n      this.feFuncBComposed.setAttribute('tableValues', val);\r\n    }\r\n\r\n    if (this.feFuncR && (forceRender || effectElements[10].p._mdf || effectElements[11].p._mdf || effectElements[12].p._mdf || effectElements[13].p._mdf || effectElements[14].p._mdf)) {\r\n      val = this.getTableValue(effectElements[10].p.v, effectElements[11].p.v, effectElements[12].p.v, effectElements[13].p.v, effectElements[14].p.v);\r\n      this.feFuncR.setAttribute('tableValues', val);\r\n    }\r\n\r\n    if (this.feFuncG && (forceRender || effectElements[17].p._mdf || effectElements[18].p._mdf || effectElements[19].p._mdf || effectElements[20].p._mdf || effectElements[21].p._mdf)) {\r\n      val = this.getTableValue(effectElements[17].p.v, effectElements[18].p.v, effectElements[19].p.v, effectElements[20].p.v, effectElements[21].p.v);\r\n      this.feFuncG.setAttribute('tableValues', val);\r\n    }\r\n\r\n    if (this.feFuncB && (forceRender || effectElements[24].p._mdf || effectElements[25].p._mdf || effectElements[26].p._mdf || effectElements[27].p._mdf || effectElements[28].p._mdf)) {\r\n      val = this.getTableValue(effectElements[24].p.v, effectElements[25].p.v, effectElements[26].p.v, effectElements[27].p.v, effectElements[28].p.v);\r\n      this.feFuncB.setAttribute('tableValues', val);\r\n    }\r\n\r\n    if (this.feFuncA && (forceRender || effectElements[31].p._mdf || effectElements[32].p._mdf || effectElements[33].p._mdf || effectElements[34].p._mdf || effectElements[35].p._mdf)) {\r\n      val = this.getTableValue(effectElements[31].p.v, effectElements[32].p.v, effectElements[33].p.v, effectElements[34].p.v, effectElements[35].p.v);\r\n      this.feFuncA.setAttribute('tableValues', val);\r\n    }\r\n  }\r\n};\r\n\r\n/* global createNS, rgbToHex, degToRads */\r\n\r\nfunction SVGDropShadowEffect(filter, filterManager) {\r\n  var filterSize = filterManager.container.globalData.renderConfig.filterSize;\r\n  filter.setAttribute('x', filterSize.x);\r\n  filter.setAttribute('y', filterSize.y);\r\n  filter.setAttribute('width', filterSize.width);\r\n  filter.setAttribute('height', filterSize.height);\r\n  this.filterManager = filterManager;\r\n\r\n  var feGaussianBlur = createNS('feGaussianBlur');\r\n  feGaussianBlur.setAttribute('in', 'SourceAlpha');\r\n  feGaussianBlur.setAttribute('result', 'drop_shadow_1');\r\n  feGaussianBlur.setAttribute('stdDeviation', '0');\r\n  this.feGaussianBlur = feGaussianBlur;\r\n  filter.appendChild(feGaussianBlur);\r\n\r\n  var feOffset = createNS('feOffset');\r\n  feOffset.setAttribute('dx', '25');\r\n  feOffset.setAttribute('dy', '0');\r\n  feOffset.setAttribute('in', 'drop_shadow_1');\r\n  feOffset.setAttribute('result', 'drop_shadow_2');\r\n  this.feOffset = feOffset;\r\n  filter.appendChild(feOffset);\r\n  var feFlood = createNS('feFlood');\r\n  feFlood.setAttribute('flood-color', '#00ff00');\r\n  feFlood.setAttribute('flood-opacity', '1');\r\n  feFlood.setAttribute('result', 'drop_shadow_3');\r\n  this.feFlood = feFlood;\r\n  filter.appendChild(feFlood);\r\n\r\n  var feComposite = createNS('feComposite');\r\n  feComposite.setAttribute('in', 'drop_shadow_3');\r\n  feComposite.setAttribute('in2', 'drop_shadow_2');\r\n  feComposite.setAttribute('operator', 'in');\r\n  feComposite.setAttribute('result', 'drop_shadow_4');\r\n  filter.appendChild(feComposite);\r\n\r\n  var feMerge = createNS('feMerge');\r\n  filter.appendChild(feMerge);\r\n  var feMergeNode;\r\n  feMergeNode = createNS('feMergeNode');\r\n  feMerge.appendChild(feMergeNode);\r\n  feMergeNode = createNS('feMergeNode');\r\n  feMergeNode.setAttribute('in', 'SourceGraphic');\r\n  this.feMergeNode = feMergeNode;\r\n  this.feMerge = feMerge;\r\n  this.originalNodeAdded = false;\r\n  feMerge.appendChild(feMergeNode);\r\n}\r\n\r\nSVGDropShadowEffect.prototype.renderFrame = function (forceRender) {\r\n  if (forceRender || this.filterManager._mdf) {\r\n    if (forceRender || this.filterManager.effectElements[4].p._mdf) {\r\n      this.feGaussianBlur.setAttribute('stdDeviation', this.filterManager.effectElements[4].p.v / 4);\r\n    }\r\n    if (forceRender || this.filterManager.effectElements[0].p._mdf) {\r\n      var col = this.filterManager.effectElements[0].p.v;\r\n      this.feFlood.setAttribute('flood-color', rgbToHex(Math.round(col[0] * 255), Math.round(col[1] * 255), Math.round(col[2] * 255)));\r\n    }\r\n    if (forceRender || this.filterManager.effectElements[1].p._mdf) {\r\n      this.feFlood.setAttribute('flood-opacity', this.filterManager.effectElements[1].p.v / 255);\r\n    }\r\n    if (forceRender || this.filterManager.effectElements[2].p._mdf || this.filterManager.effectElements[3].p._mdf) {\r\n      var distance = this.filterManager.effectElements[3].p.v;\r\n      var angle = (this.filterManager.effectElements[2].p.v - 90) * degToRads;\r\n      var x = distance * Math.cos(angle);\r\n      var y = distance * Math.sin(angle);\r\n      this.feOffset.setAttribute('dx', x);\r\n      this.feOffset.setAttribute('dy', y);\r\n    }\r\n    /* if(forceRender || this.filterManager.effectElements[5].p._mdf){\r\n            if(this.filterManager.effectElements[5].p.v === 1 && this.originalNodeAdded) {\r\n                this.feMerge.removeChild(this.feMergeNode);\r\n                this.originalNodeAdded = false;\r\n            } else if(this.filterManager.effectElements[5].p.v === 0 && !this.originalNodeAdded) {\r\n                this.feMerge.appendChild(this.feMergeNode);\r\n                this.originalNodeAdded = true;\r\n            }\r\n        } */\r\n  }\r\n};\r\n\r\n/* global createElementID, createNS */\r\n\r\nvar _svgMatteSymbols = [];\r\n\r\nfunction SVGMatte3Effect(filterElem, filterManager, elem) {\r\n  this.initialized = false;\r\n  this.filterManager = filterManager;\r\n  this.filterElem = filterElem;\r\n  this.elem = elem;\r\n  elem.matteElement = createNS('g');\r\n  elem.matteElement.appendChild(elem.layerElement);\r\n  elem.matteElement.appendChild(elem.transformedElement);\r\n  elem.baseElement = elem.matteElement;\r\n}\r\n\r\nSVGMatte3Effect.prototype.findSymbol = function (mask) {\r\n  var i = 0;\r\n  var len = _svgMatteSymbols.length;\r\n  while (i < len) {\r\n    if (_svgMatteSymbols[i] === mask) {\r\n      return _svgMatteSymbols[i];\r\n    }\r\n    i += 1;\r\n  }\r\n  return null;\r\n};\r\n\r\nSVGMatte3Effect.prototype.replaceInParent = function (mask, symbolId) {\r\n  var parentNode = mask.layerElement.parentNode;\r\n  if (!parentNode) {\r\n    return;\r\n  }\r\n  var children = parentNode.children;\r\n  var i = 0;\r\n  var len = children.length;\r\n  while (i < len) {\r\n    if (children[i] === mask.layerElement) {\r\n      break;\r\n    }\r\n    i += 1;\r\n  }\r\n  var nextChild;\r\n  if (i <= len - 2) {\r\n    nextChild = children[i + 1];\r\n  }\r\n  var useElem = createNS('use');\r\n  useElem.setAttribute('href', '#' + symbolId);\r\n  if (nextChild) {\r\n    parentNode.insertBefore(useElem, nextChild);\r\n  } else {\r\n    parentNode.appendChild(useElem);\r\n  }\r\n};\r\n\r\nSVGMatte3Effect.prototype.setElementAsMask = function (elem, mask) {\r\n  if (!this.findSymbol(mask)) {\r\n    var symbolId = createElementID();\r\n    var masker = createNS('mask');\r\n    masker.setAttribute('id', mask.layerId);\r\n    masker.setAttribute('mask-type', 'alpha');\r\n    _svgMatteSymbols.push(mask);\r\n    var defs = elem.globalData.defs;\r\n    defs.appendChild(masker);\r\n    var symbol = createNS('symbol');\r\n    symbol.setAttribute('id', symbolId);\r\n    this.replaceInParent(mask, symbolId);\r\n    symbol.appendChild(mask.layerElement);\r\n    defs.appendChild(symbol);\r\n    var useElem = createNS('use');\r\n    useElem.setAttribute('href', '#' + symbolId);\r\n    masker.appendChild(useElem);\r\n    mask.data.hd = false;\r\n    mask.show();\r\n  }\r\n  elem.setMatte(mask.layerId);\r\n};\r\n\r\nSVGMatte3Effect.prototype.initialize = function () {\r\n  var ind = this.filterManager.effectElements[0].p.v;\r\n  var elements = this.elem.comp.elements;\r\n  var i = 0;\r\n  var len = elements.length;\r\n  while (i < len) {\r\n    if (elements[i] && elements[i].data.ind === ind) {\r\n      this.setElementAsMask(this.elem, elements[i]);\r\n    }\r\n    i += 1;\r\n  }\r\n  this.initialized = true;\r\n};\r\n\r\nSVGMatte3Effect.prototype.renderFrame = function () {\r\n  if (!this.initialized) {\r\n    this.initialize();\r\n  }\r\n};\r\n\r\n/* exported SVGEffects */\r\n\r\nfunction SVGEffects() {}\r\n\r\n/* global createTag, AnimationItem */\r\n/* exported animationManager */\r\n\r\nvar animationManager = (function () {\r\n  var moduleOb = {};\r\n  var registeredAnimations = [];\r\n  var initTime = 0;\r\n  var len = 0;\r\n  var playingAnimationsNum = 0;\r\n  var _stopped = true;\r\n  var _isFrozen = false;\r\n\r\n  function removeElement(ev) {\r\n    var i = 0;\r\n    var animItem = ev.target;\r\n    while (i < len) {\r\n      if (registeredAnimations[i].animation === animItem) {\r\n        registeredAnimations.splice(i, 1);\r\n        i -= 1;\r\n        len -= 1;\r\n        if (!animItem.isPaused) {\r\n          subtractPlayingCount();\r\n        }\r\n      }\r\n      i += 1;\r\n    }\r\n  }\r\n\r\n  function registerAnimation(element, animationData) {\r\n    if (!element) {\r\n      return null;\r\n    }\r\n    var i = 0;\r\n    while (i < len) {\r\n      if (registeredAnimations[i].elem === element && registeredAnimations[i].elem !== null) {\r\n        return registeredAnimations[i].animation;\r\n      }\r\n      i += 1;\r\n    }\r\n    var animItem = new AnimationItem();\r\n    setupAnimation(animItem, element);\r\n    animItem.setData(element, animationData);\r\n    return animItem;\r\n  }\r\n\r\n  function getRegisteredAnimations() {\r\n    var i;\r\n    var lenAnims = registeredAnimations.length;\r\n    var animations = [];\r\n    for (i = 0; i < lenAnims; i += 1) {\r\n      animations.push(registeredAnimations[i].animation);\r\n    }\r\n    return animations;\r\n  }\r\n\r\n  function addPlayingCount() {\r\n    playingAnimationsNum += 1;\r\n    activate();\r\n  }\r\n\r\n  function subtractPlayingCount() {\r\n    playingAnimationsNum -= 1;\r\n  }\r\n\r\n  function setupAnimation(animItem, element) {\r\n    animItem.addEventListener('destroy', removeElement);\r\n    animItem.addEventListener('_active', addPlayingCount);\r\n    animItem.addEventListener('_idle', subtractPlayingCount);\r\n    registeredAnimations.push({ elem: element, animation: animItem });\r\n    len += 1;\r\n  }\r\n\r\n  function loadAnimation(params) {\r\n    var animItem = new AnimationItem();\r\n    setupAnimation(animItem, null);\r\n    animItem.setParams(params);\r\n    return animItem;\r\n  }\r\n\r\n  function setSpeed(val, animation) {\r\n    var i;\r\n    for (i = 0; i < len; i += 1) {\r\n      registeredAnimations[i].animation.setSpeed(val, animation);\r\n    }\r\n  }\r\n\r\n  function setDirection(val, animation) {\r\n    var i;\r\n    for (i = 0; i < len; i += 1) {\r\n      registeredAnimations[i].animation.setDirection(val, animation);\r\n    }\r\n  }\r\n\r\n  function play(animation) {\r\n    var i;\r\n    for (i = 0; i < len; i += 1) {\r\n      registeredAnimations[i].animation.play(animation);\r\n    }\r\n  }\r\n  function resume(nowTime) {\r\n    var elapsedTime = nowTime - initTime;\r\n    var i;\r\n    for (i = 0; i < len; i += 1) {\r\n      registeredAnimations[i].animation.advanceTime(elapsedTime);\r\n    }\r\n    initTime = nowTime;\r\n    if (playingAnimationsNum && !_isFrozen) {\r\n      window.requestAnimationFrame(resume);\r\n    } else {\r\n      _stopped = true;\r\n    }\r\n  }\r\n\r\n  function first(nowTime) {\r\n    initTime = nowTime;\r\n    window.requestAnimationFrame(resume);\r\n  }\r\n\r\n  function pause(animation) {\r\n    var i;\r\n    for (i = 0; i < len; i += 1) {\r\n      registeredAnimations[i].animation.pause(animation);\r\n    }\r\n  }\r\n\r\n  function goToAndStop(value, isFrame, animation) {\r\n    var i;\r\n    for (i = 0; i < len; i += 1) {\r\n      registeredAnimations[i].animation.goToAndStop(value, isFrame, animation);\r\n    }\r\n  }\r\n\r\n  function stop(animation) {\r\n    var i;\r\n    for (i = 0; i < len; i += 1) {\r\n      registeredAnimations[i].animation.stop(animation);\r\n    }\r\n  }\r\n\r\n  function togglePause(animation) {\r\n    var i;\r\n    for (i = 0; i < len; i += 1) {\r\n      registeredAnimations[i].animation.togglePause(animation);\r\n    }\r\n  }\r\n\r\n  function destroy(animation) {\r\n    var i;\r\n    for (i = (len - 1); i >= 0; i -= 1) {\r\n      registeredAnimations[i].animation.destroy(animation);\r\n    }\r\n  }\r\n\r\n  function searchAnimations(animationData, standalone, renderer) {\r\n    var animElements = [].concat([].slice.call(document.getElementsByClassName('lottie')),\r\n      [].slice.call(document.getElementsByClassName('bodymovin')));\r\n    var i;\r\n    var lenAnims = animElements.length;\r\n    for (i = 0; i < lenAnims; i += 1) {\r\n      if (renderer) {\r\n        animElements[i].setAttribute('data-bm-type', renderer);\r\n      }\r\n      registerAnimation(animElements[i], animationData);\r\n    }\r\n    if (standalone && lenAnims === 0) {\r\n      if (!renderer) {\r\n        renderer = 'svg';\r\n      }\r\n      var body = document.getElementsByTagName('body')[0];\r\n      body.innerText = '';\r\n      var div = createTag('div');\r\n      div.style.width = '100%';\r\n      div.style.height = '100%';\r\n      div.setAttribute('data-bm-type', renderer);\r\n      body.appendChild(div);\r\n      registerAnimation(div, animationData);\r\n    }\r\n  }\r\n\r\n  function resize() {\r\n    var i;\r\n    for (i = 0; i < len; i += 1) {\r\n      registeredAnimations[i].animation.resize();\r\n    }\r\n  }\r\n\r\n  function activate() {\r\n    if (!_isFrozen && playingAnimationsNum) {\r\n      if (_stopped) {\r\n        window.requestAnimationFrame(first);\r\n        _stopped = false;\r\n      }\r\n    }\r\n  }\r\n\r\n  function freeze() {\r\n    _isFrozen = true;\r\n  }\r\n\r\n  function unfreeze() {\r\n    _isFrozen = false;\r\n    activate();\r\n  }\r\n\r\n  function setVolume(val, animation) {\r\n    var i;\r\n    for (i = 0; i < len; i += 1) {\r\n      registeredAnimations[i].animation.setVolume(val, animation);\r\n    }\r\n  }\r\n\r\n  function mute(animation) {\r\n    var i;\r\n    for (i = 0; i < len; i += 1) {\r\n      registeredAnimations[i].animation.mute(animation);\r\n    }\r\n  }\r\n\r\n  function unmute(animation) {\r\n    var i;\r\n    for (i = 0; i < len; i += 1) {\r\n      registeredAnimations[i].animation.unmute(animation);\r\n    }\r\n  }\r\n\r\n  moduleOb.registerAnimation = registerAnimation;\r\n  moduleOb.loadAnimation = loadAnimation;\r\n  moduleOb.setSpeed = setSpeed;\r\n  moduleOb.setDirection = setDirection;\r\n  moduleOb.play = play;\r\n  moduleOb.pause = pause;\r\n  moduleOb.stop = stop;\r\n  moduleOb.togglePause = togglePause;\r\n  moduleOb.searchAnimations = searchAnimations;\r\n  moduleOb.resize = resize;\r\n  // moduleOb.start = start;\r\n  moduleOb.goToAndStop = goToAndStop;\r\n  moduleOb.destroy = destroy;\r\n  moduleOb.freeze = freeze;\r\n  moduleOb.unfreeze = unfreeze;\r\n  moduleOb.setVolume = setVolume;\r\n  moduleOb.mute = mute;\r\n  moduleOb.unmute = unmute;\r\n  moduleOb.getRegisteredAnimations = getRegisteredAnimations;\r\n  return moduleOb;\r\n}());\r\n\r\n/* global createElementID, subframeEnabled, ProjectInterface, ImagePreloader, audioControllerFactory, extendPrototype, BaseEvent,\r\nCanvasRenderer, SVGRenderer, HybridRenderer, dataManager, expressionsPlugin, BMEnterFrameEvent, BMCompleteLoopEvent,\r\nBMCompleteEvent, BMSegmentStartEvent, BMDestroyEvent, BMEnterFrameEvent, BMCompleteLoopEvent, BMCompleteEvent, BMSegmentStartEvent,\r\nBMDestroyEvent, BMRenderFrameErrorEvent, BMConfigErrorEvent, markerParser */\r\n\r\nvar AnimationItem = function () {\r\n  this._cbs = [];\r\n  this.name = '';\r\n  this.path = '';\r\n  this.isLoaded = false;\r\n  this.currentFrame = 0;\r\n  this.currentRawFrame = 0;\r\n  this.firstFrame = 0;\r\n  this.totalFrames = 0;\r\n  this.frameRate = 0;\r\n  this.frameMult = 0;\r\n  this.playSpeed = 1;\r\n  this.playDirection = 1;\r\n  this.playCount = 0;\r\n  this.animationData = {};\r\n  this.assets = [];\r\n  this.isPaused = true;\r\n  this.autoplay = false;\r\n  this.loop = true;\r\n  this.renderer = null;\r\n  this.animationID = createElementID();\r\n  this.assetsPath = '';\r\n  this.timeCompleted = 0;\r\n  this.segmentPos = 0;\r\n  this.isSubframeEnabled = subframeEnabled;\r\n  this.segments = [];\r\n  this._idle = true;\r\n  this._completedLoop = false;\r\n  this.projectInterface = ProjectInterface();\r\n  this.imagePreloader = new ImagePreloader();\r\n  this.audioController = audioControllerFactory();\r\n  this.markers = [];\r\n  this.configAnimation = this.configAnimation.bind(this);\r\n  this.onSetupError = this.onSetupError.bind(this);\r\n  this.onSegmentComplete = this.onSegmentComplete.bind(this);\r\n};\r\n\r\nextendPrototype([BaseEvent], AnimationItem);\r\n\r\nAnimationItem.prototype.setParams = function (params) {\r\n  if (params.wrapper || params.container) {\r\n    this.wrapper = params.wrapper || params.container;\r\n  }\r\n  var animType = 'svg';\r\n  if (params.animType) {\r\n    animType = params.animType;\r\n  } else if (params.renderer) {\r\n    animType = params.renderer;\r\n  }\r\n  switch (animType) {\r\n    case 'canvas':\r\n      this.renderer = new CanvasRenderer(this, params.rendererSettings);\r\n      break;\r\n    case 'svg':\r\n      this.renderer = new SVGRenderer(this, params.rendererSettings);\r\n      break;\r\n    default:\r\n      this.renderer = new HybridRenderer(this, params.rendererSettings);\r\n      break;\r\n  }\r\n  this.imagePreloader.setCacheType(animType, this.renderer.globalData.defs);\r\n  this.renderer.setProjectInterface(this.projectInterface);\r\n  this.animType = animType;\r\n  if (params.loop === ''\r\n        || params.loop === null\r\n        || params.loop === undefined\r\n        || params.loop === true) {\r\n    this.loop = true;\r\n  } else if (params.loop === false) {\r\n    this.loop = false;\r\n  } else {\r\n    this.loop = parseInt(params.loop, 10);\r\n  }\r\n  this.autoplay = 'autoplay' in params ? params.autoplay : true;\r\n  this.name = params.name ? params.name : '';\r\n  this.autoloadSegments = Object.prototype.hasOwnProperty.call(params, 'autoloadSegments') ? params.autoloadSegments : true;\r\n  this.assetsPath = params.assetsPath;\r\n  this.initialSegment = params.initialSegment;\r\n  if (params.audioFactory) {\r\n    this.audioController.setAudioFactory(params.audioFactory);\r\n  }\r\n  if (params.animationData) {\r\n    this.setupAnimation(params.animationData);\r\n  } else if (params.path) {\r\n    if (params.path.lastIndexOf('\\\\') !== -1) {\r\n      this.path = params.path.substr(0, params.path.lastIndexOf('\\\\') + 1);\r\n    } else {\r\n      this.path = params.path.substr(0, params.path.lastIndexOf('/') + 1);\r\n    }\r\n    this.fileName = params.path.substr(params.path.lastIndexOf('/') + 1);\r\n    this.fileName = this.fileName.substr(0, this.fileName.lastIndexOf('.json'));\r\n    dataManager.loadAnimation(\r\n      params.path,\r\n      this.configAnimation,\r\n      this.onSetupError\r\n    );\r\n  }\r\n};\r\n\r\nAnimationItem.prototype.onSetupError = function () {\r\n  this.trigger('data_failed');\r\n};\r\n\r\nAnimationItem.prototype.setupAnimation = function (data) {\r\n  dataManager.completeAnimation(\r\n    data,\r\n    this.configAnimation\r\n  );\r\n};\r\n\r\nAnimationItem.prototype.setData = function (wrapper, animationData) {\r\n  if (animationData) {\r\n    if (typeof animationData !== 'object') {\r\n      animationData = JSON.parse(animationData);\r\n    }\r\n  }\r\n  var params = {\r\n    wrapper: wrapper,\r\n    animationData: animationData,\r\n  };\r\n  var wrapperAttributes = wrapper.attributes;\r\n\r\n  params.path = wrapperAttributes.getNamedItem('data-animation-path') // eslint-disable-line no-nested-ternary\r\n    ? wrapperAttributes.getNamedItem('data-animation-path').value\r\n    : wrapperAttributes.getNamedItem('data-bm-path') // eslint-disable-line no-nested-ternary\r\n      ? wrapperAttributes.getNamedItem('data-bm-path').value\r\n      : wrapperAttributes.getNamedItem('bm-path')\r\n        ? wrapperAttributes.getNamedItem('bm-path').value\r\n        : '';\r\n  params.animType = wrapperAttributes.getNamedItem('data-anim-type') // eslint-disable-line no-nested-ternary\r\n    ? wrapperAttributes.getNamedItem('data-anim-type').value\r\n    : wrapperAttributes.getNamedItem('data-bm-type') // eslint-disable-line no-nested-ternary\r\n      ? wrapperAttributes.getNamedItem('data-bm-type').value\r\n      : wrapperAttributes.getNamedItem('bm-type') // eslint-disable-line no-nested-ternary\r\n        ? wrapperAttributes.getNamedItem('bm-type').value\r\n        : wrapperAttributes.getNamedItem('data-bm-renderer') // eslint-disable-line no-nested-ternary\r\n          ? wrapperAttributes.getNamedItem('data-bm-renderer').value\r\n          : wrapperAttributes.getNamedItem('bm-renderer')\r\n            ? wrapperAttributes.getNamedItem('bm-renderer').value\r\n            : 'canvas';\r\n\r\n  var loop = wrapperAttributes.getNamedItem('data-anim-loop') // eslint-disable-line no-nested-ternary\r\n    ? wrapperAttributes.getNamedItem('data-anim-loop').value\r\n    : wrapperAttributes.getNamedItem('data-bm-loop') // eslint-disable-line no-nested-ternary\r\n      ? wrapperAttributes.getNamedItem('data-bm-loop').value\r\n      : wrapperAttributes.getNamedItem('bm-loop')\r\n        ? wrapperAttributes.getNamedItem('bm-loop').value\r\n        : '';\r\n  if (loop === 'false') {\r\n    params.loop = false;\r\n  } else if (loop === 'true') {\r\n    params.loop = true;\r\n  } else if (loop !== '') {\r\n    params.loop = parseInt(loop, 10);\r\n  }\r\n  var autoplay = wrapperAttributes.getNamedItem('data-anim-autoplay') // eslint-disable-line no-nested-ternary\r\n    ? wrapperAttributes.getNamedItem('data-anim-autoplay').value\r\n    : wrapperAttributes.getNamedItem('data-bm-autoplay') // eslint-disable-line no-nested-ternary\r\n      ? wrapperAttributes.getNamedItem('data-bm-autoplay').value\r\n      : wrapperAttributes.getNamedItem('bm-autoplay')\r\n        ? wrapperAttributes.getNamedItem('bm-autoplay').value\r\n        : true;\r\n  params.autoplay = autoplay !== 'false';\r\n\r\n  params.name = wrapperAttributes.getNamedItem('data-name') // eslint-disable-line no-nested-ternary\r\n    ? wrapperAttributes.getNamedItem('data-name').value\r\n    : wrapperAttributes.getNamedItem('data-bm-name') // eslint-disable-line no-nested-ternary\r\n      ? wrapperAttributes.getNamedItem('data-bm-name').value\r\n      : wrapperAttributes.getNamedItem('bm-name')\r\n        ? wrapperAttributes.getNamedItem('bm-name').value\r\n        : '';\r\n  var prerender = wrapperAttributes.getNamedItem('data-anim-prerender') // eslint-disable-line no-nested-ternary\r\n    ? wrapperAttributes.getNamedItem('data-anim-prerender').value\r\n    : wrapperAttributes.getNamedItem('data-bm-prerender') // eslint-disable-line no-nested-ternary\r\n      ? wrapperAttributes.getNamedItem('data-bm-prerender').value\r\n      : wrapperAttributes.getNamedItem('bm-prerender')\r\n        ? wrapperAttributes.getNamedItem('bm-prerender').value\r\n        : '';\r\n\r\n  if (prerender === 'false') {\r\n    params.prerender = false;\r\n  }\r\n  this.setParams(params);\r\n};\r\n\r\nAnimationItem.prototype.includeLayers = function (data) {\r\n  if (data.op > this.animationData.op) {\r\n    this.animationData.op = data.op;\r\n    this.totalFrames = Math.floor(data.op - this.animationData.ip);\r\n  }\r\n  var layers = this.animationData.layers;\r\n  var i;\r\n  var len = layers.length;\r\n  var newLayers = data.layers;\r\n  var j;\r\n  var jLen = newLayers.length;\r\n  for (j = 0; j < jLen; j += 1) {\r\n    i = 0;\r\n    while (i < len) {\r\n      if (layers[i].id === newLayers[j].id) {\r\n        layers[i] = newLayers[j];\r\n        break;\r\n      }\r\n      i += 1;\r\n    }\r\n  }\r\n  if (data.chars || data.fonts) {\r\n    this.renderer.globalData.fontManager.addChars(data.chars);\r\n    this.renderer.globalData.fontManager.addFonts(data.fonts, this.renderer.globalData.defs);\r\n  }\r\n  if (data.assets) {\r\n    len = data.assets.length;\r\n    for (i = 0; i < len; i += 1) {\r\n      this.animationData.assets.push(data.assets[i]);\r\n    }\r\n  }\r\n  this.animationData.__complete = false;\r\n  dataManager.completeAnimation(\r\n    this.animationData,\r\n    this.onSegmentComplete\r\n  );\r\n};\r\n\r\nAnimationItem.prototype.onSegmentComplete = function (data) {\r\n  this.animationData = data;\r\n  if (expressionsPlugin) {\r\n    expressionsPlugin.initExpressions(this);\r\n  }\r\n  this.loadNextSegment();\r\n};\r\n\r\nAnimationItem.prototype.loadNextSegment = function () {\r\n  var segments = this.animationData.segments;\r\n  if (!segments || segments.length === 0 || !this.autoloadSegments) {\r\n    this.trigger('data_ready');\r\n    this.timeCompleted = this.totalFrames;\r\n    return;\r\n  }\r\n  var segment = segments.shift();\r\n  this.timeCompleted = segment.time * this.frameRate;\r\n  var segmentPath = this.path + this.fileName + '_' + this.segmentPos + '.json';\r\n  this.segmentPos += 1;\r\n  dataManager.loadData(segmentPath, this.includeLayers.bind(this), function () {\r\n    this.trigger('data_failed');\r\n  }.bind(this));\r\n};\r\n\r\nAnimationItem.prototype.loadSegments = function () {\r\n  var segments = this.animationData.segments;\r\n  if (!segments) {\r\n    this.timeCompleted = this.totalFrames;\r\n  }\r\n  this.loadNextSegment();\r\n};\r\n\r\nAnimationItem.prototype.imagesLoaded = function () {\r\n  this.trigger('loaded_images');\r\n  this.checkLoaded();\r\n};\r\n\r\nAnimationItem.prototype.preloadImages = function () {\r\n  this.imagePreloader.setAssetsPath(this.assetsPath);\r\n  this.imagePreloader.setPath(this.path);\r\n  this.imagePreloader.loadAssets(this.animationData.assets, this.imagesLoaded.bind(this));\r\n};\r\n\r\nAnimationItem.prototype.configAnimation = function (animData) {\r\n  if (!this.renderer) {\r\n    return;\r\n  }\r\n  try {\r\n    this.animationData = animData;\r\n    if (this.initialSegment) {\r\n      this.totalFrames = Math.floor(this.initialSegment[1] - this.initialSegment[0]);\r\n      this.firstFrame = Math.round(this.initialSegment[0]);\r\n    } else {\r\n      this.totalFrames = Math.floor(this.animationData.op - this.animationData.ip);\r\n      this.firstFrame = Math.round(this.animationData.ip);\r\n    }\r\n    this.renderer.configAnimation(animData);\r\n    if (!animData.assets) {\r\n      animData.assets = [];\r\n    }\r\n\r\n    this.assets = this.animationData.assets;\r\n    this.frameRate = this.animationData.fr;\r\n    this.frameMult = this.animationData.fr / 1000;\r\n    this.renderer.searchExtraCompositions(animData.assets);\r\n    this.markers = markerParser(animData.markers || []);\r\n    this.trigger('config_ready');\r\n    this.preloadImages();\r\n    this.loadSegments();\r\n    this.updaFrameModifier();\r\n    this.waitForFontsLoaded();\r\n    if (this.isPaused) {\r\n      this.audioController.pause();\r\n    }\r\n  } catch (error) {\r\n    this.triggerConfigError(error);\r\n  }\r\n};\r\n\r\nAnimationItem.prototype.waitForFontsLoaded = function () {\r\n  if (!this.renderer) {\r\n    return;\r\n  }\r\n  if (this.renderer.globalData.fontManager.isLoaded) {\r\n    this.checkLoaded();\r\n  } else {\r\n    setTimeout(this.waitForFontsLoaded.bind(this), 20);\r\n  }\r\n};\r\n\r\nAnimationItem.prototype.checkLoaded = function () {\r\n  if (!this.isLoaded\r\n        && this.renderer.globalData.fontManager.isLoaded\r\n        && (this.imagePreloader.loadedImages() || this.renderer.rendererType !== 'canvas')\r\n        && (this.imagePreloader.loadedFootages())\r\n  ) {\r\n    this.isLoaded = true;\r\n    if (expressionsPlugin) {\r\n      expressionsPlugin.initExpressions(this);\r\n    }\r\n    this.renderer.initItems();\r\n    setTimeout(function () {\r\n      this.trigger('DOMLoaded');\r\n    }.bind(this), 0);\r\n    this.gotoFrame();\r\n    if (this.autoplay) {\r\n      this.play();\r\n    }\r\n  }\r\n};\r\n\r\nAnimationItem.prototype.resize = function () {\r\n  this.renderer.updateContainerSize();\r\n};\r\n\r\nAnimationItem.prototype.setSubframe = function (flag) {\r\n  this.isSubframeEnabled = !!flag;\r\n};\r\n\r\nAnimationItem.prototype.gotoFrame = function () {\r\n  this.currentFrame = this.isSubframeEnabled ? this.currentRawFrame : ~~this.currentRawFrame; // eslint-disable-line no-bitwise\r\n\r\n  if (this.timeCompleted !== this.totalFrames && this.currentFrame > this.timeCompleted) {\r\n    this.currentFrame = this.timeCompleted;\r\n  }\r\n  this.trigger('enterFrame');\r\n  this.renderFrame();\r\n  this.trigger('drawnFrame');\r\n};\r\n\r\nAnimationItem.prototype.renderFrame = function () {\r\n  if (this.isLoaded === false || !this.renderer) {\r\n    return;\r\n  }\r\n  try {\r\n    this.renderer.renderFrame(this.currentFrame + this.firstFrame);\r\n  } catch (error) {\r\n    this.triggerRenderFrameError(error);\r\n  }\r\n};\r\n\r\nAnimationItem.prototype.play = function (name) {\r\n  if (name && this.name !== name) {\r\n    return;\r\n  }\r\n  if (this.isPaused === true) {\r\n    this.isPaused = false;\r\n    this.audioController.resume();\r\n    if (this._idle) {\r\n      this._idle = false;\r\n      this.trigger('_active');\r\n    }\r\n  }\r\n};\r\n\r\nAnimationItem.prototype.pause = function (name) {\r\n  if (name && this.name !== name) {\r\n    return;\r\n  }\r\n  if (this.isPaused === false) {\r\n    this.isPaused = true;\r\n    this._idle = true;\r\n    this.trigger('_idle');\r\n    this.audioController.pause();\r\n  }\r\n};\r\n\r\nAnimationItem.prototype.togglePause = function (name) {\r\n  if (name && this.name !== name) {\r\n    return;\r\n  }\r\n  if (this.isPaused === true) {\r\n    this.play();\r\n  } else {\r\n    this.pause();\r\n  }\r\n};\r\n\r\nAnimationItem.prototype.stop = function (name) {\r\n  if (name && this.name !== name) {\r\n    return;\r\n  }\r\n  this.pause();\r\n  this.playCount = 0;\r\n  this._completedLoop = false;\r\n  this.setCurrentRawFrameValue(0);\r\n};\r\n\r\nAnimationItem.prototype.getMarkerData = function (markerName) {\r\n  var marker;\r\n  for (var i = 0; i < this.markers.length; i += 1) {\r\n    marker = this.markers[i];\r\n    if (marker.payload && marker.payload.name === markerName) {\r\n      return marker;\r\n    }\r\n  }\r\n  return null;\r\n};\r\n\r\nAnimationItem.prototype.goToAndStop = function (value, isFrame, name) {\r\n  if (name && this.name !== name) {\r\n    return;\r\n  }\r\n  var numValue = Number(value);\r\n  if (isNaN(numValue)) {\r\n    var marker = this.getMarkerData(value);\r\n    if (marker) {\r\n      this.goToAndStop(marker.time, true);\r\n    }\r\n  } else if (isFrame) {\r\n    this.setCurrentRawFrameValue(value);\r\n  } else {\r\n    this.setCurrentRawFrameValue(value * this.frameModifier);\r\n  }\r\n  this.pause();\r\n};\r\n\r\nAnimationItem.prototype.goToAndPlay = function (value, isFrame, name) {\r\n  if (name && this.name !== name) {\r\n    return;\r\n  }\r\n  var numValue = Number(value);\r\n  if (isNaN(numValue)) {\r\n    var marker = this.getMarkerData(value);\r\n    if (marker) {\r\n      if (!marker.duration) {\r\n        this.goToAndStop(marker.time, true);\r\n      } else {\r\n        this.playSegments([marker.time, marker.time + marker.duration], true);\r\n      }\r\n    }\r\n  } else {\r\n    this.goToAndStop(numValue, isFrame, name);\r\n  }\r\n  this.play();\r\n};\r\n\r\nAnimationItem.prototype.advanceTime = function (value) {\r\n  if (this.isPaused === true || this.isLoaded === false) {\r\n    return;\r\n  }\r\n  var nextValue = this.currentRawFrame + value * this.frameModifier;\r\n  var _isComplete = false;\r\n  // Checking if nextValue > totalFrames - 1 for addressing non looping and looping animations.\r\n  // If animation won't loop, it should stop at totalFrames - 1. If it will loop it should complete the last frame and then loop.\r\n  if (nextValue >= this.totalFrames - 1 && this.frameModifier > 0) {\r\n    if (!this.loop || this.playCount === this.loop) {\r\n      if (!this.checkSegments(nextValue > this.totalFrames ? nextValue % this.totalFrames : 0)) {\r\n        _isComplete = true;\r\n        nextValue = this.totalFrames - 1;\r\n      }\r\n    } else if (nextValue >= this.totalFrames) {\r\n      this.playCount += 1;\r\n      if (!this.checkSegments(nextValue % this.totalFrames)) {\r\n        this.setCurrentRawFrameValue(nextValue % this.totalFrames);\r\n        this._completedLoop = true;\r\n        this.trigger('loopComplete');\r\n      }\r\n    } else {\r\n      this.setCurrentRawFrameValue(nextValue);\r\n    }\r\n  } else if (nextValue < 0) {\r\n    if (!this.checkSegments(nextValue % this.totalFrames)) {\r\n      if (this.loop && !(this.playCount-- <= 0 && this.loop !== true)) { // eslint-disable-line no-plusplus\r\n        this.setCurrentRawFrameValue(this.totalFrames + (nextValue % this.totalFrames));\r\n        if (!this._completedLoop) {\r\n          this._completedLoop = true;\r\n        } else {\r\n          this.trigger('loopComplete');\r\n        }\r\n      } else {\r\n        _isComplete = true;\r\n        nextValue = 0;\r\n      }\r\n    }\r\n  } else {\r\n    this.setCurrentRawFrameValue(nextValue);\r\n  }\r\n  if (_isComplete) {\r\n    this.setCurrentRawFrameValue(nextValue);\r\n    this.pause();\r\n    this.trigger('complete');\r\n  }\r\n};\r\n\r\nAnimationItem.prototype.adjustSegment = function (arr, offset) {\r\n  this.playCount = 0;\r\n  if (arr[1] < arr[0]) {\r\n    if (this.frameModifier > 0) {\r\n      if (this.playSpeed < 0) {\r\n        this.setSpeed(-this.playSpeed);\r\n      } else {\r\n        this.setDirection(-1);\r\n      }\r\n    }\r\n    this.totalFrames = arr[0] - arr[1];\r\n    this.timeCompleted = this.totalFrames;\r\n    this.firstFrame = arr[1];\r\n    this.setCurrentRawFrameValue(this.totalFrames - 0.001 - offset);\r\n  } else if (arr[1] > arr[0]) {\r\n    if (this.frameModifier < 0) {\r\n      if (this.playSpeed < 0) {\r\n        this.setSpeed(-this.playSpeed);\r\n      } else {\r\n        this.setDirection(1);\r\n      }\r\n    }\r\n    this.totalFrames = arr[1] - arr[0];\r\n    this.timeCompleted = this.totalFrames;\r\n    this.firstFrame = arr[0];\r\n    this.setCurrentRawFrameValue(0.001 + offset);\r\n  }\r\n  this.trigger('segmentStart');\r\n};\r\nAnimationItem.prototype.setSegment = function (init, end) {\r\n  var pendingFrame = -1;\r\n  if (this.isPaused) {\r\n    if (this.currentRawFrame + this.firstFrame < init) {\r\n      pendingFrame = init;\r\n    } else if (this.currentRawFrame + this.firstFrame > end) {\r\n      pendingFrame = end - init;\r\n    }\r\n  }\r\n\r\n  this.firstFrame = init;\r\n  this.totalFrames = end - init;\r\n  this.timeCompleted = this.totalFrames;\r\n  if (pendingFrame !== -1) {\r\n    this.goToAndStop(pendingFrame, true);\r\n  }\r\n};\r\n\r\nAnimationItem.prototype.playSegments = function (arr, forceFlag) {\r\n  if (forceFlag) {\r\n    this.segments.length = 0;\r\n  }\r\n  if (typeof arr[0] === 'object') {\r\n    var i;\r\n    var len = arr.length;\r\n    for (i = 0; i < len; i += 1) {\r\n      this.segments.push(arr[i]);\r\n    }\r\n  } else {\r\n    this.segments.push(arr);\r\n  }\r\n  if (this.segments.length && forceFlag) {\r\n    this.adjustSegment(this.segments.shift(), 0);\r\n  }\r\n  if (this.isPaused) {\r\n    this.play();\r\n  }\r\n};\r\n\r\nAnimationItem.prototype.resetSegments = function (forceFlag) {\r\n  this.segments.length = 0;\r\n  this.segments.push([this.animationData.ip, this.animationData.op]);\r\n  if (forceFlag) {\r\n    this.checkSegments(0);\r\n  }\r\n};\r\nAnimationItem.prototype.checkSegments = function (offset) {\r\n  if (this.segments.length) {\r\n    this.adjustSegment(this.segments.shift(), offset);\r\n    return true;\r\n  }\r\n  return false;\r\n};\r\n\r\nAnimationItem.prototype.destroy = function (name) {\r\n  if ((name && this.name !== name) || !this.renderer) {\r\n    return;\r\n  }\r\n  this.renderer.destroy();\r\n  this.imagePreloader.destroy();\r\n  this.trigger('destroy');\r\n  this._cbs = null;\r\n  this.onEnterFrame = null;\r\n  this.onLoopComplete = null;\r\n  this.onComplete = null;\r\n  this.onSegmentStart = null;\r\n  this.onDestroy = null;\r\n  this.renderer = null;\r\n  this.renderer = null;\r\n  this.imagePreloader = null;\r\n  this.projectInterface = null;\r\n};\r\n\r\nAnimationItem.prototype.setCurrentRawFrameValue = function (value) {\r\n  this.currentRawFrame = value;\r\n  this.gotoFrame();\r\n};\r\n\r\nAnimationItem.prototype.setSpeed = function (val) {\r\n  this.playSpeed = val;\r\n  this.updaFrameModifier();\r\n};\r\n\r\nAnimationItem.prototype.setDirection = function (val) {\r\n  this.playDirection = val < 0 ? -1 : 1;\r\n  this.updaFrameModifier();\r\n};\r\n\r\nAnimationItem.prototype.setVolume = function (val, name) {\r\n  if (name && this.name !== name) {\r\n    return;\r\n  }\r\n  this.audioController.setVolume(val);\r\n};\r\n\r\nAnimationItem.prototype.getVolume = function () {\r\n  return this.audioController.getVolume();\r\n};\r\n\r\nAnimationItem.prototype.mute = function (name) {\r\n  if (name && this.name !== name) {\r\n    return;\r\n  }\r\n  this.audioController.mute();\r\n};\r\n\r\nAnimationItem.prototype.unmute = function (name) {\r\n  if (name && this.name !== name) {\r\n    return;\r\n  }\r\n  this.audioController.unmute();\r\n};\r\n\r\nAnimationItem.prototype.updaFrameModifier = function () {\r\n  this.frameModifier = this.frameMult * this.playSpeed * this.playDirection;\r\n  this.audioController.setRate(this.playSpeed * this.playDirection);\r\n};\r\n\r\nAnimationItem.prototype.getPath = function () {\r\n  return this.path;\r\n};\r\n\r\nAnimationItem.prototype.getAssetsPath = function (assetData) {\r\n  var path = '';\r\n  if (assetData.e) {\r\n    path = assetData.p;\r\n  } else if (this.assetsPath) {\r\n    var imagePath = assetData.p;\r\n    if (imagePath.indexOf('images/') !== -1) {\r\n      imagePath = imagePath.split('/')[1];\r\n    }\r\n    path = this.assetsPath + imagePath;\r\n  } else {\r\n    path = this.path;\r\n    path += assetData.u ? assetData.u : '';\r\n    path += assetData.p;\r\n  }\r\n  return path;\r\n};\r\n\r\nAnimationItem.prototype.getAssetData = function (id) {\r\n  var i = 0;\r\n  var len = this.assets.length;\r\n  while (i < len) {\r\n    if (id === this.assets[i].id) {\r\n      return this.assets[i];\r\n    }\r\n    i += 1;\r\n  }\r\n  return null;\r\n};\r\n\r\nAnimationItem.prototype.hide = function () {\r\n  this.renderer.hide();\r\n};\r\n\r\nAnimationItem.prototype.show = function () {\r\n  this.renderer.show();\r\n};\r\n\r\nAnimationItem.prototype.getDuration = function (isFrame) {\r\n  return isFrame ? this.totalFrames : this.totalFrames / this.frameRate;\r\n};\r\n\r\nAnimationItem.prototype.trigger = function (name) {\r\n  if (this._cbs && this._cbs[name]) {\r\n    switch (name) {\r\n      case 'enterFrame':\r\n      case 'drawnFrame':\r\n        this.triggerEvent(name, new BMEnterFrameEvent(name, this.currentFrame, this.totalFrames, this.frameModifier));\r\n        break;\r\n      case 'loopComplete':\r\n        this.triggerEvent(name, new BMCompleteLoopEvent(name, this.loop, this.playCount, this.frameMult));\r\n        break;\r\n      case 'complete':\r\n        this.triggerEvent(name, new BMCompleteEvent(name, this.frameMult));\r\n        break;\r\n      case 'segmentStart':\r\n        this.triggerEvent(name, new BMSegmentStartEvent(name, this.firstFrame, this.totalFrames));\r\n        break;\r\n      case 'destroy':\r\n        this.triggerEvent(name, new BMDestroyEvent(name, this));\r\n        break;\r\n      default:\r\n        this.triggerEvent(name);\r\n    }\r\n  }\r\n  if (name === 'enterFrame' && this.onEnterFrame) {\r\n    this.onEnterFrame.call(this, new BMEnterFrameEvent(name, this.currentFrame, this.totalFrames, this.frameMult));\r\n  }\r\n  if (name === 'loopComplete' && this.onLoopComplete) {\r\n    this.onLoopComplete.call(this, new BMCompleteLoopEvent(name, this.loop, this.playCount, this.frameMult));\r\n  }\r\n  if (name === 'complete' && this.onComplete) {\r\n    this.onComplete.call(this, new BMCompleteEvent(name, this.frameMult));\r\n  }\r\n  if (name === 'segmentStart' && this.onSegmentStart) {\r\n    this.onSegmentStart.call(this, new BMSegmentStartEvent(name, this.firstFrame, this.totalFrames));\r\n  }\r\n  if (name === 'destroy' && this.onDestroy) {\r\n    this.onDestroy.call(this, new BMDestroyEvent(name, this));\r\n  }\r\n};\r\n\r\nAnimationItem.prototype.triggerRenderFrameError = function (nativeError) {\r\n  var error = new BMRenderFrameErrorEvent(nativeError, this.currentFrame);\r\n  this.triggerEvent('error', error);\r\n\r\n  if (this.onError) {\r\n    this.onError.call(this, error);\r\n  }\r\n};\r\n\r\nAnimationItem.prototype.triggerConfigError = function (nativeError) {\r\n  var error = new BMConfigErrorEvent(nativeError, this.currentFrame);\r\n  this.triggerEvent('error', error);\r\n\r\n  if (this.onError) {\r\n    this.onError.call(this, error);\r\n  }\r\n};\r\n\r\n/* exported EffectsManager */\r\n\r\nfunction EffectsManager() {\r\n  this.effectElements = [];\r\n}\r\n\r\n\r\nvar lottie = {};\r\n\r\nfunction setLocationHref(href) {\r\n  locationHref = href;\r\n}\r\n\r\nfunction searchAnimations() {\r\n  if (standalone === true) {\r\n    animationManager.searchAnimations(animationData, standalone, renderer);\r\n  } else {\r\n    animationManager.searchAnimations();\r\n  }\r\n}\r\n\r\nfunction setSubframeRendering(flag) {\r\n  subframeEnabled = flag;\r\n}\r\n\r\nfunction setIDPrefix(prefix) {\r\n  idPrefix = prefix;\r\n}\r\n\r\nfunction loadAnimation(params) {\r\n  if (standalone === true) {\r\n    params.animationData = JSON.parse(animationData);\r\n  }\r\n  return animationManager.loadAnimation(params);\r\n}\r\n\r\nfunction setQuality(value) {\r\n  if (typeof value === 'string') {\r\n    switch (value) {\r\n      case 'high':\r\n        defaultCurveSegments = 200;\r\n        break;\r\n      default:\r\n      case 'medium':\r\n        defaultCurveSegments = 50;\r\n        break;\r\n      case 'low':\r\n        defaultCurveSegments = 10;\r\n        break;\r\n    }\r\n  } else if (!isNaN(value) && value > 1) {\r\n    defaultCurveSegments = value;\r\n  }\r\n  if (defaultCurveSegments >= 50) {\r\n    roundValues(false);\r\n  } else {\r\n    roundValues(true);\r\n  }\r\n}\r\n\r\nfunction inBrowser() {\r\n  return typeof navigator !== 'undefined';\r\n}\r\n\r\nfunction installPlugin(type, plugin) {\r\n  if (type === 'expressions') {\r\n    expressionsPlugin = plugin;\r\n  }\r\n}\r\n\r\nfunction getFactory(name) {\r\n  switch (name) {\r\n    case 'propertyFactory':\r\n      return PropertyFactory;\r\n    case 'shapePropertyFactory':\r\n      return ShapePropertyFactory;\r\n    case 'matrix':\r\n      return Matrix;\r\n    default:\r\n      return null;\r\n  }\r\n}\r\n\r\nlottie.play = animationManager.play;\r\nlottie.pause = animationManager.pause;\r\nlottie.setLocationHref = setLocationHref;\r\nlottie.togglePause = animationManager.togglePause;\r\nlottie.setSpeed = animationManager.setSpeed;\r\nlottie.setDirection = animationManager.setDirection;\r\nlottie.stop = animationManager.stop;\r\nlottie.searchAnimations = searchAnimations;\r\nlottie.registerAnimation = animationManager.registerAnimation;\r\nlottie.loadAnimation = loadAnimation;\r\nlottie.setSubframeRendering = setSubframeRendering;\r\nlottie.resize = animationManager.resize;\r\n// lottie.start = start;\r\nlottie.goToAndStop = animationManager.goToAndStop;\r\nlottie.destroy = animationManager.destroy;\r\nlottie.setQuality = setQuality;\r\nlottie.inBrowser = inBrowser;\r\nlottie.installPlugin = installPlugin;\r\nlottie.freeze = animationManager.freeze;\r\nlottie.unfreeze = animationManager.unfreeze;\r\nlottie.setVolume = animationManager.setVolume;\r\nlottie.mute = animationManager.mute;\r\nlottie.unmute = animationManager.unmute;\r\nlottie.getRegisteredAnimations = animationManager.getRegisteredAnimations;\r\nlottie.useWebWorker = function (flag) {\r\n  _useWebWorker = flag;\r\n};\r\nlottie.setIDPrefix = setIDPrefix;\r\nlottie.__getFactory = getFactory;\r\nlottie.version = '5.8.1';\r\n\r\nfunction checkReady() {\r\n  if (document.readyState === 'complete') {\r\n    clearInterval(readyStateCheckInterval);\r\n    searchAnimations();\r\n  }\r\n}\r\n\r\nfunction getQueryVariable(variable) {\r\n  var vars = queryString.split('&');\r\n  for (var i = 0; i < vars.length; i += 1) {\r\n    var pair = vars[i].split('=');\r\n    if (decodeURIComponent(pair[0]) == variable) { // eslint-disable-line eqeqeq\r\n      return decodeURIComponent(pair[1]);\r\n    }\r\n  }\r\n  return null;\r\n}\r\nvar standalone = '__[STANDALONE]__';\r\nvar animationData = '__[ANIMATIONDATA]__';\r\nvar renderer = '';\r\nvar queryString;\r\nif (standalone) {\r\n  var scripts = document.getElementsByTagName('script');\r\n  var index = scripts.length - 1;\r\n  var myScript = scripts[index] || {\r\n    src: '',\r\n  };\r\n  queryString = myScript.src.replace(/^[^\\?]+\\??/, ''); // eslint-disable-line no-useless-escape\r\n  renderer = getQueryVariable('renderer');\r\n}\r\nvar readyStateCheckInterval = setInterval(checkReady, 100);\r\n\nreturn lottie;\n}));","\"use strict\";var e=require(\"./index-42ef4f76.js\"),n=require(\"qr-code-styling\"),t=require(\"@evanhahn/lottie-web-light\");function a(e){return e&&\"object\"==typeof e&&\"default\"in e?e:{default:e}}require(\"@walletconnect/client\"),require(\"algosdk\"),require(\"bowser\");var o=a(n),l=a(t);function i(e,n){void 0===n&&(n={});var t=n.insertAt;if(e&&\"undefined\"!=typeof document){var a=document.head||document.getElementsByTagName(\"head\")[0],o=document.createElement(\"style\");o.type=\"text/css\",\"top\"===t&&a.firstChild?a.insertBefore(o,a.firstChild):a.appendChild(o),o.styleSheet?o.styleSheet.cssText=e:o.appendChild(document.createTextNode(e))}}var r=\".pera-wallet-modal-header {\\n  position: absolute;\\n  top: -44px;\\n  right: 0px;\\n  left: 0;\\n  display: flex;\\n  align-items: center;\\n  justify-content: space-between;\\n}\\n.pera-wallet-modal-header--mobile {\\n  display: flex;\\n  align-items: center;\\n  justify-content: flex-end;\\n  position: static;\\n}\\n.pera-wallet-modal-header--mobile .pera-wallet-modal-header__close-button {\\n  width: 24px;\\n  height: 24px;\\n  margin: 0;\\n  padding: 0;\\n  background: transparent;\\n  border: unset;\\n  box-shadow: unset;\\n}\\n\\n.pera-wallet-modal-header__brand {\\n  display: flex;\\n  align-items: center;\\n  gap: 10px;\\n  font-size: 15px;\\n  font-weight: 600;\\n  line-height: 18px;\\n  letter-spacing: -0.13px;\\n  color: #ffffff;\\n}\\n\\n.pera-wallet-button {\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n  width: auto;\\n  height: 48px;\\n  padding: 14px;\\n  border: none;\\n  border-radius: 12px;\\n  outline: none;\\n  cursor: pointer;\\n  font-family: var(--pera-wallet-modal-font-family);\\n  font-size: 14px;\\n}\\n\\n.pera-wallet-modal-header__close-button {\\n  width: 32px;\\n  height: 32px;\\n  margin: 0;\\n  padding: 0;\\n  background: rgba(44, 53, 89, 0.1);\\n  border-radius: 8px;\\n}\\n\\n.pera-wallet-modal-header__close-button__close-icon {\\n  width: 20px;\\n  height: 20px;\\n}\";i(r);function d(){return document.documentElement.clientWidth<=767}function c(){document.documentElement.style.setProperty(\"--vh\",.01*window.innerHeight+\"px\")}const s=document.createElement(\"template\"),p=e.isMobile()?\"pera-wallet-modal-header pera-wallet-modal-header--mobile\":\"pera-wallet-modal-header pera-wallet-modal-header--desktop\";s.innerHTML=`\\n  <div class=\"${p}\">\\n      ${d()&&e.isMobile()?\"\":\"<div class=\\\"pera-wallet-modal-header__brand\\\">\\n              <img src=\\\"data:image/svg+xml,%3csvg width='24' height='24' viewBox='0 0 24 24' fill='none' xmlns='http://www.w3.org/2000/svg'%3e%3crect width='24' height='24' rx='4.8' fill='%23FFEE55'/%3e%3cpath d='M13.0408 5.92462C13.413 7.46693 13.2872 8.8236 12.7597 8.95482C12.2322 9.08605 11.5028 7.94214 11.1306 6.39983C10.7583 4.85752 10.8842 3.50085 11.4117 3.36963C11.9391 3.2384 12.6685 4.38231 13.0408 5.92462Z' fill='black'/%3e%3cpath d='M19.1876 7.25063C18.3632 6.37689 16.7231 6.61371 15.5243 7.77959C14.3254 8.94547 14.0219 10.5989 14.8463 11.4727C15.6707 12.3464 17.3108 12.1096 18.5097 10.9437C19.7085 9.77781 20.012 8.12438 19.1876 7.25063Z' fill='black'/%3e%3cpath d='M12.6308 20.6297C13.1583 20.4985 13.2656 19.0651 12.8705 17.4281C12.4754 15.7911 11.7275 14.5705 11.2 14.7017C10.6725 14.8329 10.5652 16.2663 10.9603 17.9033C11.3554 19.5403 12.1033 20.7609 12.6308 20.6297Z' fill='black'/%3e%3cpath d='M7.25371 8.05056C8.77551 8.49933 9.8875 9.28664 9.73741 9.80906C9.58731 10.3315 8.23197 10.3912 6.71016 9.94242C5.18836 9.49364 4.07637 8.70633 4.22646 8.18391C4.37656 7.66149 5.7319 7.60178 7.25371 8.05056Z' fill='black'/%3e%3cpath d='M17.1309 13.9497C18.7461 14.4261 19.9338 15.2357 19.7837 15.7581C19.6336 16.2806 18.2025 16.3179 16.5873 15.8416C14.9721 15.3653 13.7844 14.5556 13.9345 14.0332C14.0846 13.5108 15.5157 13.4734 17.1309 13.9497Z' fill='black'/%3e%3cpath d='M8.96609 12.8536C8.5887 12.4624 7.35088 13.0318 6.20133 14.1253C5.05177 15.2188 4.42581 16.4225 4.80319 16.8137C5.18058 17.2048 6.4184 16.6355 7.56796 15.542C8.71751 14.4484 9.34347 13.2448 8.96609 12.8536Z' fill='black'/%3e%3c/svg%3e\\\" />\\n\\n              Pera Connect\\n            </div>\\n            \"} \\n\\n      <button\\n        id=\"pera-wallet-modal-header-close-button\"\\n        class=\"pera-wallet-button pera-wallet-modal-header__close-button\">\\n        <img\\n          class=\"pera-wallet-modal-header__close-button__close-icon\"\\n          src=\"${d()&&e.isMobile()?\"data:image/svg+xml,%3csvg width='24' height='24' viewBox='0 0 24 24' fill='none' xmlns='http://www.w3.org/2000/svg'%3e%3cpath d='M18 6L12 12M12 12L6 18M12 12L18 18M12 12L6 6' stroke='%232C3559' stroke-width='2'/%3e%3c/svg%3e\":\"data:image/svg+xml,%3csvg width='24' height='24' viewBox='0 0 24 24' fill='none' xmlns='http://www.w3.org/2000/svg'%3e%3cpath d='M18 6L12 12M12 12L6 18M12 12L18 18M12 12L6 6' stroke='white' stroke-width='2'/%3e%3c/svg%3e\"}\"\\n        />\\n      </button>\\n    </div>\\n`;class m extends HTMLElement{constructor(){if(super(),this.attachShadow({mode:\"open\"}),this.shadowRoot){const e=document.createElement(\"style\");e.textContent=r,this.shadowRoot.append(s.content.cloneNode(!0),e),this.onClose()}}onClose(){var n;const t=null===(n=this.shadowRoot)||void 0===n?void 0:n.getElementById(\"pera-wallet-modal-header-close-button\"),a=this.getAttribute(\"modal-id\");t&&a===e.PERA_WALLET_REDIRECT_MODAL_ID&&t.addEventListener(\"click\",(()=>{e.removeModalWrapperFromDOM(e.PERA_WALLET_REDIRECT_MODAL_ID)}))}}var w=\"data:image/svg+xml,%3csvg fill='none' height='80' width='80' xmlns='http://www.w3.org/2000/svg'%3e%3cpath clip-rule='evenodd' d='M39.9 80V68.99h-9.8V80h-.2V68.99h-3.5a6.503 6.503 0 0 1-6.247-4.7 6.514 6.514 0 0 1-4.445-4.444 6.503 6.503 0 0 1-4.695-6.246v-3.5H0v-.2h11.013v-9.8H0v-.2h11.013v-9.8H0v-.2h11.013v-3.5a6.503 6.503 0 0 1 4.694-6.246 6.513 6.513 0 0 1 4.447-4.447 6.503 6.503 0 0 1 6.246-4.696h3.5V0h.2v11.011h9.8V0h.2v11.011h9.8V0h.2v11.011h3.5a6.503 6.503 0 0 1 6.247 4.697 6.514 6.514 0 0 1 4.443 4.444 6.503 6.503 0 0 1 4.701 6.248v3.5H80v.2H68.991v9.8H80v.2H68.991v9.8H80v.2H68.991v3.5a6.503 6.503 0 0 1-4.701 6.248 6.514 6.514 0 0 1-4.443 4.442 6.503 6.503 0 0 1-6.247 4.7h-3.5V80h-.2V68.99h-9.8V80zm28.89-40.1a28.728 28.728 0 0 0-1.746-9.8h-2.5v9.8h4.247zm-4.246.2h4.247a28.729 28.729 0 0 1-1.747 9.8h-2.5zm-.2-.2v-9.8H60.1v9.8zm-4.244.2h4.244v9.8H60.1zm-.2-.2a19.807 19.807 0 0 0-2.633-9.8H50.1v9.8zm-9.8.2h9.8a19.807 19.807 0 0 1-2.633 9.8H50.1zm-.2-.2v-9.8h-9.8v9.8zm-9.8.2h9.8v9.8h-9.8zm-.2-.2v-9.8h-9.8v9.8zm-9.8.2h9.8v9.8h-9.8zm-.2-.2v-9.8h-7.167a19.807 19.807 0 0 0-2.633 9.8zm-9.8.2h9.8v9.8h-7.167a19.807 19.807 0 0 1-2.633-9.8zm-.2-.2v-9.8h-4.245v9.8zm-4.245.2H19.9v9.8h-4.245zm-.2-.2v-9.8H12.96a28.726 28.726 0 0 0-1.748 9.8h4.242zm-4.242.2h4.242v9.8H12.96a28.726 28.726 0 0 1-1.748-9.8zm0 13.5v-3.5h1.608a28.876 28.876 0 0 0 2.634 5.327v2.617c0 .543.066 1.07.192 1.575a6.303 6.303 0 0 1-4.434-6.019zm4.242 1.449a28.674 28.674 0 0 1-2.42-4.949h2.42zm.2.32V50.1H19.9v9.8h-.702a28.915 28.915 0 0 1-3.543-4.53zM20.1 59.9v-9.8h2.518a20.2 20.2 0 0 0 7.282 7.282V59.9zm0-10h2.403a19.966 19.966 0 0 1-2.403-7.053zm9.8 7.25a20 20 0 0 1-7.05-7.05h7.05zm.2.117V50.1h9.8v9.8a19.807 19.807 0 0 1-9.8-2.633zm10 2.633v-9.8h9.8v7.167a19.807 19.807 0 0 1-9.8 2.633zm10-2.75V50.1h7.05a20 20 0 0 1-7.05 7.05zm0 .232a20.2 20.2 0 0 0 7.282-7.282H59.9v9.8h-9.8zm7.397-7.482H59.9v-7.053a19.966 19.966 0 0 1-2.403 7.053zm2.603 10v-9.8h4.244v5.28a28.91 28.91 0 0 1-3.538 4.52zm4.444-4.841V50.1h2.426a28.67 28.67 0 0 1-2.426 4.959zm0 .378a28.881 28.881 0 0 0 2.64-5.337h1.607v3.5a6.303 6.303 0 0 1-4.44 6.021 6.514 6.514 0 0 0 .193-1.577zm2.713-5.537h1.534v-6.477a28.817 28.817 0 0 1-1.534 6.477zm-56.044 0h1.535a28.807 28.807 0 0 1-1.535-6.477zm57.578-20v-3.5a6.303 6.303 0 0 0-4.44-6.02c.126.504.193 1.031.193 1.575v2.608a28.877 28.877 0 0 1 2.639 5.337zm-1.534.2h1.534v6.477a28.815 28.815 0 0 0-1.534-6.477zm-.288-.2a28.673 28.673 0 0 0-2.425-4.958V29.9zm-2.625 0v-5.279a28.911 28.911 0 0 0-3.538-4.521H60.1v9.8zm-4.444 0v-9.8h-9.8v2.518a20.2 20.2 0 0 1 7.282 7.282zm-2.403.2H59.9v7.053a19.966 19.966 0 0 0-2.403-7.053zm-.347-.2a20 20 0 0 0-7.05-7.05v7.05zm-7.25 0v-7.167a19.807 19.807 0 0 0-9.8-2.633v9.8zm-10 0v-9.8a19.807 19.807 0 0 0-9.8 2.633V29.9zm-10 0v-7.05a20 20 0 0 0-7.05 7.05zm-7.282 0a20.2 20.2 0 0 1 7.282-7.282V20.1h-9.8v9.8zm-2.518.2h2.403a19.966 19.966 0 0 0-2.403 7.053zm-.2-.2v-9.8h-.701a28.915 28.915 0 0 0-3.544 4.53v5.27zm-4.445 0v-4.948a28.665 28.665 0 0 0-2.42 4.948zm-2.634 0a28.874 28.874 0 0 1 2.634-5.327v-2.618c0-.543.066-1.07.191-1.574a6.303 6.303 0 0 0-4.433 6.019v3.5zm-1.608.2h1.535a28.81 28.81 0 0 0-1.535 6.477zM36.58 68.79H30.1v-1.536c2.06.749 4.23 1.27 6.479 1.535zm3.321-.001a28.726 28.726 0 0 1-9.8-1.748v-2.497h9.8zm-10-1.822v-2.423h-4.953a28.678 28.678 0 0 0 4.953 2.423zm10-2.623h-9.8V60.1h9.8zm-10 0V60.1h-9.8v.702a28.915 28.915 0 0 0 4.526 3.542H29.9zm7.254-4.444H30.1v-2.403a19.966 19.966 0 0 0 7.053 2.403zm0-39.8a19.966 19.966 0 0 0-7.054 2.403V20.1h7.053zm2.746-.2h-9.8v-4.245h9.8zm-10 0v-4.245h-5.27a28.907 28.907 0 0 0-4.53 3.544v.701zm10-4.445h-9.8V12.96a28.729 28.729 0 0 1 9.8-1.749zm-10 0v-2.421a28.668 28.668 0 0 0-4.95 2.42h4.95zm6.679-4.244a28.81 28.81 0 0 0-6.479 1.536V11.21h6.479zm-6.679 1.61v-1.61h-3.5a6.303 6.303 0 0 0-6.02 4.436 6.514 6.514 0 0 1 1.575-.192h2.617A28.877 28.877 0 0 1 29.9 12.82zm0 55.968V67.18a28.878 28.878 0 0 1-5.331-2.636h-2.614c-.543 0-1.07-.067-1.575-.192a6.303 6.303 0 0 0 6.02 4.437zm20.2 0h3.5a6.303 6.303 0 0 0 6.02-4.438 6.513 6.513 0 0 1-1.576.193h-2.608a28.879 28.879 0 0 1-5.336 2.638zm-.2-1.534v1.534h-6.475a28.808 28.808 0 0 0 6.475-1.534zm.2-.287a28.671 28.671 0 0 0 4.957-2.424H50.1v2.424zm-.2-2.424v2.499a28.728 28.728 0 0 1-9.8 1.746v-4.245zm.2-.2h5.278a28.914 28.914 0 0 0 4.522-3.538V60.1h-9.8zm-.2-4.244v4.244h-9.8V60.1zm0-2.603V59.9h-7.053a19.966 19.966 0 0 0 7.053-2.403zm0-37.397v2.403a19.966 19.966 0 0 0-7.053-2.403H49.9zm.2-.2h9.8v-.705a28.911 28.911 0 0 0-4.526-3.54H50.1V19.9zm-.2-4.245V19.9h-9.8v-4.245h9.8zm.2-.2h4.954a28.676 28.676 0 0 0-4.954-2.423zm-.2-2.497v2.497h-9.8V11.21a28.75 28.75 0 0 1 9.8 1.747zm.2-.14a28.877 28.877 0 0 1 5.332 2.637h2.612c.543 0 1.071.066 1.576.192a6.303 6.303 0 0 0-6.02-4.436h-3.5zm-.2-1.607v1.534a28.812 28.812 0 0 0-6.475-1.534H49.9zm-34.245 44.53v2.303c0 .567.075 1.117.215 1.64a6.309 6.309 0 0 0 1.643.216h1.41a29.118 29.118 0 0 1-3.268-4.16zm3.458 4.359h-1.6a6.513 6.513 0 0 1-1.578-.193 6.315 6.315 0 0 0 4.157 4.157 6.517 6.517 0 0 1-.192-1.575v-1.602a29.35 29.35 0 0 1-.787-.787zm.787.509a29.029 29.029 0 0 1-.508-.509h.508zm.2.469v1.411c0 .567.075 1.117.215 1.64.523.14 1.073.215 1.64.215h2.3a29.118 29.118 0 0 1-4.155-3.266zm35.649 3.266h2.295c.567 0 1.117-.075 1.64-.216a6.286 6.286 0 0 0 .216-1.639v-1.407a29.116 29.116 0 0 1-4.151 3.262zm4.35-3.454v1.598a6.53 6.53 0 0 1-.192 1.574 6.314 6.314 0 0 0 4.155-4.154 6.509 6.509 0 0 1-1.572.191h-1.6a29.08 29.08 0 0 1-.791.791zm.982-.991h1.41c.565 0 1.114-.075 1.636-.215a6.31 6.31 0 0 0 .216-1.641V55.75a29.113 29.113 0 0 1-3.262 4.15zm3.262-35.65v-2.295c0-.568-.075-1.117-.216-1.64a6.307 6.307 0 0 0-1.637-.215h-1.41a29.112 29.112 0 0 1 3.263 4.15zM60.89 19.9h1.6c.542 0 1.069.066 1.573.192a6.314 6.314 0 0 0-4.156-4.157 6.51 6.51 0 0 1 .192 1.576v1.598c.269.259.532.522.79.791zm-.991-.981V17.51a6.31 6.31 0 0 0-.216-1.64 6.308 6.308 0 0 0-1.64-.216h-2.299a29.108 29.108 0 0 1 4.155 3.264zm-35.641-3.264h-2.304a6.31 6.31 0 0 0-1.639.215 6.306 6.306 0 0 0-.216 1.641v1.412a29.115 29.115 0 0 1 4.159-3.268zM19.9 19.113v-1.602c0-.543.067-1.072.193-1.577a6.315 6.315 0 0 0-4.159 4.16 6.518 6.518 0 0 1 1.58-.194h1.6c.257-.267.519-.53.786-.787zm-.508.787h.508v-.508c-.171.167-.34.337-.508.508zm-.47.2h-1.409a6.31 6.31 0 0 0-1.643.216 6.308 6.308 0 0 0-.215 1.639v2.305a29.107 29.107 0 0 1 3.268-4.16zm41.178-.712c.173.168.344.34.512.512H60.1zm.513 40.712c-.169.173-.34.344-.513.513V60.1z' fill='%2394a3b8' fill-rule='evenodd'/%3e%3crect fill='black' height='80' rx='16' width='80'/%3e%3cpath d='M43.47 19.752c1.24 5.14.821 9.663-.937 10.1-1.758.438-4.19-3.375-5.43-8.517-1.241-5.14-.822-9.663.936-10.1 1.759-.438 4.19 3.376 5.43 8.517zm20.49 4.42c-2.749-2.913-8.216-2.123-12.212 1.763s-5.008 9.398-2.26 12.31 8.215 2.123 12.211-1.763 5.008-9.398 2.26-12.31zM42.102 68.769c1.758-.438 2.116-5.216.8-10.673-1.318-5.456-3.81-9.525-5.57-9.088-1.757.438-2.115 5.216-.798 10.672 1.317 5.457 3.81 9.526 5.568 9.089zM24.18 26.838c5.073 1.496 8.78 4.12 8.28 5.862-.5 1.741-5.019 1.94-10.091.444-5.073-1.496-8.78-4.12-8.28-5.861.501-1.742 5.019-1.941 10.092-.445zm32.924 19.664c5.384 1.588 9.343 4.286 8.843 6.028-.5 1.741-5.27 1.866-10.654.278-5.385-1.588-9.343-4.286-8.843-6.028.5-1.741 5.27-1.866 10.654-.278zm-27.216-3.654c-1.258-1.304-5.384.594-9.215 4.24-3.832 3.644-5.919 7.656-4.66 8.96 1.257 1.304 5.383-.594 9.215-4.239s5.918-7.657 4.66-8.96z' fill='%23fe5'/%3e%3c/svg%3e\",h=\".pera-wallet-download-qr-code-wrapper {\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n  width: fit-content;\\n  margin: 26px auto 0;\\n  padding: 10px;\\n  box-shadow: 0px 20px 60px rgba(26, 35, 91, 0.15), 0px 4px 12px rgba(26, 35, 91, 0.05), 0px 1px 4px rgba(26, 35, 91, 0.06);\\n  border-radius: 24px;\\n}\\n\\n@media (max-width: 767px) {\\n  .pera-wallet-download-qr-code-wrapper {\\n    margin-top: 51px;\\n  }\\n}\";i(h);const g=document.createElement(\"template\");g.innerHTML='\\n  <div id=\"pera-wallet-download-qr-code-wrapper\" class=\"pera-wallet-download-qr-code-wrapper\"></div>  \\n';class f extends HTMLElement{constructor(){if(super(),this.attachShadow({mode:\"open\"}),this.shadowRoot){const e=document.createElement(\"style\");e.textContent=h,this.shadowRoot.append(g.content.cloneNode(!0),e)}}connectedCallback(){var n;const t=new o.default({width:205,height:205,type:\"svg\",data:e.PERA_DOWNLOAD_URL,image:w,dotsOptions:{color:\"#000\",type:\"extra-rounded\"},imageOptions:{crossOrigin:\"anonymous\",margin:10},cornersSquareOptions:{type:\"extra-rounded\"},cornersDotOptions:{type:\"dot\"}}),a=null===(n=this.shadowRoot)||void 0===n?void 0:n.getElementById(\"pera-wallet-download-qr-code-wrapper\");a&&t.append(a)}}var x=\"data:image/svg+xml,%3csvg width='24' height='24' viewBox='0 0 24 24' fill='none' xmlns='http://www.w3.org/2000/svg'%3e%3cpath d='M8.5 19L15.5 12L8.5 5' stroke='%233C3C49' stroke-width='2'/%3e%3c/svg%3e\",u=\".pera-wallet-connect-modal-desktop-mode {\\n  display: grid;\\n  grid-template-columns: 205px auto;\\n  gap: 70px;\\n}\\n.pera-wallet-connect-modal-desktop-mode--default .pera-wallet-connect-modal-desktop-mode__default-view {\\n  display: block;\\n}\\n.pera-wallet-connect-modal-desktop-mode--default .pera-wallet-connect-modal-desktop-mode__default-view--web-wallet-not-avaliable .pera-wallet-accordion-item--web-wallet {\\n  display: none;\\n}\\n.pera-wallet-connect-modal-desktop-mode--default .pera-wallet-connect-modal-desktop-mode__default-view--web-wallet-not-avaliable .pera-wallet-accordion-item .pera-wallet-accordion-toggle {\\n  padding: 26px 24px 12px;\\n  border-radius: 24px 24px 0 0;\\n  transition: all ease-in 0.2s;\\n}\\n.pera-wallet-connect-modal-desktop-mode--default .pera-wallet-connect-modal-desktop-mode__default-view--web-wallet-not-avaliable .pera-wallet-accordion-item .pera-wallet-accordion-item__content {\\n  height: 434px;\\n  border-radius: 0 0 24px 24px;\\n  transition: height ease-in 0.2s;\\n}\\n.pera-wallet-connect-modal-desktop-mode--default .pera-wallet-connect-modal-desktop-mode__default-view--web-wallet-not-avaliable .pera-wallet-accordion-item .pera-wallet-accordion-icon {\\n  transform: rotate(90deg);\\n}\\n.pera-wallet-connect-modal-desktop-mode--default .pera-wallet-connect-modal-desktop-mode__default-view--web-wallet-not-avaliable .pera-wallet-connect-modal-desktop-mode__download-pera-description {\\n  margin-top: 50px;\\n}\\n.pera-wallet-connect-modal-desktop-mode--default .pera-wallet-connect-modal-desktop-mode__download-view {\\n  display: none;\\n}\\n.pera-wallet-connect-modal-desktop-mode--download .pera-wallet-connect-modal-desktop-mode__default-view {\\n  display: none;\\n}\\n.pera-wallet-connect-modal-desktop-mode--download .pera-wallet-connect-modal-desktop-mode__download-view {\\n  display: block;\\n}\\n.pera-wallet-connect-modal-desktop-mode--download .pera-wallet-connect-modal-desktop-mode__download-view .pera-wallet-connect-modal-download-pera-view__footer a {\\n  display: flex;\\n  cursor: pointer;\\n}\\n.pera-wallet-connect-modal-desktop-mode--select-account {\\n  width: 100%;\\n  height: 100%;\\n}\\n.pera-wallet-connect-modal-desktop-mode--select-account.pera-wallet-connect-modal-desktop-mode--default {\\n  overflow: hidden;\\n}\\n.pera-wallet-connect-modal-desktop-mode--select-account .pera-wallet-connect-modal-desktop-mode__web-wallet-iframe {\\n  position: unset;\\n}\\n.pera-wallet-connect-modal-desktop-mode--select-account .pera-wallet-accordion {\\n  overflow: hidden;\\n}\\n.pera-wallet-connect-modal-desktop-mode--select-account #pera-wallet-iframe {\\n  position: absolute;\\n  top: 0;\\n  left: 0;\\n  z-index: 3;\\n  width: 100%;\\n  height: 100%;\\n  border-radius: 16px;\\n}\\n\\n.pera-wallet-connect-modal-desktop-mode__accordion__description,\\n.pera-wallet-connect-modal-desktop-mode__connect-button-wrapper {\\n  padding: 0 40px 20px 64px;\\n}\\n\\n.pera-wallet-connect-modal-desktop-mode__web-wallet {\\n  display: flex;\\n  flex-direction: column;\\n  justify-content: space-between;\\n  height: calc(100% - 88px);\\n  padding: 48px 52px 40px;\\n  margin: 0 auto;\\n}\\n\\n.pera-wallet-connect-modal-desktop-mode__web-wallet__logo-wrapper {\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n  width: 72px;\\n  height: 72px;\\n  margin: 0 auto 16px;\\n  background: #ffffff;\\n  border-radius: 50%;\\n  box-shadow: 0px 0px 1px rgba(12, 26, 75, 0.1), 0px 10px 16px rgba(20, 37, 63, 0.06);\\n}\\n\\n.pera-wallet-connect-modal-desktop-mode__web-wallet__description {\\n  margin: 0 auto 32px;\\n  font-size: 14px;\\n  line-height: 24px;\\n  letter-spacing: -0.1px;\\n  text-align: center;\\n  color: #6a6a81;\\n}\\n\\n.pera-wallet-connect-modal-desktop-mode__web-wallet__launch-button {\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n  gap: 8px;\\n  width: 100%;\\n  padding: 14px 0;\\n  color: #ffffff;\\n  background-color: #6b46fe;\\n  border-radius: 12px;\\n  font-size: 14px;\\n  font-weight: 500;\\n  line-height: 20px;\\n  letter-spacing: -0.1;\\n  border: none;\\n  outline: none;\\n  cursor: pointer;\\n}\\n\\n.pera-wallet-connect-modal-desktop-mode__web-wallet-iframe {\\n  position: relative;\\n  width: fit-content;\\n  margin: 0 auto;\\n}\\n\\n.pera-wallet-connect-modal-desktop-mode__connect-button {\\n  display: block;\\n  width: 100%;\\n  height: 48px;\\n  border: unset;\\n  border-radius: 6px;\\n  background-color: #333333;\\n  color: white;\\n  cursor: pointer;\\n  font-family: var(--pera-wallet-modal-font-family);\\n  font-size: 13px;\\n}\\n\\n.pera-wallet-connect-qr-code-wrapper {\\n  width: fit-content;\\n  margin: 24px auto 0;\\n  padding: 10px;\\n  box-shadow: 0px 20px 60px rgba(26, 35, 91, 0.15), 0px 4px 12px rgba(26, 35, 91, 0.05), 0px 1px 4px rgba(26, 35, 91, 0.06);\\n  border-radius: 24px;\\n}\\n\\n.pera-wallet-connect-modal-desktop-mode__download-pera-description {\\n  color: #838aa6;\\n  text-align: center;\\n  margin: 32px 0 12px;\\n  font-size: 13px;\\n  font-weight: 500;\\n  line-height: 20px;\\n  letter-spacing: -0.04px;\\n}\\n\\n.pera-wallet-connect-modal-desktop-mode__download-pera-button {\\n  display: flex;\\n  align-items: center;\\n  gap: 8px;\\n  margin: 0 auto;\\n  padding: 0;\\n  color: #6b46fe;\\n  background-color: transparent;\\n  outline: none;\\n  border: none;\\n  font-weight: 600;\\n  font-size: 13px;\\n  line-height: 20px;\\n  letter-spacing: 0.01px;\\n  cursor: pointer;\\n}\\n\\n.pera-wallet-connect-modal-download-pera-view__back-button {\\n  display: flex;\\n  align-items: center;\\n  gap: 16px;\\n  margin-bottom: 14px;\\n  padding: 12px 24px;\\n  color: #3c3c49;\\n  background-color: #ffffff;\\n  outline: none;\\n  box-shadow: 0px 0px 1px rgba(12, 26, 75, 0.24), 0px 3px 8px -1px rgba(50, 50, 71, 0.05);\\n  border: unset;\\n  border-radius: 24px;\\n  font-size: 14px;\\n  font-weight: 600;\\n  line-height: 24px;\\n  letter-spacing: -0.1px;\\n  cursor: pointer;\\n}\\n\\n.pera-wallet-connect-modal-download-pera-view {\\n  padding: 32px 37px 28px;\\n  background-color: #ffffff;\\n  box-shadow: 0px 0px 1px rgba(12, 26, 75, 0.24), 0px 3px 8px -1px rgba(50, 50, 71, 0.05);\\n  border-radius: 24px;\\n}\\n\\n.pera-wallet-connect-modal-download-pera-view__title {\\n  margin-bottom: 8px;\\n  color: #3c3c49;\\n  font-weight: 600;\\n  font-size: 15px;\\n  line-height: 18px;\\n  text-align: center;\\n  letter-spacing: -0.13px;\\n}\\n\\n.pera-wallet-connect-modal-download-pera-view__footer {\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n  gap: 12px;\\n  margin-top: 53px;\\n}\\n\\n.pera-wallet-connect-modal-download-pera-view__footer__button {\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n  gap: 8px;\\n  padding: 8px 16px;\\n  color: #6a6a81;\\n  background-color: #ffffff;\\n  box-shadow: 0px 0px 1px rgba(12, 26, 75, 0.24), 0px 3px 8px -1px rgba(50, 50, 71, 0.05);\\n  text-decoration: none;\\n  border-radius: 12px;\\n  font-weight: 500;\\n  font-size: 13px;\\n  line-height: 200%;\\n  letter-spacing: -0.04px;\\n  cursor: pointer;\\n}\\n\\n#pera-wallet-iframe {\\n  width: 285px;\\n  height: 376px;\\n  margin: 0 auto;\\n  border: none;\\n}\\n\\n@media (max-width: 767px) {\\n  .pera-wallet-connect-modal-desktop-mode {\\n    grid-template-columns: 1fr;\\n    gap: 24px;\\n  }\\n  .pera-wallet-connect-qr-code-wrapper {\\n    margin-top: 16px;\\n  }\\n  .pera-wallet-connect-modal-download-pera-view {\\n    padding: 24px;\\n  }\\n  .pera-wallet-download-qr-code-wrapper {\\n    margin-top: 32px;\\n  }\\n  .pera-wallet-connect-modal-download-pera-view__footer {\\n    margin-top: 40px;\\n  }\\n}\";i(u);var _=\".pera-wallet-accordion-item {\\n  background-color: #ffffff;\\n  border-radius: 24px;\\n  box-shadow: 0px 1px 4px rgba(0, 0, 0, 0.02), 0px 4px 12px rgba(0, 0, 0, 0.03);\\n}\\n.pera-wallet-accordion-item:not(:last-of-type) {\\n  margin-bottom: 20px;\\n}\\n.pera-wallet-accordion-item:not(:last-of-type) .pera-wallet-accordion-panel {\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n}\\n.pera-wallet-accordion-item .pera-wallet-accordion-item__content {\\n  height: 0;\\n  overflow: hidden;\\n  color: #69708d;\\n  background-color: #ffffff;\\n  font-size: 13px;\\n  font-weight: 500;\\n  line-height: 20px;\\n  letter-spacing: -0.04px;\\n  transition: height ease-in 0.2s;\\n}\\n.pera-wallet-accordion-item--active .pera-wallet-accordion-toggle {\\n  padding: 26px 24px 12px;\\n  border-radius: 24px 24px 0 0;\\n  transition: all ease-in 0.2s;\\n}\\n.pera-wallet-accordion-item--active .pera-wallet-accordion-item__content {\\n  height: 364px;\\n  border-radius: 0 0 24px 24px;\\n  transition: height ease-in 0.2s;\\n}\\n.pera-wallet-accordion-item--active .pera-wallet-accordion-icon {\\n  transform: rotate(90deg);\\n}\\n\\n.pera-wallet-accordion-toggle {\\n  position: relative;\\n  display: flex;\\n  align-items: center;\\n  gap: 16px;\\n  padding: 12px 24px;\\n  color: #2c3559;\\n  background-color: #ffffff;\\n  border: none;\\n  border-radius: 24px;\\n  outline: none;\\n  cursor: pointer;\\n  font-size: 16px;\\n  line-height: 18px;\\n  letter-spacing: -0.1px;\\n  font-weight: 600;\\n  transition: all ease-in 0.2s;\\n}\\n.pera-wallet-accordion-toggle__text, .pera-wallet-accordion-toggle__content-with-label__text {\\n  color: #6a6a81;\\n}\\n\\n.pera-wallet-accordion-icon {\\n  transition: all ease-in 0.2s;\\n}\\n\\n.pera-wallet-accordion-toggle__bold-color {\\n  color: #3c3c49;\\n  font-weight: 600;\\n}\\n\\n.pera-wallet-accordion-toggle__content-with-label {\\n  display: flex;\\n  align-items: center;\\n  gap: 12px;\\n}\\n\\n.pera-wallet-accordion-toggle__label {\\n  padding: 4px 9px;\\n  color: #00b19e;\\n  background: rgba(0, 177, 158, 0.08);\\n  border-radius: 12px;\\n  font-size: 11px;\\n  font-weight: 600;\\n  line-height: 18px;\\n  letter-spacing: 0.01px;\\n}\\n\\n.pera-wallet-accordion-toggle__button {\\n  position: absolute;\\n  z-index: 2;\\n  width: 100%;\\n  height: 100%;\\n  background: transparent;\\n  box-shadow: none;\\n  outline: none;\\n  border: none;\\n  cursor: pointer;\\n}\\n\\n@media (max-width: 767px) {\\n  .pera-wallet-accordion-toggle {\\n    font-size: 14px;\\n    font-weight: 500;\\n    line-height: 24px;\\n    letter-spacing: -0.1px;\\n  }\\n}\";i(_);const b=document.createElement(\"template\"),v=document.createElement(\"style\"),C=document.createElement(\"style\");v.textContent=u,C.textContent=_;const L=`\\n  <div id=\"pera-wallet-connect-modal-desktop-mode\" class=\"pera-wallet-connect-modal-desktop-mode pera-wallet-connect-modal-desktop-mode--default\">\\n      <pera-wallet-connect-modal-information-section></pera-wallet-connect-modal-information-section>\\n\\n      <div class=\"pera-wallet-connect-modal-desktop-mode__default-view\">\\n        <div class=\"pera-wallet-accordion-item pera-wallet-accordion-item--active pera-wallet-accordion-item--web-wallet\">\\n          <a class=\"pera-wallet-accordion-toggle\">\\n            <button class=\"pera-wallet-accordion-toggle__button\"></button>\\n\\n            <img src=\"${x}\" class=\"pera-wallet-accordion-icon\" />\\n\\n            <div class=\"pera-wallet-accordion-toggle__content-with-label\">\\n              <div class=\"pera-wallet-accordion-toggle__content-with-label__text\">\\n                Connect With\\n\\n                <span class=\"pera-wallet-accordion-toggle__bold-color\">\\n                  Pera Web\\n                </span>\\n              </div>\\n\\n              <span id=\"pera-web-new-label\" class=\"pera-wallet-accordion-toggle__label\">NEW</span>\\n            </div>\\n          </a>\\n\\n          <div class=\"pera-wallet-accordion-item__content\">\\n          ${\"Chrome\"===e.detectBrowser()?'<div class=\"pera-wallet-connect-modal-desktop-mode__web-wallet-iframe\"></div>':\"<div class=\\\"pera-wallet-connect-modal-desktop-mode__web-wallet\\\">\\n          <div>\\n            <div\\n              class=\\\"pera-wallet-connect-modal-desktop-mode__web-wallet__logo-wrapper\\\">\\n              <img src=\\\"data:image/svg+xml,%3csvg width='44' height='44' viewBox='0 0 44 44' fill='none' xmlns='http://www.w3.org/2000/svg'%3e%3crect x='3.5' y='7.5' width='36' height='26' rx='5.5' stroke='%236B46FE' stroke-width='3'/%3e%3cpath d='M22.4973 14.5237C22.8556 16.041 22.7344 17.3757 22.2267 17.5048C21.719 17.6339 21.0169 16.5085 20.6586 14.9912C20.3003 13.4739 20.4214 12.1392 20.9292 12.0101C21.4369 11.881 22.1389 13.0064 22.4973 14.5237Z' fill='%236B46FE'/%3e%3cpath d='M28.4139 15.8282C27.6204 14.9686 26.0417 15.2016 24.8877 16.3486C23.7338 17.4956 23.4417 19.1222 24.2352 19.9818C25.0287 20.8414 26.6074 20.6084 27.7613 19.4614C28.9153 18.3144 29.2074 16.6878 28.4139 15.8282Z' fill='%236B46FE'/%3e%3cpath d='M22.1027 28.9905C22.6104 28.8614 22.7137 27.4512 22.3334 25.8407C21.9531 24.2303 21.2332 23.0294 20.7254 23.1585C20.2177 23.2876 20.1144 24.6978 20.4947 26.3083C20.875 27.9187 21.5949 29.1196 22.1027 28.9905Z' fill='%236B46FE'/%3e%3cpath d='M16.9269 16.6152C18.3917 17.0567 19.4621 17.8312 19.3176 18.3452C19.1731 18.8591 17.8686 18.9179 16.4037 18.4764C14.9389 18.0349 13.8686 17.2603 14.0131 16.7464C14.1575 16.2324 15.4621 16.1737 16.9269 16.6152Z' fill='%236B46FE'/%3e%3cpath d='M26.4342 22.4188C27.9889 22.8874 29.1322 23.6839 28.9877 24.1979C28.8432 24.7118 27.4657 24.7486 25.911 24.28C24.3563 23.8114 23.213 23.0148 23.3575 22.5009C23.502 21.9869 24.8795 21.9502 26.4342 22.4188Z' fill='%236B46FE'/%3e%3cpath d='M18.5752 21.3404C18.2119 20.9555 17.0205 21.5157 15.914 22.5915C14.8075 23.6673 14.2049 24.8514 14.5682 25.2363C14.9314 25.6211 16.1229 25.061 17.2294 23.9852C18.3359 22.9094 18.9384 21.7253 18.5752 21.3404Z' fill='%236B46FE'/%3e%3cpath d='M16 39C21 39.0001 23.5 39.0001 28 39' stroke='%236B46FE' stroke-width='3' stroke-linecap='round'/%3e%3c/svg%3e\\\" />\\n            </div>\\n\\n            <p\\n              class=\\\"pera-wallet-connect-modal-desktop-mode__web-wallet__description\\\">\\n              Connect with Pera Web to continue\\n            </p>\\n          </div>\\n\\n          <button\\n            id=\\\"pera-wallet-connect-web-wallet-launch-button\\\"\\n            class=\\\"pera-wallet-connect-modal-desktop-mode__web-wallet__launch-button\\\">\\n            Launch Pera Web\\n\\n            <img src=\\\"data:image/svg+xml,%3csvg width='20' height='20' viewBox='0 0 20 20' fill='none' xmlns='http://www.w3.org/2000/svg'%3e%3cpath fill-rule='evenodd' clip-rule='evenodd' d='M13.0892 9.41009C13.4147 9.73553 13.4147 10.2632 13.0892 10.5886L8.08924 15.5886C7.7638 15.914 7.23616 15.914 6.91072 15.5886C6.58529 15.2632 6.58529 14.7355 6.91072 14.4101L11.3215 9.99935L6.91073 5.5886C6.58529 5.26317 6.58529 4.73553 6.91073 4.41009C7.23616 4.08466 7.7638 4.08466 8.08924 4.41009L13.0892 9.41009Z' fill='white'/%3e%3c/svg%3e\\\" />\\n          </button>\\n        </div>\"}\\n          </div>\\n        </div>\\n\\n        <div class=\"pera-wallet-accordion-item\">\\n          <a class=\"pera-wallet-accordion-toggle\">\\n          <button class=\"pera-wallet-accordion-toggle__button\"></button>\\n\\n            <img src=\"${x}\" class=\"pera-wallet-accordion-icon\" />\\n\\n            <div class=\"pera-wallet-accordion-toggle__text\">\\n              Connect with\\n\\n              <span class=\"pera-wallet-accordion-toggle__bold-color\">\\n                Pera Mobile\\n              </span>\\n            </div>\\n          </a>\\n\\n          <div class=\"pera-wallet-accordion-item__content\">\\n            <div id=\"pera-wallet-connect-modal-connect-qr-code\" class=\"pera-wallet-connect-qr-code-wrapper\"></div>\\n\\n            <div>\\n              <p\\n                class=\"pera-wallet-connect-modal-desktop-mode__download-pera-description\">\\n                  Don’t have Pera Wallet app?\\n              </p>\\n\\n              <button\\n                id=\"pera-wallet-connect-modal-desktop-mode-download-pera-button\"\\n                class=\"pera-wallet-connect-modal-desktop-mode__download-pera-button\">\\n                <img src=\"data:image/svg+xml,%3csvg width='16' height='16' viewBox='0 0 16 16' fill='none' xmlns='http://www.w3.org/2000/svg'%3e%3crect x='2' y='2' width='4.66667' height='4.66667' rx='1.2' stroke='%236B46FE' stroke-width='1.5'/%3e%3crect x='2' y='9.33203' width='4.66667' height='4.66667' rx='1.2' stroke='%236B46FE' stroke-width='1.5'/%3e%3crect x='9.33325' y='2' width='4.66667' height='4.66667' rx='1.2' stroke='%236B46FE' stroke-width='1.5'/%3e%3cpath d='M8.70581 9.5293H10.9411' stroke='%236B46FE' stroke-width='1.66667' stroke-linejoin='round'/%3e%3cpath d='M13.1765 12.668L14.6667 12.668' stroke='%236B46FE' stroke-width='1.66667' stroke-linejoin='round'/%3e%3cpath d='M13.1765 14L14.6667 14' stroke='%236B46FE' stroke-width='1.66667' stroke-linejoin='round'/%3e%3cpath d='M11.686 14L13.1762 14' stroke='%236B46FE' stroke-width='1.66667' stroke-linejoin='round'/%3e%3cpath d='M12.4314 9.5293H14.6667' stroke='%236B46FE' stroke-width='1.66667' stroke-linejoin='round'/%3e%3cpath d='M8.70581 10.2754H12.4313' stroke='%236B46FE' stroke-width='1.25' stroke-linejoin='round'/%3e%3cpath d='M10.196 11.7656H11.6862' stroke='%236B46FE' stroke-width='1.25' stroke-linejoin='round'/%3e%3cpath d='M10.196 12.5117H11.6862' stroke='%236B46FE' stroke-width='1.25' stroke-linejoin='round'/%3e%3cpath d='M8.70581 13.2539H10.196' stroke='%236B46FE' stroke-width='1.25' stroke-linejoin='round'/%3e%3cpath d='M8.70581 14H10.196' stroke='%236B46FE' stroke-width='1.25' stroke-linejoin='round'/%3e%3cpath d='M10.196 11.0195H12.4313' stroke='%236B46FE' stroke-width='1.25' stroke-linejoin='round'/%3e%3c/svg%3e\" alt=\"QR Icon\" />\\n\\n                Download Pera Wallet\\n              </button>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n\\n      <div class=\"pera-wallet-connect-modal-desktop-mode__download-view\">\\n        <button\\n          id=\"pera-wallet-connect-modal-download-pera-view-back-button\"\\n          class=\"pera-wallet-connect-modal-download-pera-view__back-button\">\\n          <img\\n            src=\"data:image/svg+xml,%3csvg width='24' height='24' viewBox='0 0 24 24' fill='none' xmlns='http://www.w3.org/2000/svg'%3e%3cpath fill-rule='evenodd' clip-rule='evenodd' d='M10.7071 6.29387C11.0976 6.68439 11.0976 7.31756 10.7071 7.70808L7.41421 11.001L19 11.001C19.5523 11.001 20 11.4487 20 12.001C20 12.5533 19.5523 13.001 19 13.001L7.41421 13.001L10.7071 16.2939C11.0976 16.6844 11.0976 17.3176 10.7071 17.7081C10.3166 18.0986 9.68342 18.0986 9.29289 17.7081L4.29289 12.7081C4.10536 12.5205 4 12.2662 4 12.001C4 11.7358 4.10536 11.4814 4.29289 11.2939L9.29289 6.29387C9.68342 5.90335 10.3166 5.90335 10.7071 6.29387Z' fill='%233C3C49'/%3e%3c/svg%3e\"\\n            alt=\"Back Arrow\"\\n          />\\n\\n          Back\\n        </button>\\n\\n        <div class=\"pera-wallet-connect-modal-download-pera-view\">\\n          <h1 class=\"pera-wallet-connect-modal-download-pera-view__title\">\\n            Download Pera Wallet\\n          </h1>\\n\\n          <pera-wallet-download-qr-code></pera-wallet-download-qr-code>\\n\\n          <div class=\"pera-wallet-connect-modal-download-pera-view__footer\">\\n            <a\\n              href=\"https://apps.apple.com/us/app/algorand-wallet/id1459898525\"\\n              target=\"_blank\"\\n              rel=\"noopener noreferrer\">\\n              <img src=\"data:image/svg+xml,%3csvg width='40' height='40' viewBox='0 0 40 40' fill='none' xmlns='http://www.w3.org/2000/svg'%3e%3crect width='40' height='40' rx='12' fill='black'/%3e%3cpath d='M25.6308 20.3011C25.6416 19.4664 25.8633 18.6481 26.2753 17.9221C26.6873 17.1962 27.2763 16.5863 27.9873 16.1491C27.5356 15.5039 26.9397 14.973 26.2469 14.5984C25.554 14.2239 24.7834 14.016 23.9963 13.9914C22.317 13.8151 20.6891 14.9962 19.8333 14.9962C18.9611 14.9962 17.6436 14.0089 16.2249 14.0381C15.3072 14.0677 14.4128 14.3346 13.6289 14.8126C12.8451 15.2906 12.1984 15.9636 11.7519 16.7659C9.81789 20.1144 11.2605 25.0354 13.1132 27.742C14.0401 29.0674 15.1233 30.5478 16.5408 30.4953C17.9278 30.4378 18.4458 29.6108 20.1202 29.6108C21.779 29.6108 22.265 30.4953 23.7112 30.4619C25.1995 30.4378 26.1372 29.1307 27.0316 27.7928C27.6976 26.8484 28.2101 25.8047 28.55 24.7003C27.6853 24.3345 26.9474 23.7224 26.4283 22.9401C25.9092 22.1578 25.6318 21.2399 25.6308 20.3011ZM22.8993 12.2113C23.7108 11.2371 24.1106 9.98492 24.0138 8.7207C22.7739 8.85092 21.6287 9.44347 20.8062 10.3803C20.404 10.838 20.096 11.3704 19.8998 11.9472C19.7035 12.5239 19.6229 13.1337 19.6625 13.7417C20.2826 13.7481 20.8961 13.6137 21.4568 13.3486C22.0175 13.0835 22.5107 12.6946 22.8993 12.2113Z' fill='white'/%3e%3c/svg%3e\" alt=\"App Store icon\" />\\n            </a>\\n\\n            <a\\n              href=\"https://play.google.com/store/apps/details?id=com.algorand.android\"\\n              target=\"_blank\"\\n              rel=\"noopener noreferrer\">\\n              <img src=\"data:image/svg+xml,%3csvg width='40' height='40' viewBox='0 0 40 40' fill='none' xmlns='http://www.w3.org/2000/svg'%3e%3crect width='40' height='40' rx='12' fill='black'/%3e%3cpath d='M12.41 9.7719C12.1334 10.0219 11.9683 10.4388 11.9683 10.9922V10.8671V29.1294V29.0091C11.9683 29.5202 12.1099 29.9149 12.3497 30.169L12.4109 30.2277V30.228C12.6051 30.4035 12.854 30.4966 13.1393 30.4963C13.418 30.4963 13.7316 30.4073 14.0626 30.2194L26.0264 23.4107L30.1359 21.0717C30.6578 20.7748 30.9508 20.3917 30.9998 20.0014V19.9998C30.9508 19.6087 30.6578 19.2259 30.1359 18.9289L26.0261 16.5902L14.0627 9.78154C13.731 9.59325 13.4171 9.50391 13.1376 9.50391C12.8527 9.50391 12.6041 9.59677 12.41 9.7719H12.41Z' fill='%2300C1FF'/%3e%3cpath d='M12.411 30.2285L12.3497 30.1698C12.1099 29.9157 11.9683 29.5209 11.9683 29.0098V29.1301V10.8724V10.993C11.9683 10.4396 12.1334 10.0226 12.41 9.77268L22.622 20.0009L12.411 30.2285Z' fill='url(%23paint0_linear_173_14441)'/%3e%3cpath d='M26.0256 23.4102L22.6211 19.9996L26.0253 16.5896L30.1351 18.9283C30.657 19.2253 30.95 19.6081 30.9989 19.9993V20.0008C30.95 20.3911 30.657 20.7742 30.1351 21.0712L26.0256 23.4101' fill='url(%23paint1_linear_173_14441)'/%3e%3cpath d='M13.1374 30.4961C12.8522 30.4964 12.6033 30.4032 12.4092 30.2277V30.2275L22.6202 19.9999L26.0246 23.4104L14.0608 30.2191C13.7298 30.4071 13.4162 30.4961 13.1374 30.4961Z' fill='url(%23paint2_linear_173_14441)'/%3e%3cpath d='M22.6212 20.002L12.4092 9.7737C12.6033 9.59858 12.8519 9.50571 13.1368 9.50571C13.4163 9.50571 13.7302 9.59501 14.0618 9.78335L26.0253 16.592L22.6212 20.002' fill='url(%23paint3_linear_173_14441)'/%3e%3cpath d='M13.1394 30.6172C12.8542 30.6172 12.6049 30.524 12.4108 30.3486L12.4105 30.3489C12.4097 30.3481 12.4088 30.3473 12.4079 30.3466L12.3548 30.2947C12.3531 30.2931 12.3516 30.2912 12.3496 30.2893L12.4108 30.2279C12.6049 30.4034 12.8538 30.4966 13.1392 30.4962C13.4179 30.4962 13.7315 30.4073 14.0625 30.2193L26.0263 23.4106L26.1029 23.4874L26.0253 23.5316L14.0625 30.3398C13.7608 30.5111 13.4739 30.6004 13.2147 30.6153C13.1896 30.6165 13.1645 30.6171 13.1394 30.6172' fill='url(%23paint4_linear_173_14441)'/%3e%3cpath d='M12.3497 30.2891C12.1099 30.0349 11.9683 29.6406 11.9683 29.1292V29.0089C11.9683 29.52 12.1099 29.9146 12.3497 30.1688L12.4109 30.2275L12.3497 30.2891Z' fill='url(%23paint5_linear_173_14441)'/%3e%3cpath d='M26.1025 23.4882L26.0259 23.4114L30.1349 21.0727C30.6568 20.7758 30.9498 20.3927 30.9987 20.0025C30.9987 20.1457 30.9668 20.2889 30.9035 20.4282C30.7756 20.7091 30.5194 20.9744 30.135 21.1934L26.1025 23.4883' fill='url(%23paint6_linear_173_14441)'/%3e%3cpath d='M30.9991 20C30.9501 19.6089 30.6571 19.2261 30.1353 18.9291L26.0259 16.5907L26.1025 16.5139H26.1029L30.1353 18.8088C30.7106 19.1365 30.9987 19.5682 30.9991 20Z' fill='url(%23paint7_linear_173_14441)'/%3e%3cpath d='M11.9683 10.9922V10.8661C11.9683 10.8206 11.9695 10.7761 11.9718 10.7329V10.7309C11.9718 10.7303 11.9718 10.7297 11.972 10.729V10.7242C11.9969 10.284 12.1334 9.94066 12.3497 9.71139L12.4099 9.77198C12.1334 10.0219 11.9683 10.4388 11.9683 10.9922Z' fill='url(%23paint8_linear_173_14441)'/%3e%3cpath d='M26.026 16.5898L14.0625 9.78115C13.7308 9.59285 13.417 9.50355 13.1375 9.50355C12.8525 9.50355 12.6039 9.59642 12.4099 9.77154L12.3496 9.71091C12.3684 9.69096 12.388 9.67172 12.4082 9.65322C12.4089 9.65255 12.4099 9.65188 12.4105 9.65125C12.6031 9.47747 12.849 9.3846 13.1314 9.38293H13.1375C13.417 9.38293 13.7308 9.47227 14.0625 9.66064L26.1029 16.5128L26.1026 16.513L26.026 16.5898Z' fill='url(%23paint9_linear_173_14441)'/%3e%3cdefs%3e%3clinearGradient id='paint0_linear_173_14441' x1='18.4943' y1='10.6794' x2='9.69389' y2='19.494' gradientUnits='userSpaceOnUse'%3e%3cstop stop-color='%2300A0FF'/%3e%3cstop offset='0.00657' stop-color='%2300A1FF'/%3e%3cstop offset='0.2601' stop-color='%2300BEFF'/%3e%3cstop offset='0.5122' stop-color='%2300D2FF'/%3e%3cstop offset='0.7604' stop-color='%2300DFFF'/%3e%3cstop offset='1' stop-color='%2300E3FF'/%3e%3c/linearGradient%3e%3clinearGradient id='paint1_linear_173_14441' x1='31.6348' y1='19.9407' x2='11.691' y2='19.9407' gradientUnits='userSpaceOnUse'%3e%3cstop stop-color='%23FFE000'/%3e%3cstop offset='0.4087' stop-color='%23FFBD00'/%3e%3cstop offset='0.7754' stop-color='orange'/%3e%3cstop offset='1' stop-color='%23FF9C00'/%3e%3c/linearGradient%3e%3clinearGradient id='paint2_linear_173_14441' x1='24.2172' y1='23.2425' x2='9.30414' y2='38.0705' gradientUnits='userSpaceOnUse'%3e%3cstop stop-color='%23FF3A44'/%3e%3cstop offset='1' stop-color='%23C31162'/%3e%3c/linearGradient%3e%3clinearGradient id='paint3_linear_173_14441' x1='9.77725' y1='8.25731' x2='16.4237' y2='14.876' gradientUnits='userSpaceOnUse'%3e%3cstop stop-color='%2332A071'/%3e%3cstop offset='0.0685' stop-color='%232DA771'/%3e%3cstop offset='0.4762' stop-color='%2315CF74'/%3e%3cstop offset='0.8009' stop-color='%2306E775'/%3e%3cstop offset='1' stop-color='%2300F076'/%3e%3c/linearGradient%3e%3clinearGradient id='paint4_linear_173_14441' x1='24.2114' y1='25.6084' x2='12.2683' y2='37.5709' gradientUnits='userSpaceOnUse'%3e%3cstop stop-color='%23CC2E36'/%3e%3cstop offset='1' stop-color='%239C0E4E'/%3e%3c/linearGradient%3e%3clinearGradient id='paint5_linear_173_14441' x1='13.3285' y1='10.6804' x2='5.57625' y2='18.4453' gradientUnits='userSpaceOnUse'%3e%3cstop stop-color='%23008DE0'/%3e%3cstop offset='0.00657' stop-color='%23008DE0'/%3e%3cstop offset='0.2601' stop-color='%2300A7E0'/%3e%3cstop offset='0.5122' stop-color='%2300B8E0'/%3e%3cstop offset='0.7604' stop-color='%2300C4E0'/%3e%3cstop offset='1' stop-color='%2300C7E0'/%3e%3c/linearGradient%3e%3clinearGradient id='paint6_linear_173_14441' x1='31.6346' y1='20.0018' x2='11.6929' y2='20.0018' gradientUnits='userSpaceOnUse'%3e%3cstop stop-color='%23E0C500'/%3e%3cstop offset='0.4087' stop-color='%23E0A600'/%3e%3cstop offset='0.7754' stop-color='%23E09100'/%3e%3cstop offset='1' stop-color='%23E08900'/%3e%3c/linearGradient%3e%3clinearGradient id='paint7_linear_173_14441' x1='31.6349' y1='20.0008' x2='11.6933' y2='20.0008' gradientUnits='userSpaceOnUse'%3e%3cstop stop-color='%23FFE840'/%3e%3cstop offset='0.4087' stop-color='%23FFCE40'/%3e%3cstop offset='0.7754' stop-color='%23FFBC40'/%3e%3cstop offset='1' stop-color='%23FFB540'/%3e%3c/linearGradient%3e%3clinearGradient id='paint8_linear_173_14441' x1='13.3201' y1='10.6927' x2='5.8533' y2='17.8475' gradientUnits='userSpaceOnUse'%3e%3cstop stop-color='%2340B8FF'/%3e%3cstop offset='0.00657' stop-color='%2340B9FF'/%3e%3cstop offset='0.2601' stop-color='%2340CEFF'/%3e%3cstop offset='0.5122' stop-color='%2340DDFF'/%3e%3cstop offset='0.7604' stop-color='%2340E7FF'/%3e%3cstop offset='1' stop-color='%2340EAFF'/%3e%3c/linearGradient%3e%3clinearGradient id='paint9_linear_173_14441' x1='9.76302' y1='10.4182' x2='15.0961' y2='15.76' gradientUnits='userSpaceOnUse'%3e%3cstop stop-color='%2365B895'/%3e%3cstop offset='0.0685' stop-color='%2362BD95'/%3e%3cstop offset='0.4762' stop-color='%2350DB97'/%3e%3cstop offset='0.8009' stop-color='%2344ED98'/%3e%3cstop offset='1' stop-color='%2340F498'/%3e%3c/linearGradient%3e%3c/defs%3e%3c/svg%3e\" alt=\"Play Store icon\" />\\n            </a>\\n\\n            <a\\n              class=\"pera-wallet-connect-modal-download-pera-view__footer__button\"\\n              href=\"https://perawallet.s3-eu-west-3.amazonaws.com/android-releases/app-pera-prod-release-bitrise-signed.apk\"\\n              target=\"_blank\"\\n              rel=\"noopener noreferrer\">\\n              <img src=\"data:image/svg+xml,%3csvg width='24' height='24' viewBox='0 0 24 24' fill='none' xmlns='http://www.w3.org/2000/svg'%3e%3cpath d='M3 14V20C3 20.5523 3.44772 21 4 21H20C20.5523 21 21 20.5523 21 20V14' stroke='%232C3559' stroke-width='1.5'/%3e%3cpath d='M11.9998 16V3M11.9998 16L7.47803 11.4783M11.9998 16L16.5215 11.4783' stroke='%232C3559' stroke-width='1.5'/%3e%3c/svg%3e\" alt=\"Download icon\" />\\n\\n              Download APK File\\n            </a>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  `;b.innerHTML=L;class y extends HTMLElement{constructor(){super(),this.attachShadow({mode:\"open\"}),this.shadowRoot&&(this.shadowRoot.append(b.content.cloneNode(!0),v,C),this.shadowRoot.addEventListener(\"click\",(e=>{this.handleAccordion(e)})))}connectedCallback(){var n;const t=this.getAttribute(\"should-display-new-badge\"),a=null===(n=this.shadowRoot)||void 0===n?void 0:n.getElementById(\"pera-web-new-label\");if(\"false\"===t&&(null==a||a.setAttribute(\"style\",\"display:none\")),this.handleChangeView(),\"Chrome\"===e.detectBrowser()&&this.shadowRoot){const e=this.shadowRoot.querySelector(\".pera-wallet-connect-modal-desktop-mode__web-wallet-iframe\");e&&\"true\"===this.getAttribute(\"is-web-wallet-avaliable\")&&window.onWebWalletConnect(e)}}handleChangeView(){var e,n,t;const a=null===(e=this.shadowRoot)||void 0===e?void 0:e.getElementById(\"pera-wallet-connect-modal-desktop-mode-download-pera-button\"),o=null===(n=this.shadowRoot)||void 0===n?void 0:n.getElementById(\"pera-wallet-connect-modal-download-pera-view-back-button\"),l=null===(t=this.shadowRoot)||void 0===t?void 0:t.getElementById(\"pera-wallet-connect-web-wallet-launch-button\");a&&a.addEventListener(\"click\",(()=>{this.onClickDownload()})),o&&o.addEventListener(\"click\",(()=>{this.onClickBack()})),l&&l.addEventListener(\"click\",(()=>{this.webWalletConnect()})),this.renderQRCode(),this.checkWebWalletAvaliability()}webWalletConnect(){\"true\"===this.getAttribute(\"is-web-wallet-avaliable\")&&window.onWebWalletConnect()}handleAccordion(e){var n,t;if(e.target instanceof Element){if(!e.target.classList.contains(\"pera-wallet-accordion-toggle__button\"))return;if(this.shadowRoot&&(null===(n=e.target.parentElement)||void 0===n?void 0:n.parentElement)){const n=null===(t=e.target.parentElement)||void 0===t?void 0:t.parentElement;if(!n)return;if(n.classList.contains(\"pera-wallet-accordion-item--active\"))return;const a=this.shadowRoot.querySelectorAll(\".pera-wallet-accordion-item.pera-wallet-accordion-item--active\");for(let e=0;e<a.length;e++)a[e].classList.remove(\"pera-wallet-accordion-item--active\");n.classList.toggle(\"pera-wallet-accordion-item--active\")}}}renderQRCode(){var e;const n=this.getAttribute(\"uri\"),t=\"false\"===this.getAttribute(\"is-web-wallet-avaliable\")?250:205;if(n){const a=new o.default({width:t,height:t,type:\"svg\",data:n,image:w,dotsOptions:{color:\"#000\",type:\"extra-rounded\"},imageOptions:{crossOrigin:\"anonymous\",margin:10},cornersSquareOptions:{type:\"extra-rounded\"},cornersDotOptions:{type:\"dot\"}}),l=null===(e=this.shadowRoot)||void 0===e?void 0:e.getElementById(\"pera-wallet-connect-modal-connect-qr-code\");l&&a.append(l)}}onClickDownload(){if(this.shadowRoot){const e=this.shadowRoot.getElementById(\"pera-wallet-connect-modal-desktop-mode\");e&&(e.classList.remove(\"pera-wallet-connect-modal-desktop-mode--default\"),e.classList.add(\"pera-wallet-connect-modal-desktop-mode--download\"))}}onClickBack(){if(this.shadowRoot){const e=this.shadowRoot.getElementById(\"pera-wallet-connect-modal-desktop-mode\");e&&(e.classList.add(\"pera-wallet-connect-modal-desktop-mode--default\"),e.classList.remove(\"pera-wallet-connect-modal-desktop-mode--download\"))}}checkWebWalletAvaliability(){var e;if(\"false\"===this.getAttribute(\"is-web-wallet-avaliable\")){const n=null===(e=this.shadowRoot)||void 0===e?void 0:e.querySelector(\".pera-wallet-connect-modal-desktop-mode__default-view\");null==n||n.classList.add(\"pera-wallet-connect-modal-desktop-mode__default-view--web-wallet-not-avaliable\")}}}var k=\".pera-wallet-connect-modal-touch-screen-mode {\\n  display: grid;\\n  grid-template-columns: 1fr;\\n  gap: 46px;\\n  padding: 4px;\\n}\\n\\n.pera-wallet-connect-modal-touch-screen-mode--pending-message-view {\\n  gap: 56px;\\n  grid-template-rows: auto 48px;\\n  height: 100%;\\n  padding-bottom: 70px;\\n}\\n\\n.pera-wallet-connect-modal-touch-screen-mode__launch-pera-wallet-button,\\n.pera-wallet-connect-modal-touch-screen-mode__install-pera-wallet-button {\\n  display: block;\\n  padding: 14px;\\n  border-radius: 12px;\\n  text-decoration: none;\\n  text-align: center;\\n  font-size: 14px;\\n  line-height: 20px;\\n  letter-spacing: -0.09px;\\n  font-weight: 500;\\n}\\n\\n.pera-wallet-connect-modal-touch-screen-mode__launch-pera-wallet-button {\\n  margin-bottom: 32px;\\n  background-color: #6b46fe;\\n  color: #ffffff;\\n}\\n\\n.pera-wallet-connect-modal-touch-screen-mode__install-pera-wallet-button {\\n  margin-bottom: 20px;\\n  color: #6a6a81;\\n  background-color: #ffffff;\\n  box-shadow: 0px 0px 1px rgba(12, 26, 75, 0.24), 0px 3px 8px -1px rgba(50, 50, 71, 0.05);\\n}\\n\\n.pera-wallet-connect-modal-touch-screen-mode__new-to-pera-box {\\n  position: relative;\\n  margin-bottom: 32px;\\n  border-top: 1px solid #e6e8ee;\\n}\\n\\n.pera-wallet-connect-modal-touch-screen-mode__new-to-pera-box__text {\\n  position: absolute;\\n  top: -25px;\\n  right: calc(50% - 56px);\\n  width: 116px;\\n  color: #69708d;\\n  background-color: #ffffff;\\n  font-size: 13px;\\n  font-weight: 500;\\n  line-height: 24px;\\n  letter-spacing: -0.04px;\\n  text-align: center;\\n}\";i(k);const M=document.createElement(\"template\");class E extends HTMLElement{constructor(){var n;if(super(),this.attachShadow({mode:\"open\"}),M.innerHTML='\\n  <div class=\"pera-wallet-connect-modal-touch-screen-mode\">\\n    <pera-wallet-connect-modal-information-section></pera-wallet-connect-modal-information-section>\\n\\n    <div>\\n      <a\\n        id=\"pera-wallet-connect-modal-touch-screen-mode-launch-pera-wallet-button\"\\n        class=\"pera-wallet-connect-modal-touch-screen-mode__launch-pera-wallet-button\"\\n        rel=\"noopener noreferrer\"\\n        target=\"_blank\">\\n        Launch Pera Wallet\\n      </a>\\n\\n      <div\\n        class=\"pera-wallet-connect-modal-touch-screen-mode__new-to-pera-box\">\\n        <p\\n          class=\"pera-wallet-connect-modal-touch-screen-mode__new-to-pera-box__text\"\\n          >\\n          New to Pera?\\n        </p>\\n      </div>\\n\\n      <a\\n        href=\"https://perawallet.app/download/\"\\n        class=\"pera-wallet-connect-modal-touch-screen-mode__install-pera-wallet-button\"\\n        rel=\"noopener noreferrer\"\\n        target=\"_blank\">\\n        Install Pera Wallet\\n      </a>\\n    </div>\\n  </div>\\n',this.shadowRoot){const t=document.createElement(\"style\");t.textContent=k,this.shadowRoot.append(M.content.cloneNode(!0),t);const a=null===(n=this.shadowRoot)||void 0===n?void 0:n.getElementById(\"pera-wallet-connect-modal-touch-screen-mode-launch-pera-wallet-button\"),o=this.getAttribute(\"uri\");a&&o&&(a.setAttribute(\"href\",e.generatePeraWalletConnectDeepLink(o)),a.addEventListener(\"click\",(()=>{this.onClickLaunch()})))}}onClickLaunch(){if(M.innerHTML=`\\n    <div class=\"pera-wallet-connect-modal-touch-screen-mode pera-wallet-connect-modal-touch-screen-mode--pending-message-view\">\\n      <pera-wallet-connect-modal-pending-message-section should-use-sound=\"${this.getAttribute(\"should-use-sound\")}\"></pera-wallet-connect-modal-pending-message-section>\\n    </div>\\n  `,this.shadowRoot){const e=document.createElement(\"style\");e.textContent=k,this.shadowRoot.innerHTML=\"\",this.shadowRoot.append(M.content.cloneNode(!0),e)}}}var z='@import url(\"https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap\");\\n.pera-wallet-modal {\\n  --pera-wallet-modal-font-family: \"Inter\", sans-serif;\\n  position: fixed;\\n  top: 0;\\n  right: 0;\\n  left: 0;\\n  bottom: 0;\\n  z-index: 999999;\\n  width: 100vw;\\n  height: 100vh;\\n  background-color: rgba(0, 0, 0, 0.7);\\n}\\n.pera-wallet-modal--select-account .pera-wallet-modal__body {\\n  width: 480px;\\n  height: 578px;\\n  background-color: #ffffff;\\n}\\n.pera-wallet-modal--mobile .pera-wallet-modal__body {\\n  top: 40px;\\n  bottom: 0;\\n  left: 0;\\n  width: 100%;\\n  max-width: unset;\\n  height: calc(100 * var(--vh));\\n  padding: 20px;\\n  background-color: #ffffff;\\n  box-shadow: 0 1px 4px rgba(0, 0, 0, 0.02), 0 4px 12px rgba(0, 0, 0, 0.03);\\n  border-radius: 20px 20px 0px 0px;\\n  animation: 0.3s PeraWalletConnectMobileSlideIn ease-out;\\n  overflow-y: auto;\\n  transform: unset;\\n}\\n.pera-wallet-modal--mobile .pera-wallet-modal__body::before {\\n  background-image: unset;\\n}\\n.pera-wallet-modal * {\\n  box-sizing: border-box;\\n  margin: 0;\\n  padding: 0;\\n  font-family: var(--pera-wallet-modal-font-family);\\n  font-smooth: antialiased;\\n  -webkit-font-smoothing: antialiased;\\n  -moz-osx-font-smoothing: grayscale;\\n}\\n.pera-wallet-modal ul,\\n.pera-wallet-modal ol,\\n.pera-wallet-modal li {\\n  list-style-type: none;\\n}\\n\\n.pera-wallet-button {\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n  width: auto;\\n  height: 48px;\\n  padding: 14px;\\n  border: none;\\n  border-radius: 12px;\\n  outline: none;\\n  cursor: pointer;\\n  font-family: var(--pera-wallet-modal-font-family);\\n  font-size: 14px;\\n}\\n\\n.pera-wallet-modal__logo img {\\n  display: block;\\n  width: 32px;\\n}\\n\\n.pera-wallet-modal__body {\\n  position: relative;\\n  top: 50%;\\n  left: 50%;\\n  width: 700px;\\n  max-width: calc(100vw - 80px);\\n  padding: 28px;\\n  background-color: #f3f3f7;\\n  box-shadow: 1px 2px 2px rgba(0, 0, 0, 0.08);\\n  border-radius: 24px;\\n  animation: 0.3s PeraWalletConnectSlideIn ease-out;\\n  transform: translate(-50%, -50%);\\n}\\n.pera-wallet-modal__body::before {\\n  --background-line: #1e0972 0 1.2px, transparent 0 calc(100% - 1.2px), #1e0972;\\n  position: absolute;\\n  top: 0;\\n  right: 0;\\n  bottom: 0;\\n  left: 0;\\n  z-index: -1;\\n  content: \"\";\\n  background-image: linear-gradient(var(--background-line)), linear-gradient(90deg, var(--background-line));\\n  background-size: 116px 116px;\\n  mix-blend-mode: overlay;\\n  border-radius: 24px;\\n  opacity: 0.8;\\n  pointer-events: none;\\n}\\n\\n@media (max-width: 767px) {\\n  .pera-wallet-modal--desktop .pera-wallet-modal__body {\\n    width: 100%;\\n    max-width: calc(100vw - 32px);\\n    padding: 24px;\\n  }\\n}\\n@keyframes PeraWalletConnectSlideIn {\\n  0% {\\n    opacity: 0;\\n    transform: translate(-50%, calc(-50% + 24px));\\n  }\\n  100% {\\n    opacity: 1;\\n    transform: translate(-50%, -50%);\\n  }\\n}\\n@keyframes PeraWalletConnectMobileSlideIn {\\n  0% {\\n    top: 30%;\\n    opacity: 0;\\n  }\\n  100% {\\n    top: 40px;\\n    opacity: 1;\\n  }\\n}';i(z);const Z=document.createElement(\"template\"),A=e.isMobile()?`${e.PERA_WALLET_MODAL_CLASSNAME} ${e.PERA_WALLET_MODAL_CLASSNAME}--mobile`:`${e.PERA_WALLET_MODAL_CLASSNAME} ${e.PERA_WALLET_MODAL_CLASSNAME}--desktop`;class H extends HTMLElement{constructor(){if(super(),this.attachShadow({mode:\"open\"}),this.shadowRoot){const n=document.createElement(\"style\");n.textContent=z,d()&&e.isMobile()?(Z.innerHTML=`\\n        <div class=\"${A}\">\\n          <div class=\"pera-wallet-modal__body\" part=\"body\">\\n            <pera-wallet-modal-header modal-id=\"${e.PERA_WALLET_CONNECT_MODAL_ID}\"></pera-wallet-modal-header/>\\n      \\n            <pera-wallet-modal-touch-screen-mode uri=\"${this.getAttribute(\"uri\")}\" should-use-sound=\"${this.getAttribute(\"should-use-sound\")}\"></pera-wallet-modal-touch-screen-mode>\\n          </div>\\n        </div>\\n      `,this.shadowRoot.append(Z.content.cloneNode(!0),n)):(Z.innerHTML=`\\n          <div class=\"${A}\">\\n            <div class=\"pera-wallet-modal__body\">\\n              <pera-wallet-modal-header modal-id=\"${e.PERA_WALLET_CONNECT_MODAL_ID}\"></pera-wallet-modal-header/>\\n        \\n              <pera-wallet-modal-desktop-mode id=\"pera-wallet-modal-desktop-mode\" uri=\"${this.getAttribute(\"uri\")}\" is-web-wallet-avaliable=\"${this.getAttribute(\"is-web-wallet-avaliable\")}\" should-display-new-badge=\"${this.getAttribute(\"should-display-new-badge\")}\"></pera-wallet-modal-desktop-mode>\\n            </div>\\n          </div>\\n        `,this.shadowRoot.append(Z.content.cloneNode(!0),n))}}}var B='@import url(\"https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap\");\\n.pera-wallet-modal {\\n  --pera-wallet-modal-font-family: \"Inter\", sans-serif;\\n  position: fixed;\\n  top: 0;\\n  right: 0;\\n  left: 0;\\n  bottom: 0;\\n  z-index: 999999;\\n  width: 100vw;\\n  height: 100vh;\\n  background-color: rgba(0, 0, 0, 0.7);\\n}\\n.pera-wallet-modal--select-account .pera-wallet-modal__body {\\n  width: 480px;\\n  height: 578px;\\n  background-color: #ffffff;\\n}\\n.pera-wallet-modal--mobile .pera-wallet-modal__body {\\n  top: 40px;\\n  bottom: 0;\\n  left: 0;\\n  width: 100%;\\n  max-width: unset;\\n  height: calc(100 * var(--vh));\\n  padding: 20px;\\n  background-color: #ffffff;\\n  box-shadow: 0 1px 4px rgba(0, 0, 0, 0.02), 0 4px 12px rgba(0, 0, 0, 0.03);\\n  border-radius: 20px 20px 0px 0px;\\n  animation: 0.3s PeraWalletConnectMobileSlideIn ease-out;\\n  overflow-y: auto;\\n  transform: unset;\\n}\\n.pera-wallet-modal--mobile .pera-wallet-modal__body::before {\\n  background-image: unset;\\n}\\n.pera-wallet-modal * {\\n  box-sizing: border-box;\\n  margin: 0;\\n  padding: 0;\\n  font-family: var(--pera-wallet-modal-font-family);\\n  font-smooth: antialiased;\\n  -webkit-font-smoothing: antialiased;\\n  -moz-osx-font-smoothing: grayscale;\\n}\\n.pera-wallet-modal ul,\\n.pera-wallet-modal ol,\\n.pera-wallet-modal li {\\n  list-style-type: none;\\n}\\n\\n.pera-wallet-button {\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n  width: auto;\\n  height: 48px;\\n  padding: 14px;\\n  border: none;\\n  border-radius: 12px;\\n  outline: none;\\n  cursor: pointer;\\n  font-family: var(--pera-wallet-modal-font-family);\\n  font-size: 14px;\\n}\\n\\n.pera-wallet-modal__logo img {\\n  display: block;\\n  width: 32px;\\n}\\n\\n.pera-wallet-modal__body {\\n  position: relative;\\n  top: 50%;\\n  left: 50%;\\n  width: 700px;\\n  max-width: calc(100vw - 80px);\\n  padding: 28px;\\n  background-color: #f3f3f7;\\n  box-shadow: 1px 2px 2px rgba(0, 0, 0, 0.08);\\n  border-radius: 24px;\\n  animation: 0.3s PeraWalletConnectSlideIn ease-out;\\n  transform: translate(-50%, -50%);\\n}\\n.pera-wallet-modal__body::before {\\n  --background-line: #1e0972 0 1.2px, transparent 0 calc(100% - 1.2px), #1e0972;\\n  position: absolute;\\n  top: 0;\\n  right: 0;\\n  bottom: 0;\\n  left: 0;\\n  z-index: -1;\\n  content: \"\";\\n  background-image: linear-gradient(var(--background-line)), linear-gradient(90deg, var(--background-line));\\n  background-size: 116px 116px;\\n  mix-blend-mode: overlay;\\n  border-radius: 24px;\\n  opacity: 0.8;\\n  pointer-events: none;\\n}\\n\\n@media (max-width: 767px) {\\n  .pera-wallet-modal--desktop .pera-wallet-modal__body {\\n    width: 100%;\\n    max-width: calc(100vw - 32px);\\n    padding: 24px;\\n  }\\n}\\n@keyframes PeraWalletConnectSlideIn {\\n  0% {\\n    opacity: 0;\\n    transform: translate(-50%, calc(-50% + 24px));\\n  }\\n  100% {\\n    opacity: 1;\\n    transform: translate(-50%, -50%);\\n  }\\n}\\n@keyframes PeraWalletConnectMobileSlideIn {\\n  0% {\\n    top: 30%;\\n    opacity: 0;\\n  }\\n  100% {\\n    top: 40px;\\n    opacity: 1;\\n  }\\n}\\n.pera-wallet-redirect-modal {\\n  display: grid;\\n  grid-template-columns: 1fr;\\n  gap: 56px;\\n  grid-template-rows: auto 48px;\\n  height: 100%;\\n  padding: 4px;\\n  padding-bottom: 70px;\\n}\\n\\n.pera-wallet-redirect-modal__content {\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n  flex-direction: column;\\n}\\n\\n.pera-wallet-redirect-modal__content__title {\\n  margin: 20px 0 8px;\\n  color: #3c3c49;\\n  font-size: 18px;\\n  font-weight: 600;\\n  line-height: 22px;\\n  letter-spacing: -0.26px;\\n}\\n\\n.pera-wallet-redirect-modal__content__description,\\n.pera-wallet-redirect-modal__content__install-pera-text {\\n  color: #3c3c49;\\n  max-width: 271px;\\n  font-size: 14px;\\n  font-weight: 400;\\n  line-height: 24px;\\n  letter-spacing: -0.09px;\\n  text-align: center;\\n}\\n\\n.pera-wallet-redirect-modal__content__description {\\n  margin-bottom: 24px;\\n}\\n\\n.pera-wallet-redirect-modal__content__install-pera-text__link {\\n  color: #6b46fe;\\n  font-size: 14px;\\n  font-weight: 400;\\n  line-height: 24px;\\n  letter-spacing: -0.09px;\\n  text-align: center;\\n}\\n\\n.pera-wallet-redirect-modal__launch-pera-wallet-button {\\n  display: block;\\n  padding: 14px;\\n  color: #ffffff;\\n  background-color: #6b46fe;\\n  border-radius: 12px;\\n  text-decoration: none;\\n  text-align: center;\\n  font-size: 14px;\\n  line-height: 20px;\\n  letter-spacing: -0.09px;\\n  font-weight: 500;\\n}';i(B);const F=document.createElement(\"template\");F.innerHTML=`\\n  <div class=\"pera-wallet-modal pera-wallet-modal--mobile\">\\n    <div class=\"pera-wallet-modal__body\">\\n      <pera-wallet-modal-header modal-id=\"${e.PERA_WALLET_REDIRECT_MODAL_ID}\"></pera-wallet-modal-header/>\\n\\n      <div class=\"pera-wallet-redirect-modal\">\\n        <div class=\"pera-wallet-redirect-modal__content\">\\n          <img src=\"data:image/svg+xml,%3csvg width='120' height='38' viewBox='0 0 120 38' fill='none' xmlns='http://www.w3.org/2000/svg'%3e%3cg clip-path='url(%23clip0_38844_290434)'%3e%3cpath d='M103.739 28.6746H109.565' stroke='%236B46FE' stroke-width='3' stroke-linecap='round' stroke-linejoin='round'/%3e%3cpath d='M112.25 37H100.75C97.5731 37 95 34.2336 95 30.8182V9.18182C95 5.76636 97.5731 3 100.75 3H112.25C115.427 3 118 5.76636 118 9.18182V30.8182C118 34.2336 115.427 37 112.25 37Z' fill='%236B46FE' fill-opacity='0.1' stroke='%236B46FE' stroke-width='3' stroke-linecap='round' stroke-linejoin='round'/%3e%3crect y='1' width='36' height='36' rx='7.76829' fill='%236B46FE' fill-opacity='0.1'/%3e%3cpath d='M19.6057 9.47351C20.1851 11.8819 19.9967 14.0022 19.1848 14.2093C18.373 14.4164 17.2452 12.6319 16.6658 10.2235C16.0864 7.81514 16.2748 5.69486 17.0867 5.48775C17.8985 5.28063 19.0263 7.06512 19.6057 9.47351Z' fill='%236B46FE'/%3e%3cpath d='M29.0775 11.5213C27.8045 10.1593 25.2795 10.5358 23.4378 12.3621C21.5961 14.1885 21.1352 16.7732 22.4083 18.1352C23.6814 19.4972 26.2064 19.1207 28.048 17.2943C29.8897 15.4679 30.3506 12.8832 29.0775 11.5213Z' fill='%236B46FE'/%3e%3cpath d='M19.0324 32.4518C19.8443 32.2446 20.0039 30.0045 19.3889 27.4483C18.774 24.8921 17.6173 22.9877 16.8055 23.1948C15.9937 23.402 15.834 25.6421 16.449 28.1983C17.064 30.7545 18.2206 32.6589 19.0324 32.4518Z' fill='%236B46FE'/%3e%3cpath d='M10.7016 12.818C13.0471 13.5132 14.7627 14.739 14.5336 15.5559C14.3045 16.3728 12.2175 16.4714 9.87199 15.7762C7.52653 15.0809 5.81087 13.8551 6.03996 13.0383C6.26906 12.2214 8.35615 12.1228 10.7016 12.818Z' fill='%236B46FE'/%3e%3cpath d='M25.9365 21.9967C28.4259 22.7346 30.2583 23.995 30.0292 24.8119C29.8001 25.6287 27.5963 25.6927 25.1069 24.9548C22.6174 24.2169 20.7851 22.9565 21.0141 22.1397C21.2432 21.3228 23.447 21.2588 25.9365 21.9967Z' fill='%236B46FE'/%3e%3cpath d='M13.3578 20.316C12.775 19.7063 10.8709 20.6007 9.10487 22.3139C7.33879 24.0271 6.37952 25.9102 6.96226 26.5199C7.54501 27.1297 9.4491 26.2352 11.2152 24.522C12.9813 22.8089 13.9405 20.9258 13.3578 20.316Z' fill='%236B46FE'/%3e%3cpath d='M70.2098 10L75.3049 15.0945L52 15.0945' stroke='%23D0CAE7' stroke-width='3'/%3e%3cpath d='M60.7902 29.5945L55.6951 24.5L79 24.5' stroke='%23D0CAE7' stroke-width='3'/%3e%3c/g%3e%3cdefs%3e%3cclipPath id='clip0_38844_290434'%3e%3crect width='120' height='38' fill='white'/%3e%3c/clipPath%3e%3c/defs%3e%3c/svg%3e\" />\\n\\n          <h1 class=\"pera-wallet-redirect-modal__content__title\">\\n            Can't Launch Pera\\n          </h1>\\n\\n          <p class=\"pera-wallet-redirect-modal__content__description\">\\n            We couldn't redirect you to Pera Wallet automatically. Please try again.\\n          </p>\\n\\n          <p class=\"pera-wallet-redirect-modal__content__install-pera-text\">\\n            Don't have Pera Wallet installed yet?\\n            <br />\\n            \\n            <a\\n              id=\"pera-wallet-redirect-modal-download-pera-link\"\\n              class=\"pera-wallet-redirect-modal__content__install-pera-text__link\"\\n              href=\"https://perawallet.app/download/\"\\n              rel=\"noopener noreferrer\"\\n              target=\"_blank\">\\n              Tap here to install.\\n            </a>\\n          </p>\\n        </div>\\n\\n        <a\\n          id=\"pera-wallet-redirect-modal-launch-pera-link\"\\n          class=\"pera-wallet-redirect-modal__launch-pera-wallet-button\"\\n          rel=\"noopener noreferrer\"\\n          target=\"_blank\">\\n          Launch Pera Wallet\\n        </a>\\n      </div>\\n    </div>\\n  </div>\\n`;class R extends HTMLElement{constructor(){var n,t;if(super(),this.attachShadow({mode:\"open\"}),this.shadowRoot){const a=document.createElement(\"style\");a.textContent=B,this.shadowRoot.append(F.content.cloneNode(!0),a);const o=null===(n=this.shadowRoot)||void 0===n?void 0:n.getElementById(\"pera-wallet-redirect-modal-download-pera-link\");null==o||o.addEventListener(\"click\",(()=>{this.onClose()}));const l=null===(t=this.shadowRoot)||void 0===t?void 0:t.getElementById(\"pera-wallet-redirect-modal-launch-pera-link\");null==l||l.addEventListener(\"click\",(()=>{this.onClose(),window.open(e.generatePeraWalletAppDeepLink(),\"_blank\")}))}}connectedCallback(){const n=window.open(e.generatePeraWalletAppDeepLink(),\"_blank\");n&&!n.closed&&this.onClose()}onClose(){e.removeModalWrapperFromDOM(e.PERA_WALLET_REDIRECT_MODAL_ID)}}var V=\"data:image/svg+xml,%3csvg width='32' height='35' viewBox='0 0 32 35' fill='none' xmlns='http://www.w3.org/2000/svg'%3e%3cpath d='M18.2837 5.09271C19.0234 8.12325 18.7827 10.7913 17.7463 11.0519C16.7098 11.3126 15.27 9.06712 14.5304 6.03657C13.7908 3.00603 14.0315 0.337996 15.0679 0.0773547C16.1044 -0.183287 17.5441 2.06216 18.2837 5.09271Z' fill='%233C3C49'/%3e%3cpath d='M30.376 7.66915C28.7507 5.95537 25.5271 6.42918 23.1759 8.72745C20.8247 11.0257 20.2361 14.2781 21.8614 15.9919C23.4866 17.7057 26.7102 17.2319 29.0614 14.9336C31.4127 12.6354 32.0012 9.38294 30.376 7.66915Z' fill='%233C3C49'/%3e%3cpath d='M17.5511 34.0071C18.5876 33.7465 18.7914 30.9276 18.0064 27.711C17.2214 24.4945 15.7448 22.0982 14.7084 22.3589C13.6719 22.6195 13.4681 25.4383 14.2531 28.6549C15.0381 31.8715 16.5147 34.2677 17.5511 34.0071Z' fill='%233C3C49'/%3e%3cpath d='M6.91617 9.3015C9.9105 10.1763 12.1008 11.7187 11.8083 12.7466C11.5158 13.7745 8.85126 13.8986 5.85693 13.0239C2.8626 12.1491 0.672334 10.6067 0.964835 9.57881C1.25734 8.5509 3.92184 8.42674 6.91617 9.3015Z' fill='%233C3C49'/%3e%3cpath d='M26.3656 20.8508C29.5437 21.7793 31.883 23.3652 31.5905 24.3932C31.298 25.4211 28.4845 25.5017 25.3063 24.5732C22.1282 23.6448 19.7889 22.0588 20.0814 21.0309C20.3739 20.003 23.1874 19.9224 26.3656 20.8508Z' fill='%233C3C49'/%3e%3cpath d='M10.3069 18.7365C9.56299 17.9692 7.13209 19.0948 4.87736 21.2506C2.62264 23.4064 1.39791 25.776 2.14185 26.5432C2.8858 27.3105 5.3167 26.1849 7.57143 24.0291C9.82615 21.8733 11.0509 19.5037 10.3069 18.7365Z' fill='%233C3C49'/%3e%3c/svg%3e\",W=\".pera-wallet-connect-modal-information-section {\\n  padding: 12px;\\n  padding-right: 0;\\n}\\n.pera-wallet-connect-modal-information-section--mobile {\\n  padding: 0;\\n}\\n.pera-wallet-connect-modal-information-section--mobile .pera-wallet-connect-modal-information-section__pera-icon {\\n  margin-bottom: 16px;\\n}\\n.pera-wallet-connect-modal-information-section--mobile .pera-wallet-connect-modal-information-section__connect-pera-title {\\n  margin-bottom: 8px;\\n  color: #3c3c49;\\n  font-size: 18px;\\n  font-weight: 600;\\n  line-height: 22px;\\n  letter-spacing: -0.2px;\\n}\\n.pera-wallet-connect-modal-information-section--mobile .pera-wallet-connect-modal-information-section__title {\\n  margin-bottom: 24px;\\n  color: #3c3c49;\\n  font-size: 14px;\\n  line-height: 24px;\\n  letter-spacing: -0.09px;\\n  font-weight: 400;\\n}\\n.pera-wallet-connect-modal-information-section--mobile .pera-wallet-connect-modal-information-section__features-item__icon-wrapper {\\n  background-color: #f2f3f8;\\n}\\n.pera-wallet-connect-modal-information-section--mobile .pera-wallet-connect-modal-information-section__features-item__description {\\n  color: #6a6a81;\\n}\\n.pera-wallet-connect-modal-information-section * {\\n  box-sizing: border-box;\\n  margin: 0;\\n  padding: 0;\\n  font-family: var(--pera-wallet-modal-font-family);\\n  font-smooth: antialiased;\\n  -webkit-font-smoothing: antialiased;\\n  -moz-osx-font-smoothing: grayscale;\\n}\\n\\n.pera-wallet-connect-modal-information-section__pera-icon {\\n  margin-bottom: 32px;\\n}\\n\\n.pera-wallet-connect-modal-information-section__title {\\n  margin-bottom: 148px;\\n  color: #3c3c49;\\n  font-size: 20px;\\n  font-weight: 500;\\n  line-height: 24px;\\n  letter-spacing: -0.5px;\\n}\\n\\n.pera-wallet-connect-modal-information-section__secondary-title {\\n  margin-bottom: 20px;\\n  color: #9d9dae;\\n  font-size: 11px;\\n  font-weight: 600;\\n  line-height: 18px;\\n  letter-spacing: 0.06px;\\n  text-transform: uppercase;\\n}\\n\\n.pera-wallet-connect-modal-information-section__features-item {\\n  display: grid;\\n  align-items: center;\\n  grid-template-columns: 36px auto;\\n  gap: 16px;\\n}\\n.pera-wallet-connect-modal-information-section__features-item:not(:last-of-type) {\\n  margin-bottom: 24px;\\n}\\n\\n.pera-wallet-connect-modal-information-section__features-item__icon-wrapper {\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n  width: 36px;\\n  height: 36px;\\n  background-color: #ffffff;\\n  border-radius: 50%;\\n}\\n\\n.pera-wallet-connect-modal-information-section__features-item__description {\\n  color: #6a6a81;\\n  font-size: 12px;\\n  font-weight: 500;\\n  line-height: 18px;\\n  letter-spacing: 0.01px;\\n}\\n\\n@media (max-width: 767px) {\\n  .pera-wallet-connect-modal-information-section--desktop {\\n    padding: 0;\\n  }\\n  .pera-wallet-connect-modal-information-section--desktop .pera-wallet-connect-modal-information-section__pera-icon {\\n    margin-bottom: 12px;\\n  }\\n  .pera-wallet-connect-modal-information-section--desktop .pera-wallet-connect-modal-information-section__title {\\n    margin-bottom: 24px;\\n    font-size: 16px;\\n    font-weight: 500;\\n    line-height: 24px;\\n    letter-spacing: -0.26px;\\n  }\\n  .pera-wallet-connect-modal-information-section--desktop .pera-wallet-connect-modal-information-section__features-item {\\n    display: none;\\n  }\\n  .pera-wallet-connect-modal-information-section__secondary-title {\\n    display: none;\\n  }\\n}\";i(W);const I=document.createElement(\"template\"),D=e.isMobile()?\"pera-wallet-connect-modal-information-section pera-wallet-connect-modal-information-section--mobile\":\"pera-wallet-connect-modal-information-section pera-wallet-connect-modal-information-section--desktop\";I.innerHTML=`\\n  <section class=\"${D}\">\\n    <img\\n      id=\"pera-wallet-connect-modal-information-section-pera-icon\"\\n      src=\"${V}\"\\n      class=\"pera-wallet-connect-modal-information-section__pera-icon\"\\n      alt=\"Pera Wallet Logo\"\\n    />\\n\\n    <h1 id=\"pera-wallet-connect-modal-information-section-connect-pera-mobile\" class=\"pera-wallet-connect-modal-information-section__connect-pera-title\">\\n        Connect to Pera Wallet\\n    </h1>\\n\\n    <h1 class=\"pera-wallet-connect-modal-information-section__title\">\\n      Simply the best Algorand wallet.\\n    </h1>\\n\\n    <h2 id=\"pera-wallet-connect-modal-information-section-secondary-title\" class=\"pera-wallet-connect-modal-information-section__secondary-title\">\\n      Features\\n    </h2>\\n\\n    <ul>\\n      <li class=\"pera-wallet-connect-modal-information-section__features-item\">\\n        <div class=\"pera-wallet-connect-modal-information-section__features-item__icon-wrapper\">\\n          <img src=\"data:image/svg+xml,%3csvg width='20' height='21' viewBox='0 0 20 21' fill='none' xmlns='http://www.w3.org/2000/svg'%3e%3cpath d='M2.5 10.1378C2.5 10.8378 3.025 11.6461 3.66667 11.9294L9.325 14.4461C9.75833 14.6378 10.25 14.6378 10.675 14.4461L16.3333 11.9294C16.975 11.6461 17.5 10.8378 17.5 10.1378M2.5 14.3044C2.5 15.0794 2.95833 15.7794 3.66667 16.0961L9.325 18.6128C9.75833 18.8044 10.25 18.8044 10.675 18.6128L16.3333 16.0961C17.0417 15.7794 17.5 15.0794 17.5 14.3044M10.8417 3.4043L15.7583 5.58763C17.175 6.21263 17.175 7.24596 15.7583 7.87096L10.8417 10.0543C10.2833 10.3043 9.36668 10.3043 8.80835 10.0543L3.89168 7.87096C2.47502 7.24596 2.47502 6.21263 3.89168 5.58763L8.80835 3.4043C9.36668 3.1543 10.2833 3.1543 10.8417 3.4043Z' stroke='%239D9DAE' stroke-width='1.5' stroke-linecap='round' stroke-linejoin='round'/%3e%3c/svg%3e\" alt=\"Layer Icon\" />\\n        </div>\\n        \\n        <p\\n          class=\"pera-wallet-connect-modal-information-section__features-item__description\">\\n          Connect to any Algorand dApp securely\\n        </p>\\n      </li>\\n\\n      <li class=\"pera-wallet-connect-modal-information-section__features-item\">\\n        <div\\n          class=\"pera-wallet-connect-modal-information-section__features-item__icon-wrapper\">\\n          <img src=\"data:image/svg+xml,%3csvg width='24' height='25' viewBox='0 0 24 25' fill='none' xmlns='http://www.w3.org/2000/svg'%3e%3cpath d='M9.58033 12.3109C9.28744 12.018 8.81257 12.018 8.51967 12.3109C8.22678 12.6038 8.22678 13.0787 8.51967 13.3716L9.58033 12.3109ZM10.66 14.4512L10.1297 14.9816C10.4226 15.2745 10.8974 15.2745 11.1903 14.9816L10.66 14.4512ZM15.4903 10.6816C15.7832 10.3887 15.7832 9.91381 15.4903 9.62092C15.1974 9.32803 14.7226 9.32803 14.4297 9.62092L15.4903 10.6816ZM19.84 8.09125C19.84 8.50546 20.1758 8.84125 20.59 8.84125C21.0042 8.84125 21.34 8.50546 21.34 8.09125H19.84ZM18.5 5.07125L18.2368 5.77355L18.2373 5.77375L18.5 5.07125ZM13.51 3.20125L13.7732 2.49894L13.7724 2.49866L13.51 3.20125ZM10.49 3.20125L10.2276 2.49865L10.2256 2.49941L10.49 3.20125ZM5.5 5.08125L5.76268 5.78375L5.76442 5.78309L5.5 5.08125ZM5.14 18.9612L4.69102 19.562L4.69135 19.5623L5.14 18.9612ZM9.44 22.1713L9.89069 21.5718L9.88866 21.5702L9.44 22.1713ZM14.58 22.1713L14.1313 21.5702L14.1293 21.5718L14.58 22.1713ZM18.88 18.9612L19.3287 19.5623L19.329 19.562L18.88 18.9612ZM21.36 8.09125C21.36 7.67704 21.0242 7.34125 20.61 7.34125C20.1958 7.34125 19.86 7.67704 19.86 8.09125H21.36ZM8.51967 13.3716L10.1297 14.9816L11.1903 13.9209L9.58033 12.3109L8.51967 13.3716ZM11.1903 14.9816L15.4903 10.6816L14.4297 9.62092L10.1297 13.9209L11.1903 14.9816ZM21.34 8.09125C21.34 7.29392 21.0398 6.50041 20.5931 5.85456C20.1463 5.20881 19.5097 4.64807 18.7627 4.36875L18.2373 5.77375C18.6403 5.92443 19.0487 6.25869 19.3595 6.70794C19.6702 7.15709 19.84 7.65858 19.84 8.09125H21.34ZM18.7632 4.36895L13.7732 2.49895L13.2468 3.90355L18.2368 5.77355L18.7632 4.36895ZM13.7724 2.49866C13.2479 2.30277 12.6051 2.21875 12 2.21875C11.3949 2.21875 10.7521 2.30277 10.2276 2.49866L10.7524 3.90384C11.0579 3.78973 11.5101 3.71875 12 3.71875C12.4899 3.71875 12.9421 3.78973 13.2476 3.90384L13.7724 2.49866ZM10.2256 2.49941L5.23558 4.37941L5.76442 5.78309L10.7544 3.90309L10.2256 2.49941ZM5.23733 4.37875C4.49043 4.65803 3.85398 5.2186 3.40741 5.86265C2.96095 6.50656 2.66 7.2978 2.66 8.09125H4.16C4.16 7.6647 4.32906 7.16594 4.64009 6.71735C4.95103 6.2689 5.35957 5.93447 5.76268 5.78375L5.23733 4.37875ZM2.66 8.09125V15.5212H4.16V8.09125H2.66ZM2.66 15.5212C2.66 16.2602 2.8989 17.059 3.24874 17.7545C3.59871 18.4503 4.09802 19.1188 4.69102 19.562L5.58899 18.3605C5.23198 18.0937 4.86629 17.6322 4.58877 17.0805C4.31111 16.5285 4.16 15.9623 4.16 15.5212H2.66ZM4.69135 19.5623L8.99135 22.7723L9.88866 21.5702L5.58866 18.3602L4.69135 19.5623ZM8.98932 22.7707C9.84721 23.4157 10.9462 23.7163 12.01 23.7163C13.0738 23.7163 14.1728 23.4157 15.0307 22.7707L14.1293 21.5718C13.5772 21.9868 12.8112 22.2163 12.01 22.2163C11.2088 22.2163 10.4428 21.9868 9.89068 21.5718L8.98932 22.7707ZM15.0287 22.7723L19.3287 19.5623L18.4313 18.3602L14.1313 21.5702L15.0287 22.7723ZM19.329 19.562C19.922 19.1188 20.4213 18.4503 20.7713 17.7545C21.1211 17.059 21.36 16.2602 21.36 15.5212H19.86C19.86 15.9623 19.7089 16.5285 19.4312 17.0805C19.1537 17.6322 18.788 18.0937 18.431 18.3605L19.329 19.562ZM21.36 15.5212V8.09125H19.86V15.5212H21.36Z' fill='%239D9DAE'/%3e%3c/svg%3e\" alt=\"Tick Icon\" />\\n        </div>\\n\\n        <p\\n          class=\"pera-wallet-connect-modal-information-section__features-item__description\">\\n          Your private keys are safely stored locally\\n        </p>\\n      </li>\\n\\n      <li class=\"pera-wallet-connect-modal-information-section__features-item\">\\n        <div\\n          class=\"pera-wallet-connect-modal-information-section__features-item__icon-wrapper\">\\n          <img src=\"data:image/svg+xml,%3csvg width='20' height='21' viewBox='0 0 20 21' fill='none' xmlns='http://www.w3.org/2000/svg'%3e%3cpath d='M18.05 9.67014L17.3198 9.49894L18.05 9.67014ZM17.2333 13.1535L16.5031 12.9823L16.5029 12.9835L17.2333 13.1535ZM12.55 17.1285L12.6218 16.3818L12.6098 16.3809L12.55 17.1285ZM11.2 16.9035L11.376 16.1744L11.3737 16.1739L11.2 16.9035ZM9.8 16.5701L9.97372 15.8405L9.97324 15.8404L9.8 16.5701ZM6.06667 10.5451L6.79687 10.7163L6.79696 10.7159L6.06667 10.5451ZM6.88334 7.05347L6.15327 6.88169L6.15304 6.88267L6.88334 7.05347ZM7.5 5.22014L8.17303 5.55114L8.17523 5.54659L7.5 5.22014ZM12.9167 3.32014L12.744 4.05L12.7461 4.05049L12.9167 3.32014ZM14.3083 3.64514L14.4791 2.91485L14.4789 2.91479L14.3083 3.64514ZM10.5917 18.0285L10.359 17.3155L10.3572 17.3161L10.5917 18.0285ZM9.27501 18.4618L9.50516 19.1756L9.50947 19.1742L9.27501 18.4618ZM3.15001 15.3285L2.43654 15.5597L2.43672 15.5603L3.15001 15.3285ZM2.08334 12.0368L1.36953 12.267L1.36987 12.268L2.08334 12.0368ZM5.20834 5.91182L5.43849 6.62565L5.44281 6.62423L5.20834 5.91182ZM6.52501 5.47848L6.29831 4.76352L6.29055 4.76608L6.52501 5.47848ZM10.7177 7.35149C10.3162 7.24967 9.90818 7.49261 9.80635 7.89411C9.70453 8.29561 9.94746 8.70364 10.349 8.80546L10.7177 7.35149ZM14.3906 9.83046C14.7921 9.93229 15.2002 9.68935 15.302 9.28785C15.4038 8.88635 15.1609 8.47832 14.7594 8.37649L14.3906 9.83046ZM9.90211 10.5768C9.50076 10.4743 9.09238 10.7167 8.98996 11.118C8.88755 11.5194 9.12988 11.9278 9.53124 12.0302L9.90211 10.5768ZM11.9479 12.6469C12.3493 12.7493 12.7576 12.5069 12.8601 12.1056C12.9625 11.7042 12.7201 11.2958 12.3188 11.1934L11.9479 12.6469ZM17.3198 9.49894L16.5031 12.9823L17.9635 13.3247L18.7802 9.84133L17.3198 9.49894ZM16.5029 12.9835C16.168 14.4224 15.6979 15.2955 15.1165 15.793C14.5605 16.2688 13.7912 16.4944 12.6218 16.3819L12.4782 17.875C13.9088 18.0126 15.1312 17.7548 16.0918 16.9327C17.0271 16.1323 17.5986 14.8928 17.9638 13.3234L16.5029 12.9835ZM12.6098 16.3809C12.2388 16.3512 11.8281 16.2835 11.376 16.1744L11.024 17.6325C11.5386 17.7567 12.0279 17.8391 12.4902 17.8761L12.6098 16.3809ZM11.3737 16.1739L9.97372 15.8405L9.62629 17.2997L11.0263 17.6331L11.3737 16.1739ZM9.97324 15.8404C8.30732 15.4449 7.40652 14.876 6.96107 14.1588C6.51616 13.4425 6.40566 12.385 6.79687 10.7163L5.33647 10.3739C4.91101 12.1887 4.92968 13.7311 5.68685 14.9502C6.44349 16.1685 7.81769 16.8704 9.62676 17.2999L9.97324 15.8404ZM6.79696 10.7159L7.61363 7.22428L6.15304 6.88267L5.33638 10.3743L6.79696 10.7159ZM7.6134 7.22525C7.77277 6.54795 7.95691 5.99053 8.17301 5.55113L6.82699 4.88915C6.54309 5.46641 6.32724 6.14234 6.15327 6.88169L7.6134 7.22525ZM8.17523 5.54659C8.59604 4.67619 9.11898 4.20234 9.77488 3.97598C10.4657 3.73759 11.4133 3.73525 12.744 4.05L13.0893 2.59028C11.6367 2.2467 10.3635 2.18603 9.28554 2.55805C8.17269 2.94211 7.37896 3.74743 6.82478 4.89369L8.17523 5.54659ZM12.7461 4.05049L14.1378 4.37549L14.4789 2.91479L13.0872 2.58979L12.7461 4.05049ZM14.1375 4.37543C15.8111 4.76687 16.7126 5.33603 17.1575 6.05304C17.6023 6.77006 17.7112 7.82942 17.3198 9.49894L18.7802 9.84133C19.2054 8.02753 19.1893 6.48272 18.4321 5.26224C17.6749 4.04175 16.2972 3.34008 14.4791 2.91485L14.1375 4.37543ZM12.1294 16.5075C11.6911 16.8045 11.1123 17.0697 10.359 17.3155L10.8243 18.7415C11.6544 18.4706 12.3756 18.1525 12.9706 17.7494L12.1294 16.5075ZM10.3572 17.3161L9.04055 17.7494L9.50947 19.1742L10.8261 18.7409L10.3572 17.3161ZM9.04486 17.748C7.46037 18.2589 6.43607 18.2362 5.71663 17.8681C4.99693 17.4999 4.37829 16.6816 3.8633 15.0967L2.43672 15.5603C2.99673 17.2837 3.78642 18.5654 5.03339 19.2035C6.28062 19.8416 7.78131 19.7314 9.50516 19.1756L9.04486 17.748ZM3.86348 15.0973L2.79682 11.8056L1.36987 12.268L2.43654 15.5597L3.86348 15.0973ZM2.79716 11.8067C2.28607 10.2215 2.3068 9.19457 2.67362 8.4739C3.03983 7.75443 3.85506 7.13616 5.43849 6.62563L4.9782 5.198C3.25329 5.75414 1.97269 6.54421 1.33682 7.79348C0.701551 9.04157 0.813948 10.5438 1.36953 12.267L2.79716 11.8067ZM5.44281 6.62423L6.75947 6.19089L6.29055 4.76608L4.97388 5.19941L5.44281 6.62423ZM6.75169 6.19341C7.08205 6.08866 7.37424 6.00724 7.63942 5.95707L7.36058 4.48321C7.00909 4.54971 6.6513 4.65164 6.29833 4.76356L6.75169 6.19341ZM10.349 8.80546L14.3906 9.83046L14.7594 8.37649L10.7177 7.35149L10.349 8.80546ZM9.53124 12.0302L11.9479 12.6469L12.3188 11.1934L9.90211 10.5768L9.53124 12.0302Z' fill='%239D9DAE'/%3e%3c/svg%3e\" alt=\"Note Icon\" />\\n        </div>\\n\\n        <p\\n          class=\"pera-wallet-connect-modal-information-section__features-item__description\">\\n          View NFTs, buy and swap crypto and more\\n        </p>\\n      </li>\\n    </ul>\\n  </section>\\n`;class S extends HTMLElement{constructor(){var n,t,a;if(super(),this.attachShadow({mode:\"open\"}),this.shadowRoot){const o=document.createElement(\"style\");o.textContent=W,this.shadowRoot.append(I.content.cloneNode(!0),o),d()&&e.isMobile()?null===(n=this.shadowRoot.getElementById(\"pera-wallet-connect-modal-information-section-title\"))||void 0===n||n.setAttribute(\"style\",\"display: none;\"):(null===(t=this.shadowRoot.getElementById(\"pera-wallet-connect-modal-information-section-pera-icon\"))||void 0===t||t.setAttribute(\"src\",\"data:image/svg+xml,%3csvg width='84' height='38' viewBox='0 0 84 38' fill='none' xmlns='http://www.w3.org/2000/svg'%3e%3cpath d='M19.806 8.62773C20.4416 11.2609 20.2268 13.5772 19.3262 13.8012C18.4256 14.0253 17.1803 12.0723 16.5448 9.43906C15.9092 6.80585 16.1241 4.48959 17.0246 4.26555C17.9252 4.04151 19.1705 5.99452 19.806 8.62773Z' fill='%233C3C49'/%3e%3cpath d='M30.3007 10.8917C28.8932 9.3999 26.0929 9.80424 24.0461 11.7948C21.9994 13.7853 21.4812 16.6082 22.8887 18.1C24.2962 19.5917 27.0964 19.1874 29.1432 17.1969C31.1899 15.2064 31.7082 12.3834 30.3007 10.8917Z' fill='%233C3C49'/%3e%3cpath d='M19.1061 33.734C20.0067 33.5099 20.1899 31.0627 19.5153 28.2678C18.8408 25.473 17.5639 23.3889 16.6633 23.613C15.7627 23.837 15.5795 26.2843 16.2541 29.0791C16.9286 31.874 18.2056 33.958 19.1061 33.734Z' fill='%233C3C49'/%3e%3cpath d='M9.92571 12.2574C12.5239 13.0236 14.4224 14.3678 14.1662 15.2597C13.9099 16.1517 11.5959 16.2536 8.99771 15.4874C6.3995 14.7212 4.50098 13.377 4.75724 12.4851C5.0135 11.5931 7.3275 11.4912 9.92571 12.2574Z' fill='%233C3C49'/%3e%3cpath d='M26.7892 22.3292C29.5469 23.1424 31.5747 24.5247 31.3184 25.4167C31.0621 26.3086 28.6189 26.3724 25.8612 25.5592C23.1035 24.7459 21.0757 23.3636 21.3319 22.4717C21.5882 21.5797 24.0315 21.5159 26.7892 22.3292Z' fill='%233C3C49'/%3e%3cpath d='M12.8493 20.4577C12.205 19.7898 10.0916 20.7619 8.12896 22.6289C6.16631 24.4959 5.09759 26.5509 5.7419 27.2188C6.38622 27.8867 8.49958 26.9146 10.4622 25.0476C12.4249 23.1806 13.4936 21.1256 12.8493 20.4577Z' fill='%233C3C49'/%3e%3cpath d='M41.691 12.5347V11.9635H39.3366V27.1957H41.691V23.0915C41.691 22.6472 41.691 22.2876 41.6482 21.801H41.691C42.5471 23.1973 44.0026 23.9377 45.7148 23.9377C48.6043 23.9377 51.1299 21.7587 51.1299 17.7179C51.1299 13.7617 48.6043 11.625 45.7148 11.625C44.0668 11.625 42.6113 12.3443 41.691 13.7617H41.6482C41.691 13.2963 41.691 12.9578 41.691 12.5347ZM45.1155 21.9279C42.9324 21.9068 41.6696 20.0662 41.6696 17.6967C41.6696 15.4542 42.9324 13.656 45.1155 13.6348C47.2559 13.6137 48.6685 15.2638 48.6685 17.7179C48.6685 20.2354 47.2559 21.9491 45.1155 21.9279Z' fill='%233C3C49'/%3e%3cpath d='M63.4932 16.7236C63.4932 13.8041 61.1388 11.625 57.9283 11.625C54.5037 11.625 52.1279 13.931 52.1279 17.7814C52.1279 21.4836 54.4609 23.9377 57.9283 23.9377C60.7749 23.9377 62.8939 22.2876 63.3862 20.0239H60.8177C60.4111 21.1663 59.2981 21.9279 57.9283 21.9279C56.1732 21.9279 54.889 20.6797 54.6107 18.6064H63.4932V16.7236ZM57.9283 13.6348C59.662 13.6348 60.8606 14.8195 61.1174 16.5332H54.6321C54.9318 14.883 56.1518 13.6348 57.9283 13.6348Z' fill='%233C3C49'/%3e%3cpath d='M65.224 23.5992H67.5784V17.0409C67.5784 14.7984 68.8198 13.6348 70.7462 13.6348H72.009V11.625H71.003C69.2693 11.625 68.1991 12.7674 67.5784 13.7617H67.5356V11.9635H65.224V23.5992Z' fill='%233C3C49'/%3e%3cpath d='M83.0154 21.5683C82.6944 21.5683 82.5445 21.3779 82.5445 20.9971V15.8773C82.5445 13.4233 81.3459 11.625 77.8144 11.625C74.3898 11.625 72.8273 13.3175 72.6561 15.7292H75.0105C75.1603 14.4176 76.2091 13.6348 77.8144 13.6348C79.1842 13.6348 80.1259 14.2272 80.1259 15.158C80.1259 15.9196 79.5909 16.3851 77.8358 16.3851H76.894C74.0901 16.3851 72.2066 17.5063 72.2066 20.0662C72.2066 22.753 74.1972 23.98 76.5301 23.98C78.2638 23.98 79.7407 23.2184 80.3186 21.5894C80.3828 22.7742 81.1747 23.5992 82.673 23.5992H84V21.5683H83.0154ZM80.1902 18.1833C80.1902 20.8067 78.7561 21.9491 76.9154 21.9491C75.3101 21.9491 74.668 21.0182 74.668 20.0662C74.668 19.1565 75.2245 18.416 76.9368 18.416H77.2793C78.9273 18.416 79.9547 17.8448 80.1688 16.8505H80.1902V18.1833Z' fill='%233C3C49'/%3e%3c/svg%3e\"),null===(a=this.shadowRoot.getElementById(\"pera-wallet-connect-modal-information-section-connect-pera-mobile\"))||void 0===a||a.setAttribute(\"style\",\"display: none;\"))}}}var P='@import url(\"https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap\");\\n.pera-wallet-modal {\\n  --pera-wallet-modal-font-family: \"Inter\", sans-serif;\\n  position: fixed;\\n  top: 0;\\n  right: 0;\\n  left: 0;\\n  bottom: 0;\\n  z-index: 999999;\\n  width: 100vw;\\n  height: 100vh;\\n  background-color: rgba(0, 0, 0, 0.7);\\n}\\n.pera-wallet-modal--select-account .pera-wallet-modal__body {\\n  width: 480px;\\n  height: 578px;\\n  background-color: #ffffff;\\n}\\n.pera-wallet-modal--mobile .pera-wallet-modal__body {\\n  top: 40px;\\n  bottom: 0;\\n  left: 0;\\n  width: 100%;\\n  max-width: unset;\\n  height: calc(100 * var(--vh));\\n  padding: 20px;\\n  background-color: #ffffff;\\n  box-shadow: 0 1px 4px rgba(0, 0, 0, 0.02), 0 4px 12px rgba(0, 0, 0, 0.03);\\n  border-radius: 20px 20px 0px 0px;\\n  animation: 0.3s PeraWalletConnectMobileSlideIn ease-out;\\n  overflow-y: auto;\\n  transform: unset;\\n}\\n.pera-wallet-modal--mobile .pera-wallet-modal__body::before {\\n  background-image: unset;\\n}\\n.pera-wallet-modal * {\\n  box-sizing: border-box;\\n  margin: 0;\\n  padding: 0;\\n  font-family: var(--pera-wallet-modal-font-family);\\n  font-smooth: antialiased;\\n  -webkit-font-smoothing: antialiased;\\n  -moz-osx-font-smoothing: grayscale;\\n}\\n.pera-wallet-modal ul,\\n.pera-wallet-modal ol,\\n.pera-wallet-modal li {\\n  list-style-type: none;\\n}\\n\\n.pera-wallet-button {\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n  width: auto;\\n  height: 48px;\\n  padding: 14px;\\n  border: none;\\n  border-radius: 12px;\\n  outline: none;\\n  cursor: pointer;\\n  font-family: var(--pera-wallet-modal-font-family);\\n  font-size: 14px;\\n}\\n\\n.pera-wallet-modal__logo img {\\n  display: block;\\n  width: 32px;\\n}\\n\\n.pera-wallet-modal__body {\\n  position: relative;\\n  top: 50%;\\n  left: 50%;\\n  width: 700px;\\n  max-width: calc(100vw - 80px);\\n  padding: 28px;\\n  background-color: #f3f3f7;\\n  box-shadow: 1px 2px 2px rgba(0, 0, 0, 0.08);\\n  border-radius: 24px;\\n  animation: 0.3s PeraWalletConnectSlideIn ease-out;\\n  transform: translate(-50%, -50%);\\n}\\n.pera-wallet-modal__body::before {\\n  --background-line: #1e0972 0 1.2px, transparent 0 calc(100% - 1.2px), #1e0972;\\n  position: absolute;\\n  top: 0;\\n  right: 0;\\n  bottom: 0;\\n  left: 0;\\n  z-index: -1;\\n  content: \"\";\\n  background-image: linear-gradient(var(--background-line)), linear-gradient(90deg, var(--background-line));\\n  background-size: 116px 116px;\\n  mix-blend-mode: overlay;\\n  border-radius: 24px;\\n  opacity: 0.8;\\n  pointer-events: none;\\n}\\n\\n@media (max-width: 767px) {\\n  .pera-wallet-modal--desktop .pera-wallet-modal__body {\\n    width: 100%;\\n    max-width: calc(100vw - 32px);\\n    padding: 24px;\\n  }\\n}\\n@keyframes PeraWalletConnectSlideIn {\\n  0% {\\n    opacity: 0;\\n    transform: translate(-50%, calc(-50% + 24px));\\n  }\\n  100% {\\n    opacity: 1;\\n    transform: translate(-50%, -50%);\\n  }\\n}\\n@keyframes PeraWalletConnectMobileSlideIn {\\n  0% {\\n    top: 30%;\\n    opacity: 0;\\n  }\\n  100% {\\n    top: 40px;\\n    opacity: 1;\\n  }\\n}\\n.pera-wallet-connect-modal-pending-message-section {\\n  display: grid;\\n  grid-template-columns: 1fr;\\n  grid-template-rows: auto 48px;\\n  gap: 56px;\\n  height: 100%;\\n  padding: 4px;\\n  padding-bottom: 70px;\\n}\\n\\n.pera-wallet-connect-modal-pending-message {\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n  flex-direction: column;\\n  text-align: center;\\n}\\n.pera-wallet-connect-modal-pending-message--try-again-view {\\n  display: flex;\\n  justify-content: space-between;\\n  flex-direction: column;\\n  height: 100%;\\n  margin-top: 10px;\\n}\\n.pera-wallet-connect-modal-pending-message--try-again-view__title {\\n  margin: 16px 0 12px;\\n  color: #3c3c49;\\n  font-size: 18px;\\n  font-weight: 500;\\n  line-height: 24px;\\n  letter-spacing: -0.26px;\\n}\\n.pera-wallet-connect-modal-pending-message--try-again-view__description {\\n  color: #6a6a81;\\n  font-size: 14px;\\n  font-weight: 400;\\n  line-height: 24px;\\n  letter-spacing: -0.01px;\\n}\\n.pera-wallet-connect-modal-pending-message--try-again-view__button {\\n  display: block;\\n  width: 100%;\\n  padding: 14px;\\n  border-radius: 12px;\\n  text-decoration: none;\\n  text-align: center;\\n  font-size: 14px;\\n  line-height: 20px;\\n  letter-spacing: -0.09px;\\n  font-weight: 500;\\n  color: #ffffff;\\n  background-color: #6b46fe;\\n  border: none;\\n}\\n.pera-wallet-connect-modal-pending-message--try-again-view__resolving-anchor {\\n  display: flex;\\n  gap: 12px;\\n  margin-bottom: 20px;\\n  padding: 16px;\\n  background: #ffffff;\\n  box-shadow: 0px 0px 1px rgba(12, 26, 75, 0.24), 0px 3px 8px -1px rgba(50, 50, 71, 0.05);\\n  border-radius: 12px;\\n  text-decoration: none;\\n}\\n.pera-wallet-connect-modal-pending-message--try-again-view__resolving-anchor__image {\\n  width: 24px;\\n  height: 24px;\\n}\\n.pera-wallet-connect-modal-pending-message--try-again-view__resolving-anchor__title-wrapper {\\n  display: flex;\\n  align-items: center;\\n  justify-content: space-between;\\n  margin-bottom: 4px;\\n}\\n.pera-wallet-connect-modal-pending-message--try-again-view__resolving-anchor__title {\\n  margin: 0;\\n  font-size: 14px;\\n  font-weight: 500;\\n  line-height: 20px;\\n  letter-spacing: -0.1px;\\n  color: #3c3c49;\\n}\\n.pera-wallet-connect-modal-pending-message--try-again-view__resolving-anchor__description {\\n  /* stylelint-disable value-no-vendor-prefix */\\n  /* stylelint-disable  property-no-vendor-prefix */\\n  display: -webkit-box;\\n  max-width: 100%;\\n  -webkit-line-clamp: 2;\\n  /* autoprefixer: ignore next */\\n  -webkit-box-orient: vertical;\\n  overflow: hidden;\\n  /* stylelint-enable value-no-vendor-prefix */\\n  /* stylelint-enable property-no-vendor-prefix */\\n  margin: 0;\\n  font-size: 12px;\\n  font-weight: 400;\\n  line-height: 18px;\\n  letter-spacing: 0.01px;\\n  color: #9d9dae;\\n}\\n\\n.pera-wallet-connect-modal-pending-message__animation-wrapper {\\n  width: 56px;\\n  height: 56px;\\n  background-color: #6b46fe;\\n  border-radius: 50%;\\n}\\n\\n.pera-wallet-connect-modal-pending-message__text {\\n  max-width: 271px;\\n  margin-top: 24px;\\n  color: #3c3c49;\\n  font-size: 18px;\\n  font-weight: 500;\\n  line-height: 28px;\\n  letter-spacing: -0.26px;\\n}\\n\\n.pera-wallet-connect-modal-pending-message__cancel-button {\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n  width: 100%;\\n  padding: 14px;\\n  color: #6a6a81;\\n  background-color: #ffffff;\\n  box-shadow: 0px 0px 1px rgba(12, 26, 75, 0.24), 0px 3px 8px -1px rgba(50, 50, 71, 0.05);\\n  border-radius: 12px;\\n  text-decoration: none;\\n  text-align: center;\\n  font-size: 14px;\\n  line-height: 20px;\\n  letter-spacing: -0.09px;\\n  font-weight: 500;\\n  border: none;\\n}';i(P);const T=document.createElement(\"template\");T.innerHTML='\\n  <div class=\"pera-wallet-connect-modal-pending-message-section\">\\n    <div class=\"pera-wallet-connect-modal-pending-message\">\\n      <div id=\"pera-wallet-connect-modal-pending-message-animation-wrapper\" class=\"pera-wallet-connect-modal-pending-message__animation-wrapper\"></div>\\n\\n      <div class=\"pera-wallet-connect-modal-pending-message__text\">\\n        Please wait while we connect you to Pera Wallet\\n      </div>\\n    </div>\\n\\n    <button\\n      id=\"pera-wallet-connect-modal-pending-message-cancel-button\"\\n      class=\"pera-wallet-button pera-wallet-connect-modal-pending-message__cancel-button\">\\n        Cancel\\n    </button>\\n  </div>\\n\\n  <div id=\"pera-wallet-connect-modal-pending-message-audio-wrapper\"></div>\\n';const O=`\\n  <div class=\"pera-wallet-connect-modal-pending-message--try-again-view\">\\n    <div>\\n      <img src=\"${V}\" alt=\"Pera Wallet Logo\" />\\n\\n      <h1 class=\"pera-wallet-connect-modal-pending-message--try-again-view__title\">\\n        Couldn’t establish connection\\n      </h1>\\n\\n      <p class=\"pera-wallet-connect-modal-pending-message--try-again-view__description\">\\n        Having issues? Before trying again, make sure to read the support article below and apply the possible solutions.\\n      </p>\\n    </div>\\n\\n    <div>\\n      <a\\n        href=\"https://support.perawallet.app/en/article/resolving-walletconnect-issues-1tolptm/\"\\n        target=\"_blank\"\\n        rel=\"noopener noreferrer\"\\n        class=\"pera-wallet-connect-modal-pending-message--try-again-view__resolving-anchor\">\\n        <img\\n          class=\"pera-wallet-connect-modal-pending-message--try-again-view__resolving-anchor__image\"\\n          src=\"data:image/svg+xml,%3csvg width='24' height='24' viewBox='0 0 24 24' fill='none' xmlns='http://www.w3.org/2000/svg'%3e%3cpath fill-rule='evenodd' clip-rule='evenodd' d='M8 22.3199C7.72 22.3199 7.42998 22.2499 7.16998 22.1099C6.59998 21.8099 6.25 21.2099 6.25 20.5699V19.15C3.23 18.84 1.25 16.6199 1.25 13.4399V7.43994C1.25 3.99994 3.56 1.68994 7 1.68994H17C20.44 1.68994 22.75 3.99994 22.75 7.43994V13.4399C22.75 16.8799 20.44 19.1899 17 19.1899H13.23L8.96997 22.03C8.67997 22.22 8.34 22.3199 8 22.3199ZM7 3.17993C4.42 3.17993 2.75 4.84993 2.75 7.42993V13.43C2.75 16.01 4.42 17.68 7 17.68C7.41 17.68 7.75 18.02 7.75 18.43V20.56C7.75 20.69 7.83 20.75 7.88 20.78C7.93001 20.81 8.03001 20.84 8.14001 20.77L12.59 17.81C12.71 17.73 12.86 17.68 13.01 17.68H17.01C19.59 17.68 21.26 16.01 21.26 13.43V7.42993C21.26 4.84993 19.59 3.17993 17.01 3.17993H7ZM11.9998 12.11C11.5898 12.11 11.2498 11.77 11.2498 11.36V11.15C11.2498 10.0038 12.0798 9.4336 12.4082 9.20798L12.4198 9.20001C12.7898 8.95001 12.9098 8.78002 12.9098 8.52002C12.9098 8.02002 12.4998 7.60999 11.9998 7.60999C11.4998 7.60999 11.0898 8.02002 11.0898 8.52002C11.0898 8.93002 10.7498 9.27002 10.3398 9.27002C9.92984 9.27002 9.58984 8.93002 9.58984 8.52002C9.58984 7.19002 10.6698 6.10999 11.9998 6.10999C13.3298 6.10999 14.4098 7.19002 14.4098 8.52002C14.4098 9.66002 13.5698 10.23 13.2598 10.44C12.8698 10.7 12.7498 10.87 12.7498 11.15V11.36C12.7498 11.78 12.4098 12.11 11.9998 12.11ZM11.25 13.85C11.25 14.26 11.58 14.6 12 14.6C12.42 14.6 12.75 14.26 12.75 13.85C12.75 13.44 12.41 13.1 12 13.1C11.59 13.1 11.25 13.44 11.25 13.85Z' fill='%236B46FE'/%3e%3c/svg%3e\"\\n          alt=\"Help Icon\"\\n        />\\n\\n        <div>\\n          <div\\n            class=\"pera-wallet-connect-modal-pending-message--try-again-view__resolving-anchor__title-wrapper\">\\n            <h1\\n              class=\"pera-wallet-connect-modal-pending-message--try-again-view__resolving-anchor__title\">\\n                Resolving WalletConnect issues\\n            </h1>\\n\\n            <img src=\"data:image/svg+xml,%3csvg width='16' height='16' viewBox='0 0 16 16' fill='none' xmlns='http://www.w3.org/2000/svg'%3e%3cpath fill-rule='evenodd' clip-rule='evenodd' d='M11.3287 10.0983C10.9574 10.0983 10.6564 9.79734 10.6564 9.42604L10.6564 6.29525L5.14866 11.803C4.88611 12.0655 4.46044 12.0655 4.19789 11.803C3.93534 11.5404 3.93534 11.1147 4.19789 10.8522L9.70561 5.34447L6.57482 5.34447C6.20352 5.34447 5.90252 5.04347 5.90252 4.67218C5.90252 4.30088 6.20352 3.99988 6.57482 3.99988L11.3287 3.99988C11.507 3.99988 11.678 4.07071 11.8041 4.19679C11.9301 4.32287 12.001 4.49387 12.001 4.67218L12.001 9.42604C12.001 9.79734 11.7 10.0983 11.3287 10.0983Z' fill='%239D9DAE'/%3e%3c/svg%3e\" alt=\"Send Icon\"/>\\n          </div>\\n\\n          <p\\n            class=\"pera-wallet-connect-modal-pending-message--try-again-view__resolving-anchor__description\">\\n            Unfortunately there are several known issues related to WalletConnect that our team is working on. Some of these issues are related to the WalletConnect JavaScript implementation on the dApp ...\\n          </p>\\n        </div>\\n      </a>\\n\\n      <button id=\"pera-wallet-connect-modal-pending-message-try-again-button\" class=\"pera-wallet-connect-button pera-wallet-connect-modal-pending-message--try-again-view__button\">\\n        Close & Try Again\\n      </button>\\n    </div>\\n  </div>\\n  `;class j extends HTMLElement{constructor(){if(super(),this.attachShadow({mode:\"open\"}),this.shadowRoot){const e=document.createElement(\"style\");e.textContent=P,this.shadowRoot.append(T.content.cloneNode(!0),e)}}connectedCallback(){var e;const n=null===(e=this.shadowRoot)||void 0===e?void 0:e.getElementById(\"pera-wallet-connect-modal-pending-message-cancel-button\");null==n||n.addEventListener(\"click\",(()=>{this.onClose()})),this.addAudioForConnection(),this.renderLottieAnimation(),setTimeout((()=>{var e;if(T.innerHTML=O,this.shadowRoot){const n=document.createElement(\"style\");n.textContent=P,this.shadowRoot.innerHTML=\"\",this.shadowRoot.append(T.content.cloneNode(!0),n);const t=null===(e=this.shadowRoot)||void 0===e?void 0:e.getElementById(\"pera-wallet-connect-modal-pending-message-try-again-button\");null==t||t.addEventListener(\"click\",(()=>{this.onClose()}))}}),3e4)}onClose(){e.removeModalWrapperFromDOM(e.PERA_WALLET_CONNECT_MODAL_ID)}addAudioForConnection(){var n;if(\"true\"===this.getAttribute(\"should-use-sound\")&&e.isIOS()){const e=null===(n=this.shadowRoot)||void 0===n?void 0:n.getElementById(\"pera-wallet-connect-modal-pending-message-audio-wrapper\"),t=document.createElement(\"audio\");t.src=\"https://s3.amazonaws.com/wc.perawallet.app/audio.mp3\",t.autoplay=!0,t.loop=!0,null==e||e.appendChild(t)}}renderLottieAnimation(){var e;const n=null===(e=this.shadowRoot)||void 0===e?void 0:e.getElementById(\"pera-wallet-connect-modal-pending-message-animation-wrapper\");n&&l.default.loadAnimation({container:n,renderer:\"svg\",loop:!0,autoplay:!0,path:\"https://s3.amazonaws.com/wc.perawallet.app/static/pera-loader-animation.json\"})}}var N='.pera-wallet-sign-txn-toast {\\n  --pera-wallet-sign-txn-toast-width: 422px;\\n  --pera-wallet-sign-txn-toast-height: 134px;\\n  --pera-wallet-sign-txn-toast-font-family: \"Inter\", sans-serif;\\n  position: fixed;\\n  bottom: 28px;\\n  right: 35px;\\n  z-index: 11;\\n  overflow: hidden;\\n  width: var(--pera-wallet-sign-txn-toast-width);\\n  height: var(--pera-wallet-sign-txn-toast-height);\\n  background: #edeffb;\\n  border-radius: 8px;\\n  animation: 0.2s PeraWalletSignTxnToastSlideIn ease-out;\\n}\\n.pera-wallet-sign-txn-toast * {\\n  box-sizing: border-box;\\n  margin: 0;\\n  padding: 0;\\n  font-family: var(--pera-wallet-sign-txn-toast-font-family);\\n  font-smooth: antialiased;\\n  -webkit-font-smoothing: antialiased;\\n  -moz-osx-font-smoothing: grayscale;\\n}\\n.pera-wallet-sign-txn-toast ul,\\n.pera-wallet-sign-txn-toast ol,\\n.pera-wallet-sign-txn-toast li {\\n  list-style-type: none;\\n}\\n\\n.pera-wallet-sign-txn-toast__header__close-button {\\n  position: absolute;\\n  top: 10px;\\n  right: 10px;\\n  width: 20px;\\n  height: 20px;\\n  margin: 0;\\n  padding: 0;\\n  background: transparent;\\n  border: none;\\n  cursor: pointer;\\n}\\n\\n.pera-wallet-sign-txn-toast__content__lottie-animation {\\n  position: absolute;\\n  top: -75px;\\n  left: -100px;\\n  width: 368px;\\n  height: 368px;\\n}\\n\\n.pera-wallet-sign-txn-toast__content__description {\\n  position: absolute;\\n  top: 40px;\\n  right: 48px;\\n  max-width: 197px;\\n  color: #3c3c49;\\n  font-size: 14px;\\n  line-height: 22px;\\n  letter-spacing: -0.1px;\\n}\\n\\n@media (max-width: 767px) {\\n  .pera-wallet-sign-txn-toast {\\n    display: none;\\n  }\\n}\\n@keyframes PeraWalletSignTxnToastSlideIn {\\n  0% {\\n    bottom: 12px;\\n    opacity: 0;\\n  }\\n  100% {\\n    bottom: 26px;\\n    opacity: 1;\\n  }\\n}';i(N);const q=document.createElement(\"template\");q.innerHTML='\\n  <div class=\"pera-wallet-sign-txn-toast\">\\n    <div class=\"pera-wallet-sign-txn-toast__header\">\\n      <button\\n        id=\"pera-wallet-sign-txn-toast-close-button\"\\n        class=\"pera-wallet-sign-txn-toast__header__close-button\">\\n        <img src=\"data:image/svg+xml,%3csvg width=\\'20\\' height=\\'20\\' viewBox=\\'0 0 20 20\\' fill=\\'none\\' xmlns=\\'http://www.w3.org/2000/svg\\'%3e%3cpath d=\\'M14.4107 4.41074L9.41074 9.41074L10.5893 10.5893L15.5893 5.58926L14.4107 4.41074ZM9.41074 9.41074L4.41074 14.4107L5.58926 15.5893L10.5893 10.5893L9.41074 9.41074ZM15.5893 14.4107L10.5893 9.41074L9.41074 10.5893L14.4107 15.5893L15.5893 14.4107ZM10.5893 9.41074L5.58926 4.41074L4.41074 5.58926L9.41074 10.5893L10.5893 9.41074Z\\' fill=\\'%239099BD\\'/%3e%3c/svg%3e\" />\\n      </button>\\n    </div>\\n    <div class=\"pera-wallet-sign-txn-toast__content\">\\n      <div id=\"pera-wallet-sign-txn-toast-lottie-animation\" style=\"width:368;height:368\" class=\"pera-wallet-sign-txn-toast__content__lottie-animation\"></div>\\n      <p class=\"pera-wallet-sign-txn-toast__content__description\">\\n        Please launch <b>Pera Wallet</b> on your iOS or Android device to sign this transaction.\\n      </p>\\n    </div>\\n  </div>\\n';class $ extends HTMLElement{constructor(){if(super(),this.attachShadow({mode:\"open\"}),this.shadowRoot){const n=document.createElement(\"style\");n.textContent=N,this.shadowRoot.append(q.content.cloneNode(!0),n);const t=this.shadowRoot.getElementById(\"pera-wallet-sign-txn-toast-close-button\");null==t||t.addEventListener(\"click\",(()=>{e.removeModalWrapperFromDOM(e.PERA_WALLET_SIGN_TXN_TOAST_ID)})),this.renderLottieAnimation()}}renderLottieAnimation(){var e;const n=null===(e=this.shadowRoot)||void 0===e?void 0:e.getElementById(\"pera-wallet-sign-txn-toast-lottie-animation\");n&&l.default.loadAnimation({container:n,renderer:\"svg\",loop:!0,autoplay:!0,path:\"https://s3.amazonaws.com/wc.perawallet.app/static/sign-toast-animation.json\"})}}var G='@import url(\"https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap\");\\n.pera-wallet-modal {\\n  --pera-wallet-modal-font-family: \"Inter\", sans-serif;\\n  position: fixed;\\n  top: 0;\\n  right: 0;\\n  left: 0;\\n  bottom: 0;\\n  z-index: 999999;\\n  width: 100vw;\\n  height: 100vh;\\n  background-color: rgba(0, 0, 0, 0.7);\\n}\\n.pera-wallet-modal--select-account .pera-wallet-modal__body {\\n  width: 480px;\\n  height: 578px;\\n  background-color: #ffffff;\\n}\\n.pera-wallet-modal--mobile .pera-wallet-modal__body {\\n  top: 40px;\\n  bottom: 0;\\n  left: 0;\\n  width: 100%;\\n  max-width: unset;\\n  height: calc(100 * var(--vh));\\n  padding: 20px;\\n  background-color: #ffffff;\\n  box-shadow: 0 1px 4px rgba(0, 0, 0, 0.02), 0 4px 12px rgba(0, 0, 0, 0.03);\\n  border-radius: 20px 20px 0px 0px;\\n  animation: 0.3s PeraWalletConnectMobileSlideIn ease-out;\\n  overflow-y: auto;\\n  transform: unset;\\n}\\n.pera-wallet-modal--mobile .pera-wallet-modal__body::before {\\n  background-image: unset;\\n}\\n.pera-wallet-modal * {\\n  box-sizing: border-box;\\n  margin: 0;\\n  padding: 0;\\n  font-family: var(--pera-wallet-modal-font-family);\\n  font-smooth: antialiased;\\n  -webkit-font-smoothing: antialiased;\\n  -moz-osx-font-smoothing: grayscale;\\n}\\n.pera-wallet-modal ul,\\n.pera-wallet-modal ol,\\n.pera-wallet-modal li {\\n  list-style-type: none;\\n}\\n\\n.pera-wallet-button {\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n  width: auto;\\n  height: 48px;\\n  padding: 14px;\\n  border: none;\\n  border-radius: 12px;\\n  outline: none;\\n  cursor: pointer;\\n  font-family: var(--pera-wallet-modal-font-family);\\n  font-size: 14px;\\n}\\n\\n.pera-wallet-modal__logo img {\\n  display: block;\\n  width: 32px;\\n}\\n\\n.pera-wallet-modal__body {\\n  position: relative;\\n  top: 50%;\\n  left: 50%;\\n  width: 700px;\\n  max-width: calc(100vw - 80px);\\n  padding: 28px;\\n  background-color: #f3f3f7;\\n  box-shadow: 1px 2px 2px rgba(0, 0, 0, 0.08);\\n  border-radius: 24px;\\n  animation: 0.3s PeraWalletConnectSlideIn ease-out;\\n  transform: translate(-50%, -50%);\\n}\\n.pera-wallet-modal__body::before {\\n  --background-line: #1e0972 0 1.2px, transparent 0 calc(100% - 1.2px), #1e0972;\\n  position: absolute;\\n  top: 0;\\n  right: 0;\\n  bottom: 0;\\n  left: 0;\\n  z-index: -1;\\n  content: \"\";\\n  background-image: linear-gradient(var(--background-line)), linear-gradient(90deg, var(--background-line));\\n  background-size: 116px 116px;\\n  mix-blend-mode: overlay;\\n  border-radius: 24px;\\n  opacity: 0.8;\\n  pointer-events: none;\\n}\\n\\n@media (max-width: 767px) {\\n  .pera-wallet-modal--desktop .pera-wallet-modal__body {\\n    width: 100%;\\n    max-width: calc(100vw - 32px);\\n    padding: 24px;\\n  }\\n}\\n@keyframes PeraWalletConnectSlideIn {\\n  0% {\\n    opacity: 0;\\n    transform: translate(-50%, calc(-50% + 24px));\\n  }\\n  100% {\\n    opacity: 1;\\n    transform: translate(-50%, -50%);\\n  }\\n}\\n@keyframes PeraWalletConnectMobileSlideIn {\\n  0% {\\n    top: 30%;\\n    opacity: 0;\\n  }\\n  100% {\\n    top: 40px;\\n    opacity: 1;\\n  }\\n}\\n.pera-wallet-sign-txn-modal.pera-wallet-modal .pera-wallet-modal__body {\\n  width: 480px;\\n  height: 578px;\\n  background-color: #ffffff;\\n  background-image: unset;\\n  padding: 0;\\n}\\n.pera-wallet-sign-txn-modal.pera-wallet-modal .pera-wallet-modal__body .pera-wallet-sign-txn-modal__body__content {\\n  width: 100%;\\n  height: 100%;\\n}\\n.pera-wallet-sign-txn-modal.pera-wallet-modal .pera-wallet-modal__body #pera-wallet-iframe {\\n  width: 100%;\\n  height: 100%;\\n  border-radius: 16px;\\n  margin: 0 auto;\\n  border: none;\\n}';i(G);const U=document.createElement(\"template\");U.innerHTML=`\\n  <div class=\"${e.PERA_WALLET_MODAL_CLASSNAME} pera-wallet-sign-txn-modal\">\\n    <div class=\"pera-wallet-modal__body\">\\n      <pera-wallet-modal-header modal-id=\"${e.PERA_WALLET_SIGN_TXN_MODAL_ID}\"></pera-wallet-modal-header/>\\n\\n      <div class=\"pera-wallet-sign-txn-modal__body__content\" />\\n    </div>\\n  </div>\\n`;class Q extends HTMLElement{constructor(){if(super(),this.attachShadow({mode:\"open\"}),this.shadowRoot){const e=document.createElement(\"style\");e.textContent=G,this.shadowRoot.append(U.content.cloneNode(!0),e)}}}window.addEventListener(\"DOMContentLoaded\",(()=>{c()})),window.addEventListener(\"resize\",(()=>{c()})),window.customElements.define(\"pera-wallet-connect-modal\",H),window.customElements.define(\"pera-wallet-modal-desktop-mode\",y),window.customElements.define(\"pera-wallet-modal-header\",m),window.customElements.define(\"pera-wallet-modal-touch-screen-mode\",E),window.customElements.define(\"pera-wallet-redirect-modal\",R),window.customElements.define(\"pera-wallet-connect-modal-information-section\",S),window.customElements.define(\"pera-wallet-connect-modal-pending-message-section\",j),window.customElements.define(\"pera-wallet-sign-txn-toast\",$),window.customElements.define(\"pera-wallet-sign-txn-modal\",Q),window.customElements.define(\"pera-wallet-download-qr-code\",f);\n","\"use strict\";var e=require(\"@walletconnect/client\"),t=require(\"algosdk\"),n=require(\"bowser\");function a(e){return e&&\"object\"==typeof e&&\"default\"in e?e:{default:e}}var o=a(e),r=a(t),l=a(n);function s(e,t,n,a){return new(n||(n=Promise))((function(o,r){function l(e){try{i(a.next(e))}catch(e){r(e)}}function s(e){try{i(a.throw(e))}catch(e){r(e)}}function i(e){var t;e.done?o(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(l,s)}i((a=a.apply(e,t||[])).next())}))}class i extends Error{constructor(e,t,...n){super(...n),Error.captureStackTrace&&Error.captureStackTrace(this,i),this.name=\"PeraWalletConnectError\",this.data=e,this.message=t}}const d=new class{constructor(e){this.listener=void 0,this.channel=e.channel}setupListener({onReceiveMessage:e}){this.close(),this.listener=t=>{if(\"object\"==typeof t.data)try{t.data.channel===this.channel&&e(t)}catch(e){console.error(e)}},window.addEventListener(\"message\",this.listener)}sendMessage({message:e,targetWindow:t,origin:n,timeout:a=1e3}){setTimeout((()=>{const a={channel:this.channel,message:e};t.postMessage(a,{targetOrigin:n||\"*\"})}),a)}close(){this.listener&&(window.removeEventListener(\"message\",this.listener),this.listener=void 0)}}({channel:\"pera-web-wallet\"});function c(){const e=document.querySelector('meta[name=\"name\"]'),t=document.querySelector('meta[name=\"description\"]');let{title:n}=document,a=\"\";return e instanceof HTMLMetaElement&&(n=e.content),t instanceof HTMLMetaElement&&(a=t.content),{title:n,description:a,url:window.location.origin,favicon:u()[0]}}function u(){const e=document.getElementsByTagName(\"link\"),t=[];for(let n=0;n<e.length;n++){const a=e[n],o=a.getAttribute(\"rel\");if(o&&o.toLowerCase().indexOf(\"icon\")>-1){const e=a.getAttribute(\"href\");if(e&&-1===e.toLowerCase().indexOf(\"https:\")&&-1===e.toLowerCase().indexOf(\"http:\")&&0!==e.indexOf(\"//\")){let n=`${window.location.protocol}//${window.location.host}`;if(0===e.indexOf(\"/\"))n+=e;else{const t=window.location.pathname.split(\"/\");t.pop();n+=`${t.join(\"/\")}/${e}`}t.push(n)}else if(0===(null==e?void 0:e.indexOf(\"//\"))){const n=window.location.protocol+e;t.push(n)}else e&&t.push(e)}}return t}function p(e){return new Promise(((t,n)=>{try{const a=window.open(e,\"_blank\");let o=0;const r=setInterval((()=>{if(o+=1,50===o)return clearInterval(r),void n(new i({type:\"MESSAGE_NOT_RECEIVED\"},\"Couldn't open Pera Wallet, please try again.\"));a&&(!0===a.closed&&(clearInterval(r),n(new i({type:\"OPERATION_CANCELLED\"},\"Operation cancelled by user\"))),d.sendMessage({message:{type:\"TAB_OPEN\"},origin:e,targetWindow:a}))}),700);d.setupListener({onReceiveMessage:e=>{\"TAB_OPEN_RECEIVED\"===e.data.message.type&&(clearInterval(r),t(a))}})}catch(e){n(e)}}))}function w(e){const t=document.createElement(\"div\");return t.setAttribute(\"id\",e),document.body.appendChild(t),t}function g(){const e=w(\"pera-wallet-sign-txn-modal-wrapper\");e.innerHTML=\"<pera-wallet-sign-txn-modal></pera-wallet-sign-txn-modal>\";const t=e.querySelector(\"pera-wallet-sign-txn-modal\");return t?(n=t,a=\"pera-wallet-sign-txn-modal__body__content\",new Promise((e=>{var t;const o=null===(t=n.shadowRoot)||void 0===t?void 0:t.querySelector(`.${a}`);if(o)return e(o);const r=new MutationObserver((()=>{o&&(e(o),r.disconnect())}));r.observe(n,{childList:!0,subtree:!0})}))):Promise.reject();var n,a}function m(e){h(\"pera-wallet-sign-txn-modal-wrapper\"),e&&e(new i({type:\"SIGN_TXN_CANCELLED\"},\"Transaction sign is cancelled\"))}function h(e){const t=document.getElementById(e);t&&t.remove()}const v=\"PeraWallet.Wallet\",N=\"walletconnect\";function E(){return\"undefined\"==typeof localStorage?void 0:localStorage}function C(e,t){var n;null===(n=E())||void 0===n||n.setItem(v,JSON.stringify({type:t||\"pera-wallet\",accounts:e,selectedAccount:e[0]}))}function f(){var e;const t=null===(e=E())||void 0===e?void 0:e.getItem(v);return t?JSON.parse(t):null}function T(){return new Promise(((e,t)=>{var n,a;try{null===(n=E())||void 0===n||n.removeItem(N),null===(a=E())||void 0===a||a.removeItem(v),e(void 0)}catch(e){t(e)}}))}function y(e){const t=e.slice();for(let e=t.length-1;e>0;e--){const n=Math.floor(Math.random()*(e+1));[t[e],t[n]]=[t[n],t[e]]}return t}function _(){return function(e,t={}){return fetch(e,t).then((e=>e.json())).then((e=>e))}(\"https://wc.perawallet.app/config.json\",{cache:\"no-store\"})}function I(){return s(this,void 0,void 0,(function*(){let e={bridgeURL:\"\",webWalletURL:\"\",isWebWalletAvailable:!1,shouldDisplayNewBadge:!1,shouldUseSound:!0,silent:!1};try{const t=yield _();void 0!==t.web_wallet&&t.web_wallet_url&&(e.isWebWalletAvailable=t.web_wallet),void 0!==t.display_new_badge&&(e.shouldDisplayNewBadge=t.display_new_badge),void 0!==t.use_sound&&(e.shouldUseSound=t.use_sound),void 0!==t.silent&&(e.silent=t.silent),e=Object.assign(Object.assign({},e),{bridgeURL:y(t.servers||[])[0]||\"\",webWalletURL:t.web_wallet_url||\"\"})}catch(e){console.log(e)}return e}))}function A(e){return Uint8Array.from(window.atob(e),(e=>e.charCodeAt(0)))}function S(){return\"undefined\"!=typeof navigator}function b(){return S()&&/Android/i.test(navigator.userAgent)}function O(){return S()&&/iPhone|iPad|iPod/i.test(navigator.userAgent)}function L(){return S()&&/iPhone|iPod|Android/i.test(navigator.userAgent)}function W(){if(!S())return null;const{userAgent:e}=navigator;let t;return t=e.match(/DuckDuckGo/i)?\"DuckDuckGo\":e.match(/OPX/i)?\"Opera GX\":navigator.brave?\"Brave\":l.default.getParser(navigator.userAgent).getBrowserName(),t}const M=b()?\"algorand://\":\"algorand-wc://\";function D(e){return{ROOT:`https://${e}`,CONNECT:`https://${e}/connect`,TRANSACTION_SIGN:`https://${e}/transaction/sign`}}function R(e=!0){let t=M;const n=W();return e&&n&&(t=`${t}?browser=${encodeURIComponent(n)}`),t}function x(e){const t=new URL(e);return t.searchParams.append(\"embedded\",\"true\"),t.toString()}function B({isWebWalletAvailable:e,shouldDisplayNewBadge:t,shouldUseSound:n}){return{open:(a={isWebWalletAvailable:e,shouldDisplayNewBadge:t,shouldUseSound:n},e=>{if(!document.getElementById(\"pera-wallet-connect-modal-wrapper\")){const t=w(\"pera-wallet-connect-modal-wrapper\"),n=`${e}&algorand=true`,{isWebWalletAvailable:o,shouldDisplayNewBadge:r,shouldUseSound:l}=a;t.innerHTML=`<pera-wallet-connect-modal uri=\"${n}\" is-web-wallet-avaliable=\"${o}\" should-display-new-badge=\"${r}\" should-use-sound=\"${l}\"></pera-wallet-connect-modal>`}}),close:()=>h(\"pera-wallet-connect-modal-wrapper\")};var a}\"undefined\"!=typeof window&&(window.global=window,window.Buffer=window.Buffer||require(\"buffer\").Buffer,Promise.resolve().then((function(){return require(\"./App-4a2b7e5c.js\")}))),exports.PERA_DOWNLOAD_URL=\"https://perawallet.app/download/\",exports.PERA_WALLET_CONNECT_MODAL_ID=\"pera-wallet-connect-modal-wrapper\",exports.PERA_WALLET_MODAL_CLASSNAME=\"pera-wallet-modal\",exports.PERA_WALLET_REDIRECT_MODAL_ID=\"pera-wallet-redirect-modal-wrapper\",exports.PERA_WALLET_SIGN_TXN_MODAL_ID=\"pera-wallet-sign-txn-modal-wrapper\",exports.PERA_WALLET_SIGN_TXN_TOAST_ID=\"pera-wallet-sign-txn-toast-wrapper\",exports.PeraWalletConnect=class{constructor(e){this.bridge=(null==e?void 0:e.bridge)||\"\",this.connector=null,this.shouldShowSignTxnToast=void 0===(null==e?void 0:e.shouldShowSignTxnToast)||e.shouldShowSignTxnToast,this.chainId=null==e?void 0:e.chainId}get platform(){return function(){const e=f();let t=null;return\"pera-wallet\"===(null==e?void 0:e.type)?t=\"mobile\":\"pera-wallet-web\"===(null==e?void 0:e.type)&&(t=\"web\"),t}()}get isConnected(){var e;return\"mobile\"===this.platform?!!this.connector:\"web\"===this.platform&&!!(null===(e=f())||void 0===e?void 0:e.accounts.length)}connectWithWebWallet(e,t,n,a){const o=W(),r=D(n),l=document.createElement(\"iframe\");function s(){h(\"pera-wallet-connect-modal-wrapper\")}return{onWebWalletConnect:function(n){if(\"Chrome\"===o){if(l.setAttribute(\"id\",\"pera-wallet-iframe\"),l.setAttribute(\"src\",x(r.CONNECT)),n.appendChild(l),l.contentWindow){let n=0;const o=setInterval((()=>{n+=1,50!==n?d.sendMessage({message:{type:\"IFRAME_INITIALIZED\"},origin:r.CONNECT,targetWindow:l.contentWindow}):clearInterval(o)}),700);d.setupListener({onReceiveMessage:n=>{var u,w,g,m,h,v;if(\"IFRAME_INITIALIZED_RECEIVED\"===n.data.message.type)clearInterval(o),d.sendMessage({message:{type:\"CONNECT\",data:Object.assign(Object.assign({},c()),{chainId:a})},origin:r.CONNECT,targetWindow:l.contentWindow});else if(e&&\"CONNECT_CALLBACK\"===n.data.message.type){const t=n.data.message.data.addresses;C(t,\"pera-wallet-web\"),e(t),s(),null===(u=document.getElementById(\"pera-wallet-iframe\"))||void 0===u||u.remove()}else if(\"CONNECT_NETWORK_MISMATCH\"===n.data.message.type)t(new i({type:\"CONNECT_NETWORK_MISMATCH\",detail:n.data.message.error},n.data.message.error||\"Your wallet is connected to a different network to this dApp. Update your wallet to the correct network (MainNet or TestNet) to continue.\")),s(),null===(w=document.getElementById(\"pera-wallet-iframe\"))||void 0===w||w.remove();else if([\"CREATE_PASSCODE_EMBEDDED\",\"SELECT_ACCOUNT_EMBEDDED\"].includes(n.data.message.type))if(\"CREATE_PASSCODE_EMBEDDED\"===n.data.message.type)p(r.CONNECT).then((n=>{n&&d.sendMessage({message:{type:\"CONNECT\",data:Object.assign(Object.assign({},c()),{chainId:a})},origin:r.CONNECT,targetWindow:n});const o=setInterval((()=>{!0===(null==n?void 0:n.closed)&&(t(new i({type:\"CONNECT_CANCELLED\"},\"Connect is cancelled by user\")),s(),clearInterval(o))}),2e3);d.setupListener({onReceiveMessage:t=>{if(e&&\"CONNECT_CALLBACK\"===t.data.message.type){const a=t.data.message.data.addresses;C(a,\"pera-wallet-web\"),e(a),s(),null==n||n.close()}}})}));else if(\"SELECT_ACCOUNT_EMBEDDED\"===n.data.message.type){const e=document.getElementById(\"pera-wallet-connect-modal-wrapper\"),t=null===(m=null===(g=null==e?void 0:e.querySelector(\"pera-wallet-connect-modal\"))||void 0===g?void 0:g.shadowRoot)||void 0===m?void 0:m.querySelector(\".pera-wallet-modal\"),n=null===(v=null===(h=null==t?void 0:t.querySelector(\"pera-wallet-modal-desktop-mode\"))||void 0===h?void 0:h.shadowRoot)||void 0===v?void 0:v.querySelector(\".pera-wallet-connect-modal-desktop-mode\");t&&n&&(t.classList.add(\"pera-wallet-modal--select-account\"),t.classList.remove(\"pera-wallet-modal--create-passcode\"),n.classList.add(\"pera-wallet-connect-modal-desktop-mode--select-account\"),n.classList.remove(\"pera-wallet-connect-modal-desktop-mode--create-passcode\")),d.sendMessage({message:{type:\"SELECT_ACCOUNT_EMBEDDED_CALLBACK\"},origin:r.CONNECT,targetWindow:l.contentWindow})}}})}}else p(r.CONNECT).then((n=>{n&&d.sendMessage({message:{type:\"CONNECT\",data:Object.assign(Object.assign({},c()),{chainId:a})},origin:r.CONNECT,targetWindow:n});const o=setInterval((()=>{!0===(null==n?void 0:n.closed)&&(t(new i({type:\"CONNECT_CANCELLED\"},\"Connect is cancelled by user\")),clearInterval(o),s())}),2e3);d.setupListener({onReceiveMessage:a=>{if(e&&\"CONNECT_CALLBACK\"===a.data.message.type){const t=a.data.message.data.addresses;C(t,\"pera-wallet-web\"),e(t),s(),null==n||n.close()}else\"CONNECT_NETWORK_MISMATCH\"===a.data.message.type&&(t(new i({type:\"CONNECT_NETWORK_MISMATCH\",detail:a.data.message.error},a.data.message.error||\"Your wallet is connected to a different network to this dApp. Update your wallet to the correct network (MainNet or TestNet) to continue.\")),s(),null==n||n.close())}})})).catch((e=>{s(),t(e)}))}}}connect(){return new Promise(((e,t)=>s(this,void 0,void 0,(function*(){var n;try{if(null===(n=this.connector)||void 0===n?void 0:n.connected)try{yield this.connector.killSession()}catch(e){}const{isWebWalletAvailable:a,bridgeURL:r,webWalletURL:l,shouldDisplayNewBadge:s,shouldUseSound:d}=yield I(),{onWebWalletConnect:c}=this.connectWithWebWallet(e,t,l,this.chainId);a&&(window.onWebWalletConnect=c),this.connector=new o.default({bridge:this.bridge||r||\"https://bridge.walletconnect.org\",qrcodeModal:B({isWebWalletAvailable:a,shouldDisplayNewBadge:s,shouldUseSound:d})}),yield this.connector.createSession({chainId:this.chainId||4160}),function(e){var t,n,a,o;const r=document.getElementById(\"pera-wallet-connect-modal-wrapper\"),l=null===(n=null===(t=null==r?void 0:r.querySelector(\"pera-wallet-connect-modal\"))||void 0===t?void 0:t.shadowRoot)||void 0===n?void 0:n.querySelector(\".pera-wallet-modal\"),s=null===(o=null===(a=null==l?void 0:l.querySelector(\"pera-wallet-modal-header\"))||void 0===a?void 0:a.shadowRoot)||void 0===o?void 0:o.getElementById(\"pera-wallet-modal-header-close-button\");null==s||s.addEventListener(\"click\",(()=>{e(),h(\"pera-wallet-connect-modal-wrapper\")}))}((()=>t(new i({type:\"CONNECT_MODAL_CLOSED\"},\"Connect modal is closed by user\")))),this.connector.on(\"connect\",((n,a)=>{var o,r;n&&t(n),e((null===(o=this.connector)||void 0===o?void 0:o.accounts)||[]),C((null===(r=this.connector)||void 0===r?void 0:r.accounts)||[])}))}catch(e){console.log(e),t(new i({type:\"SESSION_CONNECT\",detail:e},e.message||\"There was an error while connecting to Pera Wallet\"))}}))))}reconnectSession(){return new Promise(((e,t)=>s(this,void 0,void 0,(function*(){var n,a;try{const r=f();if(!r)return void e([]);if(\"pera-wallet-web\"===(null==r?void 0:r.type)){const{isWebWalletAvailable:n}=yield I();n?e(r.accounts||[]):t(new i({type:\"SESSION_RECONNECT\",detail:\"Pera Web is not available\"},\"Pera Web is not available\"))}this.connector&&e(this.connector.accounts||[]),this.bridge=(null===(n=function(){var e;const t=null===(e=E())||void 0===e?void 0:e.getItem(N);return t?JSON.parse(t):null}())||void 0===n?void 0:n.bridge)||\"\",this.bridge&&(this.connector=new o.default({bridge:this.bridge}),e((null===(a=this.connector)||void 0===a?void 0:a.accounts)||[])),this.isConnected||e([])}catch(e){yield this.disconnect(),t(new i({type:\"SESSION_RECONNECT\",detail:e},e.message||\"There was an error while reconnecting to Pera Wallet\"))}}))))}disconnect(){var e;return s(this,void 0,void 0,(function*(){let t;this.isConnected&&\"mobile\"===this.platform&&(t=null===(e=this.connector)||void 0===e?void 0:e.killSession(),null==t||t.then((()=>{this.connector=null}))),yield T()}))}signTransactionWithMobile(e){return s(this,void 0,void 0,(function*(){const t=(n=\"algo_signTxn\",a=[e],{id:Date.now()*Math.pow(10,3)+Math.floor(Math.random()*Math.pow(10,3)),jsonrpc:\"2.0\",method:n,params:a});var n,a;try{try{const{silent:e}=yield I(),n=(yield this.connector.sendCustomRequest(t,{forcePushNotification:!e})).filter(Boolean);return\"string\"==typeof n[0]?n.map(A):n.map((e=>Uint8Array.from(e)))}catch(e){return yield Promise.reject(new i({type:\"SIGN_TRANSACTIONS\",detail:e},e.message||\"Failed to sign transaction\"))}}finally{h(\"pera-wallet-redirect-modal-wrapper\"),h(\"pera-wallet-sign-txn-toast-wrapper\")}}))}signTransactionWithWeb(e,t){return new Promise(((n,a)=>{const o=D(t);\"Chrome\"===W()?g().then((t=>{var r,l,s,c;const u=t,p=document.createElement(\"iframe\"),w=x(o.TRANSACTION_SIGN),g=`hid ${w}; bluetooth ${w}`;p.setAttribute(\"id\",\"pera-wallet-iframe\"),p.setAttribute(\"src\",w),p.setAttribute(\"allow\",g),null==u||u.appendChild(p);const v=null===(s=null===(l=null===(r=document.getElementById(\"pera-wallet-sign-txn-modal-wrapper\"))||void 0===r?void 0:r.querySelector(\"pera-wallet-sign-txn-modal\"))||void 0===l?void 0:l.shadowRoot)||void 0===s?void 0:s.querySelector(\"pera-wallet-modal-header\"),N=null===(c=null==v?void 0:v.shadowRoot)||void 0===c?void 0:c.getElementById(\"pera-wallet-modal-header-close-button\");if(N&&N.addEventListener(\"click\",(()=>{a(new i({type:\"SIGN_TXN_CANCELLED\"},\"Transaction signing is cancelled by user.\")),h(\"pera-wallet-sign-txn-modal-wrapper\")})),p.contentWindow){let t=0;const r=setInterval((()=>{t+=1,50!==t?d.sendMessage({message:{type:\"IFRAME_INITIALIZED\"},origin:o.CONNECT,targetWindow:p.contentWindow}):clearInterval(r)}),700);d.setupListener({onReceiveMessage:t=>{var l,s,c;\"IFRAME_INITIALIZED_RECEIVED\"===t.data.message.type&&(clearInterval(r),d.sendMessage({message:{type:\"SIGN_TXN\",txn:e},origin:x(o.TRANSACTION_SIGN),targetWindow:p.contentWindow})),\"SIGN_TXN_CALLBACK\"===t.data.message.type&&(null===(l=document.getElementById(\"pera-wallet-iframe\"))||void 0===l||l.remove(),m(),n(t.data.message.signedTxns.map((e=>A(e.signedTxn))))),\"SIGN_TXN_NETWORK_MISMATCH\"===t.data.message.type&&a(new i({type:\"SIGN_TXN_NETWORK_MISMATCH\",detail:t.data.message.error},t.data.message.error||\"Network mismatch\")),\"SESSION_DISCONNECTED\"===t.data.message.type&&(null===(s=document.getElementById(\"pera-wallet-iframe\"))||void 0===s||s.remove(),m(),T(),a(new i({type:\"SESSION_DISCONNECTED\",detail:t.data.message.error},t.data.message.error))),\"SIGN_TXN_CALLBACK_ERROR\"===t.data.message.type&&(null===(c=document.getElementById(\"pera-wallet-iframe\"))||void 0===c||c.remove(),m(),a(new i({type:\"SIGN_TXN_CANCELLED\"},t.data.message.error)))}})}})).catch((e=>{console.log(e)})):p(o.TRANSACTION_SIGN).then((t=>{t&&d.sendMessage({message:{type:\"SIGN_TXN\",txn:e},origin:o.TRANSACTION_SIGN,targetWindow:t});const r=setInterval((()=>{!0===(null==t?void 0:t.closed)&&(a(new i({type:\"SIGN_TXN_CANCELLED\"},\"Transaction signing is cancelled by user.\")),clearInterval(r))}),2e3);d.setupListener({onReceiveMessage:e=>{\"SIGN_TXN_CALLBACK\"===e.data.message.type&&(null==t||t.close(),n(e.data.message.signedTxns.map((e=>A(e.signedTxn))))),\"SIGN_TXN_NETWORK_MISMATCH\"===e.data.message.type&&a(new i({type:\"SIGN_TXN_NETWORK_MISMATCH\",detail:e.data.message.error},e.data.message.error||\"Network mismatch\")),\"SESSION_DISCONNECTED\"===e.data.message.type&&(null==t||t.close(),T(),a(new i({type:\"SESSION_DISCONNECTED\",detail:e.data.message.error},e.data.message.error))),\"SIGN_TXN_CALLBACK_ERROR\"===e.data.message.type&&(null==t||t.close(),a(new i({type:\"SIGN_TXN_CANCELLED\"},e.data.message.error)))}})})).catch((e=>{a(e)}))}))}signTransaction(e,t){return s(this,void 0,void 0,(function*(){if(\"mobile\"===this.platform&&(L()?w(\"pera-wallet-redirect-modal-wrapper\").innerHTML=\"<pera-wallet-redirect-modal></pera-wallet-redirect-modal>\":!L()&&this.shouldShowSignTxnToast&&(w(\"pera-wallet-sign-txn-toast-wrapper\").innerHTML=\"<pera-wallet-sign-txn-toast></pera-wallet-sign-txn-toast>\"),!this.connector))throw new Error(\"PeraWalletConnect was not initialized correctly.\");const n=e.flatMap((e=>e.map((e=>function(e,t){let n;t&&!(e.signers||[]).includes(t)&&(n=[]);const a={txn:(o=e.txn,Buffer.from(r.default.encodeUnsignedTransaction(o)).toString(\"base64\"))};var o;return Array.isArray(n)&&(a.signers=n),e.authAddr&&(a.authAddr=e.authAddr),e.message&&(a.message=e.message),e.msig&&(a.msig=e.msig),a}(e,t)))));if(\"web\"===this.platform){const{webWalletURL:e}=yield I();return this.signTransactionWithWeb(n,e)}return this.signTransactionWithMobile(n)}))}},exports.closePeraWalletSignTxnToast=function(){h(\"pera-wallet-sign-txn-toast-wrapper\")},exports.detectBrowser=W,exports.generatePeraWalletAppDeepLink=R,exports.generatePeraWalletConnectDeepLink=function(e){let t=R(!1);O()&&!t.includes(\"-wc\")&&(t=t.replace(\"://\",\"-wc://\"));let n=`${t}wc?uri=${encodeURIComponent(e)}`;const a=W();return b()&&(n=e),a&&(n=`${n}&browser=${encodeURIComponent(a)}`),n},exports.isIOS=O,exports.isMobile=L,exports.removeModalWrapperFromDOM=h;\n","\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:!0});var e=require(\"./index-42ef4f76.js\");require(\"@walletconnect/client\"),require(\"algosdk\"),require(\"bowser\"),exports.PeraWalletConnect=e.PeraWalletConnect,exports.closePeraWalletSignTxnToast=e.closePeraWalletSignTxnToast;\n","function encodeUint64(dec) {\r\n  let binString = convertToBinary(dec)\r\n\r\n  while (true) {\r\n    if (binString.length < 64) {\r\n      binString = \"0\" + binString\r\n    }\r\n    else {\r\n      break\r\n    }\r\n  }\r\n\r\n  //console.log(binString)\r\n  let array = []\r\n\r\n  for (let i = 0; i < 64; i += 8) {\r\n    let piece = binString.slice(i, i + 8)\r\n    //console.log(piece)\r\n    //console.log(binString)\r\n    array.push(parseInt(piece, 2))\r\n  }\r\n\r\n  return Uint8Array.from(array)\r\n\r\n}\r\n\r\nfunction convertToBinary (number) {\r\n  let num = number;\r\n  let binary = (num % 2).toString();\r\n  for (; num > 1; ) {\r\n      num = parseInt(num / 2);\r\n      binary =  (num % 2) + (binary);\r\n  }\r\n  return binary\r\n}\r\n\r\n//console.log(encodeUint64(1234567))\r\n\r\nwindow.encodeUint64 = encodeUint64\r\n\r\nexport default encodeUint64\r\n","import MyAlgo from \"@randlabs/myalgo-connect\";\r\nimport WalletConnect from \"@walletconnect/client\";\r\nimport QRCodeModal from \"algorand-walletconnect-qrcode-modal\";\r\nimport { formatJsonRpcRequest } from \"@json-rpc-tools/utils\";\r\nimport createAsaTxn from \"./createAsaTxn.js\";\r\nimport {\r\n  getAppIndex,\r\n  getAsaIndex,\r\n  readGlobalState,\r\n  u8array,\r\n} from \"./teal_utils.js\";\r\nimport algosdk from \"algosdk\";\r\nimport {\r\n  configAlgosdk,\r\n  configClient,\r\n  configIndexer,\r\n  sendTxns,\r\n} from \"./utils.js\";\r\nimport \"regenerator-runtime\";\r\n//import PipeWallet from \"./pwallet.js\";\r\nimport Escrow from \"./escrow.js\"\r\n//in order to solve undiagnosed \"missing parenthetical\" error, PeraWallet cannot be installed via there instructions. In order to integrate PeraWallet, prior to building Pipeline, in terminal run: cd connect && npm install\r\nimport { PeraWalletConnect } from '@perawallet/connect'\r\nimport encodeUint64 from \"./encode64.js\";\r\n\r\nexport {  sendTxns, Escrow, /*PipeWallet*/}\r\n\r\n\r\n//Note: this class is a work in progress. May be unstable. Roll back to version 1.2.7 if issues encountered\r\n\r\nexport default class Pipeline {\r\n  static alerts = true;\r\n  static EnableDeveloperAPI = false;\r\n  static indexer = \"http://localhost:8980\";\r\n  static algod = \"http://localhost:4001\";\r\n  static token =\r\n    \"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\";\r\n  static devGenHash = \"sC3P7e2SdbqKJK0tbiCdK9tdSpbe6XeCGKdoNzmlj0E=\";\r\n  static devGenId = \"devnet-v1.0\";\r\n  static index = 0;\r\n  static pipeConnector = \"myAlgoWallet\";\r\n  static chainId = 0;\r\n  static main = true;\r\n  static address = \"\";\r\n  static txID = \"\";\r\n  static myBalance = 0;\r\n  static connector = new WalletConnect({\r\n    bridge: \"https://bridge.walletconnect.org\", // Required\r\n    qrcodeModal: QRCodeModal,\r\n  });\r\n\r\n  static init = () => { return new MyAlgo } //backwards compatibility \r\n\r\n  static wallet = new MyAlgo();\r\n\r\n  static PeraWallet = new PeraWalletConnect()\r\n\r\n  static async balance(address) {\r\n    let indexerURL = configIndexer(this.main, this.EnableDeveloperAPI, this);\r\n\r\n    let url2 = indexerURL + \"/v2/accounts/\" + address;\r\n    try {\r\n      let data = await fetch(url2);\r\n      let data2 = await data.json();\r\n      let data3 = JSON.stringify(data2.account.amount / 1000000);\r\n      this.myBalance = data3;\r\n      return data3;\r\n    } catch (error) {\r\n      console.log(error);\r\n      return 0;\r\n    }\r\n  }\r\n\r\n  static async readAccount(address) {\r\n    let indexerURL = configIndexer(this.main, this.EnableDeveloperAPI, this);\r\n\r\n    let url2 = indexerURL + \"/v2/accounts/\" + address;\r\n    try {\r\n      let data = await fetch(url2);\r\n      let data2 = await data.json();\r\n      return data2\r\n    } catch (error) {\r\n      console.log(error);\r\n      return error;\r\n    }\r\n  }\r\n\r\n  static async connect(wallet) {\r\n    switch (this.pipeConnector) {\r\n      case \"myAlgoWallet\":\r\n        try {\r\n          const accounts = await this.wallet.connect();\r\n          let item1 = accounts[0];\r\n          item1 = item1[\"address\"];\r\n          this.address = item1;\r\n        } catch (err) {\r\n          console.error(err);\r\n        }\r\n        break;\r\n      case \"PeraWallet\":\r\n\r\n        let newAccounts = await this.PeraWallet.connect()\r\n\r\n        this.address = newAccounts[0];\r\n\r\n\r\n        /* try {\r\n          const peraAccounts = await this.PeraWallet.reconnectSession()\r\n\r\n          if (peraAccounts.length > 0) {\r\n            this.PeraWallet.connector?.on(\"disconnect\", function () {\r\n              Pipeline.PeraWallet.disconnect()\r\n              Pipeline.address = \"\"\r\n            })\r\n            this.address = peraAccounts[0]\r\n          }\r\n          else { }\r\n        }\r\n        catch (error) {\r\n          let newAccounts = await this.PeraWallet.connect()\r\n          // Setup the disconnect event listener\r\n          this.PeraWallet.connector?.on(\"disconnect\", function () {\r\n            Pipeline.PeraWallet.disconnect()\r\n            Pipeline.address = \"\"\r\n          })\r\n\r\n          this.address = newAccounts[0];\r\n        }*/\r\n\r\n        break;\r\n      case \"WalletConnect\":\r\n        this.connector.on(\"disconnect\", (error, payload) => {\r\n          if (error) {\r\n            throw new Error(error);\r\n          }\r\n\r\n          // Delete connector\r\n          this.connector = new WalletConnect({\r\n            bridge: \"https://bridge.walletconnect.org\", // Required\r\n            qrcodeModal: QRCodeModal,\r\n          });\r\n        });\r\n\r\n        this.connector.on(\"session_update\", (error, payload) => {\r\n          alert(error + payload);\r\n          if (error) {\r\n            throw new Error(error);\r\n          }\r\n          // Get updated accounts and chainId\r\n          const { accounts, chainId } = payload.params[0];\r\n          if (accounts.length > 0) {\r\n            this.address = accounts[0];\r\n          }\r\n          this.chainId = chainId;\r\n        });\r\n\r\n        const { accounts, chainId } = await this.connector.connect();\r\n        if (accounts.length > 0) {\r\n          this.address = accounts[0];\r\n        }\r\n\r\n        if (!this.connector.connected) {\r\n          await this.connector.createSession().then((data) => {\r\n            console.log(data);\r\n          });\r\n        } else if (this.connector.accounts.length > 0) {\r\n          this.address = this.connector.accounts[0];\r\n        }\r\n        break;\r\n      case \"AlgoSigner\":\r\n        if (typeof AlgoSigner !== \"undefined\") {\r\n          await AlgoSigner.connect();\r\n          let data = await AlgoSigner.accounts({\r\n            ledger: this.main === true ? \"MainNet\" : \"TestNet\",\r\n          });\r\n          this.address = data[0].address;\r\n        } else {\r\n          alert(\"AlgoSigner is NOT installed.\");\r\n        }\r\n        break;\r\n       /*case \"PipeWallet\":\r\n        PipeWallet.openWallet();\r\n        break;\r\n        case \"escrow\":\r\n          Pipeline.address = Escrow.address\r\n          break; */\r\n      default:\r\n        break;\r\n    }\r\n    return this.address;\r\n  }\r\n\r\n  static async sign(mytxnb, group = false, signed = []) {\r\n    console.log(mytxnb);\r\n    let signedTxn = \"\";\r\n\r\n    if (this.pipeConnector === \"myAlgoWallet\") {\r\n      if (!group) {\r\n        signedTxn = await this.wallet.signTransaction(mytxnb.toByte());\r\n        signedTxn = signedTxn.blob;\r\n        return signedTxn;\r\n      } else {\r\n        signedTxn = await this.wallet.signTransaction(\r\n          mytxnb.map((txn) => txn.toByte())\r\n        );\r\n        let txnsb = [];\r\n        signedTxn.forEach((item) => {\r\n          txnsb.push(item.blob);\r\n        });\r\n        return txnsb;\r\n      }\r\n    }\r\n\r\n    else {\r\n      if (this.pipeConnector === \"PeraWallet\") {\r\n        try {\r\n          if (!group) {\r\n            signedTxn = await this.PeraWallet.signTransaction([[{ txn: mytxnb, signers: [Pipeline.address] }]]);\r\n            return signedTxn[0];\r\n          }\r\n          else {\r\n            let index = 0\r\n            let groupToSign = []\r\n            mytxnb.forEach((txn) => {\r\n              groupToSign.push([{ txn: txn, signers: [signed[index] || Pipeline.address] }])\r\n              index++\r\n            })\r\n            signedTxn = await this.PeraWallet.signTransaction(groupToSign)\r\n            let txnsb = [];\r\n            signedTxn.forEach((item) => {\r\n              txnsb.push(item)\r\n            })\r\n            return txnsb\r\n          }\r\n        }\r\n        catch (e) {\r\n          window.pipelineErrors.push(e)\r\n        }\r\n\r\n      }\r\n      else {\r\n        if (this.pipeConnector === \"PipeWallet\") {\r\n          /*\r\n          PipeWallet.openWallet();\r\n          PipeWallet.previewTxn(mytxnb);\r\n          let approved = await PipeWallet.waitForApproval();\r\n          if (approved) {\r\n            if (!group) {\r\n              let signedTxn = PipeWallet.sign(mytxnb);\r\n              PipeWallet.clearPreviewTxn();\r\n              PipeWallet.close();\r\n              return signedTxn.blob;\r\n            } else {\r\n              let signedGroup = [];\r\n\r\n              mytxnb.forEach((transaction) => {\r\n                let signed = PipeWallet.sign(transaction);\r\n                signedGroup.push(signed.blob);\r\n              });\r\n\r\n              console.log(\"Signed Group:\");\r\n              console.log(signedGroup);\r\n              return signedGroup;\r\n            }\r\n          } else {\r\n            return {};\r\n          }*/\r\n        }\r\n        else {\r\n          if (this.pipeConnector === \"escrow\") {\r\n\r\n            if (!group) {\r\n              let signedTxn = Escrow.sign(mytxnb);\r\n              return signedTxn;\r\n            } else {\r\n              let signedGroup = [];\r\n\r\n              mytxnb.forEach((transaction) => {\r\n                let signed = Escrow.sign(transaction);\r\n                signedGroup.push(signed);\r\n              });\r\n\r\n              console.log(\"Signed Group:\");\r\n              console.log(signedGroup);\r\n              return signedGroup;\r\n            }\r\n\r\n          }\r\n\r\n          else {\r\n            let txns = [];\r\n            if (!group) {\r\n              txns[0] = mytxnb;\r\n            } else {\r\n              txns = mytxnb;\r\n            }\r\n\r\n            console.log(\"Unencoded txns:\");\r\n            console.log(txns);\r\n\r\n            /*\r\n                            let prototxn = {\r\n                                \"amt\": mytxnb.amount,\r\n                                \"fee\": 1000,\r\n                                \"fv\": mytxnb.lastRound - 1000,\r\n                                \"gen\": mytxnb.genesisID,\r\n                                \"gh\": new Uint8Array(Buffer.from(mytxnb.genesisHash, 'base64')),\r\n                                \"lv\": mytxnb.lastRound,\r\n                                \"note\": mytxnb.note,\r\n                                \"rcv\": new Uint8Array(base32.decode.asBytes(mytxnb.to).slice(0, 32)),\r\n                                \"snd\": new Uint8Array(base32.decode.asBytes(this.address).slice(0, 32)),\r\n                                \"type\": \"pay\"\r\n                            }\r\n                    \r\n                            let prototxnASA = {};\r\n                            let prototxnb = encode(prototxn);\r\n                            let txns = [];\r\n                            txns[0] = prototxnb;\r\n                    \r\n                            if (this.index !== 0) {\r\n                                prototxnASA = {\r\n                                    \"aamt\": mytxnb.amount,\r\n                                    \"arcv\": new Uint8Array(base32.decode.asBytes(mytxnb.to).slice(0, 32)),\r\n                                    \"fee\": 1000,\r\n                                    \"fv\": mytxnb.lastRound - 1000,\r\n                                    \"gen\": mytxnb.genesisID,\r\n                                    \"gh\": new Uint8Array(Buffer.from(mytxnb.genesisHash, 'base64')),\r\n                                    \"lv\": mytxnb.lastRound,\r\n                                    \"note\": mytxnb.note,\r\n                                    \"snd\": new Uint8Array(base32.decode.asBytes(this.address).slice(0, 32)),\r\n                                    \"type\": \"axfer\",\r\n                                    \"xaid\": parseInt(mytxnb.assetIndex)\r\n                                }\r\n                                prototxnb = encode(prototxnASA);\r\n                                txns[0] = prototxnb;\r\n                            }\r\n                            \r\n                                    console.log(prototxnb)\r\n                                    console.log(new TextDecoder().decode(prototxnb))\r\n                                    console.log(JSON.stringify(decode(prototxnb)))\r\n                            */\r\n            // Sign transaction\r\n\r\n            let txnsToSign = txns.map((txnb) => {\r\n              let packed = algosdk.encodeUnsignedTransaction(txnb);\r\n              let encodedTxn = Buffer.from(packed).toString(\"base64\");\r\n\r\n              if (this.pipeConnector === \"WalletConnect\") {\r\n                return {\r\n                  txn: encodedTxn,\r\n                  message: \"\",\r\n                  // Note: if the transaction does not need to be signed (because it's part of an atomic group\r\n                  // that will be signed by another party), specify an empty singers array like so:\r\n                  // signers: [],\r\n                };\r\n              } else {\r\n                return { txn: encodedTxn };\r\n              }\r\n            });\r\n\r\n            let nestedArray = []\r\n\r\n            if (group && signed.length !== 0) {\r\n\r\n              for (let i = 0; i < signed.length; i++) {\r\n                if (signed[i] !== Pipeline.address) {\r\n                  txnsToSign[i].signers = [];\r\n                }\r\n              }\r\n            }\r\n\r\n            let requestParams = [txnsToSign]\r\n            console.log(\"TXNs to Sign:\");\r\n            console.log(requestParams);\r\n\r\n            if (this.pipeConnector === \"WalletConnect\") {\r\n              let request = formatJsonRpcRequest(\"algo_signTxn\", requestParams);\r\n\r\n              //request.id = this.chainId\r\n\r\n              console.log(request);\r\n\r\n              try {\r\n                let result = await this.connector.sendCustomRequest(request);\r\n\r\n                console.log(\"Response from walletconnect: \", result)\r\n\r\n                let binarySignedTxs = await result.map((tx) => {\r\n\r\n                  if (tx !== null) {\r\n                    return new Uint8Array(Buffer.from(tx, \"base64\"));\r\n                  }\r\n                  else { return tx }\r\n                });\r\n                return !group ? binarySignedTxs[0] : binarySignedTxs;\r\n              } catch (error) {\r\n                console.log(error);\r\n              }\r\n            } else {\r\n              try {\r\n                let result = await AlgoSigner.signTxn(requestParams);\r\n\r\n                console.log(\"Response from AlgoSigner: \", result)\r\n\r\n                let binarySignedTxs = await result.map((tx) => {\r\n                  if (tx !== null) {\r\n                    return new Uint8Array(Buffer.from(tx.blob, \"base64\"));\r\n                  }\r\n                  else { return tx }\r\n                });\r\n                return !group ? binarySignedTxs[0] : binarySignedTxs;\r\n              } catch (error) {\r\n                console.log(error);\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  static makeAppCall(appId, appArgs, params, accounts, assets, applications, boxes) {\r\n    let id = parseInt(appId);\r\n    let converted = [];\r\n    appArgs.forEach((arg) => {\r\n      converted.push(\r\n        typeof arg === \"number\" ? encodeUint64(arg) : u8array(arg)\r\n      );\r\n    });\r\n    appArgs = converted;\r\n\r\n    let txn = algosdk.makeApplicationNoOpTxn(\r\n      this.address,\r\n      params,\r\n      id,\r\n      appArgs,\r\n      accounts,\r\n      applications,\r\n      assets,\r\n      undefined,\r\n      undefined,\r\n      undefined,\r\n      boxes\r\n    );\r\n\r\n    return txn;\r\n  }\r\n\r\n  static makeTransfer(address, amt, myNote, index = 0, params = {}) {\r\n    const buf = new Array(myNote.length);\r\n    const encodedNote = new Uint8Array(buf);\r\n    for (let i = 0, strLen = myNote.length; i < strLen; i++) {\r\n      encodedNote[i] = myNote.charCodeAt(i);\r\n    }\r\n\r\n    console.log(\"My encoded note: \" + encodedNote);\r\n\r\n    let txn = {\r\n      from: this.address,\r\n      to: address,\r\n      amount: parseInt(amt),\r\n      note: encodedNote,\r\n      genesisId: params.genesisID,\r\n      genesisHash: params.genesisHash,\r\n      type: \"pay\",\r\n      flatFee: true,\r\n      fee: 1000,\r\n      firstRound: parseInt(params[\"last-round\"]),\r\n      lastRound: parseInt(params[\"last-round\"] + 1000),\r\n    };\r\n\r\n    if (index !== 0) {\r\n      this.index = index;\r\n      txn.type = \"axfer\";\r\n      txn.assetIndex = parseInt(index);\r\n\r\n      txn = algosdk.makeAssetTransferTxnWithSuggestedParams(\r\n        txn.from,\r\n        txn.to,\r\n        undefined,\r\n        undefined,\r\n        txn.amount,\r\n        txn.note,\r\n        txn.assetIndex,\r\n        params,\r\n        undefined\r\n      );\r\n    } else {\r\n      txn = algosdk.makePaymentTxnWithSuggestedParams(\r\n        txn.from,\r\n        txn.to,\r\n        txn.amount,\r\n        undefined,\r\n        txn.note,\r\n        params,\r\n        undefined\r\n      );\r\n    }\r\n\r\n    txn.fee = 1000;\r\n\r\n    console.log(txn);\r\n    return txn;\r\n  }\r\n\r\n  static async send(address, amt, myNote, _sendingAddress, _wallet, index = 0) {\r\n    let client = await configClient(this.main, this.EnableDeveloperAPI, this);\r\n    let transServer = client.tranServer;\r\n    let params = client.params;\r\n\r\n    try {\r\n      let txn = this.makeTransfer(address, amt, myNote, index, params);\r\n\r\n      let signedTxn = {};\r\n\r\n      signedTxn = await this.sign(txn);\r\n\r\n      console.log(signedTxn);\r\n\r\n      let transactionID = await sendTxns(\r\n        signedTxn,\r\n        transServer,\r\n        this.EnableDeveloperAPI,\r\n        this.token,\r\n        this.alerts\r\n      );\r\n\r\n      this.txID = transactionID;\r\n      if (transactionID === undefined) {\r\n        transactionID = \"Transaction failed\";\r\n      }\r\n      return transactionID;\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n  }\r\n\r\n  static async createAsa(asaObject = {}) {\r\n    let txn = {};\r\n\r\n    let client = await configClient(this.main, this.EnableDeveloperAPI, this);\r\n    let transServer = client.tranServer;\r\n    let params = client.params;\r\n\r\n    let myNote = asaObject.note || \"New Asa\";\r\n\r\n    let buf = new Array(myNote.length);\r\n    let encodedNote = new Uint8Array(buf);\r\n    for (let i = 0, strLen = myNote.length; i < strLen; i++) {\r\n      encodedNote[i] = myNote.charCodeAt(i);\r\n    }\r\n\r\n    asaObject.note = encodedNote;\r\n\r\n    console.log(\"My encoded note: \" + encodedNote);\r\n\r\n    txn = createAsaTxn(params, asaObject);\r\n\r\n    txn.fee = 1000;\r\n\r\n    console.log(txn);\r\n\r\n    let signedTxn = {};\r\n\r\n    signedTxn = await this.sign(txn, false);\r\n\r\n    console.log(signedTxn);\r\n\r\n    try {\r\n      let transactionID = await sendTxns(\r\n        signedTxn,\r\n        transServer,\r\n        this.EnableDeveloperAPI,\r\n        this.token,\r\n        this.alerts\r\n      );\r\n\r\n      this.txID = transactionID;\r\n      if (transactionID === undefined) {\r\n        return \"Transaction failed\";\r\n      } else {\r\n        let assetID = await getAsaIndex(transactionID, this.main, this);\r\n        console.log(assetID);\r\n        return assetID;\r\n      }\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n  }\r\n\r\n  static async compileProgram(client, teal) {\r\n    let encoder = new TextEncoder();\r\n    let programBytes = encoder.encode(teal);\r\n    try {\r\n      let compileResponse = await client.compile(programBytes).do();\r\n      return compileResponse;\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n\r\n  static async deployTeal(\r\n    teal = \"\",\r\n    teal2 = \"\",\r\n    bytesInts = [],\r\n    appArgs = [],\r\n    onComplete = 0\r\n  ) {\r\n    if (teal !== \"\") {\r\n      let algodClient = configAlgosdk(this);\r\n\r\n      let clientb = await configClient(this.main, this.EnableDeveloperAPI,this);\r\n      let transServer = clientb.tranServer;\r\n\r\n      let compiled = \"\";\r\n\r\n      compiled = await this.compileProgram(algodClient, teal);\r\n      let compiledClear = await this.compileProgram(algodClient, teal2);\r\n\r\n      let params = {};\r\n\r\n      params = await algodClient.getTransactionParams().do();\r\n\r\n      let converted = [];\r\n      appArgs.forEach((arg) => {\r\n        converted.push(\r\n          typeof arg === \"number\" ? encodeUint64(arg) : u8array(arg)\r\n        );\r\n      });\r\n      appArgs = converted;\r\n\r\n      console.log(appArgs);\r\n\r\n      let lbytes = bytesInts[0];\r\n      let gbytes = bytesInts[1];\r\n      let lints = bytesInts[2];\r\n      let gints = bytesInts[3];\r\n\r\n      let txn = algosdk.makeApplicationCreateTxnFromObject({\r\n        suggestedParams: params,\r\n        from: this.address,\r\n        numLocalByteSlices: lbytes,\r\n        numGlobalByteSlices: gbytes,\r\n        numLocalInts: lints,\r\n        numGlobalInts: gints,\r\n        appArgs: appArgs,\r\n        approvalProgram: new Uint8Array(Buffer.from(compiled.result, \"base64\")),\r\n        clearProgram: new Uint8Array(\r\n          Buffer.from(compiledClear.result, \"base64\")\r\n        ),\r\n        onComplete: onComplete,\r\n      });\r\n\r\n      try {\r\n        let signedTxn = await this.sign(txn);\r\n        console.log(signedTxn);\r\n        let response = await sendTxns(\r\n          signedTxn,\r\n          transServer,\r\n          this.EnableDeveloperAPI,\r\n          this.token,\r\n          this.alerts\r\n        );\r\n\r\n        console.log(response);\r\n        this.txID = response;\r\n        let appId = await getAppIndex(response, this.main, this);\r\n        console.log(appId);\r\n\r\n        if (appId === undefined) {\r\n          appId = \"Transaction failed\";\r\n        }\r\n        return appId;\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    } else {\r\n      console.log(\"Teal program or clear program empty\");\r\n    }\r\n  }\r\n\r\n  static async optIn(appId = 0, appArgs = []) {\r\n    let algodClient = configAlgosdk(this);\r\n\r\n    let clientb = await configClient(this.main, this.EnableDeveloperAPI, this);\r\n    let transServer = clientb.tranServer;\r\n\r\n    let params = await algodClient.getTransactionParams().do();\r\n\r\n    let converted = [];\r\n    appArgs.forEach((arg) => {\r\n      converted.push(\r\n        typeof arg === \"number\" ? algosdk.encodeUint64(arg) : u8array(arg)\r\n      );\r\n    });\r\n    appArgs = converted;\r\n\r\n    let txn = \"\";\r\n\r\n    txn = algosdk.makeApplicationOptInTxnFromObject({\r\n      suggestedParams: params,\r\n      from: this.address,\r\n      appIndex: parseInt(appId),\r\n      appArgs: appArgs,\r\n    });\r\n\r\n    try {\r\n      let signedTxn = await this.sign(txn);\r\n      console.log(signedTxn);\r\n      let response = await sendTxns(\r\n        signedTxn,\r\n        transServer,\r\n        this.EnableDeveloperAPI,\r\n        this.token,\r\n        this.alerts\r\n      );\r\n      console.log(response);\r\n      return response;\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n\r\n  static async appCall(\r\n    appId,\r\n    appArgs,\r\n    accounts = undefined,\r\n    assets = undefined,\r\n    applications = undefined,\r\n    boxes = undefined\r\n  ) {\r\n    let clientb = await configClient(this.main, this.EnableDeveloperAPI,this);\r\n    let transServer = clientb.tranServer;\r\n    let params = clientb.params;\r\n\r\n    let txn = this.makeAppCall(\r\n      appId,\r\n      appArgs,\r\n      params,\r\n      accounts,\r\n      assets,\r\n      applications,\r\n      boxes\r\n    );\r\n\r\n    try {\r\n      let signedTxn = await this.sign(txn);\r\n      console.log(signedTxn);\r\n      let response = await sendTxns(\r\n        signedTxn,\r\n        transServer,\r\n        this.EnableDeveloperAPI,\r\n        this.token,\r\n        this.alerts\r\n      );\r\n      console.log(response);\r\n\r\n      return response;\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n\r\n  static async getParams() {\r\n    let client = await configClient(this.main, this.EnableDeveloperAPI, this);\r\n    return client.params;\r\n  }\r\n\r\n  static async deleteApp(appId = 0) {\r\n    let algodClient = configAlgosdk(this);\r\n    let params = await algodClient.getTransactionParams().do();\r\n\r\n    let txn = algosdk.makeApplicationDeleteTxnFromObject({\r\n      suggestedParams: params,\r\n      from: this.address,\r\n      appIndex: parseInt(appId),\r\n    });\r\n\r\n    let signedTxn = await this.sign(txn);\r\n\r\n    let clientb = await configClient(this.main, this.EnableDeveloperAPI, this);\r\n    let transServer = clientb.tranServer;\r\n\r\n    try {\r\n      let response = await sendTxns(\r\n        signedTxn,\r\n        transServer,\r\n        this.EnableDeveloperAPI,\r\n        this.token,\r\n        this.alerts\r\n      );\r\n      console.log(response);\r\n      return response;\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n\r\n  static async appCallWithTxn(\r\n    appId = 0,\r\n    appArgs = [],\r\n    reciever = \"\",\r\n    amount = 0,\r\n    note = \"\",\r\n    index = 0,\r\n    accounts = undefined,\r\n    assets = undefined\r\n  ) {\r\n    let id = parseInt(appId);\r\n\r\n    let algodClient = configAlgosdk(this);\r\n\r\n    let clientb = await configClient(this.main, this.EnableDeveloperAPI, this);\r\n    let params = clientb.params;\r\n\r\n    let txns = [\r\n      this.makeAppCall(id, appArgs, params, accounts, assets),\r\n      this.makeTransfer(reciever, amount, note, index, params),\r\n    ];\r\n\r\n    txns = algosdk.assignGroupID(txns);\r\n\r\n    console.log(txns);\r\n\r\n    let signedTxn = await this.sign(txns, true);\r\n\r\n    console.log(signedTxn);\r\n\r\n    try {\r\n      let response = await algodClient.sendRawTransaction(signedTxn).do();\r\n      if (response.txId !== undefined) {\r\n        return response.txId;\r\n      } else {\r\n        if (this.alerts) {\r\n          alert(response.message);\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n\r\n  static async getAppCreator(appid) {\r\n    let data = undefined;\r\n    let dataObj = undefined;\r\n    let id = undefined;\r\n\r\n    let url = \"\";\r\n\r\n    url = configIndexer(this.main, this.EnableDeveloperAPI, this);\r\n\r\n    data = await fetch(url + \"/v2/applications/\" + parseInt(appid));\r\n    dataObj = await data.json();\r\n    id = await dataObj.application.params.creator;\r\n    return id;\r\n  }\r\n\r\n  static async readGlobalState(appId) {\r\n    let data = await readGlobalState(this.main, appId, this);\r\n    return data;\r\n  }\r\n\r\n}\r\n\r\nwindow.pipeline = Pipeline\r\n//window.PipeWallet = PipeWallet\r\nwindow.pipeEscrow = Escrow\r\nwindow.pipelineErrors = []\r\n/* usage\r\n\r\nupdate balance at intervals:\r\n\r\ncomponentDidMount() {\r\n      this.interval = setInterval(() => this.setState({balance: Pipeline.myBalance}), 1000);\r\n    }\r\n\r\nvar balance = 0;\r\n\r\nPipeline.balance(address).then(data => balance = data);\r\n\r\nconst myAlgoWallet = Pipeline.init();\r\n\r\n//useTestNet\r\n\r\nPipeline.main = false;\r\n\r\nPipeline.connect(myAlgoWallet)\r\n    .then(data => {\r\n        console.log(data);\r\n    });\r\n\r\nPipeline.send(address, amount, note, sendingAddress, myAlgowallet, index)\r\n    .then(data => {\r\n        console.log(data);\r\n    });\r\n\r\n    */\r\n"]}